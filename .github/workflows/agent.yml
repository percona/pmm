name: 'Client: pmm-agent'

on:
  push:
    branches:
      - main
      - v3
      - pmm-*
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
    paths-ignore:
      - "documentation/**"

  pull_request:
    paths-ignore:
      - "admin/**"
      - "api-tests/**"
      - "docs/**"
      - "documentation/**"
      - "managed/**"
      - "qan-api2/**"
      - "update/**"
      - "vmproxy/**"
      - "ui/**"

permissions:
  contents: read

jobs:
  test:
    name: Tests
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        images:
          - { mysql: 'mysql:5.7', mongo: 'mongo:5.0', postgres: 'postgres:14', pmm_server: 'perconalab/pmm-server:3-dev-latest' }
          - { mysql: 'mysql:8.0', mongo: 'mongo:6.0', postgres: 'postgres:15', pmm_server: 'perconalab/pmm-server:3-dev-latest' }
          - { mysql: 'mysql:lts', mongo: 'mongo:7.0', postgres: 'postgres:16', pmm_server: 'perconalab/pmm-server:3-dev-latest' }
          - { mysql: 'mysql:latest', mongo: 'mongo:latest', postgres: 'postgres:latest', pmm_server: 'perconalab/pmm-server:3-dev-latest' }

          # Percona + latest PMM Server release
          - { mysql: 'percona:5.7', mongo: 'percona/percona-server-mongodb:5.0', postgres: 'perconalab/percona-distribution-postgresql:15', pg_libs: 'pg_stat_statements,pg_stat_monitor', pmm_server: 'perconalab/pmm-server:3-dev-latest' }
          - { mysql: 'percona:8.0', mongo: 'percona/percona-server-mongodb:6.0', postgres: 'perconalab/percona-distribution-postgresql:16', pg_libs: 'pg_stat_statements,pg_stat_monitor', pmm_server: 'perconalab/pmm-server:3-dev-latest' }
          - { mysql: 'percona:8', mongo: 'percona/percona-server-mongodb:7.0', postgres: 'perconalab/percona-distribution-postgresql:17', pg_libs: 'pg_stat_statements,pg_stat_monitor', pmm_server: 'perconalab/pmm-server:3-dev-latest' }
          - { mysql: 'percona:latest', mongo: 'percona/percona-server-mongodb:latest', postgres: 'perconalab/percona-distribution-postgresql:latest', pg_libs: 'pg_stat_statements,pg_stat_monitor', pmm_server: 'perconalab/pmm-server:3-dev-latest' }

          # MariaDB (only 3 latest GA versions)
          #   + older supported MongoDB versions
          #   + older supported PostgreSQL versions
          #   + 3-dev-latest PMM Server
          # - MYSQL_IMAGE=mariadb:5.5
          # - MYSQL_IMAGE=mariadb:10.0
          # - MYSQL_IMAGE=mariadb:10.1

          - { mysql: 'mariadb:11.2', mongo: 'percona/percona-server-mongodb:5.0', postgres: 'postgres:12', pmm_server: 'perconalab/pmm-server:3-dev-latest' }
          - { mysql: 'mariadb:11.4', mongo: 'percona/percona-server-mongodb:6.0', postgres: 'perconalab/percona-distribution-postgresql:13', pg_libs: 'pg_stat_statements,pg_stat_monitor', pmm_server: 'perconalab/pmm-server:3-dev-latest' }
          - { mysql: 'mariadb:11.5', mongo: 'percona/percona-server-mongodb:7.0', postgres: 'postgres:14', pmm_server: 'perconalab/pmm-server:3-dev-latest' }

    continue-on-error: true

    env:
      MYSQL_IMAGE: ${{ matrix.images.mysql }}
      MONGO_IMAGE: ${{ matrix.images.mongo }}
      POSTGRES_IMAGE: ${{ matrix.images.postgres }}
      PMM_SERVER_IMAGE: ${{ matrix.images.pmm_server }}
      PG_PRELOADED_LIBS: ${{ matrix.images.pg_libs }}

    defaults:
      run:
        working-directory: ${{ github.workspace }}/agent

    steps:
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: ${{ github.workspace }}/go.mod
          cache: false

      - name: Enable Go build cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-go-build-${{ github.ref }}-${{ hashFiles('**') }}
          restore-keys: |
            ${{ runner.os }}-go-build-${{ github.ref }}-
            ${{ runner.os }}-go-build-

      - name: Enable Go modules cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-modules-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-modules-

      - name: Download Go modules
        run: go mod download -x

      - name: Build and install
        run: make install

      - name: Launch containers
        env:
          ENV_UP_FLAGS: "--detach"
        run: make env-up

      - name: Run tests
        run: make test-cover

      - name: Upload coverage results
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          files: cover.out
          flags: agent
          env_vars: MYSQL_IMAGE,MONGO_IMAGE,POSTGRES_IMAGE,PMM_SERVER_IMAGE
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Run debug commands on failure
        if: ${{ failure() }}
        run: |
          echo "--- Environment variables ---"
          env | sort
          echo "--- GO Environment ---"
          go env | sort
          git status
          docker compose logs
          docker compose ps -a
