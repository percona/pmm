name: API

on:
  push:
    branches:
      - main
      - release-*
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*

  pull_request:
    paths:
      - "api/**"
      - "third_party/**"
      - "tools/**"
      - "golangci*"

  workflow_call:
    inputs:
      go-version:
        description: An array of Go versions to be tested against, in a format of json string.
        required: false
        type: string
        default: '["tip"]'

jobs:
  check:
    name: Checks
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        go-version: ${{ fromJson(inputs.go-version || '["1.18.x"]') }}

    env:
      GO_VERSION: ${{ matrix.go-version }}
      GOPATH: ${{ github.workspace }}
      WORKING_DIR: ${{ github.workspace }}/src/github.com/percona/pmm

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      - name: Check out code into the working directory under the GOPATH
        uses: percona-platform/checkout@v3
        with:
          fetch-depth: 1
          path: ${{ env.WORKING_DIR }}

      - name: Set up Go release
        if: env.GO_VERSION != 'tip'
        uses: percona-platform/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up Go tip
        if: env.GO_VERSION == 'tip'
        run: |
          git clone --depth=1 https://go.googlesource.com/go $HOME/gotip
          cd $HOME/gotip/src
          ./make.bash
          echo "GOROOT=$HOME/gotip" >> $GITHUB_ENV
          echo "$HOME/gotip/bin" >> $GITHUB_PATH

      - name: Enable Go modules cache
        uses: percona-platform/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ env.GO_VERSION }}-modules-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ env.GO_VERSION }}-modules-

      - name: Install development tools
        run: make init

      - name: Generate files
        run: make gen gen-alertmanager

      - name: Check differences
        run: |
          git status
          git diff --exit-code

      - name: Update API compatibility descriptors.
        run: |
          # log if descriptors changed, useful for "update descriptors" PRs
          make descriptors
          git diff --text

      - name: Check build
        run: make release

      - name: Run debug commands on failure
        if: ${{ failure() }}
        run: |
          env
          go version
          go env
          pwd
          git status