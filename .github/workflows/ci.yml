name: CI

on:
  push:
    paths-ignore:
      - "api-tests/**"
    branches:
      - main
      - release-*
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:

jobs:
  check:
    name: Checks
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        go-version: [1.18.x]
        may-fail: [false]
#        include:
#          - go-version: tip
#            may-fail: true

    continue-on-error: ${{ matrix.may-fail }}

    env:
      GOPATH: ${{ github.workspace }}
      WORKING_DIR: ${{ github.workspace }}/src/github.com/percona/pmm

    defaults:
      run:
        working-directory: ${{ env.WORKING_DIR }}

    steps:
      - name: Check out code into the working directory under the GOPATH
        uses: percona-platform/checkout@v3
        with:
          fetch-depth: 1
          path: ${{ env.WORKING_DIR }}

      - name: Set up Go release
        if: matrix.go-version != 'tip'
        uses: percona-platform/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set up Go tip
        if: matrix.go-version == 'tip'
        run: |
          git clone --depth=1 https://go.googlesource.com/go $HOME/gotip
          cd $HOME/gotip/src
          ./make.bash
          echo "GOROOT=$HOME/gotip" >> $GITHUB_ENV
          echo "$HOME/gotip/bin" >> $GITHUB_PATH

      - name: Enable Go modules cache
        uses: percona-platform/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ matrix.os }}-go-${{ matrix.go-version }}-modules-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ matrix.os }}-go-${{ matrix.go-version }}-modules-

      - name: Download Go modules
        run: go mod download

      - name: Install development tools
        run: make init

      - name: Generate files
        run: make gen gen-alertmanager

      - name: Check differences
        run: |
          git status
          git diff --exit-code

      - name: Update API compatibility descriptors.
        run: |
          # log if descriptors changed, useful for "update descriptors" PRs
          make descriptors
          git diff --text

      - name: Check build
        run: make release

      - name: Run linters
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make ci-reviewdog

      - name: Test common API
        run: make test-common

      - name: Run debug commands on failure
        if: ${{ failure() }}
        run: |
          env
          go version
          go env
          pwd
          git status

  merge-gatekeeper:
    runs-on: ubuntu-22.04
    steps:
      - name: Run Merge Gatekeeper
        uses: percona-platform/merge-gatekeeper@v1.0.2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  workflow_success:
    needs: [merge-gatekeeper]
    name: Slack Notification success
    runs-on: ubuntu-22.04
    env:
      SLACK_WEBHOOK: ${{ secrets.SLACK_TOKEN_PMM_CI }}
      SLACK_CHANNEL: "pmm-ci"
      SLACK_USERNAME: "PR pipelines bot"
      SLACK_ICON_EMOJI: ":chestnut:"
      SLACK_COLOR: "#00FF00"
      SLACK_TITLE: "Finished ${{ github.event.repository.name }} workflow"
      SLACK_MESSAGE: "${{ github.event.inputs.repo || github.repository }}:${{ github.event.inputs.branch || github.head_ref }}"

    steps:
      - uses: percona-platform/checkout@v3
      - uses: percona-platform/setup-node@v2
      - name: Slack Notification
        uses: percona-platform/action-slack-notify@v2

  workflow_failure:
    if: ${{ failure() }}
    needs: [merge-gatekeeper]
    name: Slack Notification failure
    runs-on: ubuntu-22.04
    env:
      SLACK_WEBHOOK: ${{ secrets.SLACK_TOKEN_PMM_CI }}
      SLACK_CHANNEL: "pmm-ci"
      SLACK_USERNAME: "PR pipelines bot"
      SLACK_ICON_EMOJI: ":chestnut:"
      SLACK_COLOR: "#FF0000"
      SLACK_TITLE: "Finished ${{ github.event.repository.name }} workflow"
      SLACK_MESSAGE: "Workflow failed: ${{ github.event.inputs.repo || github.repository }}:${{ github.event.inputs.branch || github.head_ref }}"

    steps:
      - uses: percona-platform/checkout@v3
      - name: Slack Notification
        uses: percona-platform/action-slack-notify@v2
