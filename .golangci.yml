version: "2"
linters:
  default: all
  disable:
    - copyloopvar
    - dupl
    - err113
    - exhaustruct
    - funlen
    - gochecknoglobals
    - gochecknoinits
    - gocognit
    - gocyclo
    - godox
    - gomoddirectives
    - nlreturn
    - paralleltest
    - protogetter
    - rowserrcheck
    - tagalign
    - varnamelen
    - wastedassign
    - wrapcheck
    - wsl
  settings:
    cyclop:
      max-complexity: 30
    depguard:
      rules:
        main:
          deny:
            - pkg: github.com/pkg/errors
              desc: use "errors" instead
            - pkg: github.com/gogo/protobuf/proto
              desc: use "github.com/golang/protobuf/proto" instead
            - pkg: github.com/percona/go-mysql/log/slow
              desc: only use the forked parser
            - pkg: github.com/percona-platform/platform
              desc: use "github.com/percona/saas" instead
            - pkg: github.com/percona/platform
              desc: use "github.com/percona/saas" instead
            - pkg: gopkg.in/yaml.v2
              desc: use "gopkg.in/yaml.v3" instead
    exhaustive:
      default-signifies-exhaustive: true
    godot:
      scope: toplevel
      exclude:
        - go-sumtype:decl
        - pmm-managed
      capital: true
      period: true
    inamedparam:
      skip-single-param: true
    ireturn:
      allow:
        - anon
        - error
        - empty
        - stdlib
        - github.com/charmbracelet/bubbletea.Model
        - github.com/percona/pmm/admin/commands.Result
        - github.com/percona/pmm/agent/runner/actions.Action
        - github.com/percona/pmm/managed/services/telemetry.DataSource
    lll:
      line-length: 170
      tab-width: 4
    maintidx:
      under: 20
    nestif:
      min-complexity: 7
    recvcheck:
      exclusions:
        - '*.pb.go'
        - '*_test.go'
        - mock_*.go
        - '*_reform.go'
    tagliatelle:
      case:
        rules:
          avro: snake
          bson: camel
          json: ""
          xml: camel
          yaml: ""
    unparam:
      check-exported: true
  exclusions:
    generated: lax
    rules:
      - linters:
          - contextcheck
          - exhaustivestruct
          - forcetypeassert
          - funlen
          - gocognit
          - goconst
          - ireturn
          - lll
          - maintidx
          - mnd
          - nonamedreturns
          - testpackage
          - unused
        path: _test\.go
      - linters:
          - recvcheck
        path: managed/models/
      - path: (.+)\.go$
        text: 'G104: Errors unhandled'
      - path: (.+)\.go$
        text: exported method `.+` should have comment or be unexported
      - path: (.+)\.go$
        text: comment on exported method `.+` should be of the form `.+ ...`
      - path: (.+)\.go$
        text: exported method .+ returns unexported type .+, which can be annoying to use
      - path: (.+)\.go$
        text: 'buildssa: failed to load package'
      - path: (.+)\.go$
        text: could not load export data
    paths:
      - agent/agents/mongodb/internal/
      - qan-api2/migrations/
      - third_party$
      - builtin$
      - examples$
formatters:
  enable:
    - gci
    - gofmt
    - gofumpt
    - goimports
  settings:
    gci:
      sections:
        - standard
        - default
        - prefix(github.com/percona/pmm)
    goimports:
      local-prefixes:
        - github.com/percona/pmm
  exclusions:
    generated: lax
    paths:
      - agent/agents/mongodb/internal/
      - qan-api2/migrations/
      - third_party$
      - builtin$
      - examples$
