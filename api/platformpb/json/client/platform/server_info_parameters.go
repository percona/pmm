// Code generated by go-swagger; DO NOT EDIT.

package platform

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewServerInfoParams creates a new ServerInfoParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewServerInfoParams() *ServerInfoParams {
	return &ServerInfoParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewServerInfoParamsWithTimeout creates a new ServerInfoParams object
// with the ability to set a timeout on a request.
func NewServerInfoParamsWithTimeout(timeout time.Duration) *ServerInfoParams {
	return &ServerInfoParams{
		timeout: timeout,
	}
}

// NewServerInfoParamsWithContext creates a new ServerInfoParams object
// with the ability to set a context for a request.
func NewServerInfoParamsWithContext(ctx context.Context) *ServerInfoParams {
	return &ServerInfoParams{
		Context: ctx,
	}
}

// NewServerInfoParamsWithHTTPClient creates a new ServerInfoParams object
// with the ability to set a custom HTTPClient for a request.
func NewServerInfoParamsWithHTTPClient(client *http.Client) *ServerInfoParams {
	return &ServerInfoParams{
		HTTPClient: client,
	}
}

/* ServerInfoParams contains all the parameters to send to the API endpoint
   for the server info operation.

   Typically these are written to a http.Request.
*/
type ServerInfoParams struct {
	// Body.
	Body interface{}

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the server info params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ServerInfoParams) WithDefaults() *ServerInfoParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the server info params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ServerInfoParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the server info params
func (o *ServerInfoParams) WithTimeout(timeout time.Duration) *ServerInfoParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the server info params
func (o *ServerInfoParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the server info params
func (o *ServerInfoParams) WithContext(ctx context.Context) *ServerInfoParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the server info params
func (o *ServerInfoParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the server info params
func (o *ServerInfoParams) WithHTTPClient(client *http.Client) *ServerInfoParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the server info params
func (o *ServerInfoParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the server info params
func (o *ServerInfoParams) WithBody(body interface{}) *ServerInfoParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the server info params
func (o *ServerInfoParams) SetBody(body interface{}) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *ServerInfoParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {
	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
