{
  "swagger": "2.0",
  "info": {
    "title": "serverpb/server.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Server"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/AWSInstanceCheck": {
      "post": {
        "summary": "AWS instance check",
        "description": "Checks AWS EC2 instance ID.",
        "operationId": "AWSInstanceCheck",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serverAWSInstanceCheckResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serverAWSInstanceCheckRequest"
            }
          }
        ],
        "tags": [
          "Server"
        ]
      }
    },
    "/v1/Settings/Change": {
      "post": {
        "summary": "Change settings",
        "description": "Changes PMM Server settings.",
        "operationId": "ChangeSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serverChangeSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serverChangeSettingsRequest"
            }
          }
        ],
        "tags": [
          "Server"
        ]
      }
    },
    "/v1/Settings/Get": {
      "post": {
        "summary": "Get settings",
        "description": "Returns current PMM Server settings.",
        "operationId": "GetSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serverGetSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serverGetSettingsRequest"
            }
          }
        ],
        "tags": [
          "Server"
        ]
      }
    },
    "/v1/Settings/TestEmailAlertingSettings": {
      "post": {
        "summary": "Test email alerting",
        "description": "Sends test email to check current SMTP settings for email alerting.",
        "operationId": "TestEmailAlertingSettings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serverTestEmailAlertingSettingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serverTestEmailAlertingSettingsRequest"
            }
          }
        ],
        "tags": [
          "Server"
        ]
      }
    },
    "/v1/Updates/Check": {
      "post": {
        "summary": "Check updates",
        "description": "Checks for available PMM Server updates.",
        "operationId": "CheckUpdates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serverCheckUpdatesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serverCheckUpdatesRequest"
            }
          }
        ],
        "tags": [
          "Server"
        ]
      }
    },
    "/v1/Updates/Start": {
      "post": {
        "summary": "Start update",
        "description": "Starts PMM Server update.",
        "operationId": "StartUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serverStartUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serverStartUpdateRequest"
            }
          }
        ],
        "tags": [
          "Server"
        ]
      }
    },
    "/v1/Updates/Status": {
      "post": {
        "summary": "Update status",
        "description": "Returns PMM Server update status.",
        "operationId": "UpdateStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serverUpdateStatusResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/serverUpdateStatusRequest"
            }
          }
        ],
        "tags": [
          "Server"
        ]
      }
    },
    "/v1/readyz": {
      "get": {
        "summary": "Check server readiness",
        "description": "Returns an error when Server components being restarted are not ready yet. Use this API for checking the health of Docker containers and for probing Kubernetes readiness.",
        "operationId": "Readiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serverReadinessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Server"
        ]
      }
    },
    "/v1/version": {
      "get": {
        "summary": "Version",
        "description": "Returns PMM Server versions.",
        "operationId": "Version",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/serverVersionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "dummy",
            "description": "Dummy parameter for internal testing. Do not use.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Server"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "serverAWSInstanceCheckRequest": {
      "type": "object",
      "properties": {
        "instance_id": {
          "type": "string",
          "description": "AWS EC2 instance ID (i-1234567890abcdef0)."
        }
      }
    },
    "serverAWSInstanceCheckResponse": {
      "type": "object"
    },
    "serverChangeSettingsRequest": {
      "type": "object",
      "properties": {
        "enable_updates": {
          "type": "boolean"
        },
        "disable_updates": {
          "type": "boolean"
        },
        "enable_telemetry": {
          "type": "boolean"
        },
        "disable_telemetry": {
          "type": "boolean"
        },
        "metrics_resolutions": {
          "$ref": "#/definitions/serverMetricsResolutions"
        },
        "data_retention": {
          "type": "string",
          "description": "A number of full days for Prometheus and QAN data retention. Should have a suffix in JSON: 2592000s, 43200m, 720h."
        },
        "ssh_key": {
          "type": "string"
        },
        "aws_partitions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "alert_manager_url": {
          "type": "string",
          "description": "External AlertManager URL (e.g., https://username:password@1.2.3.4/path)."
        },
        "remove_alert_manager_url": {
          "type": "boolean",
          "description": "Remove external AlertManager URL.\n\nalert_manager_rules and remove_alert_manager_rules field names are incorrect\n (they never were _Alertmanager_ rules), but we can't rename them for compatibility reasons."
        },
        "alert_manager_rules": {
          "type": "string",
          "description": "Custom alerting or recording rules."
        },
        "remove_alert_manager_rules": {
          "type": "boolean",
          "description": "Remove custom alerting or recording rules."
        },
        "enable_stt": {
          "type": "boolean",
          "description": "Enable Security Threat Tool."
        },
        "disable_stt": {
          "type": "boolean",
          "description": "Disable Security Threat Tool."
        },
        "enable_alerting": {
          "type": "boolean",
          "description": "Enable Alerting."
        },
        "disable_alerting": {
          "type": "boolean",
          "description": "Disable Alerting."
        },
        "email_alerting_settings": {
          "$ref": "#/definitions/serverEmailAlertingSettings",
          "description": "Change Alerting email (SMTP) settings, if set."
        },
        "remove_email_alerting_settings": {
          "type": "boolean",
          "description": "If true, removes Alerting email (SMTP) settings."
        },
        "slack_alerting_settings": {
          "$ref": "#/definitions/serverSlackAlertingSettings",
          "description": "Change Alerting Slack settings, if set."
        },
        "remove_slack_alerting_settings": {
          "type": "boolean",
          "description": "If true, removes Alerting Slack settings."
        },
        "pmm_public_address": {
          "type": "string",
          "description": "PMM Server public address."
        },
        "remove_pmm_public_address": {
          "type": "boolean"
        },
        "stt_check_intervals": {
          "$ref": "#/definitions/serverSTTCheckIntervals",
          "description": "Intervals between STT check runs."
        },
        "enable_azurediscover": {
          "type": "boolean",
          "description": "Enable Azure Discover."
        },
        "disable_azurediscover": {
          "type": "boolean",
          "description": "Disable Azure Discover."
        },
        "enable_backup_management": {
          "type": "boolean",
          "description": "Enable Backup Management."
        },
        "disable_backup_management": {
          "type": "boolean",
          "description": "Disable Backup Management."
        },
        "enable_access_control": {
          "type": "boolean",
          "title": "Enable Access Control"
        },
        "disable_access_control": {
          "type": "boolean",
          "title": "Disable Access Control"
        }
      }
    },
    "serverChangeSettingsResponse": {
      "type": "object",
      "properties": {
        "settings": {
          "$ref": "#/definitions/serverSettings"
        }
      }
    },
    "serverCheckUpdatesRequest": {
      "type": "object",
      "properties": {
        "force": {
          "type": "boolean",
          "description": "If false, cached information may be returned."
        },
        "only_installed_version": {
          "type": "boolean",
          "description": "If true, only installed version will be in response."
        }
      }
    },
    "serverCheckUpdatesResponse": {
      "type": "object",
      "properties": {
        "installed": {
          "$ref": "#/definitions/serverVersionInfo",
          "description": "Currently installed PMM Server version."
        },
        "latest": {
          "$ref": "#/definitions/serverVersionInfo",
          "description": "Latest available PMM Server version."
        },
        "update_available": {
          "type": "boolean",
          "description": "True if there is a PMM Server update available."
        },
        "latest_news_url": {
          "type": "string",
          "description": "Latest available PMM Server release announcement URL."
        },
        "last_check": {
          "type": "string",
          "format": "date-time",
          "description": "Last check time."
        }
      }
    },
    "serverDistributionMethod": {
      "type": "string",
      "enum": [
        "DISTRIBUTION_METHOD_INVALID",
        "DOCKER",
        "OVF",
        "AMI",
        "AZURE",
        "DO"
      ],
      "default": "DISTRIBUTION_METHOD_INVALID",
      "description": "DistributionMethod defines PMM Server distribution method: Docker image, OVF/OVA, or AMI."
    },
    "serverEmailAlertingSettings": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "description": "SMTP From header field."
        },
        "smarthost": {
          "type": "string",
          "description": "SMTP host and port."
        },
        "hello": {
          "type": "string",
          "description": "Hostname to identify to the SMTP server."
        },
        "username": {
          "type": "string",
          "description": "Auth using CRAM-MD5, LOGIN and PLAIN."
        },
        "password": {
          "type": "string",
          "description": "Auth using LOGIN and PLAIN."
        },
        "identity": {
          "type": "string",
          "description": "Auth using PLAIN."
        },
        "secret": {
          "type": "string",
          "description": "Auth using CRAM-MD5."
        },
        "require_tls": {
          "type": "boolean",
          "description": "Require TLS."
        }
      },
      "description": "EmailAlertingSettings represents email (SMTP) configuration for Alerting."
    },
    "serverGetSettingsRequest": {
      "type": "object"
    },
    "serverGetSettingsResponse": {
      "type": "object",
      "properties": {
        "settings": {
          "$ref": "#/definitions/serverSettings"
        }
      }
    },
    "serverMetricsResolutions": {
      "type": "object",
      "properties": {
        "hr": {
          "type": "string",
          "description": "High resolution. Should have a suffix in JSON: 1s, 1m, 1h."
        },
        "mr": {
          "type": "string",
          "description": "Medium resolution. Should have a suffix in JSON: 1s, 1m, 1h."
        },
        "lr": {
          "type": "string",
          "description": "Low resolution. Should have a suffix in JSON: 1s, 1m, 1h."
        }
      },
      "description": "MetricsResolutions represents Prometheus exporters metrics resolutions."
    },
    "serverReadinessResponse": {
      "type": "object",
      "description": "This probe is available without authentication, so it should not contain any data."
    },
    "serverSTTCheckIntervals": {
      "type": "object",
      "properties": {
        "standard_interval": {
          "type": "string",
          "description": "Standard check interval."
        },
        "rare_interval": {
          "type": "string",
          "description": "Interval for rare check runs."
        },
        "frequent_interval": {
          "type": "string",
          "description": "Interval for frequent check runs."
        }
      },
      "description": "STTCheckIntervals represents intervals between STT checks."
    },
    "serverSettings": {
      "type": "object",
      "properties": {
        "updates_disabled": {
          "type": "boolean",
          "description": "True if updates are disabled."
        },
        "telemetry_enabled": {
          "type": "boolean",
          "description": "True if telemetry is enabled."
        },
        "metrics_resolutions": {
          "$ref": "#/definitions/serverMetricsResolutions"
        },
        "data_retention": {
          "type": "string"
        },
        "ssh_key": {
          "type": "string"
        },
        "aws_partitions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "alert_manager_url": {
          "type": "string",
          "description": "External AlertManager URL (e.g., https://username:password@1.2.3.4/path).\n\nalert_manager_rules field name is incorrect\n (they never were _Alertmanager_ rules), but we can't rename it for compatibility reasons."
        },
        "alert_manager_rules": {
          "type": "string",
          "description": "Custom alerting or recording rules."
        },
        "stt_enabled": {
          "type": "boolean",
          "description": "True if Security Threat Tool is enabled."
        },
        "platform_email": {
          "type": "string",
          "description": "Percona Platform user's email, if this PMM instance is linked to the Platform."
        },
        "alerting_enabled": {
          "type": "boolean",
          "description": "True if Alerting is enabled."
        },
        "email_alerting_settings": {
          "$ref": "#/definitions/serverEmailAlertingSettings",
          "description": "Alerting email (SMTP) settings."
        },
        "slack_alerting_settings": {
          "$ref": "#/definitions/serverSlackAlertingSettings",
          "description": "Alerting Slack settings."
        },
        "pmm_public_address": {
          "type": "string",
          "description": "PMM Server public address."
        },
        "stt_check_intervals": {
          "$ref": "#/definitions/serverSTTCheckIntervals",
          "description": "Intervals between STT check runs."
        },
        "backup_management_enabled": {
          "type": "boolean",
          "description": "True if Backup Management is enabled."
        },
        "azurediscover_enabled": {
          "type": "boolean",
          "description": "True if Azure Discover is enabled."
        },
        "connected_to_platform": {
          "type": "boolean",
          "title": "True if the PMM instance is connected to Platform"
        },
        "telemetry_summaries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "Includes list of collected telemetry"
        },
        "enable_access_control": {
          "type": "boolean",
          "description": "True if Access Control is enabled."
        },
        "default_role_id": {
          "type": "integer",
          "format": "int64",
          "description": "Default Access Control role ID for new users."
        }
      },
      "description": "Settings represents PMM Server settings."
    },
    "serverSlackAlertingSettings": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Slack API (webhook) URL."
        }
      },
      "description": "SlackAlertingSettings represents Slack configuration for Alerting."
    },
    "serverStartUpdateRequest": {
      "type": "object"
    },
    "serverStartUpdateResponse": {
      "type": "object",
      "properties": {
        "auth_token": {
          "type": "string",
          "description": "Authentication token for getting update statuses."
        },
        "log_offset": {
          "type": "integer",
          "format": "int64",
          "description": "Progress log offset."
        }
      }
    },
    "serverTestEmailAlertingSettingsRequest": {
      "type": "object",
      "properties": {
        "email_alerting_settings": {
          "$ref": "#/definitions/serverEmailAlertingSettings",
          "description": "Alerting email (SMTP) settings."
        },
        "email_to": {
          "type": "string",
          "description": "Target email address to send the email to."
        }
      }
    },
    "serverTestEmailAlertingSettingsResponse": {
      "type": "object"
    },
    "serverUpdateStatusRequest": {
      "type": "object",
      "properties": {
        "auth_token": {
          "type": "string",
          "description": "Authentication token."
        },
        "log_offset": {
          "type": "integer",
          "format": "int64",
          "description": "Progress log offset."
        }
      }
    },
    "serverUpdateStatusResponse": {
      "type": "object",
      "properties": {
        "log_lines": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Progress log lines."
        },
        "log_offset": {
          "type": "integer",
          "format": "int64",
          "description": "Progress log offset for the next request."
        },
        "done": {
          "type": "boolean",
          "description": "True when update is done."
        }
      }
    },
    "serverVersionInfo": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "User-visible version."
        },
        "full_version": {
          "type": "string",
          "description": "Full version for debugging."
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Build or release date."
        }
      },
      "description": "VersionInfo describes component version, or PMM Server as a whole."
    },
    "serverVersionResponse": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "PMM Server version."
        },
        "server": {
          "$ref": "#/definitions/serverVersionInfo",
          "description": "Detailed PMM Server version information."
        },
        "managed": {
          "$ref": "#/definitions/serverVersionInfo",
          "description": "pmm-managed version information for debugging."
        },
        "distribution_method": {
          "$ref": "#/definitions/serverDistributionMethod",
          "description": "PMM Server distribution method.\n\nTODO Versions and statuses of Grafana, Prometheus, PostgreSQL, qan-api2, ClickHouse, pmm-agent, etc."
        }
      }
    }
  }
}
