help:                 ## Display this help message.
	@echo "Please use \`make <target>\` where <target> is one of:"
	@grep '^[a-zA-Z]' $(MAKEFILE_LIST) | \
		awk -F ':.*?## ' 'NF==2 {printf "  %-26s%s\n", $$1, $$2}'

cert:                 ## Generate TLS certificate for nginx for local testing with mkcert.
	mkcert -cert-file=nginx/cert.pem -key-file=nginx/key.pem pmm-api pmm-api.localhost 127.0.0.1

init:                 ## Install prototool and fill ../vendor/.
	# https://github.com/uber/prototool#installation
	curl -L https://github.com/uber/prototool/releases/download/v1.8.0/prototool-$(shell uname -s)-$(shell uname -m) -o ./prototool
	chmod +x ./prototool

	dep ensure -v

gen: clean            ## Generate files.
	go install -v ../vendor/github.com/golang/protobuf/protoc-gen-go \
					../vendor/github.com/mwitkow/go-proto-validators/protoc-gen-govalidators \
					../vendor/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway \
					../vendor/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger \
					../vendor/github.com/go-swagger/go-swagger/cmd/swagger \
					../vendor/github.com/Percona-Lab/swagger-order \
					../vendor/github.com/BurntSushi/go-sumtype

	# generated by ./prototool break descriptor-set . -o v2.2.1.descriptor
	./prototool break check . -f v2.2.1.descriptor

	./prototool all

	for API in agentlocalpb serverpb inventorypb managementpb qanpb ; do \
		set -x ; \
		swagger mixin $$API/json/header.json $$API/*.swagger.json --output=$$API/json/$$API.json --keep-spec-order; \
		swagger flatten --with-flatten=expand --with-flatten=remove-unused $$API/json/$$API.json --output=$$API/json/$$API.json ; \
		swagger validate $$API/json/$$API.json ; \
		swagger generate client --with-flatten=expand --with-flatten=remove-unused --spec=$$API/json/$$API.json --target=$$API/json \
			--additional-initialism=aws \
			--additional-initialism=db \
			--additional-initialism=ok \
			--additional-initialism=pmm \
			--additional-initialism=qan \
			--additional-initialism=rds \
			--additional-initialism=sql ; \
	done

	# generate public API spec, omit agentlocalpb (always private) and qanpb (not v1 yet)
	swagger mixin --output=swagger/swagger.json \
		swagger/header.json \
		serverpb/json/serverpb.json \
		inventorypb/json/inventorypb.json \
		managementpb/json/managementpb.json
	swagger validate swagger/swagger.json

	swagger-order --output=swagger/swagger.json swagger/swagger.json

	make clean_swagger
	go fmt ../...
	go-sumtype ../...
	go install -v ../...

clean_swagger:
	find . -name '*.swagger.json' -print -delete

clean: clean_swagger  ## Remove generated files.
	find . -name '*.pb.go' -print -delete
	find . -name '*.pb.gw.go' -print -delete

	for API in agentlocalpb serverpb inventorypb managementpb qanpb ; do \
		rm -fr $$API/json/client $$API/json/models $$API/json/$$API.json ; \
	done
	rm -f swagger/swagger.json

serve:                ## Serve API documentation with nginx.
	# https://127.0.0.1:8443/
	nginx -p . -c nginx/nginx.conf
