help:                 ## Display this help message.
	@echo "Please use \`make <target>\` where <target> is one of:"
	@grep '^[a-zA-Z]' $(MAKEFILE_LIST) | \
		awk -F ':.*?## ' 'NF==2 {printf "  %-26s%s\n", $$1, $$2}'

init:                 ## Fill ../vendor/ and install tools.
	# https://github.com/uber/prototool#installation
	curl -L https://github.com/uber/prototool/releases/download/v1.10.0/prototool-$(shell uname -s)-$(shell uname -m) -o ./prototool-new
	mv ./prototool-new ./prototool
	chmod +x ./prototool

	dep ensure -v

	go install -v ../vendor/github.com/golang/protobuf/protoc-gen-go \
					../vendor/github.com/mwitkow/go-proto-validators/protoc-gen-govalidators \
					../vendor/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway \
					../vendor/github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger \
					../vendor/github.com/go-swagger/go-swagger/cmd/swagger \
					../vendor/github.com/Percona-Lab/swagger-order \
					../vendor/github.com/BurntSushi/go-sumtype

gen: clean            ## Generate files.
	# generated by descriptors target
	./prototool break check . -f api.descriptor

	./prototool all

	for API in agentlocalpb serverpb inventorypb managementpb managementpb/dbaas managementpb/ia managementpb/backup qanpb ; do \
		set -x ; \
		swagger mixin $$API/json/header.json $$API/*.swagger.json --output=$$API/json/$$(basename $$API).json --keep-spec-order; \
		swagger flatten --with-flatten=expand --with-flatten=remove-unused $$API/json/$$(basename $$API).json --output=$$API/json/$$(basename $$API).json ; \
		swagger validate $$API/json/$$(basename $$API).json ; \
		swagger generate client --with-flatten=expand --with-flatten=remove-unused --spec=$$API/json/$$(basename $$API).json --target=$$API/json \
			--additional-initialism=aws \
			--additional-initialism=db \
			--additional-initialism=ok \
			--additional-initialism=pmm \
			--additional-initialism=psmdb \
			--additional-initialism=pt \
			--additional-initialism=qan \
			--additional-initialism=rds \
			--additional-initialism=sql \
			--additional-initialism=ha ; \
	done

	# generate public API spec, omit agentlocalpb (always private),
	# and managementpb/dbaas, managementpb/ia, managementpb/backup and qanpb (not v1 yet)
	swagger mixin --output=swagger/swagger.json \
		swagger/header.json \
		serverpb/json/serverpb.json \
		inventorypb/json/inventorypb.json \
		managementpb/json/managementpb.json
	swagger validate swagger/swagger.json

	swagger-order --output=swagger/swagger.json swagger/swagger.json

	# generate dev API spec with all PMM Server APIs (omit agentlocalpb)
	swagger mixin --output=swagger/swagger-dev.json \
		swagger/header-dev.json \
		serverpb/json/serverpb.json \
		inventorypb/json/inventorypb.json \
		managementpb/json/managementpb.json \
		managementpb/dbaas/json/dbaas.json \
		managementpb/ia/json/ia.json \
		managementpb/backup/json/backup.json \
		qanpb/json/qanpb.json
	swagger validate swagger/swagger-dev.json

	swagger-order --output=swagger/swagger-dev.json swagger/swagger-dev.json

	make clean_swagger
	go fmt ../...
	go-sumtype ../...
	go install -v ../...

gen-alertmanager:     # Generate Alertmanager client.
	swagger generate client --model-package=ammodels --client-package=amclient --spec=alertmanager/openapi.yaml --target=alertmanager

	go fmt ./alertmanager/...
	go install -v ./alertmanager/...

clean_swagger:
	find . -name '*.swagger.json' -print -delete

clean: clean_swagger  ## Remove generated files.
	find . -name '*.pb.go' -print -delete
	find . -name '*.pb.gw.go' -print -delete

	for API in agentlocalpb serverpb inventorypb managementpb managementpb/dbaas managementpb/ia managementpb/backup qanpb ; do \
		rm -fr $$API/json/client $$API/json/models $$API/json/$$(basename $$API).json ; \
	done
	rm -f swagger/swagger.json swagger/swagger-dev.json

serve:                ## Serve API documentation with nginx.
	# http://127.0.0.1:8080/swagger-ui.html
	nginx -p . -c nginx/nginx.conf

descriptors:          ## Update API compatibility descriptors.
	./prototool break descriptor-set . -o api.descriptor
