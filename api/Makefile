# vim: ts=8:sw=8:ft=make:noai:noet
SWAGGER_UI_VERSION?=latest

gen:            ## Generate PMM API
	# generated by descriptors target
	../bin/buf breaking --against descriptor.bin .

	../bin/buf generate -v .

	SPECS="\
		agentlocal/v1 \
		server/v1 \
		user/v1 \
		inventory/v1 \
		management/v1 \
		management/v1/service \
		actions/v1 \
		advisors/v1 \
		alerting/v1 \
		backup/v1 \
		dump/v1beta1 \
		accesscontrol/v1beta1 \
		qan/v1 \
		platform/v1"; \
	for API in $$SPECS; do \
		set -x ; \
		../bin/swagger mixin $$API/json/header.json $$API/*.swagger.json --output=$$API/json/$$(basename $$API).json --keep-spec-order; \
		../bin/swagger flatten --with-flatten=expand --with-flatten=remove-unused $$API/json/$$(basename $$API).json --output=$$API/json/$$(basename $$API).json ; \
		../bin/swagger validate $$API/json/$$(basename $$API).json ; \
		../bin/swagger generate client --with-flatten=expand --with-flatten=remove-unused --spec=$$API/json/$$(basename $$API).json --target=$$API/json \
			--additional-initialism=aws \
			--additional-initialism=db \
			--additional-initialism=ok \
			--additional-initialism=pmm \
			--additional-initialism=psmdb \
			--additional-initialism=pxc \
			--additional-initialism=pt \
			--additional-initialism=qan \
			--additional-initialism=rds \
			--additional-initialism=sql \
			--additional-initialism=ha ; \
	done

	# generate public API spec, omit agentlocal and inventory (always private),
	# as well as a number of protos that are in beta (not v1 yet, they all go to a similar call below)
	../bin/swagger mixin --output=swagger/swagger.json \
		swagger/header.json \
		server/v1/json/v1.json \
		user/v1/json/v1.json \
		inventory/v1/json/v1.json \
		management/v1/json/v1.json \
		actions/v1/json/v1.json \
		alerting/v1/json/v1.json \
		advisors/v1/json/v1.json \
		backup/v1/json/v1.json \
		qan/v1/json/v1.json \
		platform/v1/json/v1.json
	../bin/swagger validate swagger/swagger.json

	../bin/swagger-order --output=swagger/swagger.json swagger/swagger.json

	# generate API spec with all PMM Server APIs (omit agentlocal)
	../bin/swagger mixin --output=swagger/swagger-dev.json \
		swagger/header-dev.json \
		server/v1/json/v1.json \
		user/v1/json/v1.json \
		inventory/v1/json/v1.json \
		management/v1/json/v1.json \
		actions/v1/json/v1.json \
		alerting/v1/json/v1.json \
		advisors/v1/json/v1.json \
		backup/v1/json/v1.json \
		dump/v1beta1/json/v1beta1.json \
		accesscontrol/v1beta1/json/v1beta1.json \
		qan/v1/json/v1.json \
		platform/v1/json/v1.json

	../bin/swagger validate swagger/swagger-dev.json

	../bin/swagger-order --output=swagger/swagger-dev.json swagger/swagger-dev.json

format:               ## Format API definitions
	../bin/buf format . -w

clean-swagger:
	find . -name '*.swagger.json' -print -delete


ifeq ($(shell test "${SWAGGER_UI_VERSION}" = "latest" && echo 1 || echo 0), 1)
get_swagger_version:
override SWAGGER_UI_VERSION = $(shell curl --silent --head https://github.com/swagger-api/swagger-ui/releases/latest | grep -E '^[lL]ocation' | sed 's;^.*/;;')
else
get_swagger_version:
endif

update-swagger: get_swagger_version               ## Update Swagger UI in swagger, use `SWAGGER_UI_VERSION=xxx make update-swagger` to choose a version other than latest
	curl --output /tmp/swagger.tar.gz -sSfL "https://github.com/swagger-api/swagger-ui/archive/refs/tags/${SWAGGER_UI_VERSION}.tar.gz"
	tar xf /tmp/swagger.tar.gz --transform 's;swagger-ui-.*/dist/;swagger/;g'
	rm -f swagger/.npmrc
	sed -i 's/url: ".*"/url: "\/swagger.json",\n    validatorUrl: "none"/' swagger/swagger-initializer.js

clean: clean-swagger  ## Remove generated files
	find . -name '*.pb.go' -print -delete
	find . -name '*.pb.gw.go' -print -delete
	find . -name '*.validate.go' -print -delete

	SPECS="\
		agentlocal/v1 \
		server/v1 \
		user/v1 \
		inventory/v1 \
		management/v1 \
		actions/v1 \
		alerting/v1 \
		advisors/v1 \
		backup/v1 \
		dump/v1beta1 \
		accesscontrol/v1beta1 \
		qan/v1 \
		platform/v1"; \
	for API in $$SPECS; do \
		rm -fr $$API/json/client $$API/json/models $$API/json/$$(basename $$API).json ; \
	done
	rm -f swagger/swagger.json swagger/swagger-dev.json

descriptors:          ## Update API compatibility descriptors
	../bin/buf build -o descriptor.bin --as-file-descriptor-set .