// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: onboardingpb/tips.proto

package onboardingpb

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"

	_ "github.com/percona/pmm/api/inventorypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TipType int32

const (
	TipType_SYSTEM TipType = 0
	TipType_USER   TipType = 1
)

// Enum value maps for TipType.
var (
	TipType_name = map[int32]string{
		0: "SYSTEM",
		1: "USER",
	}
	TipType_value = map[string]int32{
		"SYSTEM": 0,
		"USER":   1,
	}
)

func (x TipType) Enum() *TipType {
	p := new(TipType)
	*p = x
	return p
}

func (x TipType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TipType) Descriptor() protoreflect.EnumDescriptor {
	return file_onboardingpb_tips_proto_enumTypes[0].Descriptor()
}

func (TipType) Type() protoreflect.EnumType {
	return &file_onboardingpb_tips_proto_enumTypes[0]
}

func (x TipType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TipType.Descriptor instead.
func (TipType) EnumDescriptor() ([]byte, []int) {
	return file_onboardingpb_tips_proto_rawDescGZIP(), []int{0}
}

// Request message for GetTipStatus method.
type GetTipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the tip to retrieve.
	TipId int32 `protobuf:"varint,1,opt,name=tipId,proto3" json:"tipId,omitempty"`
	// Tip Type (system or user)
	TipType TipType `protobuf:"varint,2,opt,name=tipType,proto3,enum=onboardingpb.TipType" json:"tipType,omitempty"`
	// The User ID.
	UserId int32 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetTipRequest) Reset() {
	*x = GetTipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onboardingpb_tips_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTipRequest) ProtoMessage() {}

func (x *GetTipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_onboardingpb_tips_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTipRequest.ProtoReflect.Descriptor instead.
func (*GetTipRequest) Descriptor() ([]byte, []int) {
	return file_onboardingpb_tips_proto_rawDescGZIP(), []int{0}
}

func (x *GetTipRequest) GetTipId() int32 {
	if x != nil {
		return x.TipId
	}
	return 0
}

func (x *GetTipRequest) GetTipType() TipType {
	if x != nil {
		return x.TipType
	}
	return TipType_SYSTEM
}

func (x *GetTipRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response message for GetTipResponse method.
type GetTipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the tip to retrieve.
	TipId int32 `protobuf:"varint,1,opt,name=tipId,proto3" json:"tipId,omitempty"`
	// Show whether tip is completed or not.
	IsCompleted bool `protobuf:"varint,2,opt,name=isCompleted,proto3" json:"isCompleted,omitempty"`
}

func (x *GetTipResponse) Reset() {
	*x = GetTipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onboardingpb_tips_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTipResponse) ProtoMessage() {}

func (x *GetTipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_onboardingpb_tips_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTipResponse.ProtoReflect.Descriptor instead.
func (*GetTipResponse) Descriptor() ([]byte, []int) {
	return file_onboardingpb_tips_proto_rawDescGZIP(), []int{1}
}

func (x *GetTipResponse) GetTipId() int32 {
	if x != nil {
		return x.TipId
	}
	return 0
}

func (x *GetTipResponse) GetIsCompleted() bool {
	if x != nil {
		return x.IsCompleted
	}
	return false
}

// Request message for CompleteUserTip method.
type CompleteUserTipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the tip to retrieve.
	TipId int32 `protobuf:"varint,1,opt,name=tipId,proto3" json:"tipId,omitempty"`
	// user id which completes user tip.
	UserId int32 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *CompleteUserTipRequest) Reset() {
	*x = CompleteUserTipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onboardingpb_tips_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteUserTipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteUserTipRequest) ProtoMessage() {}

func (x *CompleteUserTipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_onboardingpb_tips_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteUserTipRequest.ProtoReflect.Descriptor instead.
func (*CompleteUserTipRequest) Descriptor() ([]byte, []int) {
	return file_onboardingpb_tips_proto_rawDescGZIP(), []int{2}
}

func (x *CompleteUserTipRequest) GetTipId() int32 {
	if x != nil {
		return x.TipId
	}
	return 0
}

func (x *CompleteUserTipRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// Response message for CompleteUserTip method.
type CompleteUserTipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CompleteUserTipResponse) Reset() {
	*x = CompleteUserTipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_onboardingpb_tips_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteUserTipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteUserTipResponse) ProtoMessage() {}

func (x *CompleteUserTipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_onboardingpb_tips_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteUserTipResponse.ProtoReflect.Descriptor instead.
func (*CompleteUserTipResponse) Descriptor() ([]byte, []int) {
	return file_onboardingpb_tips_proto_rawDescGZIP(), []int{3}
}

var File_onboardingpb_tips_proto protoreflect.FileDescriptor

var file_onboardingpb_tips_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2f, 0x74,
	0x69, 0x70, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6f, 0x6e, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x70, 0x62, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x70, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6e, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x70, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x07, 0x74, 0x69, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x6f, 0x6e, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x54, 0x69, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x74, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x48, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x69, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x46, 0x0a, 0x16,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x70, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a,
	0x1f, 0x0a, 0x07, 0x54, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59,
	0x53, 0x54, 0x45, 0x4d, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01,
	0x32, 0xba, 0x03, 0x0a, 0x0a, 0x54, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0xc5, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7a, 0x92, 0x41, 0x37,
	0x12, 0x0f, 0x47, 0x65, 0x74, 0x20, 0x74, 0x69, 0x70, 0x20, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x1a, 0x24, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x20, 0x74, 0x69, 0x70, 0x20,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x50, 0x4d, 0x4d,
	0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3a, 0x12, 0x38, 0x2f,
	0x76, 0x31, 0x2f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x69,
	0x70, 0x73, 0x2f, 0x7b, 0x74, 0x69, 0x70, 0x49, 0x64, 0x7d, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f,
	0x7b, 0x74, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x7d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x7d, 0x12, 0xe3, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x70, 0x12, 0x24, 0x2e, 0x6f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x82, 0x01, 0x92, 0x41, 0x61, 0x12, 0x11,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x74, 0x69,
	0x70, 0x1a, 0x4c, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x20, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x20,
	0x75, 0x73, 0x65, 0x72, 0x20, 0x74, 0x69, 0x70, 0x20, 0x69, 0x73, 0x20, 0x64, 0x6f, 0x6e, 0x65,
	0x2e, 0x20, 0x4f, 0x6e, 0x6c, 0x79, 0x20, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x20, 0x66, 0x6f, 0x72,
	0x20, 0x75, 0x73, 0x65, 0x72, 0x20, 0x74, 0x69, 0x70, 0x2c, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x20, 0x74, 0x69, 0x70, 0x73, 0x2e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x6e,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x2f, 0x74, 0x69, 0x70, 0x73, 0x42, 0x96, 0x01,
	0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67,
	0x70, 0x62, 0x42, 0x09, 0x54, 0x69, 0x70, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x72, 0x63,
	0x6f, 0x6e, 0x61, 0x2f, 0x70, 0x6d, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x6e, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x4f, 0x58, 0x58, 0xaa, 0x02,
	0x0c, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0xca, 0x02, 0x0c,
	0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0xe2, 0x02, 0x18, 0x4f,
	0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0c, 0x4f, 0x6e, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_onboardingpb_tips_proto_rawDescOnce sync.Once
	file_onboardingpb_tips_proto_rawDescData = file_onboardingpb_tips_proto_rawDesc
)

func file_onboardingpb_tips_proto_rawDescGZIP() []byte {
	file_onboardingpb_tips_proto_rawDescOnce.Do(func() {
		file_onboardingpb_tips_proto_rawDescData = protoimpl.X.CompressGZIP(file_onboardingpb_tips_proto_rawDescData)
	})
	return file_onboardingpb_tips_proto_rawDescData
}

var (
	file_onboardingpb_tips_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_onboardingpb_tips_proto_msgTypes  = make([]protoimpl.MessageInfo, 4)
	file_onboardingpb_tips_proto_goTypes   = []interface{}{
		(TipType)(0),                    // 0: onboardingpb.TipType
		(*GetTipRequest)(nil),           // 1: onboardingpb.GetTipRequest
		(*GetTipResponse)(nil),          // 2: onboardingpb.GetTipResponse
		(*CompleteUserTipRequest)(nil),  // 3: onboardingpb.CompleteUserTipRequest
		(*CompleteUserTipResponse)(nil), // 4: onboardingpb.CompleteUserTipResponse
	}
)

var file_onboardingpb_tips_proto_depIdxs = []int32{
	0, // 0: onboardingpb.GetTipRequest.tipType:type_name -> onboardingpb.TipType
	1, // 1: onboardingpb.TipService.GetTipStatus:input_type -> onboardingpb.GetTipRequest
	3, // 2: onboardingpb.TipService.CompleteUserTip:input_type -> onboardingpb.CompleteUserTipRequest
	2, // 3: onboardingpb.TipService.GetTipStatus:output_type -> onboardingpb.GetTipResponse
	4, // 4: onboardingpb.TipService.CompleteUserTip:output_type -> onboardingpb.CompleteUserTipResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_onboardingpb_tips_proto_init() }
func file_onboardingpb_tips_proto_init() {
	if File_onboardingpb_tips_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_onboardingpb_tips_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onboardingpb_tips_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onboardingpb_tips_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteUserTipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_onboardingpb_tips_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompleteUserTipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_onboardingpb_tips_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_onboardingpb_tips_proto_goTypes,
		DependencyIndexes: file_onboardingpb_tips_proto_depIdxs,
		EnumInfos:         file_onboardingpb_tips_proto_enumTypes,
		MessageInfos:      file_onboardingpb_tips_proto_msgTypes,
	}.Build()
	File_onboardingpb_tips_proto = out.File
	file_onboardingpb_tips_proto_rawDesc = nil
	file_onboardingpb_tips_proto_goTypes = nil
	file_onboardingpb_tips_proto_depIdxs = nil
}
