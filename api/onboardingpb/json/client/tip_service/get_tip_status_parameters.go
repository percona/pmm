// Code generated by go-swagger; DO NOT EDIT.

package tip_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetTipStatusParams creates a new GetTipStatusParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetTipStatusParams() *GetTipStatusParams {
	return &GetTipStatusParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetTipStatusParamsWithTimeout creates a new GetTipStatusParams object
// with the ability to set a timeout on a request.
func NewGetTipStatusParamsWithTimeout(timeout time.Duration) *GetTipStatusParams {
	return &GetTipStatusParams{
		timeout: timeout,
	}
}

// NewGetTipStatusParamsWithContext creates a new GetTipStatusParams object
// with the ability to set a context for a request.
func NewGetTipStatusParamsWithContext(ctx context.Context) *GetTipStatusParams {
	return &GetTipStatusParams{
		Context: ctx,
	}
}

// NewGetTipStatusParamsWithHTTPClient creates a new GetTipStatusParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetTipStatusParamsWithHTTPClient(client *http.Client) *GetTipStatusParams {
	return &GetTipStatusParams{
		HTTPClient: client,
	}
}

/*
GetTipStatusParams contains all the parameters to send to the API endpoint

	for the get tip status operation.

	Typically these are written to a http.Request.
*/
type GetTipStatusParams struct {
	/* TipID.

	   The ID of the tip to retrieve.

	   Format: int32
	*/
	TipID int32

	/* TipType.

	   Tip Type (system or user)
	*/
	TipType string

	/* UserID.

	   The User ID.

	   Format: int32
	*/
	UserID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get tip status params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTipStatusParams) WithDefaults() *GetTipStatusParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get tip status params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetTipStatusParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get tip status params
func (o *GetTipStatusParams) WithTimeout(timeout time.Duration) *GetTipStatusParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get tip status params
func (o *GetTipStatusParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get tip status params
func (o *GetTipStatusParams) WithContext(ctx context.Context) *GetTipStatusParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get tip status params
func (o *GetTipStatusParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get tip status params
func (o *GetTipStatusParams) WithHTTPClient(client *http.Client) *GetTipStatusParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get tip status params
func (o *GetTipStatusParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTipID adds the tipID to the get tip status params
func (o *GetTipStatusParams) WithTipID(tipID int32) *GetTipStatusParams {
	o.SetTipID(tipID)
	return o
}

// SetTipID adds the tipId to the get tip status params
func (o *GetTipStatusParams) SetTipID(tipID int32) {
	o.TipID = tipID
}

// WithTipType adds the tipType to the get tip status params
func (o *GetTipStatusParams) WithTipType(tipType string) *GetTipStatusParams {
	o.SetTipType(tipType)
	return o
}

// SetTipType adds the tipType to the get tip status params
func (o *GetTipStatusParams) SetTipType(tipType string) {
	o.TipType = tipType
}

// WithUserID adds the userID to the get tip status params
func (o *GetTipStatusParams) WithUserID(userID int32) *GetTipStatusParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the get tip status params
func (o *GetTipStatusParams) SetUserID(userID int32) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *GetTipStatusParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {
	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param tipId
	if err := r.SetPathParam("tipId", swag.FormatInt32(o.TipID)); err != nil {
		return err
	}

	// path param tipType
	if err := r.SetPathParam("tipType", o.TipType); err != nil {
		return err
	}

	// path param userId
	if err := r.SetPathParam("userId", swag.FormatInt32(o.UserID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
