// Code generated by go-swagger; DO NOT EDIT.

package tip_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetOnboardingStatusReader is a Reader for the GetOnboardingStatus structure.
type GetOnboardingStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOnboardingStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOnboardingStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetOnboardingStatusDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetOnboardingStatusOK creates a GetOnboardingStatusOK with default headers values
func NewGetOnboardingStatusOK() *GetOnboardingStatusOK {
	return &GetOnboardingStatusOK{}
}

/*
GetOnboardingStatusOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetOnboardingStatusOK struct {
	Payload *GetOnboardingStatusOKBody
}

func (o *GetOnboardingStatusOK) Error() string {
	return fmt.Sprintf("[GET /v1/onboarding][%d] getOnboardingStatusOk  %+v", 200, o.Payload)
}

func (o *GetOnboardingStatusOK) GetPayload() *GetOnboardingStatusOKBody {
	return o.Payload
}

func (o *GetOnboardingStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(GetOnboardingStatusOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOnboardingStatusDefault creates a GetOnboardingStatusDefault with default headers values
func NewGetOnboardingStatusDefault(code int) *GetOnboardingStatusDefault {
	return &GetOnboardingStatusDefault{
		_statusCode: code,
	}
}

/*
GetOnboardingStatusDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetOnboardingStatusDefault struct {
	_statusCode int

	Payload *GetOnboardingStatusDefaultBody
}

// Code gets the status code for the get onboarding status default response
func (o *GetOnboardingStatusDefault) Code() int {
	return o._statusCode
}

func (o *GetOnboardingStatusDefault) Error() string {
	return fmt.Sprintf("[GET /v1/onboarding][%d] GetOnboardingStatus default  %+v", o._statusCode, o.Payload)
}

func (o *GetOnboardingStatusDefault) GetPayload() *GetOnboardingStatusDefaultBody {
	return o.Payload
}

func (o *GetOnboardingStatusDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(GetOnboardingStatusDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetOnboardingStatusDefaultBody get onboarding status default body
swagger:model GetOnboardingStatusDefaultBody
*/
type GetOnboardingStatusDefaultBody struct {
	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*GetOnboardingStatusDefaultBodyDetailsItems0 `json:"details"`
}

// Validate validates this get onboarding status default body
func (o *GetOnboardingStatusDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOnboardingStatusDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetOnboardingStatus default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetOnboardingStatus default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get onboarding status default body based on the context it is used
func (o *GetOnboardingStatusDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOnboardingStatusDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Details); i++ {
		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetOnboardingStatus default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetOnboardingStatus default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOnboardingStatusDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOnboardingStatusDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetOnboardingStatusDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetOnboardingStatusDefaultBodyDetailsItems0 get onboarding status default body details items0
swagger:model GetOnboardingStatusDefaultBodyDetailsItems0
*/
type GetOnboardingStatusDefaultBodyDetailsItems0 struct {
	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this get onboarding status default body details items0
func (o *GetOnboardingStatusDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get onboarding status default body details items0 based on context it is used
func (o *GetOnboardingStatusDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOnboardingStatusDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOnboardingStatusDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res GetOnboardingStatusDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetOnboardingStatusOKBody Response message for GetOnboardingStatusResponse method.
swagger:model GetOnboardingStatusOKBody
*/
type GetOnboardingStatusOKBody struct {
	// shows system tips which can be completed once per PMM instance
	SystemTips []*GetOnboardingStatusOKBodySystemTipsItems0 `json:"systemTips"`

	// shows system tips which can be completed once per user
	UserTips []*GetOnboardingStatusOKBodyUserTipsItems0 `json:"userTips"`
}

// Validate validates this get onboarding status OK body
func (o *GetOnboardingStatusOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSystemTips(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUserTips(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOnboardingStatusOKBody) validateSystemTips(formats strfmt.Registry) error {
	if swag.IsZero(o.SystemTips) { // not required
		return nil
	}

	for i := 0; i < len(o.SystemTips); i++ {
		if swag.IsZero(o.SystemTips[i]) { // not required
			continue
		}

		if o.SystemTips[i] != nil {
			if err := o.SystemTips[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOnboardingStatusOk" + "." + "systemTips" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOnboardingStatusOk" + "." + "systemTips" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetOnboardingStatusOKBody) validateUserTips(formats strfmt.Registry) error {
	if swag.IsZero(o.UserTips) { // not required
		return nil
	}

	for i := 0; i < len(o.UserTips); i++ {
		if swag.IsZero(o.UserTips[i]) { // not required
			continue
		}

		if o.UserTips[i] != nil {
			if err := o.UserTips[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOnboardingStatusOk" + "." + "userTips" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOnboardingStatusOk" + "." + "userTips" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get onboarding status OK body based on the context it is used
func (o *GetOnboardingStatusOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateSystemTips(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateUserTips(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetOnboardingStatusOKBody) contextValidateSystemTips(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.SystemTips); i++ {
		if o.SystemTips[i] != nil {
			if err := o.SystemTips[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOnboardingStatusOk" + "." + "systemTips" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOnboardingStatusOk" + "." + "systemTips" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

func (o *GetOnboardingStatusOKBody) contextValidateUserTips(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.UserTips); i++ {
		if o.UserTips[i] != nil {
			if err := o.UserTips[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getOnboardingStatusOk" + "." + "userTips" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getOnboardingStatusOk" + "." + "userTips" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetOnboardingStatusOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOnboardingStatusOKBody) UnmarshalBinary(b []byte) error {
	var res GetOnboardingStatusOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetOnboardingStatusOKBodySystemTipsItems0 get onboarding status OK body system tips items0
swagger:model GetOnboardingStatusOKBodySystemTipsItems0
*/
type GetOnboardingStatusOKBodySystemTipsItems0 struct {
	// The ID of the tip to retrieve.
	TipID string `json:"tipId,omitempty"`

	// Show whether tip is completed or not.
	IsCompleted bool `json:"isCompleted,omitempty"`
}

// Validate validates this get onboarding status OK body system tips items0
func (o *GetOnboardingStatusOKBodySystemTipsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get onboarding status OK body system tips items0 based on context it is used
func (o *GetOnboardingStatusOKBodySystemTipsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOnboardingStatusOKBodySystemTipsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOnboardingStatusOKBodySystemTipsItems0) UnmarshalBinary(b []byte) error {
	var res GetOnboardingStatusOKBodySystemTipsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetOnboardingStatusOKBodyUserTipsItems0 get onboarding status OK body user tips items0
swagger:model GetOnboardingStatusOKBodyUserTipsItems0
*/
type GetOnboardingStatusOKBodyUserTipsItems0 struct {
	// The ID of the tip to retrieve.
	TipID string `json:"tipId,omitempty"`

	// Show whether tip is completed or not.
	IsCompleted bool `json:"isCompleted,omitempty"`
}

// Validate validates this get onboarding status OK body user tips items0
func (o *GetOnboardingStatusOKBodyUserTipsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get onboarding status OK body user tips items0 based on context it is used
func (o *GetOnboardingStatusOKBodyUserTipsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetOnboardingStatusOKBodyUserTipsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetOnboardingStatusOKBodyUserTipsItems0) UnmarshalBinary(b []byte) error {
	var res GetOnboardingStatusOKBodyUserTipsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
