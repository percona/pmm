syntax = "proto3";

package onboardingpb;

import "google/api/annotations.proto";
import "inventorypb/nodes.proto";
import "inventorypb/services.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "api/onboardingpb;onboardingpb";

// Request message for GetOnboardingStatus method.
message GetOnboardingStatusRequest {}

message TipModel {
  // The ID of the tip to retrieve.
  int64 tipId = 1;
  // Show whether tip is completed or not.
  bool isCompleted = 2;
}

// Response message for GetOnboardingStatusResponse method.
message GetOnboardingStatusResponse {
  // shows system tips which can be completed once per PMM instance
  repeated TipModel systemTips = 1;
  // shows system tips which can be completed once per user
  repeated TipModel userTips = 2;
}

// Request message for CompleteUserTip method.
message CompleteUserTipRequest {
  // The ID of the tip to retrieve.
  int64 tipId = 1;
}

// Response message for CompleteUserTip method.
message CompleteUserTipResponse {}

// Service service provides public methods for managing Services.
service TipService {
  // GetTipStatus returns info about tip status
  rpc GetOnboardingStatus(GetOnboardingStatusRequest) returns (GetOnboardingStatusResponse) {
    option (google.api.http) = {get: "/v1/onboarding"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get onboarding status of the user"
      description: "Retrieve onboarding status of the user"
    };
  }
  // CompleteUserTip completes user tip
  rpc CompleteUserTip(CompleteUserTipRequest) returns (CompleteUserTipResponse) {
    option (google.api.http) = {
      post: "/v1/onboarding/tips/complete"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Complete user tip"
      description: "Method marks user tip is done. Only works for user tip, not for system tips."
    };
  }
}
