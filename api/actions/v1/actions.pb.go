// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2-devel
// 	protoc        (unknown)
// source: actions/v1/actions.proto

package actionsv1

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ActionType represents Action type.
type ActionType int32

const (
	ActionType_ACTION_TYPE_UNSPECIFIED                  ActionType = 0
	ActionType_ACTION_TYPE_MYSQL_EXPLAIN                ActionType = 1
	ActionType_ACTION_TYPE_MYSQL_SHOW_CREATE_TABLE      ActionType = 2
	ActionType_ACTION_TYPE_MYSQL_SHOW_TABLE_STATUS      ActionType = 3
	ActionType_ACTION_TYPE_MYSQL_SHOW_INDEX             ActionType = 4
	ActionType_ACTION_TYPE_POSTGRESQL_SHOW_CREATE_TABLE ActionType = 5
	ActionType_ACTION_TYPE_POSTGRESQL_SHOW_INDEX        ActionType = 6
	ActionType_ACTION_TYPE_MONGODB_EXPLAIN              ActionType = 7
	ActionType_ACTION_TYPE_PT_SUMMARY                   ActionType = 8
	ActionType_ACTION_TYPE_PT_MYSQL_SUMMARY             ActionType = 9
	ActionType_ACTION_TYPE_PT_PG_SUMMARY                ActionType = 10
	ActionType_ACTION_TYPE_PT_MONGODB_SUMMARY           ActionType = 11
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0:  "ACTION_TYPE_UNSPECIFIED",
		1:  "ACTION_TYPE_MYSQL_EXPLAIN",
		2:  "ACTION_TYPE_MYSQL_SHOW_CREATE_TABLE",
		3:  "ACTION_TYPE_MYSQL_SHOW_TABLE_STATUS",
		4:  "ACTION_TYPE_MYSQL_SHOW_INDEX",
		5:  "ACTION_TYPE_POSTGRESQL_SHOW_CREATE_TABLE",
		6:  "ACTION_TYPE_POSTGRESQL_SHOW_INDEX",
		7:  "ACTION_TYPE_MONGODB_EXPLAIN",
		8:  "ACTION_TYPE_PT_SUMMARY",
		9:  "ACTION_TYPE_PT_MYSQL_SUMMARY",
		10: "ACTION_TYPE_PT_PG_SUMMARY",
		11: "ACTION_TYPE_PT_MONGODB_SUMMARY",
	}
	ActionType_value = map[string]int32{
		"ACTION_TYPE_UNSPECIFIED":                  0,
		"ACTION_TYPE_MYSQL_EXPLAIN":                1,
		"ACTION_TYPE_MYSQL_SHOW_CREATE_TABLE":      2,
		"ACTION_TYPE_MYSQL_SHOW_TABLE_STATUS":      3,
		"ACTION_TYPE_MYSQL_SHOW_INDEX":             4,
		"ACTION_TYPE_POSTGRESQL_SHOW_CREATE_TABLE": 5,
		"ACTION_TYPE_POSTGRESQL_SHOW_INDEX":        6,
		"ACTION_TYPE_MONGODB_EXPLAIN":              7,
		"ACTION_TYPE_PT_SUMMARY":                   8,
		"ACTION_TYPE_PT_MYSQL_SUMMARY":             9,
		"ACTION_TYPE_PT_PG_SUMMARY":                10,
		"ACTION_TYPE_PT_MONGODB_SUMMARY":           11,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_actions_v1_actions_proto_enumTypes[0].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_actions_v1_actions_proto_enumTypes[0]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{0}
}

type GetActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
}

func (x *GetActionRequest) Reset() {
	*x = GetActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActionRequest) ProtoMessage() {}

func (x *GetActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActionRequest.ProtoReflect.Descriptor instead.
func (*GetActionRequest) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{0}
}

func (x *GetActionRequest) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

type GetActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// pmm-agent ID where this Action is running / was run.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Current Action output; may be partial if Action is still running.
	Output string `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	// True if Action is finished.
	Done bool `protobuf:"varint,4,opt,name=done,proto3" json:"done,omitempty"`
	// Error message if Action failed.
	Error string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetActionResponse) Reset() {
	*x = GetActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActionResponse) ProtoMessage() {}

func (x *GetActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActionResponse.ProtoReflect.Descriptor instead.
func (*GetActionResponse) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{1}
}

func (x *GetActionResponse) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *GetActionResponse) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *GetActionResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *GetActionResponse) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *GetActionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type StartMySQLExplainActionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pmm-agent ID where to run this Action.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service ID for this Action. Required.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Query ID of query.
	QueryId string `protobuf:"bytes,4,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	// Array of placeholder values
	Placeholders []string `protobuf:"bytes,5,rep,name=placeholders,proto3" json:"placeholders,omitempty"`
	// Database name. Required if it can't be deduced from the query ID.
	Database string `protobuf:"bytes,6,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *StartMySQLExplainActionParams) Reset() {
	*x = StartMySQLExplainActionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMySQLExplainActionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMySQLExplainActionParams) ProtoMessage() {}

func (x *StartMySQLExplainActionParams) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMySQLExplainActionParams.ProtoReflect.Descriptor instead.
func (*StartMySQLExplainActionParams) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{2}
}

func (x *StartMySQLExplainActionParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *StartMySQLExplainActionParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *StartMySQLExplainActionParams) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *StartMySQLExplainActionParams) GetPlaceholders() []string {
	if x != nil {
		return x.Placeholders
	}
	return nil
}

func (x *StartMySQLExplainActionParams) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type StartMySQLExplainActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// pmm-agent ID where to this Action was started.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
}

func (x *StartMySQLExplainActionResult) Reset() {
	*x = StartMySQLExplainActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMySQLExplainActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMySQLExplainActionResult) ProtoMessage() {}

func (x *StartMySQLExplainActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMySQLExplainActionResult.ProtoReflect.Descriptor instead.
func (*StartMySQLExplainActionResult) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{3}
}

func (x *StartMySQLExplainActionResult) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *StartMySQLExplainActionResult) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

type StartMySQLExplainJSONActionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pmm-agent ID where to run this Action.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service ID for this Action. Required.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Query ID of query.
	QueryId string `protobuf:"bytes,4,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	// Array of placeholder values
	Placeholders []string `protobuf:"bytes,5,rep,name=placeholders,proto3" json:"placeholders,omitempty"`
	// Database name. Required if it can't be deduced from the query ID.
	Database string `protobuf:"bytes,6,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *StartMySQLExplainJSONActionParams) Reset() {
	*x = StartMySQLExplainJSONActionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMySQLExplainJSONActionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMySQLExplainJSONActionParams) ProtoMessage() {}

func (x *StartMySQLExplainJSONActionParams) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMySQLExplainJSONActionParams.ProtoReflect.Descriptor instead.
func (*StartMySQLExplainJSONActionParams) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{4}
}

func (x *StartMySQLExplainJSONActionParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *StartMySQLExplainJSONActionParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *StartMySQLExplainJSONActionParams) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *StartMySQLExplainJSONActionParams) GetPlaceholders() []string {
	if x != nil {
		return x.Placeholders
	}
	return nil
}

func (x *StartMySQLExplainJSONActionParams) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type StartMySQLExplainJSONActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// pmm-agent ID where to this Action was started.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
}

func (x *StartMySQLExplainJSONActionResult) Reset() {
	*x = StartMySQLExplainJSONActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMySQLExplainJSONActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMySQLExplainJSONActionResult) ProtoMessage() {}

func (x *StartMySQLExplainJSONActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMySQLExplainJSONActionResult.ProtoReflect.Descriptor instead.
func (*StartMySQLExplainJSONActionResult) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{5}
}

func (x *StartMySQLExplainJSONActionResult) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *StartMySQLExplainJSONActionResult) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

type StartMySQLExplainTraditionalJSONActionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pmm-agent ID where to run this Action.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service ID for this Action. Required.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Query ID of query.
	QueryId string `protobuf:"bytes,4,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	// Array of placeholder values
	Placeholders []string `protobuf:"bytes,5,rep,name=placeholders,proto3" json:"placeholders,omitempty"`
	// Database name. Required if it can't be deduced from the query ID.
	Database string `protobuf:"bytes,6,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *StartMySQLExplainTraditionalJSONActionParams) Reset() {
	*x = StartMySQLExplainTraditionalJSONActionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMySQLExplainTraditionalJSONActionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMySQLExplainTraditionalJSONActionParams) ProtoMessage() {}

func (x *StartMySQLExplainTraditionalJSONActionParams) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMySQLExplainTraditionalJSONActionParams.ProtoReflect.Descriptor instead.
func (*StartMySQLExplainTraditionalJSONActionParams) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{6}
}

func (x *StartMySQLExplainTraditionalJSONActionParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *StartMySQLExplainTraditionalJSONActionParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *StartMySQLExplainTraditionalJSONActionParams) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *StartMySQLExplainTraditionalJSONActionParams) GetPlaceholders() []string {
	if x != nil {
		return x.Placeholders
	}
	return nil
}

func (x *StartMySQLExplainTraditionalJSONActionParams) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type StartMySQLExplainTraditionalJSONActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// pmm-agent ID where to this Action was started.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
}

func (x *StartMySQLExplainTraditionalJSONActionResult) Reset() {
	*x = StartMySQLExplainTraditionalJSONActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMySQLExplainTraditionalJSONActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMySQLExplainTraditionalJSONActionResult) ProtoMessage() {}

func (x *StartMySQLExplainTraditionalJSONActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMySQLExplainTraditionalJSONActionResult.ProtoReflect.Descriptor instead.
func (*StartMySQLExplainTraditionalJSONActionResult) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{7}
}

func (x *StartMySQLExplainTraditionalJSONActionResult) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *StartMySQLExplainTraditionalJSONActionResult) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

type StartMySQLShowCreateTableActionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pmm-agent ID where to run this Action.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service ID for this Action. Required.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Table name. Required. May additionally contain a database name.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// Database name. Required if not given in the table_name field.
	Database string `protobuf:"bytes,4,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *StartMySQLShowCreateTableActionParams) Reset() {
	*x = StartMySQLShowCreateTableActionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMySQLShowCreateTableActionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMySQLShowCreateTableActionParams) ProtoMessage() {}

func (x *StartMySQLShowCreateTableActionParams) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMySQLShowCreateTableActionParams.ProtoReflect.Descriptor instead.
func (*StartMySQLShowCreateTableActionParams) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{8}
}

func (x *StartMySQLShowCreateTableActionParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *StartMySQLShowCreateTableActionParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *StartMySQLShowCreateTableActionParams) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *StartMySQLShowCreateTableActionParams) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type StartMySQLShowCreateTableActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// pmm-agent ID where to this Action was started.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
}

func (x *StartMySQLShowCreateTableActionResult) Reset() {
	*x = StartMySQLShowCreateTableActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMySQLShowCreateTableActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMySQLShowCreateTableActionResult) ProtoMessage() {}

func (x *StartMySQLShowCreateTableActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMySQLShowCreateTableActionResult.ProtoReflect.Descriptor instead.
func (*StartMySQLShowCreateTableActionResult) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{9}
}

func (x *StartMySQLShowCreateTableActionResult) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *StartMySQLShowCreateTableActionResult) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

type StartMySQLShowTableStatusActionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pmm-agent ID where to run this Action.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service ID for this Action. Required.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Table name. Required. May additionally contain a database name.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// Database name. Required if not given in the table_name field.
	Database string `protobuf:"bytes,4,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *StartMySQLShowTableStatusActionParams) Reset() {
	*x = StartMySQLShowTableStatusActionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMySQLShowTableStatusActionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMySQLShowTableStatusActionParams) ProtoMessage() {}

func (x *StartMySQLShowTableStatusActionParams) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMySQLShowTableStatusActionParams.ProtoReflect.Descriptor instead.
func (*StartMySQLShowTableStatusActionParams) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{10}
}

func (x *StartMySQLShowTableStatusActionParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *StartMySQLShowTableStatusActionParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *StartMySQLShowTableStatusActionParams) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *StartMySQLShowTableStatusActionParams) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type StartMySQLShowTableStatusActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// pmm-agent ID where to this Action was started.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
}

func (x *StartMySQLShowTableStatusActionResult) Reset() {
	*x = StartMySQLShowTableStatusActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMySQLShowTableStatusActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMySQLShowTableStatusActionResult) ProtoMessage() {}

func (x *StartMySQLShowTableStatusActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMySQLShowTableStatusActionResult.ProtoReflect.Descriptor instead.
func (*StartMySQLShowTableStatusActionResult) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{11}
}

func (x *StartMySQLShowTableStatusActionResult) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *StartMySQLShowTableStatusActionResult) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

type StartMySQLShowIndexActionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pmm-agent ID where to run this Action.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service ID for this Action. Required.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Table name. Required. May additionally contain a database name.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// Database name. Required if not given in the table_name field.
	Database string `protobuf:"bytes,4,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *StartMySQLShowIndexActionParams) Reset() {
	*x = StartMySQLShowIndexActionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMySQLShowIndexActionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMySQLShowIndexActionParams) ProtoMessage() {}

func (x *StartMySQLShowIndexActionParams) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMySQLShowIndexActionParams.ProtoReflect.Descriptor instead.
func (*StartMySQLShowIndexActionParams) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{12}
}

func (x *StartMySQLShowIndexActionParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *StartMySQLShowIndexActionParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *StartMySQLShowIndexActionParams) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *StartMySQLShowIndexActionParams) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type StartMySQLShowIndexActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// pmm-agent ID where to this Action was started.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
}

func (x *StartMySQLShowIndexActionResult) Reset() {
	*x = StartMySQLShowIndexActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMySQLShowIndexActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMySQLShowIndexActionResult) ProtoMessage() {}

func (x *StartMySQLShowIndexActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMySQLShowIndexActionResult.ProtoReflect.Descriptor instead.
func (*StartMySQLShowIndexActionResult) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{13}
}

func (x *StartMySQLShowIndexActionResult) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *StartMySQLShowIndexActionResult) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

type StartPostgreSQLShowCreateTableActionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pmm-agent ID where to run this Action.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service ID for this Action. Required.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Table name. Required. May additionally contain a database name.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// Database name. Required if not given in the table_name field.
	Database string `protobuf:"bytes,4,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *StartPostgreSQLShowCreateTableActionParams) Reset() {
	*x = StartPostgreSQLShowCreateTableActionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPostgreSQLShowCreateTableActionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPostgreSQLShowCreateTableActionParams) ProtoMessage() {}

func (x *StartPostgreSQLShowCreateTableActionParams) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPostgreSQLShowCreateTableActionParams.ProtoReflect.Descriptor instead.
func (*StartPostgreSQLShowCreateTableActionParams) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{14}
}

func (x *StartPostgreSQLShowCreateTableActionParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *StartPostgreSQLShowCreateTableActionParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *StartPostgreSQLShowCreateTableActionParams) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *StartPostgreSQLShowCreateTableActionParams) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type StartPostgreSQLShowCreateTableActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// pmm-agent ID where to this Action was started.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
}

func (x *StartPostgreSQLShowCreateTableActionResult) Reset() {
	*x = StartPostgreSQLShowCreateTableActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPostgreSQLShowCreateTableActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPostgreSQLShowCreateTableActionResult) ProtoMessage() {}

func (x *StartPostgreSQLShowCreateTableActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPostgreSQLShowCreateTableActionResult.ProtoReflect.Descriptor instead.
func (*StartPostgreSQLShowCreateTableActionResult) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{15}
}

func (x *StartPostgreSQLShowCreateTableActionResult) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *StartPostgreSQLShowCreateTableActionResult) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

type StartPostgreSQLShowIndexActionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pmm-agent ID where to run this Action.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service ID for this Action. Required.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Table name. Required. May additionally contain a database name.
	TableName string `protobuf:"bytes,3,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// Database name. Required if not given in the table_name field.
	Database string `protobuf:"bytes,4,opt,name=database,proto3" json:"database,omitempty"`
}

func (x *StartPostgreSQLShowIndexActionParams) Reset() {
	*x = StartPostgreSQLShowIndexActionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPostgreSQLShowIndexActionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPostgreSQLShowIndexActionParams) ProtoMessage() {}

func (x *StartPostgreSQLShowIndexActionParams) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPostgreSQLShowIndexActionParams.ProtoReflect.Descriptor instead.
func (*StartPostgreSQLShowIndexActionParams) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{16}
}

func (x *StartPostgreSQLShowIndexActionParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *StartPostgreSQLShowIndexActionParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *StartPostgreSQLShowIndexActionParams) GetTableName() string {
	if x != nil {
		return x.TableName
	}
	return ""
}

func (x *StartPostgreSQLShowIndexActionParams) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type StartPostgreSQLShowIndexActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// pmm-agent ID where to this Action was started.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
}

func (x *StartPostgreSQLShowIndexActionResult) Reset() {
	*x = StartPostgreSQLShowIndexActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPostgreSQLShowIndexActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPostgreSQLShowIndexActionResult) ProtoMessage() {}

func (x *StartPostgreSQLShowIndexActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPostgreSQLShowIndexActionResult.ProtoReflect.Descriptor instead.
func (*StartPostgreSQLShowIndexActionResult) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{17}
}

func (x *StartPostgreSQLShowIndexActionResult) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *StartPostgreSQLShowIndexActionResult) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

type StartMongoDBExplainActionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pmm-agent ID where to run this Action.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service ID for this Action. Required.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Query. Required.
	Query string `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *StartMongoDBExplainActionParams) Reset() {
	*x = StartMongoDBExplainActionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMongoDBExplainActionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMongoDBExplainActionParams) ProtoMessage() {}

func (x *StartMongoDBExplainActionParams) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMongoDBExplainActionParams.ProtoReflect.Descriptor instead.
func (*StartMongoDBExplainActionParams) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{18}
}

func (x *StartMongoDBExplainActionParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *StartMongoDBExplainActionParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *StartMongoDBExplainActionParams) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type StartMongoDBExplainActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// pmm-agent ID where to this Action was started.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
}

func (x *StartMongoDBExplainActionResult) Reset() {
	*x = StartMongoDBExplainActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMongoDBExplainActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMongoDBExplainActionResult) ProtoMessage() {}

func (x *StartMongoDBExplainActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMongoDBExplainActionResult.ProtoReflect.Descriptor instead.
func (*StartMongoDBExplainActionResult) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{19}
}

func (x *StartMongoDBExplainActionResult) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *StartMongoDBExplainActionResult) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

// Message to prepare pt-pg-summary data
type StartPTPgSummaryActionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pmm-agent ID where to run this Action.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service ID for this Action.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *StartPTPgSummaryActionParams) Reset() {
	*x = StartPTPgSummaryActionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPTPgSummaryActionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPTPgSummaryActionParams) ProtoMessage() {}

func (x *StartPTPgSummaryActionParams) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPTPgSummaryActionParams.ProtoReflect.Descriptor instead.
func (*StartPTPgSummaryActionParams) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{20}
}

func (x *StartPTPgSummaryActionParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *StartPTPgSummaryActionParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

// Message to retrieve the prepared pt-pg-summary data
type StartPTPgSummaryActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// pmm-agent ID where to this Action was started.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
}

func (x *StartPTPgSummaryActionResult) Reset() {
	*x = StartPTPgSummaryActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPTPgSummaryActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPTPgSummaryActionResult) ProtoMessage() {}

func (x *StartPTPgSummaryActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPTPgSummaryActionResult.ProtoReflect.Descriptor instead.
func (*StartPTPgSummaryActionResult) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{21}
}

func (x *StartPTPgSummaryActionResult) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *StartPTPgSummaryActionResult) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

// Message to prepare pt-mongodb-summary data
type StartPTMongoDBSummaryActionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pmm-agent ID where to run this Action.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service ID for this Action.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *StartPTMongoDBSummaryActionParams) Reset() {
	*x = StartPTMongoDBSummaryActionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPTMongoDBSummaryActionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPTMongoDBSummaryActionParams) ProtoMessage() {}

func (x *StartPTMongoDBSummaryActionParams) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPTMongoDBSummaryActionParams.ProtoReflect.Descriptor instead.
func (*StartPTMongoDBSummaryActionParams) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{22}
}

func (x *StartPTMongoDBSummaryActionParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *StartPTMongoDBSummaryActionParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

// Message to retrieve the prepared pt-mongodb-summary data
type StartPTMongoDBSummaryActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// pmm-agent ID where to this Action was started.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
}

func (x *StartPTMongoDBSummaryActionResult) Reset() {
	*x = StartPTMongoDBSummaryActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPTMongoDBSummaryActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPTMongoDBSummaryActionResult) ProtoMessage() {}

func (x *StartPTMongoDBSummaryActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPTMongoDBSummaryActionResult.ProtoReflect.Descriptor instead.
func (*StartPTMongoDBSummaryActionResult) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{23}
}

func (x *StartPTMongoDBSummaryActionResult) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *StartPTMongoDBSummaryActionResult) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

// Message to prepare pt-mysql-summary data
type StartPTMySQLSummaryActionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pmm-agent ID where to run this Action.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service ID for this Action.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *StartPTMySQLSummaryActionParams) Reset() {
	*x = StartPTMySQLSummaryActionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPTMySQLSummaryActionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPTMySQLSummaryActionParams) ProtoMessage() {}

func (x *StartPTMySQLSummaryActionParams) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPTMySQLSummaryActionParams.ProtoReflect.Descriptor instead.
func (*StartPTMySQLSummaryActionParams) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{24}
}

func (x *StartPTMySQLSummaryActionParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *StartPTMySQLSummaryActionParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

// Message to retrieve the prepared pt-mysql-summary data
type StartPTMySQLSummaryActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// pmm-agent ID where to this Action was started.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
}

func (x *StartPTMySQLSummaryActionResult) Reset() {
	*x = StartPTMySQLSummaryActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPTMySQLSummaryActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPTMySQLSummaryActionResult) ProtoMessage() {}

func (x *StartPTMySQLSummaryActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPTMySQLSummaryActionResult.ProtoReflect.Descriptor instead.
func (*StartPTMySQLSummaryActionResult) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{25}
}

func (x *StartPTMySQLSummaryActionResult) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *StartPTMySQLSummaryActionResult) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

type StartPTSummaryActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pmm-agent ID where to run this Action.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Node ID for this Action.
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *StartPTSummaryActionRequest) Reset() {
	*x = StartPTSummaryActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPTSummaryActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPTSummaryActionRequest) ProtoMessage() {}

func (x *StartPTSummaryActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPTSummaryActionRequest.ProtoReflect.Descriptor instead.
func (*StartPTSummaryActionRequest) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{26}
}

func (x *StartPTSummaryActionRequest) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *StartPTSummaryActionRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type StartPTSummaryActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// pmm-agent ID where to this Action was started.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
}

func (x *StartPTSummaryActionResponse) Reset() {
	*x = StartPTSummaryActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartPTSummaryActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartPTSummaryActionResponse) ProtoMessage() {}

func (x *StartPTSummaryActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartPTSummaryActionResponse.ProtoReflect.Descriptor instead.
func (*StartPTSummaryActionResponse) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{27}
}

func (x *StartPTSummaryActionResponse) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *StartPTSummaryActionResponse) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

type CancelActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique Action ID. Required.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
}

func (x *CancelActionRequest) Reset() {
	*x = CancelActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelActionRequest) ProtoMessage() {}

func (x *CancelActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelActionRequest.ProtoReflect.Descriptor instead.
func (*CancelActionRequest) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{28}
}

func (x *CancelActionRequest) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

type CancelActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancelActionResponse) Reset() {
	*x = CancelActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelActionResponse) ProtoMessage() {}

func (x *CancelActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelActionResponse.ProtoReflect.Descriptor instead.
func (*CancelActionResponse) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{29}
}

type StartServiceActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*StartServiceActionRequest_MysqlExplain
	//	*StartServiceActionRequest_MysqlExplainJson
	//	*StartServiceActionRequest_MysqlExplainTraditionalJson
	//	*StartServiceActionRequest_MysqlShowIndex
	//	*StartServiceActionRequest_MysqlShowCreateTable
	//	*StartServiceActionRequest_MysqlShowTableStatus
	//	*StartServiceActionRequest_PostgresShowCreateTable
	//	*StartServiceActionRequest_PostgresShowIndex
	//	*StartServiceActionRequest_MongodbExplain
	//	*StartServiceActionRequest_PtMongodbSummary
	//	*StartServiceActionRequest_PtMysqlSummary
	//	*StartServiceActionRequest_PtPostgresSummary
	Action isStartServiceActionRequest_Action `protobuf_oneof:"action"`
}

func (x *StartServiceActionRequest) Reset() {
	*x = StartServiceActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartServiceActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServiceActionRequest) ProtoMessage() {}

func (x *StartServiceActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartServiceActionRequest.ProtoReflect.Descriptor instead.
func (*StartServiceActionRequest) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{30}
}

func (m *StartServiceActionRequest) GetAction() isStartServiceActionRequest_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *StartServiceActionRequest) GetMysqlExplain() *StartMySQLExplainActionParams {
	if x, ok := x.GetAction().(*StartServiceActionRequest_MysqlExplain); ok {
		return x.MysqlExplain
	}
	return nil
}

func (x *StartServiceActionRequest) GetMysqlExplainJson() *StartMySQLExplainJSONActionParams {
	if x, ok := x.GetAction().(*StartServiceActionRequest_MysqlExplainJson); ok {
		return x.MysqlExplainJson
	}
	return nil
}

func (x *StartServiceActionRequest) GetMysqlExplainTraditionalJson() *StartMySQLExplainTraditionalJSONActionParams {
	if x, ok := x.GetAction().(*StartServiceActionRequest_MysqlExplainTraditionalJson); ok {
		return x.MysqlExplainTraditionalJson
	}
	return nil
}

func (x *StartServiceActionRequest) GetMysqlShowIndex() *StartMySQLShowIndexActionParams {
	if x, ok := x.GetAction().(*StartServiceActionRequest_MysqlShowIndex); ok {
		return x.MysqlShowIndex
	}
	return nil
}

func (x *StartServiceActionRequest) GetMysqlShowCreateTable() *StartMySQLShowCreateTableActionParams {
	if x, ok := x.GetAction().(*StartServiceActionRequest_MysqlShowCreateTable); ok {
		return x.MysqlShowCreateTable
	}
	return nil
}

func (x *StartServiceActionRequest) GetMysqlShowTableStatus() *StartMySQLShowTableStatusActionParams {
	if x, ok := x.GetAction().(*StartServiceActionRequest_MysqlShowTableStatus); ok {
		return x.MysqlShowTableStatus
	}
	return nil
}

func (x *StartServiceActionRequest) GetPostgresShowCreateTable() *StartPostgreSQLShowCreateTableActionParams {
	if x, ok := x.GetAction().(*StartServiceActionRequest_PostgresShowCreateTable); ok {
		return x.PostgresShowCreateTable
	}
	return nil
}

func (x *StartServiceActionRequest) GetPostgresShowIndex() *StartPostgreSQLShowIndexActionParams {
	if x, ok := x.GetAction().(*StartServiceActionRequest_PostgresShowIndex); ok {
		return x.PostgresShowIndex
	}
	return nil
}

func (x *StartServiceActionRequest) GetMongodbExplain() *StartMongoDBExplainActionParams {
	if x, ok := x.GetAction().(*StartServiceActionRequest_MongodbExplain); ok {
		return x.MongodbExplain
	}
	return nil
}

func (x *StartServiceActionRequest) GetPtMongodbSummary() *StartPTMongoDBSummaryActionParams {
	if x, ok := x.GetAction().(*StartServiceActionRequest_PtMongodbSummary); ok {
		return x.PtMongodbSummary
	}
	return nil
}

func (x *StartServiceActionRequest) GetPtMysqlSummary() *StartPTMySQLSummaryActionParams {
	if x, ok := x.GetAction().(*StartServiceActionRequest_PtMysqlSummary); ok {
		return x.PtMysqlSummary
	}
	return nil
}

func (x *StartServiceActionRequest) GetPtPostgresSummary() *StartPTPgSummaryActionParams {
	if x, ok := x.GetAction().(*StartServiceActionRequest_PtPostgresSummary); ok {
		return x.PtPostgresSummary
	}
	return nil
}

type isStartServiceActionRequest_Action interface {
	isStartServiceActionRequest_Action()
}

type StartServiceActionRequest_MysqlExplain struct {
	MysqlExplain *StartMySQLExplainActionParams `protobuf:"bytes,1,opt,name=mysql_explain,json=mysqlExplain,proto3,oneof"`
}

type StartServiceActionRequest_MysqlExplainJson struct {
	MysqlExplainJson *StartMySQLExplainJSONActionParams `protobuf:"bytes,2,opt,name=mysql_explain_json,json=mysqlExplainJson,proto3,oneof"`
}

type StartServiceActionRequest_MysqlExplainTraditionalJson struct {
	MysqlExplainTraditionalJson *StartMySQLExplainTraditionalJSONActionParams `protobuf:"bytes,3,opt,name=mysql_explain_traditional_json,json=mysqlExplainTraditionalJson,proto3,oneof"`
}

type StartServiceActionRequest_MysqlShowIndex struct {
	MysqlShowIndex *StartMySQLShowIndexActionParams `protobuf:"bytes,4,opt,name=mysql_show_index,json=mysqlShowIndex,proto3,oneof"`
}

type StartServiceActionRequest_MysqlShowCreateTable struct {
	MysqlShowCreateTable *StartMySQLShowCreateTableActionParams `protobuf:"bytes,5,opt,name=mysql_show_create_table,json=mysqlShowCreateTable,proto3,oneof"`
}

type StartServiceActionRequest_MysqlShowTableStatus struct {
	MysqlShowTableStatus *StartMySQLShowTableStatusActionParams `protobuf:"bytes,6,opt,name=mysql_show_table_status,json=mysqlShowTableStatus,proto3,oneof"`
}

type StartServiceActionRequest_PostgresShowCreateTable struct {
	PostgresShowCreateTable *StartPostgreSQLShowCreateTableActionParams `protobuf:"bytes,7,opt,name=postgres_show_create_table,json=postgresShowCreateTable,proto3,oneof"`
}

type StartServiceActionRequest_PostgresShowIndex struct {
	PostgresShowIndex *StartPostgreSQLShowIndexActionParams `protobuf:"bytes,8,opt,name=postgres_show_index,json=postgresShowIndex,proto3,oneof"`
}

type StartServiceActionRequest_MongodbExplain struct {
	MongodbExplain *StartMongoDBExplainActionParams `protobuf:"bytes,9,opt,name=mongodb_explain,json=mongodbExplain,proto3,oneof"`
}

type StartServiceActionRequest_PtMongodbSummary struct {
	PtMongodbSummary *StartPTMongoDBSummaryActionParams `protobuf:"bytes,10,opt,name=pt_mongodb_summary,json=ptMongodbSummary,proto3,oneof"`
}

type StartServiceActionRequest_PtMysqlSummary struct {
	PtMysqlSummary *StartPTMySQLSummaryActionParams `protobuf:"bytes,11,opt,name=pt_mysql_summary,json=ptMysqlSummary,proto3,oneof"`
}

type StartServiceActionRequest_PtPostgresSummary struct {
	PtPostgresSummary *StartPTPgSummaryActionParams `protobuf:"bytes,12,opt,name=pt_postgres_summary,json=ptPostgresSummary,proto3,oneof"`
}

func (*StartServiceActionRequest_MysqlExplain) isStartServiceActionRequest_Action() {}

func (*StartServiceActionRequest_MysqlExplainJson) isStartServiceActionRequest_Action() {}

func (*StartServiceActionRequest_MysqlExplainTraditionalJson) isStartServiceActionRequest_Action() {}

func (*StartServiceActionRequest_MysqlShowIndex) isStartServiceActionRequest_Action() {}

func (*StartServiceActionRequest_MysqlShowCreateTable) isStartServiceActionRequest_Action() {}

func (*StartServiceActionRequest_MysqlShowTableStatus) isStartServiceActionRequest_Action() {}

func (*StartServiceActionRequest_PostgresShowCreateTable) isStartServiceActionRequest_Action() {}

func (*StartServiceActionRequest_PostgresShowIndex) isStartServiceActionRequest_Action() {}

func (*StartServiceActionRequest_MongodbExplain) isStartServiceActionRequest_Action() {}

func (*StartServiceActionRequest_PtMongodbSummary) isStartServiceActionRequest_Action() {}

func (*StartServiceActionRequest_PtMysqlSummary) isStartServiceActionRequest_Action() {}

func (*StartServiceActionRequest_PtPostgresSummary) isStartServiceActionRequest_Action() {}

type StartServiceActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*StartServiceActionResponse_MysqlExplain
	//	*StartServiceActionResponse_MysqlExplainJson
	//	*StartServiceActionResponse_MysqlExplainTraditionalJson
	//	*StartServiceActionResponse_MysqlShowIndex
	//	*StartServiceActionResponse_MysqlShowCreateTable
	//	*StartServiceActionResponse_MysqlShowTableStatus
	//	*StartServiceActionResponse_PostgresqlShowCreateTable
	//	*StartServiceActionResponse_PostgresqlShowIndex
	//	*StartServiceActionResponse_MongodbExplain
	//	*StartServiceActionResponse_PtMongodbSummary
	//	*StartServiceActionResponse_PtMysqlSummary
	//	*StartServiceActionResponse_PtPostgresSummary
	Action isStartServiceActionResponse_Action `protobuf_oneof:"action"`
}

func (x *StartServiceActionResponse) Reset() {
	*x = StartServiceActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_actions_v1_actions_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartServiceActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartServiceActionResponse) ProtoMessage() {}

func (x *StartServiceActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_actions_v1_actions_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartServiceActionResponse.ProtoReflect.Descriptor instead.
func (*StartServiceActionResponse) Descriptor() ([]byte, []int) {
	return file_actions_v1_actions_proto_rawDescGZIP(), []int{31}
}

func (m *StartServiceActionResponse) GetAction() isStartServiceActionResponse_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *StartServiceActionResponse) GetMysqlExplain() *StartMySQLExplainActionResult {
	if x, ok := x.GetAction().(*StartServiceActionResponse_MysqlExplain); ok {
		return x.MysqlExplain
	}
	return nil
}

func (x *StartServiceActionResponse) GetMysqlExplainJson() *StartMySQLExplainJSONActionResult {
	if x, ok := x.GetAction().(*StartServiceActionResponse_MysqlExplainJson); ok {
		return x.MysqlExplainJson
	}
	return nil
}

func (x *StartServiceActionResponse) GetMysqlExplainTraditionalJson() *StartMySQLExplainTraditionalJSONActionResult {
	if x, ok := x.GetAction().(*StartServiceActionResponse_MysqlExplainTraditionalJson); ok {
		return x.MysqlExplainTraditionalJson
	}
	return nil
}

func (x *StartServiceActionResponse) GetMysqlShowIndex() *StartMySQLShowIndexActionResult {
	if x, ok := x.GetAction().(*StartServiceActionResponse_MysqlShowIndex); ok {
		return x.MysqlShowIndex
	}
	return nil
}

func (x *StartServiceActionResponse) GetMysqlShowCreateTable() *StartMySQLShowCreateTableActionResult {
	if x, ok := x.GetAction().(*StartServiceActionResponse_MysqlShowCreateTable); ok {
		return x.MysqlShowCreateTable
	}
	return nil
}

func (x *StartServiceActionResponse) GetMysqlShowTableStatus() *StartMySQLShowTableStatusActionResult {
	if x, ok := x.GetAction().(*StartServiceActionResponse_MysqlShowTableStatus); ok {
		return x.MysqlShowTableStatus
	}
	return nil
}

func (x *StartServiceActionResponse) GetPostgresqlShowCreateTable() *StartPostgreSQLShowCreateTableActionResult {
	if x, ok := x.GetAction().(*StartServiceActionResponse_PostgresqlShowCreateTable); ok {
		return x.PostgresqlShowCreateTable
	}
	return nil
}

func (x *StartServiceActionResponse) GetPostgresqlShowIndex() *StartPostgreSQLShowIndexActionResult {
	if x, ok := x.GetAction().(*StartServiceActionResponse_PostgresqlShowIndex); ok {
		return x.PostgresqlShowIndex
	}
	return nil
}

func (x *StartServiceActionResponse) GetMongodbExplain() *StartMongoDBExplainActionResult {
	if x, ok := x.GetAction().(*StartServiceActionResponse_MongodbExplain); ok {
		return x.MongodbExplain
	}
	return nil
}

func (x *StartServiceActionResponse) GetPtMongodbSummary() *StartPTMongoDBSummaryActionResult {
	if x, ok := x.GetAction().(*StartServiceActionResponse_PtMongodbSummary); ok {
		return x.PtMongodbSummary
	}
	return nil
}

func (x *StartServiceActionResponse) GetPtMysqlSummary() *StartPTMySQLSummaryActionResult {
	if x, ok := x.GetAction().(*StartServiceActionResponse_PtMysqlSummary); ok {
		return x.PtMysqlSummary
	}
	return nil
}

func (x *StartServiceActionResponse) GetPtPostgresSummary() *StartPTPgSummaryActionResult {
	if x, ok := x.GetAction().(*StartServiceActionResponse_PtPostgresSummary); ok {
		return x.PtPostgresSummary
	}
	return nil
}

type isStartServiceActionResponse_Action interface {
	isStartServiceActionResponse_Action()
}

type StartServiceActionResponse_MysqlExplain struct {
	MysqlExplain *StartMySQLExplainActionResult `protobuf:"bytes,1,opt,name=mysql_explain,json=mysqlExplain,proto3,oneof"`
}

type StartServiceActionResponse_MysqlExplainJson struct {
	MysqlExplainJson *StartMySQLExplainJSONActionResult `protobuf:"bytes,2,opt,name=mysql_explain_json,json=mysqlExplainJson,proto3,oneof"`
}

type StartServiceActionResponse_MysqlExplainTraditionalJson struct {
	MysqlExplainTraditionalJson *StartMySQLExplainTraditionalJSONActionResult `protobuf:"bytes,3,opt,name=mysql_explain_traditional_json,json=mysqlExplainTraditionalJson,proto3,oneof"`
}

type StartServiceActionResponse_MysqlShowIndex struct {
	MysqlShowIndex *StartMySQLShowIndexActionResult `protobuf:"bytes,4,opt,name=mysql_show_index,json=mysqlShowIndex,proto3,oneof"`
}

type StartServiceActionResponse_MysqlShowCreateTable struct {
	MysqlShowCreateTable *StartMySQLShowCreateTableActionResult `protobuf:"bytes,5,opt,name=mysql_show_create_table,json=mysqlShowCreateTable,proto3,oneof"`
}

type StartServiceActionResponse_MysqlShowTableStatus struct {
	MysqlShowTableStatus *StartMySQLShowTableStatusActionResult `protobuf:"bytes,6,opt,name=mysql_show_table_status,json=mysqlShowTableStatus,proto3,oneof"`
}

type StartServiceActionResponse_PostgresqlShowCreateTable struct {
	PostgresqlShowCreateTable *StartPostgreSQLShowCreateTableActionResult `protobuf:"bytes,7,opt,name=postgresql_show_create_table,json=postgresqlShowCreateTable,proto3,oneof"`
}

type StartServiceActionResponse_PostgresqlShowIndex struct {
	PostgresqlShowIndex *StartPostgreSQLShowIndexActionResult `protobuf:"bytes,8,opt,name=postgresql_show_index,json=postgresqlShowIndex,proto3,oneof"`
}

type StartServiceActionResponse_MongodbExplain struct {
	MongodbExplain *StartMongoDBExplainActionResult `protobuf:"bytes,9,opt,name=mongodb_explain,json=mongodbExplain,proto3,oneof"`
}

type StartServiceActionResponse_PtMongodbSummary struct {
	PtMongodbSummary *StartPTMongoDBSummaryActionResult `protobuf:"bytes,10,opt,name=pt_mongodb_summary,json=ptMongodbSummary,proto3,oneof"`
}

type StartServiceActionResponse_PtMysqlSummary struct {
	PtMysqlSummary *StartPTMySQLSummaryActionResult `protobuf:"bytes,11,opt,name=pt_mysql_summary,json=ptMysqlSummary,proto3,oneof"`
}

type StartServiceActionResponse_PtPostgresSummary struct {
	PtPostgresSummary *StartPTPgSummaryActionResult `protobuf:"bytes,12,opt,name=pt_postgres_summary,json=ptPostgresSummary,proto3,oneof"`
}

func (*StartServiceActionResponse_MysqlExplain) isStartServiceActionResponse_Action() {}

func (*StartServiceActionResponse_MysqlExplainJson) isStartServiceActionResponse_Action() {}

func (*StartServiceActionResponse_MysqlExplainTraditionalJson) isStartServiceActionResponse_Action() {
}

func (*StartServiceActionResponse_MysqlShowIndex) isStartServiceActionResponse_Action() {}

func (*StartServiceActionResponse_MysqlShowCreateTable) isStartServiceActionResponse_Action() {}

func (*StartServiceActionResponse_MysqlShowTableStatus) isStartServiceActionResponse_Action() {}

func (*StartServiceActionResponse_PostgresqlShowCreateTable) isStartServiceActionResponse_Action() {}

func (*StartServiceActionResponse_PostgresqlShowIndex) isStartServiceActionResponse_Action() {}

func (*StartServiceActionResponse_MongodbExplain) isStartServiceActionResponse_Action() {}

func (*StartServiceActionResponse_PtMongodbSummary) isStartServiceActionResponse_Action() {}

func (*StartServiceActionResponse_PtMysqlSummary) isStartServiceActionResponse_Action() {}

func (*StartServiceActionResponse_PtPostgresSummary) isStartServiceActionResponse_Action() {}

var File_actions_v1_actions_proto protoreflect.FileDescriptor

var file_actions_v1_actions_proto_rawDesc = []byte{
	0x0a, 0x18, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x38, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x94, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d,
	0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xc4,
	0x01, 0x0a, 0x1d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x45, 0x78, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x1d, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x79,
	0x53, 0x51, 0x4c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x21, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d,
	0x79, 0x53, 0x51, 0x4c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4a, 0x53, 0x4f, 0x4e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x70,
	0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65,
	0x22, 0x62, 0x0a, 0x21, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x45, 0x78,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4a, 0x53, 0x4f, 0x4e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0xd3, 0x01, 0x0a, 0x2c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x79,
	0x53, 0x51, 0x4c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4a, 0x53, 0x4f, 0x4e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0c, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0x6d, 0x0a, 0x2c, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x54,
	0x72, 0x61, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4a, 0x53, 0x4f, 0x4e, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x25, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x22, 0x66, 0x0a, 0x25, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53,
	0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb5, 0x01, 0x0a, 0x25, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a,
	0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73,
	0x65, 0x22, 0x66, 0x0a, 0x25, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53,
	0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x1f, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a,
	0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x26, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0x60, 0x0a, 0x1f, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70,
	0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xba, 0x01,
	0x0a, 0x2a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51,
	0x4c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0c,
	0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0x6b, 0x0a, 0x2a, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f,
	0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb4, 0x01, 0x0a, 0x24, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x22, 0x65,
	0x0a, 0x24, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51,
	0x4c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x1f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d,
	0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x22, 0x60, 0x0a, 0x1f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x67, 0x6f,
	0x44, 0x42, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x1c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x54, 0x50,
	0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x1c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x54,
	0x50, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x21, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x54, 0x4d,
	0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x21, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x54, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c,
	0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x62,
	0x0a, 0x1f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x54, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x64, 0x22, 0x60, 0x0a, 0x1f, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x54, 0x4d, 0x79, 0x53,
	0x51, 0x4c, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x1b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x54, 0x53,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x5d,
	0x0a, 0x1c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x54, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x70,
	0x6d, 0x6d, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6d, 0x6d, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a,
	0x13, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xcf, 0x09, 0x0a, 0x19, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x50, 0x0a, 0x0d, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x45,
	0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x45, 0x78, 0x70, 0x6c, 0x61,
	0x69, 0x6e, 0x12, 0x5d, 0x0a, 0x12, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4a, 0x53, 0x4f,
	0x4e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52,
	0x10, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4a, 0x73, 0x6f,
	0x6e, 0x12, 0x7f, 0x0a, 0x1e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x61,
	0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x6a,
	0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x79, 0x53, 0x51,
	0x4c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x4a, 0x53, 0x4f, 0x4e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x1b, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x45, 0x78, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4a, 0x73,
	0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x10, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x77,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d,
	0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x79, 0x73,
	0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x6a, 0x0a, 0x17, 0x6d,
	0x79, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d,
	0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48,
	0x00, 0x52, 0x14, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x6d, 0x79, 0x73, 0x71, 0x6c,
	0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c,
	0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x14, 0x6d,
	0x79, 0x73, 0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x75, 0x0a, 0x1a, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48,
	0x00, 0x52, 0x17, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x62, 0x0a, 0x13, 0x70, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x11, 0x70, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x56,
	0x0a, 0x0f, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44,
	0x42, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x45,
	0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x5d, 0x0a, 0x12, 0x70, 0x74, 0x5f, 0x6d, 0x6f, 0x6e,
	0x67, 0x6f, 0x64, 0x62, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x54, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x48, 0x00, 0x52, 0x10, 0x70, 0x74, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x57, 0x0a, 0x10, 0x70, 0x74, 0x5f, 0x6d, 0x79, 0x73, 0x71,
	0x6c, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x50, 0x54, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x0e,
	0x70, 0x74, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x5a,
	0x0a, 0x13, 0x70, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x54,
	0x50, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x11, 0x70, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd8, 0x09, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0d, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x65, 0x78, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x79, 0x53,
	0x51, 0x4c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x45, 0x78,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x5d, 0x0a, 0x12, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x65,
	0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x4a, 0x53, 0x4f, 0x4e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x10, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x7f, 0x0a, 0x1e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x65, 0x78,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d,
	0x79, 0x53, 0x51, 0x4c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4a, 0x53, 0x4f, 0x4e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x1b, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x45,
	0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x10, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0e,
	0x6d, 0x79, 0x73, 0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x6a,
	0x0a, 0x17, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x14, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x6a, 0x0a, 0x17, 0x6d, 0x79,
	0x73, 0x71, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x79,
	0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x14, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x79, 0x0a, 0x1c, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x19, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x66, 0x0a, 0x15, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f,
	0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x13, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c,
	0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x56, 0x0a, 0x0f, 0x6d, 0x6f, 0x6e,
	0x67, 0x6f, 0x64, 0x62, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x45, 0x78, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48,
	0x00, 0x52, 0x0e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x12, 0x5d, 0x0a, 0x12, 0x70, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x5f,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x50, 0x54, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x10,
	0x70, 0x74, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x57, 0x0a, 0x10, 0x70, 0x74, 0x5f, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x54, 0x4d,
	0x79, 0x53, 0x51, 0x4c, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x74, 0x4d, 0x79, 0x73,
	0x71, 0x6c, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x5a, 0x0a, 0x13, 0x70, 0x74, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x54, 0x50, 0x67, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x11, 0x70, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x42, 0x08, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2a,
	0xb3, 0x03, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x17, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x59, 0x53, 0x51, 0x4c,
	0x5f, 0x45, 0x58, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x27, 0x0a, 0x23, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f,
	0x53, 0x48, 0x4f, 0x57, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x53, 0x48, 0x4f, 0x57, 0x5f, 0x54, 0x41,
	0x42, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x10, 0x03, 0x12, 0x20, 0x0a, 0x1c,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x59, 0x53, 0x51,
	0x4c, 0x5f, 0x53, 0x48, 0x4f, 0x57, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x04, 0x12, 0x2c,
	0x0a, 0x28, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f,
	0x53, 0x54, 0x47, 0x52, 0x45, 0x53, 0x51, 0x4c, 0x5f, 0x53, 0x48, 0x4f, 0x57, 0x5f, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x25, 0x0a, 0x21,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x54,
	0x47, 0x52, 0x45, 0x53, 0x51, 0x4c, 0x5f, 0x53, 0x48, 0x4f, 0x57, 0x5f, 0x49, 0x4e, 0x44, 0x45,
	0x58, 0x10, 0x06, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x4f, 0x4e, 0x47, 0x4f, 0x44, 0x42, 0x5f, 0x45, 0x58, 0x50, 0x4c, 0x41,
	0x49, 0x4e, 0x10, 0x07, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x50, 0x54, 0x5f, 0x53, 0x55, 0x4d, 0x4d, 0x41, 0x52, 0x59, 0x10, 0x08,
	0x12, 0x20, 0x0a, 0x1c, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x50, 0x54, 0x5f, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x53, 0x55, 0x4d, 0x4d, 0x41, 0x52, 0x59,
	0x10, 0x09, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x50, 0x54, 0x5f, 0x50, 0x47, 0x5f, 0x53, 0x55, 0x4d, 0x4d, 0x41, 0x52, 0x59, 0x10,
	0x0a, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x54, 0x5f, 0x4d, 0x4f, 0x4e, 0x47, 0x4f, 0x44, 0x42, 0x5f, 0x53, 0x55, 0x4d, 0x4d,
	0x41, 0x52, 0x59, 0x10, 0x0b, 0x32, 0xf1, 0x05, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x52, 0x92, 0x41, 0x30, 0x12, 0x0a, 0x47, 0x65, 0x74, 0x20, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x22, 0x47, 0x65, 0x74, 0x73, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x67, 0x69, 0x76, 0x65, 0x6e,
	0x20, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x7b, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0xc3, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x92,
	0x41, 0x32, 0x12, 0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x61, 0x20, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x20, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x18, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x73, 0x20, 0x61, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a, 0x01, 0x2a, 0x22, 0x1e, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0xd9, 0x01,
	0x0a, 0x14, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x54, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x50, 0x54, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x50, 0x54, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6e, 0x92, 0x41, 0x45, 0x12, 0x19,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x20, 0x27, 0x50, 0x54, 0x20, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x27, 0x20, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x28, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x73, 0x20, 0x27, 0x50, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x20, 0x54, 0x6f, 0x6f, 0x6c, 0x6b,
	0x69, 0x74, 0x20, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x27, 0x20, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x9d, 0x01, 0x0a, 0x0c, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4a, 0x92,
	0x41, 0x24, 0x12, 0x10, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x20, 0x61, 0x6e, 0x20, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x10, 0x53, 0x74, 0x6f, 0x70, 0x73, 0x20, 0x61, 0x6e, 0x20, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22,
	0x18, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x3a, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x98, 0x01, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61,
	0x2f, 0x70, 0x6d, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x76, 0x31, 0x3b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x76, 0x31, 0xa2, 0x02, 0x03,
	0x41, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x56, 0x31,
	0xca, 0x02, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x16,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_actions_v1_actions_proto_rawDescOnce sync.Once
	file_actions_v1_actions_proto_rawDescData = file_actions_v1_actions_proto_rawDesc
)

func file_actions_v1_actions_proto_rawDescGZIP() []byte {
	file_actions_v1_actions_proto_rawDescOnce.Do(func() {
		file_actions_v1_actions_proto_rawDescData = protoimpl.X.CompressGZIP(file_actions_v1_actions_proto_rawDescData)
	})
	return file_actions_v1_actions_proto_rawDescData
}

var (
	file_actions_v1_actions_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_actions_v1_actions_proto_msgTypes  = make([]protoimpl.MessageInfo, 32)
	file_actions_v1_actions_proto_goTypes   = []any{
		(ActionType)(0),                                      // 0: actions.v1.ActionType
		(*GetActionRequest)(nil),                             // 1: actions.v1.GetActionRequest
		(*GetActionResponse)(nil),                            // 2: actions.v1.GetActionResponse
		(*StartMySQLExplainActionParams)(nil),                // 3: actions.v1.StartMySQLExplainActionParams
		(*StartMySQLExplainActionResult)(nil),                // 4: actions.v1.StartMySQLExplainActionResult
		(*StartMySQLExplainJSONActionParams)(nil),            // 5: actions.v1.StartMySQLExplainJSONActionParams
		(*StartMySQLExplainJSONActionResult)(nil),            // 6: actions.v1.StartMySQLExplainJSONActionResult
		(*StartMySQLExplainTraditionalJSONActionParams)(nil), // 7: actions.v1.StartMySQLExplainTraditionalJSONActionParams
		(*StartMySQLExplainTraditionalJSONActionResult)(nil), // 8: actions.v1.StartMySQLExplainTraditionalJSONActionResult
		(*StartMySQLShowCreateTableActionParams)(nil),        // 9: actions.v1.StartMySQLShowCreateTableActionParams
		(*StartMySQLShowCreateTableActionResult)(nil),        // 10: actions.v1.StartMySQLShowCreateTableActionResult
		(*StartMySQLShowTableStatusActionParams)(nil),        // 11: actions.v1.StartMySQLShowTableStatusActionParams
		(*StartMySQLShowTableStatusActionResult)(nil),        // 12: actions.v1.StartMySQLShowTableStatusActionResult
		(*StartMySQLShowIndexActionParams)(nil),              // 13: actions.v1.StartMySQLShowIndexActionParams
		(*StartMySQLShowIndexActionResult)(nil),              // 14: actions.v1.StartMySQLShowIndexActionResult
		(*StartPostgreSQLShowCreateTableActionParams)(nil),   // 15: actions.v1.StartPostgreSQLShowCreateTableActionParams
		(*StartPostgreSQLShowCreateTableActionResult)(nil),   // 16: actions.v1.StartPostgreSQLShowCreateTableActionResult
		(*StartPostgreSQLShowIndexActionParams)(nil),         // 17: actions.v1.StartPostgreSQLShowIndexActionParams
		(*StartPostgreSQLShowIndexActionResult)(nil),         // 18: actions.v1.StartPostgreSQLShowIndexActionResult
		(*StartMongoDBExplainActionParams)(nil),              // 19: actions.v1.StartMongoDBExplainActionParams
		(*StartMongoDBExplainActionResult)(nil),              // 20: actions.v1.StartMongoDBExplainActionResult
		(*StartPTPgSummaryActionParams)(nil),                 // 21: actions.v1.StartPTPgSummaryActionParams
		(*StartPTPgSummaryActionResult)(nil),                 // 22: actions.v1.StartPTPgSummaryActionResult
		(*StartPTMongoDBSummaryActionParams)(nil),            // 23: actions.v1.StartPTMongoDBSummaryActionParams
		(*StartPTMongoDBSummaryActionResult)(nil),            // 24: actions.v1.StartPTMongoDBSummaryActionResult
		(*StartPTMySQLSummaryActionParams)(nil),              // 25: actions.v1.StartPTMySQLSummaryActionParams
		(*StartPTMySQLSummaryActionResult)(nil),              // 26: actions.v1.StartPTMySQLSummaryActionResult
		(*StartPTSummaryActionRequest)(nil),                  // 27: actions.v1.StartPTSummaryActionRequest
		(*StartPTSummaryActionResponse)(nil),                 // 28: actions.v1.StartPTSummaryActionResponse
		(*CancelActionRequest)(nil),                          // 29: actions.v1.CancelActionRequest
		(*CancelActionResponse)(nil),                         // 30: actions.v1.CancelActionResponse
		(*StartServiceActionRequest)(nil),                    // 31: actions.v1.StartServiceActionRequest
		(*StartServiceActionResponse)(nil),                   // 32: actions.v1.StartServiceActionResponse
	}
)

var file_actions_v1_actions_proto_depIdxs = []int32{
	3,  // 0: actions.v1.StartServiceActionRequest.mysql_explain:type_name -> actions.v1.StartMySQLExplainActionParams
	5,  // 1: actions.v1.StartServiceActionRequest.mysql_explain_json:type_name -> actions.v1.StartMySQLExplainJSONActionParams
	7,  // 2: actions.v1.StartServiceActionRequest.mysql_explain_traditional_json:type_name -> actions.v1.StartMySQLExplainTraditionalJSONActionParams
	13, // 3: actions.v1.StartServiceActionRequest.mysql_show_index:type_name -> actions.v1.StartMySQLShowIndexActionParams
	9,  // 4: actions.v1.StartServiceActionRequest.mysql_show_create_table:type_name -> actions.v1.StartMySQLShowCreateTableActionParams
	11, // 5: actions.v1.StartServiceActionRequest.mysql_show_table_status:type_name -> actions.v1.StartMySQLShowTableStatusActionParams
	15, // 6: actions.v1.StartServiceActionRequest.postgres_show_create_table:type_name -> actions.v1.StartPostgreSQLShowCreateTableActionParams
	17, // 7: actions.v1.StartServiceActionRequest.postgres_show_index:type_name -> actions.v1.StartPostgreSQLShowIndexActionParams
	19, // 8: actions.v1.StartServiceActionRequest.mongodb_explain:type_name -> actions.v1.StartMongoDBExplainActionParams
	23, // 9: actions.v1.StartServiceActionRequest.pt_mongodb_summary:type_name -> actions.v1.StartPTMongoDBSummaryActionParams
	25, // 10: actions.v1.StartServiceActionRequest.pt_mysql_summary:type_name -> actions.v1.StartPTMySQLSummaryActionParams
	21, // 11: actions.v1.StartServiceActionRequest.pt_postgres_summary:type_name -> actions.v1.StartPTPgSummaryActionParams
	4,  // 12: actions.v1.StartServiceActionResponse.mysql_explain:type_name -> actions.v1.StartMySQLExplainActionResult
	6,  // 13: actions.v1.StartServiceActionResponse.mysql_explain_json:type_name -> actions.v1.StartMySQLExplainJSONActionResult
	8,  // 14: actions.v1.StartServiceActionResponse.mysql_explain_traditional_json:type_name -> actions.v1.StartMySQLExplainTraditionalJSONActionResult
	14, // 15: actions.v1.StartServiceActionResponse.mysql_show_index:type_name -> actions.v1.StartMySQLShowIndexActionResult
	10, // 16: actions.v1.StartServiceActionResponse.mysql_show_create_table:type_name -> actions.v1.StartMySQLShowCreateTableActionResult
	12, // 17: actions.v1.StartServiceActionResponse.mysql_show_table_status:type_name -> actions.v1.StartMySQLShowTableStatusActionResult
	16, // 18: actions.v1.StartServiceActionResponse.postgresql_show_create_table:type_name -> actions.v1.StartPostgreSQLShowCreateTableActionResult
	18, // 19: actions.v1.StartServiceActionResponse.postgresql_show_index:type_name -> actions.v1.StartPostgreSQLShowIndexActionResult
	20, // 20: actions.v1.StartServiceActionResponse.mongodb_explain:type_name -> actions.v1.StartMongoDBExplainActionResult
	24, // 21: actions.v1.StartServiceActionResponse.pt_mongodb_summary:type_name -> actions.v1.StartPTMongoDBSummaryActionResult
	26, // 22: actions.v1.StartServiceActionResponse.pt_mysql_summary:type_name -> actions.v1.StartPTMySQLSummaryActionResult
	22, // 23: actions.v1.StartServiceActionResponse.pt_postgres_summary:type_name -> actions.v1.StartPTPgSummaryActionResult
	1,  // 24: actions.v1.ActionsService.GetAction:input_type -> actions.v1.GetActionRequest
	31, // 25: actions.v1.ActionsService.StartServiceAction:input_type -> actions.v1.StartServiceActionRequest
	27, // 26: actions.v1.ActionsService.StartPTSummaryAction:input_type -> actions.v1.StartPTSummaryActionRequest
	29, // 27: actions.v1.ActionsService.CancelAction:input_type -> actions.v1.CancelActionRequest
	2,  // 28: actions.v1.ActionsService.GetAction:output_type -> actions.v1.GetActionResponse
	32, // 29: actions.v1.ActionsService.StartServiceAction:output_type -> actions.v1.StartServiceActionResponse
	28, // 30: actions.v1.ActionsService.StartPTSummaryAction:output_type -> actions.v1.StartPTSummaryActionResponse
	30, // 31: actions.v1.ActionsService.CancelAction:output_type -> actions.v1.CancelActionResponse
	28, // [28:32] is the sub-list for method output_type
	24, // [24:28] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_actions_v1_actions_proto_init() }
func file_actions_v1_actions_proto_init() {
	if File_actions_v1_actions_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_actions_v1_actions_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*StartMySQLExplainActionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*StartMySQLExplainActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*StartMySQLExplainJSONActionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*StartMySQLExplainJSONActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*StartMySQLExplainTraditionalJSONActionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*StartMySQLExplainTraditionalJSONActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*StartMySQLShowCreateTableActionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*StartMySQLShowCreateTableActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*StartMySQLShowTableStatusActionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*StartMySQLShowTableStatusActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*StartMySQLShowIndexActionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*StartMySQLShowIndexActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*StartPostgreSQLShowCreateTableActionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*StartPostgreSQLShowCreateTableActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*StartPostgreSQLShowIndexActionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*StartPostgreSQLShowIndexActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*StartMongoDBExplainActionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*StartMongoDBExplainActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*StartPTPgSummaryActionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*StartPTPgSummaryActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*StartPTMongoDBSummaryActionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*StartPTMongoDBSummaryActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*StartPTMySQLSummaryActionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*StartPTMySQLSummaryActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*StartPTSummaryActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*StartPTSummaryActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*CancelActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*CancelActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*StartServiceActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_actions_v1_actions_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*StartServiceActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_actions_v1_actions_proto_msgTypes[30].OneofWrappers = []any{
		(*StartServiceActionRequest_MysqlExplain)(nil),
		(*StartServiceActionRequest_MysqlExplainJson)(nil),
		(*StartServiceActionRequest_MysqlExplainTraditionalJson)(nil),
		(*StartServiceActionRequest_MysqlShowIndex)(nil),
		(*StartServiceActionRequest_MysqlShowCreateTable)(nil),
		(*StartServiceActionRequest_MysqlShowTableStatus)(nil),
		(*StartServiceActionRequest_PostgresShowCreateTable)(nil),
		(*StartServiceActionRequest_PostgresShowIndex)(nil),
		(*StartServiceActionRequest_MongodbExplain)(nil),
		(*StartServiceActionRequest_PtMongodbSummary)(nil),
		(*StartServiceActionRequest_PtMysqlSummary)(nil),
		(*StartServiceActionRequest_PtPostgresSummary)(nil),
	}
	file_actions_v1_actions_proto_msgTypes[31].OneofWrappers = []any{
		(*StartServiceActionResponse_MysqlExplain)(nil),
		(*StartServiceActionResponse_MysqlExplainJson)(nil),
		(*StartServiceActionResponse_MysqlExplainTraditionalJson)(nil),
		(*StartServiceActionResponse_MysqlShowIndex)(nil),
		(*StartServiceActionResponse_MysqlShowCreateTable)(nil),
		(*StartServiceActionResponse_MysqlShowTableStatus)(nil),
		(*StartServiceActionResponse_PostgresqlShowCreateTable)(nil),
		(*StartServiceActionResponse_PostgresqlShowIndex)(nil),
		(*StartServiceActionResponse_MongodbExplain)(nil),
		(*StartServiceActionResponse_PtMongodbSummary)(nil),
		(*StartServiceActionResponse_PtMysqlSummary)(nil),
		(*StartServiceActionResponse_PtPostgresSummary)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_actions_v1_actions_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_actions_v1_actions_proto_goTypes,
		DependencyIndexes: file_actions_v1_actions_proto_depIdxs,
		EnumInfos:         file_actions_v1_actions_proto_enumTypes,
		MessageInfos:      file_actions_v1_actions_proto_msgTypes,
	}.Build()
	File_actions_v1_actions_proto = out.File
	file_actions_v1_actions_proto_rawDesc = nil
	file_actions_v1_actions_proto_goTypes = nil
	file_actions_v1_actions_proto_depIdxs = nil
}
