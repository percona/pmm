// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: management/v1/agent.proto

package managementv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"

	v1 "github.com/percona/pmm/api/inventory/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UpdateSeverity int32

const (
	UpdateSeverity_UPDATE_SEVERITY_UNSPECIFIED UpdateSeverity = 0
	// The client version is newer than the server version.
	UpdateSeverity_UPDATE_SEVERITY_UNSUPPORTED UpdateSeverity = 1
	// The client version matches the server version.
	UpdateSeverity_UPDATE_SEVERITY_UP_TO_DATE UpdateSeverity = 2
	// The client's minor or patch version is older.
	UpdateSeverity_UPDATE_SEVERITY_REQUIRED UpdateSeverity = 3
	// The client's major version is older.
	UpdateSeverity_UPDATE_SEVERITY_CRITICAL UpdateSeverity = 4
)

// Enum value maps for UpdateSeverity.
var (
	UpdateSeverity_name = map[int32]string{
		0: "UPDATE_SEVERITY_UNSPECIFIED",
		1: "UPDATE_SEVERITY_UNSUPPORTED",
		2: "UPDATE_SEVERITY_UP_TO_DATE",
		3: "UPDATE_SEVERITY_REQUIRED",
		4: "UPDATE_SEVERITY_CRITICAL",
	}
	UpdateSeverity_value = map[string]int32{
		"UPDATE_SEVERITY_UNSPECIFIED": 0,
		"UPDATE_SEVERITY_UNSUPPORTED": 1,
		"UPDATE_SEVERITY_UP_TO_DATE":  2,
		"UPDATE_SEVERITY_REQUIRED":    3,
		"UPDATE_SEVERITY_CRITICAL":    4,
	}
)

func (x UpdateSeverity) Enum() *UpdateSeverity {
	p := new(UpdateSeverity)
	*p = x
	return p
}

func (x UpdateSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UpdateSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_management_v1_agent_proto_enumTypes[0].Descriptor()
}

func (UpdateSeverity) Type() protoreflect.EnumType {
	return &file_management_v1_agent_proto_enumTypes[0]
}

func (x UpdateSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UpdateSeverity.Descriptor instead.
func (UpdateSeverity) EnumDescriptor() ([]byte, []int) {
	return file_management_v1_agent_proto_rawDescGZIP(), []int{0}
}

type UniversalAgent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique agent identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// True if the agent password is set.
	IsAgentPasswordSet bool `protobuf:"varint,2,opt,name=is_agent_password_set,json=isAgentPasswordSet,proto3" json:"is_agent_password_set,omitempty"`
	// Agent type.
	AgentType string `protobuf:"bytes,3,opt,name=agent_type,json=agentType,proto3" json:"agent_type,omitempty"`
	// AWS Access Key.
	AwsAccessKey string `protobuf:"bytes,4,opt,name=aws_access_key,json=awsAccessKey,proto3" json:"aws_access_key,omitempty"`
	// True if AWS Secret Key is set.
	IsAwsSecretKeySet bool `protobuf:"varint,5,opt,name=is_aws_secret_key_set,json=isAwsSecretKeySet,proto3" json:"is_aws_secret_key_set,omitempty"`
	// Options used for connecting to Azure.
	AzureOptions *UniversalAgent_AzureOptions `protobuf:"bytes,6,opt,name=azure_options,json=azureOptions,proto3" json:"azure_options,omitempty"`
	// Creation timestamp.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,8,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,9,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// List of disabled collector names.
	DisabledCollectors []string `protobuf:"bytes,10,rep,name=disabled_collectors,json=disabledCollectors,proto3" json:"disabled_collectors,omitempty"`
	// Listen port for scraping metrics.
	ListenPort uint32 `protobuf:"varint,11,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	// Log level for exporter.
	LogLevel v1.LogLevel `protobuf:"varint,12,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Limit query length in QAN.
	MaxQueryLength int32 `protobuf:"varint,13,opt,name=max_query_length,json=maxQueryLength,proto3" json:"max_query_length,omitempty"`
	// Limit query log size in QAN.
	MaxQueryLogSize int64 `protobuf:"varint,14,opt,name=max_query_log_size,json=maxQueryLogSize,proto3" json:"max_query_log_size,omitempty"`
	// Path under which metrics are exposed, used to generate URI.
	MetricsPath string `protobuf:"bytes,15,opt,name=metrics_path,json=metricsPath,proto3" json:"metrics_path,omitempty"`
	// Scheme to generate URI to exporter metrics endpoints.
	MetricsScheme string `protobuf:"bytes,16,opt,name=metrics_scheme,json=metricsScheme,proto3" json:"metrics_scheme,omitempty"`
	// TLS and other options for connecting to MongoDB.
	MongoDbOptions *UniversalAgent_MongoDBOptions `protobuf:"bytes,17,opt,name=mongo_db_options,json=mongoDbOptions,proto3" json:"mongo_db_options,omitempty"`
	// TLS and other options for connecting to MySQL.
	MysqlOptions *UniversalAgent_MySQLOptions `protobuf:"bytes,18,opt,name=mysql_options,json=mysqlOptions,proto3" json:"mysql_options,omitempty"`
	// A unique node identifier.
	NodeId string `protobuf:"bytes,19,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// True if password for connecting the agent to the database is set.
	IsPasswordSet bool `protobuf:"varint,20,opt,name=is_password_set,json=isPasswordSet,proto3" json:"is_password_set,omitempty"`
	// The pmm-agent identifier.
	PmmAgentId string `protobuf:"bytes,21,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// TLS options for connecting to PostgreSQL.
	PostgresqlOptions *UniversalAgent_PostgreSQLOptions `protobuf:"bytes,22,opt,name=postgresql_options,json=postgresqlOptions,proto3" json:"postgresql_options,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,23,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// True if exporter uses push metrics mode.
	PushMetrics bool `protobuf:"varint,24,opt,name=push_metrics,json=pushMetrics,proto3" json:"push_metrics,omitempty"`
	// True if query examples are disabled.
	QueryExamplesDisabled bool `protobuf:"varint,25,opt,name=query_examples_disabled,json=queryExamplesDisabled,proto3" json:"query_examples_disabled,omitempty"`
	// True if query comments parsing is disabled.
	CommentsParsingDisabled bool `protobuf:"varint,26,opt,name=comments_parsing_disabled,json=commentsParsingDisabled,proto3" json:"comments_parsing_disabled,omitempty"`
	// True if RDS basic metrics are disdabled.
	RdsBasicMetricsDisabled bool `protobuf:"varint,27,opt,name=rds_basic_metrics_disabled,json=rdsBasicMetricsDisabled,proto3" json:"rds_basic_metrics_disabled,omitempty"`
	// True if RDS enhanced metrics are disdabled.
	RdsEnhancedMetricsDisabled bool `protobuf:"varint,28,opt,name=rds_enhanced_metrics_disabled,json=rdsEnhancedMetricsDisabled,proto3" json:"rds_enhanced_metrics_disabled,omitempty"`
	// Node identifier where this instance runs.
	RunsOnNodeId string `protobuf:"bytes,29,opt,name=runs_on_node_id,json=runsOnNodeId,proto3" json:"runs_on_node_id,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,30,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Actual Agent status.
	Status string `protobuf:"bytes,31,opt,name=status,proto3" json:"status,omitempty"`
	// Last known table count.
	TableCount int32 `protobuf:"varint,32,opt,name=table_count,json=tableCount,proto3" json:"table_count,omitempty"`
	// Tablestats group collectors are disabled if there are more than that number of tables.
	// 0 means tablestats group collectors are always enabled (no limit).
	// Negative value means tablestats group collectors are always disabled.
	TableCountTablestatsGroupLimit int32 `protobuf:"varint,33,opt,name=table_count_tablestats_group_limit,json=tableCountTablestatsGroupLimit,proto3" json:"table_count_tablestats_group_limit,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,34,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,35,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// HTTP basic auth username for collecting metrics.
	Username string `protobuf:"bytes,36,opt,name=username,proto3" json:"username,omitempty"`
	// Last update timestamp.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,37,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Agent version.
	Version string `protobuf:"bytes,38,opt,name=version,proto3" json:"version,omitempty"`
	// True if Agent is running and connected to pmm-managed.
	IsConnected bool `protobuf:"varint,39,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
	// True if an exporter agent is exposed on all host addresses.
	ExposeExporter bool `protobuf:"varint,40,opt,name=expose_exporter,json=exposeExporter,proto3" json:"expose_exporter,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UniversalAgent) Reset() {
	*x = UniversalAgent{}
	mi := &file_management_v1_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UniversalAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniversalAgent) ProtoMessage() {}

func (x *UniversalAgent) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniversalAgent.ProtoReflect.Descriptor instead.
func (*UniversalAgent) Descriptor() ([]byte, []int) {
	return file_management_v1_agent_proto_rawDescGZIP(), []int{0}
}

func (x *UniversalAgent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *UniversalAgent) GetIsAgentPasswordSet() bool {
	if x != nil {
		return x.IsAgentPasswordSet
	}
	return false
}

func (x *UniversalAgent) GetAgentType() string {
	if x != nil {
		return x.AgentType
	}
	return ""
}

func (x *UniversalAgent) GetAwsAccessKey() string {
	if x != nil {
		return x.AwsAccessKey
	}
	return ""
}

func (x *UniversalAgent) GetIsAwsSecretKeySet() bool {
	if x != nil {
		return x.IsAwsSecretKeySet
	}
	return false
}

func (x *UniversalAgent) GetAzureOptions() *UniversalAgent_AzureOptions {
	if x != nil {
		return x.AzureOptions
	}
	return nil
}

func (x *UniversalAgent) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UniversalAgent) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *UniversalAgent) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *UniversalAgent) GetDisabledCollectors() []string {
	if x != nil {
		return x.DisabledCollectors
	}
	return nil
}

func (x *UniversalAgent) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *UniversalAgent) GetLogLevel() v1.LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return v1.LogLevel(0)
}

func (x *UniversalAgent) GetMaxQueryLength() int32 {
	if x != nil {
		return x.MaxQueryLength
	}
	return 0
}

func (x *UniversalAgent) GetMaxQueryLogSize() int64 {
	if x != nil {
		return x.MaxQueryLogSize
	}
	return 0
}

func (x *UniversalAgent) GetMetricsPath() string {
	if x != nil {
		return x.MetricsPath
	}
	return ""
}

func (x *UniversalAgent) GetMetricsScheme() string {
	if x != nil {
		return x.MetricsScheme
	}
	return ""
}

func (x *UniversalAgent) GetMongoDbOptions() *UniversalAgent_MongoDBOptions {
	if x != nil {
		return x.MongoDbOptions
	}
	return nil
}

func (x *UniversalAgent) GetMysqlOptions() *UniversalAgent_MySQLOptions {
	if x != nil {
		return x.MysqlOptions
	}
	return nil
}

func (x *UniversalAgent) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *UniversalAgent) GetIsPasswordSet() bool {
	if x != nil {
		return x.IsPasswordSet
	}
	return false
}

func (x *UniversalAgent) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *UniversalAgent) GetPostgresqlOptions() *UniversalAgent_PostgreSQLOptions {
	if x != nil {
		return x.PostgresqlOptions
	}
	return nil
}

func (x *UniversalAgent) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *UniversalAgent) GetPushMetrics() bool {
	if x != nil {
		return x.PushMetrics
	}
	return false
}

func (x *UniversalAgent) GetQueryExamplesDisabled() bool {
	if x != nil {
		return x.QueryExamplesDisabled
	}
	return false
}

func (x *UniversalAgent) GetCommentsParsingDisabled() bool {
	if x != nil {
		return x.CommentsParsingDisabled
	}
	return false
}

func (x *UniversalAgent) GetRdsBasicMetricsDisabled() bool {
	if x != nil {
		return x.RdsBasicMetricsDisabled
	}
	return false
}

func (x *UniversalAgent) GetRdsEnhancedMetricsDisabled() bool {
	if x != nil {
		return x.RdsEnhancedMetricsDisabled
	}
	return false
}

func (x *UniversalAgent) GetRunsOnNodeId() string {
	if x != nil {
		return x.RunsOnNodeId
	}
	return ""
}

func (x *UniversalAgent) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *UniversalAgent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UniversalAgent) GetTableCount() int32 {
	if x != nil {
		return x.TableCount
	}
	return 0
}

func (x *UniversalAgent) GetTableCountTablestatsGroupLimit() int32 {
	if x != nil {
		return x.TableCountTablestatsGroupLimit
	}
	return 0
}

func (x *UniversalAgent) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *UniversalAgent) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *UniversalAgent) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UniversalAgent) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UniversalAgent) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UniversalAgent) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

func (x *UniversalAgent) GetExposeExporter() bool {
	if x != nil {
		return x.ExposeExporter
	}
	return false
}

type ListAgentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Return only Agents that relate to a specific ServiceID.
	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Return only Agents that relate to a specific NodeID.
	NodeId        string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAgentsRequest) Reset() {
	*x = ListAgentsRequest{}
	mi := &file_management_v1_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAgentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentsRequest) ProtoMessage() {}

func (x *ListAgentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentsRequest.ProtoReflect.Descriptor instead.
func (*ListAgentsRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_agent_proto_rawDescGZIP(), []int{1}
}

func (x *ListAgentsRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ListAgentsRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type ListAgentsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of Agents.
	Agents        []*UniversalAgent `protobuf:"bytes,1,rep,name=agents,proto3" json:"agents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAgentsResponse) Reset() {
	*x = ListAgentsResponse{}
	mi := &file_management_v1_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAgentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentsResponse) ProtoMessage() {}

func (x *ListAgentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentsResponse.ProtoReflect.Descriptor instead.
func (*ListAgentsResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_agent_proto_rawDescGZIP(), []int{2}
}

func (x *ListAgentsResponse) GetAgents() []*UniversalAgent {
	if x != nil {
		return x.Agents
	}
	return nil
}

type AgentVersions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Agent ID.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// Agent version.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Node name where the agent runs.
	NodeName string `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Update severity.
	Severity      UpdateSeverity `protobuf:"varint,4,opt,name=severity,proto3,enum=management.v1.UpdateSeverity" json:"severity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentVersions) Reset() {
	*x = AgentVersions{}
	mi := &file_management_v1_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentVersions) ProtoMessage() {}

func (x *AgentVersions) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentVersions.ProtoReflect.Descriptor instead.
func (*AgentVersions) Descriptor() ([]byte, []int) {
	return file_management_v1_agent_proto_rawDescGZIP(), []int{3}
}

func (x *AgentVersions) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AgentVersions) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AgentVersions) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *AgentVersions) GetSeverity() UpdateSeverity {
	if x != nil {
		return x.Severity
	}
	return UpdateSeverity_UPDATE_SEVERITY_UNSPECIFIED
}

type ListAgentVersionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAgentVersionsRequest) Reset() {
	*x = ListAgentVersionsRequest{}
	mi := &file_management_v1_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAgentVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentVersionsRequest) ProtoMessage() {}

func (x *ListAgentVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentVersionsRequest.ProtoReflect.Descriptor instead.
func (*ListAgentVersionsRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_agent_proto_rawDescGZIP(), []int{4}
}

type ListAgentVersionsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of Agent versions.
	AgentVersions []*AgentVersions `protobuf:"bytes,1,rep,name=agent_versions,json=agentVersions,proto3" json:"agent_versions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAgentVersionsResponse) Reset() {
	*x = ListAgentVersionsResponse{}
	mi := &file_management_v1_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAgentVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentVersionsResponse) ProtoMessage() {}

func (x *ListAgentVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentVersionsResponse.ProtoReflect.Descriptor instead.
func (*ListAgentVersionsResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_agent_proto_rawDescGZIP(), []int{5}
}

func (x *ListAgentVersionsResponse) GetAgentVersions() []*AgentVersions {
	if x != nil {
		return x.AgentVersions
	}
	return nil
}

type UniversalAgent_MySQLOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// True if TLS key is set.
	IsTlsKeySet bool `protobuf:"varint,1,opt,name=is_tls_key_set,json=isTlsKeySet,proto3" json:"is_tls_key_set,omitempty"`
	// Extra DSN parameters for MySQL connection.
	ExtraDsnParams map[string]string `protobuf:"bytes,2,rep,name=extra_dsn_params,json=extraDsnParams,proto3" json:"extra_dsn_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UniversalAgent_MySQLOptions) Reset() {
	*x = UniversalAgent_MySQLOptions{}
	mi := &file_management_v1_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UniversalAgent_MySQLOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniversalAgent_MySQLOptions) ProtoMessage() {}

func (x *UniversalAgent_MySQLOptions) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniversalAgent_MySQLOptions.ProtoReflect.Descriptor instead.
func (*UniversalAgent_MySQLOptions) Descriptor() ([]byte, []int) {
	return file_management_v1_agent_proto_rawDescGZIP(), []int{0, 0}
}

func (x *UniversalAgent_MySQLOptions) GetIsTlsKeySet() bool {
	if x != nil {
		return x.IsTlsKeySet
	}
	return false
}

func (x *UniversalAgent_MySQLOptions) GetExtraDsnParams() map[string]string {
	if x != nil {
		return x.ExtraDsnParams
	}
	return nil
}

type UniversalAgent_AzureOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Azure client ID.
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// True if Azure client secret is set.
	IsClientSecretSet bool `protobuf:"varint,2,opt,name=is_client_secret_set,json=isClientSecretSet,proto3" json:"is_client_secret_set,omitempty"`
	// Azure resource group.
	ResourceGroup string `protobuf:"bytes,3,opt,name=resource_group,json=resourceGroup,proto3" json:"resource_group,omitempty"`
	// Azure subscription ID.
	SubscriptionId string `protobuf:"bytes,4,opt,name=subscription_id,json=subscriptionId,proto3" json:"subscription_id,omitempty"`
	// Azure tenant ID.
	TenantId      string `protobuf:"bytes,5,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UniversalAgent_AzureOptions) Reset() {
	*x = UniversalAgent_AzureOptions{}
	mi := &file_management_v1_agent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UniversalAgent_AzureOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniversalAgent_AzureOptions) ProtoMessage() {}

func (x *UniversalAgent_AzureOptions) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_agent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniversalAgent_AzureOptions.ProtoReflect.Descriptor instead.
func (*UniversalAgent_AzureOptions) Descriptor() ([]byte, []int) {
	return file_management_v1_agent_proto_rawDescGZIP(), []int{0, 1}
}

func (x *UniversalAgent_AzureOptions) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UniversalAgent_AzureOptions) GetIsClientSecretSet() bool {
	if x != nil {
		return x.IsClientSecretSet
	}
	return false
}

func (x *UniversalAgent_AzureOptions) GetResourceGroup() string {
	if x != nil {
		return x.ResourceGroup
	}
	return ""
}

func (x *UniversalAgent_AzureOptions) GetSubscriptionId() string {
	if x != nil {
		return x.SubscriptionId
	}
	return ""
}

func (x *UniversalAgent_AzureOptions) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type UniversalAgent_MongoDBOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// True if TLS certificate is set.
	IsTlsCertificateKeySet bool `protobuf:"varint,1,opt,name=is_tls_certificate_key_set,json=isTlsCertificateKeySet,proto3" json:"is_tls_certificate_key_set,omitempty"`
	// True if TLS certificate file password is set.
	IsTlsCertificateKeyFilePasswordSet bool `protobuf:"varint,2,opt,name=is_tls_certificate_key_file_password_set,json=isTlsCertificateKeyFilePasswordSet,proto3" json:"is_tls_certificate_key_file_password_set,omitempty"`
	// MongoDB auth mechanism.
	AuthenticationMechanism string `protobuf:"bytes,3,opt,name=authentication_mechanism,json=authenticationMechanism,proto3" json:"authentication_mechanism,omitempty"`
	// MongoDB auth database.
	AuthenticationDatabase string `protobuf:"bytes,4,opt,name=authentication_database,json=authenticationDatabase,proto3" json:"authentication_database,omitempty"`
	// MongoDB stats collections.
	StatsCollections []string `protobuf:"bytes,5,rep,name=stats_collections,json=statsCollections,proto3" json:"stats_collections,omitempty"`
	// MongoDB collections limit.
	CollectionsLimit int32 `protobuf:"varint,6,opt,name=collections_limit,json=collectionsLimit,proto3" json:"collections_limit,omitempty"`
	// True if all collectors are enabled.
	EnableAllCollectors bool `protobuf:"varint,7,opt,name=enable_all_collectors,json=enableAllCollectors,proto3" json:"enable_all_collectors,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *UniversalAgent_MongoDBOptions) Reset() {
	*x = UniversalAgent_MongoDBOptions{}
	mi := &file_management_v1_agent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UniversalAgent_MongoDBOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniversalAgent_MongoDBOptions) ProtoMessage() {}

func (x *UniversalAgent_MongoDBOptions) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_agent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniversalAgent_MongoDBOptions.ProtoReflect.Descriptor instead.
func (*UniversalAgent_MongoDBOptions) Descriptor() ([]byte, []int) {
	return file_management_v1_agent_proto_rawDescGZIP(), []int{0, 2}
}

func (x *UniversalAgent_MongoDBOptions) GetIsTlsCertificateKeySet() bool {
	if x != nil {
		return x.IsTlsCertificateKeySet
	}
	return false
}

func (x *UniversalAgent_MongoDBOptions) GetIsTlsCertificateKeyFilePasswordSet() bool {
	if x != nil {
		return x.IsTlsCertificateKeyFilePasswordSet
	}
	return false
}

func (x *UniversalAgent_MongoDBOptions) GetAuthenticationMechanism() string {
	if x != nil {
		return x.AuthenticationMechanism
	}
	return ""
}

func (x *UniversalAgent_MongoDBOptions) GetAuthenticationDatabase() string {
	if x != nil {
		return x.AuthenticationDatabase
	}
	return ""
}

func (x *UniversalAgent_MongoDBOptions) GetStatsCollections() []string {
	if x != nil {
		return x.StatsCollections
	}
	return nil
}

func (x *UniversalAgent_MongoDBOptions) GetCollectionsLimit() int32 {
	if x != nil {
		return x.CollectionsLimit
	}
	return 0
}

func (x *UniversalAgent_MongoDBOptions) GetEnableAllCollectors() bool {
	if x != nil {
		return x.EnableAllCollectors
	}
	return false
}

type UniversalAgent_PostgreSQLOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// True if TLS key is set.
	IsSslKeySet bool `protobuf:"varint,1,opt,name=is_ssl_key_set,json=isSslKeySet,proto3" json:"is_ssl_key_set,omitempty"`
	// Limit of databases for auto-discovery.
	AutoDiscoveryLimit int32 `protobuf:"varint,2,opt,name=auto_discovery_limit,json=autoDiscoveryLimit,proto3" json:"auto_discovery_limit,omitempty"`
	// Maximum number of connections from exporter to PostgreSQL instance.
	MaxExporterConnections int32 `protobuf:"varint,3,opt,name=max_exporter_connections,json=maxExporterConnections,proto3" json:"max_exporter_connections,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *UniversalAgent_PostgreSQLOptions) Reset() {
	*x = UniversalAgent_PostgreSQLOptions{}
	mi := &file_management_v1_agent_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UniversalAgent_PostgreSQLOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniversalAgent_PostgreSQLOptions) ProtoMessage() {}

func (x *UniversalAgent_PostgreSQLOptions) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_agent_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniversalAgent_PostgreSQLOptions.ProtoReflect.Descriptor instead.
func (*UniversalAgent_PostgreSQLOptions) Descriptor() ([]byte, []int) {
	return file_management_v1_agent_proto_rawDescGZIP(), []int{0, 3}
}

func (x *UniversalAgent_PostgreSQLOptions) GetIsSslKeySet() bool {
	if x != nil {
		return x.IsSslKeySet
	}
	return false
}

func (x *UniversalAgent_PostgreSQLOptions) GetAutoDiscoveryLimit() int32 {
	if x != nil {
		return x.AutoDiscoveryLimit
	}
	return 0
}

func (x *UniversalAgent_PostgreSQLOptions) GetMaxExporterConnections() int32 {
	if x != nil {
		return x.MaxExporterConnections
	}
	return 0
}

var File_management_v1_agent_proto protoreflect.FileDescriptor

const file_management_v1_agent_proto_rawDesc = "" +
	"\n" +
	"\x19management/v1/agent.proto\x12\rmanagement.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cinventory/v1/log_level.proto\"\xaa\x17\n" +
	"\x0eUniversalAgent\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x121\n" +
	"\x15is_agent_password_set\x18\x02 \x01(\bR\x12isAgentPasswordSet\x12\x1d\n" +
	"\n" +
	"agent_type\x18\x03 \x01(\tR\tagentType\x12$\n" +
	"\x0eaws_access_key\x18\x04 \x01(\tR\fawsAccessKey\x120\n" +
	"\x15is_aws_secret_key_set\x18\x05 \x01(\bR\x11isAwsSecretKeySet\x12O\n" +
	"\razure_options\x18\x06 \x01(\v2*.management.v1.UniversalAgent.AzureOptionsR\fazureOptions\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12T\n" +
	"\rcustom_labels\x18\b \x03(\v2/.management.v1.UniversalAgent.CustomLabelsEntryR\fcustomLabels\x12\x1a\n" +
	"\bdisabled\x18\t \x01(\bR\bdisabled\x12/\n" +
	"\x13disabled_collectors\x18\n" +
	" \x03(\tR\x12disabledCollectors\x12\x1f\n" +
	"\vlisten_port\x18\v \x01(\rR\n" +
	"listenPort\x123\n" +
	"\tlog_level\x18\f \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x12(\n" +
	"\x10max_query_length\x18\r \x01(\x05R\x0emaxQueryLength\x12+\n" +
	"\x12max_query_log_size\x18\x0e \x01(\x03R\x0fmaxQueryLogSize\x12!\n" +
	"\fmetrics_path\x18\x0f \x01(\tR\vmetricsPath\x12%\n" +
	"\x0emetrics_scheme\x18\x10 \x01(\tR\rmetricsScheme\x12V\n" +
	"\x10mongo_db_options\x18\x11 \x01(\v2,.management.v1.UniversalAgent.MongoDBOptionsR\x0emongoDbOptions\x12O\n" +
	"\rmysql_options\x18\x12 \x01(\v2*.management.v1.UniversalAgent.MySQLOptionsR\fmysqlOptions\x12\x17\n" +
	"\anode_id\x18\x13 \x01(\tR\x06nodeId\x12&\n" +
	"\x0fis_password_set\x18\x14 \x01(\bR\risPasswordSet\x12 \n" +
	"\fpmm_agent_id\x18\x15 \x01(\tR\n" +
	"pmmAgentId\x12^\n" +
	"\x12postgresql_options\x18\x16 \x01(\v2/.management.v1.UniversalAgent.PostgreSQLOptionsR\x11postgresqlOptions\x12*\n" +
	"\x11process_exec_path\x18\x17 \x01(\tR\x0fprocessExecPath\x12!\n" +
	"\fpush_metrics\x18\x18 \x01(\bR\vpushMetrics\x126\n" +
	"\x17query_examples_disabled\x18\x19 \x01(\bR\x15queryExamplesDisabled\x12:\n" +
	"\x19comments_parsing_disabled\x18\x1a \x01(\bR\x17commentsParsingDisabled\x12;\n" +
	"\x1ards_basic_metrics_disabled\x18\x1b \x01(\bR\x17rdsBasicMetricsDisabled\x12A\n" +
	"\x1drds_enhanced_metrics_disabled\x18\x1c \x01(\bR\x1ardsEnhancedMetricsDisabled\x12%\n" +
	"\x0fruns_on_node_id\x18\x1d \x01(\tR\frunsOnNodeId\x12\x1d\n" +
	"\n" +
	"service_id\x18\x1e \x01(\tR\tserviceId\x12\x16\n" +
	"\x06status\x18\x1f \x01(\tR\x06status\x12\x1f\n" +
	"\vtable_count\x18  \x01(\x05R\n" +
	"tableCount\x12J\n" +
	"\"table_count_tablestats_group_limit\x18! \x01(\x05R\x1etableCountTablestatsGroupLimit\x12\x10\n" +
	"\x03tls\x18\" \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18# \x01(\bR\rtlsSkipVerify\x12\x1a\n" +
	"\busername\x18$ \x01(\tR\busername\x129\n" +
	"\n" +
	"updated_at\x18% \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x18\n" +
	"\aversion\x18& \x01(\tR\aversion\x12!\n" +
	"\fis_connected\x18' \x01(\bR\visConnected\x12'\n" +
	"\x0fexpose_exporter\x18( \x01(\bR\x0eexposeExporter\x1a\xe0\x01\n" +
	"\fMySQLOptions\x12#\n" +
	"\x0eis_tls_key_set\x18\x01 \x01(\bR\visTlsKeySet\x12h\n" +
	"\x10extra_dsn_params\x18\x02 \x03(\v2>.management.v1.UniversalAgent.MySQLOptions.ExtraDsnParamsEntryR\x0eextraDsnParams\x1aA\n" +
	"\x13ExtraDsnParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a\xc9\x01\n" +
	"\fAzureOptions\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12/\n" +
	"\x14is_client_secret_set\x18\x02 \x01(\bR\x11isClientSecretSet\x12%\n" +
	"\x0eresource_group\x18\x03 \x01(\tR\rresourceGroup\x12'\n" +
	"\x0fsubscription_id\x18\x04 \x01(\tR\x0esubscriptionId\x12\x1b\n" +
	"\ttenant_id\x18\x05 \x01(\tR\btenantId\x1a\xa4\x03\n" +
	"\x0eMongoDBOptions\x12:\n" +
	"\x1ais_tls_certificate_key_set\x18\x01 \x01(\bR\x16isTlsCertificateKeySet\x12T\n" +
	"(is_tls_certificate_key_file_password_set\x18\x02 \x01(\bR\"isTlsCertificateKeyFilePasswordSet\x129\n" +
	"\x18authentication_mechanism\x18\x03 \x01(\tR\x17authenticationMechanism\x127\n" +
	"\x17authentication_database\x18\x04 \x01(\tR\x16authenticationDatabase\x12+\n" +
	"\x11stats_collections\x18\x05 \x03(\tR\x10statsCollections\x12+\n" +
	"\x11collections_limit\x18\x06 \x01(\x05R\x10collectionsLimit\x122\n" +
	"\x15enable_all_collectors\x18\a \x01(\bR\x13enableAllCollectors\x1a\xa4\x01\n" +
	"\x11PostgreSQLOptions\x12#\n" +
	"\x0eis_ssl_key_set\x18\x01 \x01(\bR\visSslKeySet\x120\n" +
	"\x14auto_discovery_limit\x18\x02 \x01(\x05R\x12autoDiscoveryLimit\x128\n" +
	"\x18max_exporter_connections\x18\x03 \x01(\x05R\x16maxExporterConnections\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"K\n" +
	"\x11ListAgentsRequest\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\"K\n" +
	"\x12ListAgentsResponse\x125\n" +
	"\x06agents\x18\x01 \x03(\v2\x1d.management.v1.UniversalAgentR\x06agents\"\x9c\x01\n" +
	"\rAgentVersions\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12\x1b\n" +
	"\tnode_name\x18\x03 \x01(\tR\bnodeName\x129\n" +
	"\bseverity\x18\x04 \x01(\x0e2\x1d.management.v1.UpdateSeverityR\bseverity\"\x1a\n" +
	"\x18ListAgentVersionsRequest\"`\n" +
	"\x19ListAgentVersionsResponse\x12C\n" +
	"\x0eagent_versions\x18\x01 \x03(\v2\x1c.management.v1.AgentVersionsR\ragentVersions*\xae\x01\n" +
	"\x0eUpdateSeverity\x12\x1f\n" +
	"\x1bUPDATE_SEVERITY_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bUPDATE_SEVERITY_UNSUPPORTED\x10\x01\x12\x1e\n" +
	"\x1aUPDATE_SEVERITY_UP_TO_DATE\x10\x02\x12\x1c\n" +
	"\x18UPDATE_SEVERITY_REQUIRED\x10\x03\x12\x1c\n" +
	"\x18UPDATE_SEVERITY_CRITICAL\x10\x04B\xab\x01\n" +
	"\x11com.management.v1B\n" +
	"AgentProtoP\x01Z5github.com/percona/pmm/api/management/v1;managementv1\xa2\x02\x03MXX\xaa\x02\rManagement.V1\xca\x02\rManagement\\V1\xe2\x02\x19Management\\V1\\GPBMetadata\xea\x02\x0eManagement::V1b\x06proto3"

var (
	file_management_v1_agent_proto_rawDescOnce sync.Once
	file_management_v1_agent_proto_rawDescData []byte
)

func file_management_v1_agent_proto_rawDescGZIP() []byte {
	file_management_v1_agent_proto_rawDescOnce.Do(func() {
		file_management_v1_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_management_v1_agent_proto_rawDesc), len(file_management_v1_agent_proto_rawDesc)))
	})
	return file_management_v1_agent_proto_rawDescData
}

var (
	file_management_v1_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_management_v1_agent_proto_msgTypes  = make([]protoimpl.MessageInfo, 12)
	file_management_v1_agent_proto_goTypes   = []any{
		(UpdateSeverity)(0),                      // 0: management.v1.UpdateSeverity
		(*UniversalAgent)(nil),                   // 1: management.v1.UniversalAgent
		(*ListAgentsRequest)(nil),                // 2: management.v1.ListAgentsRequest
		(*ListAgentsResponse)(nil),               // 3: management.v1.ListAgentsResponse
		(*AgentVersions)(nil),                    // 4: management.v1.AgentVersions
		(*ListAgentVersionsRequest)(nil),         // 5: management.v1.ListAgentVersionsRequest
		(*ListAgentVersionsResponse)(nil),        // 6: management.v1.ListAgentVersionsResponse
		(*UniversalAgent_MySQLOptions)(nil),      // 7: management.v1.UniversalAgent.MySQLOptions
		(*UniversalAgent_AzureOptions)(nil),      // 8: management.v1.UniversalAgent.AzureOptions
		(*UniversalAgent_MongoDBOptions)(nil),    // 9: management.v1.UniversalAgent.MongoDBOptions
		(*UniversalAgent_PostgreSQLOptions)(nil), // 10: management.v1.UniversalAgent.PostgreSQLOptions
		nil,                                      // 11: management.v1.UniversalAgent.CustomLabelsEntry
		nil,                                      // 12: management.v1.UniversalAgent.MySQLOptions.ExtraDsnParamsEntry
		(*timestamppb.Timestamp)(nil),            // 13: google.protobuf.Timestamp
		(v1.LogLevel)(0),                         // 14: inventory.v1.LogLevel
	}
)

var file_management_v1_agent_proto_depIdxs = []int32{
	8,  // 0: management.v1.UniversalAgent.azure_options:type_name -> management.v1.UniversalAgent.AzureOptions
	13, // 1: management.v1.UniversalAgent.created_at:type_name -> google.protobuf.Timestamp
	11, // 2: management.v1.UniversalAgent.custom_labels:type_name -> management.v1.UniversalAgent.CustomLabelsEntry
	14, // 3: management.v1.UniversalAgent.log_level:type_name -> inventory.v1.LogLevel
	9,  // 4: management.v1.UniversalAgent.mongo_db_options:type_name -> management.v1.UniversalAgent.MongoDBOptions
	7,  // 5: management.v1.UniversalAgent.mysql_options:type_name -> management.v1.UniversalAgent.MySQLOptions
	10, // 6: management.v1.UniversalAgent.postgresql_options:type_name -> management.v1.UniversalAgent.PostgreSQLOptions
	13, // 7: management.v1.UniversalAgent.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 8: management.v1.ListAgentsResponse.agents:type_name -> management.v1.UniversalAgent
	0,  // 9: management.v1.AgentVersions.severity:type_name -> management.v1.UpdateSeverity
	4,  // 10: management.v1.ListAgentVersionsResponse.agent_versions:type_name -> management.v1.AgentVersions
	12, // 11: management.v1.UniversalAgent.MySQLOptions.extra_dsn_params:type_name -> management.v1.UniversalAgent.MySQLOptions.ExtraDsnParamsEntry
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_management_v1_agent_proto_init() }
func file_management_v1_agent_proto_init() {
	if File_management_v1_agent_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_management_v1_agent_proto_rawDesc), len(file_management_v1_agent_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_management_v1_agent_proto_goTypes,
		DependencyIndexes: file_management_v1_agent_proto_depIdxs,
		EnumInfos:         file_management_v1_agent_proto_enumTypes,
		MessageInfos:      file_management_v1_agent_proto_msgTypes,
	}.Build()
	File_management_v1_agent_proto = out.File
	file_management_v1_agent_proto_goTypes = nil
	file_management_v1_agent_proto_depIdxs = nil
}
