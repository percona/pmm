syntax = "proto3";

package management.v1;

import "google/api/annotations.proto";
import "inventory/v1/agents.proto";
import "inventory/v1/log_level.proto";
import "inventory/v1/services.proto";
import "management/v1/metrics.proto";
import "management/v1/node.proto";
import "validate/validate.proto";

// Add MySQL

message AddMySQLRequest {
  // Node identifier on which a service is been running.
  // Exactly one of these parameters should be present: node_id, node_name, add_node.
  string node_id = 1;
  // Node name on which a service is been running.
  // Exactly one of these parameters should be present: node_id, node_name, add_node.
  string node_name = 2;
  // Create a new Node with those parameters.
  // Exactly one of these parameters should be present: node_id, node_name, add_node.
  AddNodeParams add_node = 3;
  // Unique across all Services user-defined name. Required.
  string service_name = 4 [(validate.rules).string.min_len = 1];
  // Node and Service access address (DNS name or IP).
  // Address (and port) or socket is required.
  string address = 5;
  // Service Access port.
  // Port is required when the address present.
  uint32 port = 6;
  // Service Access socket.
  // Address (and port) or socket is required.
  string socket = 7;
  // The "pmm-agent" identifier which should run agents. Required.
  string pmm_agent_id = 8 [(validate.rules).string.min_len = 1];
  // Environment name.
  string environment = 9;
  // Cluster name.
  string cluster = 10;
  // Replication set name.
  string replication_set = 11;
  // MySQL username for scraping metrics.
  string username = 12 [(validate.rules).string.min_len = 1];
  // MySQL password for scraping metrics.
  string password = 13;
  // If true, adds qan-mysql-perfschema-agent for provided service.
  bool qan_mysql_perfschema = 14;
  // If true, adds qan-mysql-slowlog-agent for provided service.
  bool qan_mysql_slowlog = 15;
  // Custom user-assigned labels for Service.
  map<string, string> custom_labels = 16;
  // Skip connection check.
  bool skip_connection_check = 17;
  // Disable parsing comments from queries and showing them in QAN.
  bool disable_comments_parsing = 18;
  // Limit query length in QAN (default: server-defined; -1: no limit).
  int32 max_query_length = 19;
  // Disable query examples.
  bool disable_query_examples = 20;
  // If qan-mysql-slowlog-agent is added, slowlog file is rotated at this size if > 0.
  // If zero, server's default value is used.
  // Use negative value to disable rotation.
  int64 max_slowlog_file_size = 21;
  // Use TLS for database connections.
  bool tls = 22;
  // Skip TLS certificate and hostname validation.
  bool tls_skip_verify = 23;
  // Certificate Authority certificate chain.
  string tls_ca = 24;
  // Client certificate.
  string tls_cert = 25;
  // Password for decrypting tls_cert.
  string tls_key = 26;
  // Tablestats group collectors will be disabled if there are more than that number of tables.
  // If zero, server's default value is used.
  // Use negative value to disable them.
  int32 tablestats_group_table_limit = 27;
  // Defines metrics flow model for this exporter.
  // Metrics could be pushed to the server with vmagent,
  // pulled by the server, or the server could choose behavior automatically.
  MetricsMode metrics_mode = 28;
  // List of collector names to disable in this exporter.
  repeated string disable_collectors = 29;
  // Custom password for exporter endpoint /metrics.
  string agent_password = 30;
  // Exporter log level
  inventory.v1.LogLevel log_level = 31;
  // Optionally expose the exporter process on all public interfaces
  bool expose_exporter = 32;
}

message AddMySQLResponse {
  inventory.v1.MySQLService service = 1;
  inventory.v1.MySQLdExporter mysqld_exporter = 2;
  inventory.v1.QANMySQLPerfSchemaAgent qan_mysql_perfschema = 3;
  inventory.v1.QANMySQLSlowlogAgent qan_mysql_slowlog = 4;
  // Actual table count at the moment of adding.
  int32 table_count = 5;
}
