syntax = "proto3";

package management.v1;

import "google/api/annotations.proto";
import "inventory/v1/agents.proto";
import "inventory/v1/log_level.proto";
import "inventory/v1/services.proto";
import "management/v1/metrics.proto";
import "management/v1/service.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

// Add ProxySQL

message AddProxySQLRequest {
  // Node identifier on which a service is been running.
  // Exactly one of these parameters should be present: node_id, node_name, add_node.
  string node_id = 1;
  // Node name on which a service is been running.
  // Exactly one of these parameters should be present: node_id, node_name, add_node.
  string node_name = 2;
  // Create a new Node with those parameters.
  // Exactly one of these parameters should be present: node_id, node_name, add_node.
  AddNodeParams add_node = 3;
  // Unique across all Services user-defined name. Required.
  string service_name = 4 [(validate.rules).string.min_len = 1];
  // Node and Service access address (DNS name or IP).
  // Address (and port) or socket is required.
  string address = 5;
  // Service Access port.
  // Port is required when the address present.
  uint32 port = 6;
  // Service Access socket.
  // Address (and port) or socket is required.
  string socket = 7;
  // The "pmm-agent" identifier which should run agents. Required.
  string pmm_agent_id = 8 [(validate.rules).string.min_len = 1];
  // Environment name.
  string environment = 9;
  // Cluster name.
  string cluster = 10;
  // Replication set name.
  string replication_set = 11;
  // ProxySQL username for scraping metrics.
  string username = 12 [(validate.rules).string.min_len = 1];
  // ProxySQL password for scraping metrics.
  string password = 13;
  // Custom user-assigned labels for Service.
  map<string, string> custom_labels = 14;
  // Skip connection check.
  bool skip_connection_check = 15;
  // Use TLS for database connections.
  bool tls = 16;
  // Skip TLS certificate and hostname validation.
  bool tls_skip_verify = 17;
  // Defines metrics flow model for this exporter.
  // Metrics could be pushed to the server with vmagent,
  // pulled by the server, or the server could choose behavior automatically.
  MetricsMode metrics_mode = 19;
  // List of collector names to disable in this exporter.
  repeated string disable_collectors = 20;
  // Custom password for exporter endpoint /metrics.
  string agent_password = 21;
  // Exporter log level
  inventory.v1.LogLevel log_level = 22;
  // Optionally expose the exporter process on all public interfaces
  bool expose_exporter = 23;
}

message AddProxySQLResponse {
  inventory.v1.ProxySQLService service = 1;
  inventory.v1.ProxySQLExporter proxysql_exporter = 2;
}

// ProxySQL service provides public Management API methods for ProxySQL Service.
service ProxySQLService {
  // AddProxySQL adds ProxySQL Service and starts several Agents.
  // It automatically adds a service to inventory, which is running on provided "node_id",
  // then adds "proxysql_exporter" with provided "pmm_agent_id" and other parameters.
  rpc AddProxySQL(AddProxySQLRequest) returns (AddProxySQLResponse) {
    option (google.api.http) = {
      post: "/v1/management/ProxySQL/Add"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Add ProxySQL"
      description: "Adds ProxySQL Service and starts several Agents. It automatically adds a service to inventory, which is running on provided \"node_id\", then adds \"proxysql_exporter\" with provided \"pmm_agent_id\" and other parameters."
    };
  }
}
