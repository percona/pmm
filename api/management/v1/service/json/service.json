{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "PMM Management Service API",
    "version": "v1beta1"
  },
  "paths": {
    "/v1/management/Agent/List": {
      "post": {
        "description": "Returns a filtered list of Agents.",
        "tags": [
          "ManagementV1Beta1Service"
        ],
        "summary": "List Agents",
        "operationId": "ListAgents",
        "parameters": [
          {
            "description": "Only one of the parameters below must be set.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Only one of the parameters below must be set.",
              "type": "object",
              "properties": {
                "node_id": {
                  "description": "Return only Agents that relate to a specific NodeID.",
                  "type": "string",
                  "x-order": 1
                },
                "service_id": {
                  "description": "Return only Agents that relate to a specific ServiceID.",
                  "type": "string",
                  "x-order": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "agents": {
                  "description": "List of Agents.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "agent_id": {
                        "description": "Unique agent identifier.",
                        "type": "string",
                        "x-order": 0
                      },
                      "agent_type": {
                        "description": "Agent type.",
                        "type": "string",
                        "x-order": 2
                      },
                      "aws_access_key": {
                        "description": "AWS Access Key.",
                        "type": "string",
                        "x-order": 3
                      },
                      "azure_options": {
                        "type": "object",
                        "properties": {
                          "client_id": {
                            "description": "Azure client ID.",
                            "type": "string",
                            "x-order": 0
                          },
                          "is_client_secret_set": {
                            "description": "True if Azure client secret is set.",
                            "type": "boolean",
                            "x-order": 1
                          },
                          "resource_group": {
                            "description": "Azure resource group.",
                            "type": "string",
                            "x-order": 2
                          },
                          "subscription_id": {
                            "description": "Azure subscription ID.",
                            "type": "string",
                            "x-order": 3
                          },
                          "tenant_id": {
                            "description": "Azure tenant ID.",
                            "type": "string",
                            "x-order": 4
                          }
                        },
                        "x-order": 5
                      },
                      "comments_parsing_disabled": {
                        "description": "True if query comments parsing is disabled.",
                        "type": "boolean",
                        "x-order": 25
                      },
                      "created_at": {
                        "description": "Creation timestamp.",
                        "type": "string",
                        "format": "date-time",
                        "x-order": 6
                      },
                      "custom_labels": {
                        "description": "Custom user-assigned labels.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-order": 7
                      },
                      "disabled": {
                        "description": "Desired Agent status: enabled (false) or disabled (true).",
                        "type": "boolean",
                        "x-order": 8
                      },
                      "disabled_collectors": {
                        "description": "List of disabled collector names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-order": 9
                      },
                      "expose_exporter": {
                        "description": "True if an exporter agent is exposed on all host addresses.",
                        "type": "boolean",
                        "x-order": 39
                      },
                      "is_agent_password_set": {
                        "description": "True if the agent password is set.",
                        "type": "boolean",
                        "x-order": 1
                      },
                      "is_aws_secret_key_set": {
                        "description": "True if AWS Secret Key is set.",
                        "type": "boolean",
                        "x-order": 4
                      },
                      "is_connected": {
                        "description": "True if Agent is running and connected to pmm-managed.",
                        "type": "boolean",
                        "x-order": 38
                      },
                      "is_password_set": {
                        "description": "True if password for connecting the agent to the database is set.",
                        "type": "boolean",
                        "x-order": 19
                      },
                      "listen_port": {
                        "description": "Listen port for scraping metrics.",
                        "type": "integer",
                        "format": "int64",
                        "x-order": 10
                      },
                      "log_level": {
                        "description": "Log level for exporter.",
                        "type": "string",
                        "x-order": 11
                      },
                      "max_query_length": {
                        "description": "Limit query length in QAN.",
                        "type": "integer",
                        "format": "int32",
                        "x-order": 12
                      },
                      "max_query_log_size": {
                        "description": "Limit query log size in QAN.",
                        "type": "string",
                        "format": "int64",
                        "x-order": 13
                      },
                      "metrics_path": {
                        "description": "Path under which metrics are exposed, used to generate URI.",
                        "type": "string",
                        "x-order": 14
                      },
                      "metrics_scheme": {
                        "description": "Scheme to generate URI to exporter metrics endpoints.",
                        "type": "string",
                        "x-order": 15
                      },
                      "mongo_db_options": {
                        "type": "object",
                        "properties": {
                          "authentication_database": {
                            "description": "MongoDB auth database.",
                            "type": "string",
                            "x-order": 3
                          },
                          "authentication_mechanism": {
                            "description": "MongoDB auth mechanism.",
                            "type": "string",
                            "x-order": 2
                          },
                          "collections_limit": {
                            "description": "MongoDB collections limit.",
                            "type": "integer",
                            "format": "int32",
                            "x-order": 5
                          },
                          "enable_all_collectors": {
                            "description": "True if all collectors are enabled.",
                            "type": "boolean",
                            "x-order": 6
                          },
                          "is_tls_certificate_key_file_password_set": {
                            "description": "True if TLS certificate file password is set.",
                            "type": "boolean",
                            "x-order": 1
                          },
                          "is_tls_certificate_key_set": {
                            "description": "True if TLS certificate is set.",
                            "type": "boolean",
                            "x-order": 0
                          },
                          "stats_collections": {
                            "description": "MongoDB stats collections.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-order": 4
                          }
                        },
                        "x-order": 16
                      },
                      "mysql_options": {
                        "type": "object",
                        "properties": {
                          "is_tls_key_set": {
                            "description": "True if TLS key is set.",
                            "type": "boolean",
                            "x-order": 0
                          }
                        },
                        "x-order": 17
                      },
                      "node_id": {
                        "description": "A unique node identifier.",
                        "type": "string",
                        "x-order": 18
                      },
                      "pmm_agent_id": {
                        "description": "The pmm-agent identifier.",
                        "type": "string",
                        "x-order": 20
                      },
                      "postgresql_options": {
                        "type": "object",
                        "properties": {
                          "auto_discovery_limit": {
                            "description": "Limit of databases for auto-discovery.",
                            "type": "integer",
                            "format": "int32",
                            "x-order": 1
                          },
                          "is_ssl_key_set": {
                            "description": "True if TLS key is set.",
                            "type": "boolean",
                            "x-order": 0
                          }
                        },
                        "x-order": 21
                      },
                      "process_exec_path": {
                        "description": "Path to exec process.",
                        "type": "string",
                        "x-order": 22
                      },
                      "push_metrics": {
                        "description": "True if exporter uses push metrics mode.",
                        "type": "boolean",
                        "x-order": 23
                      },
                      "query_examples_disabled": {
                        "description": "True if query examples are disabled.",
                        "type": "boolean",
                        "x-order": 24
                      },
                      "rds_basic_metrics_disabled": {
                        "description": "True if RDS basic metrics are disdabled.",
                        "type": "boolean",
                        "x-order": 26
                      },
                      "rds_enhanced_metrics_disabled": {
                        "description": "True if RDS enhanced metrics are disdabled.",
                        "type": "boolean",
                        "x-order": 27
                      },
                      "runs_on_node_id": {
                        "description": "Node identifier where this instance runs.",
                        "type": "string",
                        "x-order": 28
                      },
                      "service_id": {
                        "description": "Service identifier.",
                        "type": "string",
                        "x-order": 29
                      },
                      "status": {
                        "description": "Actual Agent status.",
                        "type": "string",
                        "x-order": 30
                      },
                      "table_count": {
                        "description": "Last known table count.",
                        "type": "integer",
                        "format": "int32",
                        "x-order": 31
                      },
                      "table_count_tablestats_group_limit": {
                        "description": "Tablestats group collectors are disabled if there are more than that number of tables.\n0 means tablestats group collectors are always enabled (no limit).\nNegative value means tablestats group collectors are always disabled.",
                        "type": "integer",
                        "format": "int32",
                        "x-order": 32
                      },
                      "tls": {
                        "description": "Use TLS for database connections.",
                        "type": "boolean",
                        "x-order": 33
                      },
                      "tls_skip_verify": {
                        "description": "Skip TLS certificate and hostname validation.",
                        "type": "boolean",
                        "x-order": 34
                      },
                      "updated_at": {
                        "description": "Last update timestamp.",
                        "type": "string",
                        "format": "date-time",
                        "x-order": 36
                      },
                      "username": {
                        "description": "HTTP basic auth username for collecting metrics.",
                        "type": "string",
                        "x-order": 35
                      },
                      "version": {
                        "description": "Agent version.",
                        "type": "string",
                        "x-order": 37
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/AzureDatabase/Add": {
      "post": {
        "description": "Adds an Azure Database instance.",
        "tags": [
          "ManagementV1Beta1Service"
        ],
        "summary": "Add Azure Database",
        "operationId": "AddAzureDatabase",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "description": "Address used to connect to it.",
                  "type": "string",
                  "x-order": 4
                },
                "az": {
                  "description": "Azure database availability zone.",
                  "type": "string",
                  "x-order": 1
                },
                "azure_client_id": {
                  "description": "Azure client ID.",
                  "type": "string",
                  "x-order": 11
                },
                "azure_client_secret": {
                  "description": "Azure client secret.",
                  "type": "string",
                  "x-order": 12
                },
                "azure_database_exporter": {
                  "description": "If true, adds azure_database_exporter.",
                  "type": "boolean",
                  "x-order": 16
                },
                "azure_resource_group": {
                  "description": "Azure resource group.",
                  "type": "string",
                  "x-order": 15
                },
                "azure_subscription_id": {
                  "description": "Azure subscription ID.",
                  "type": "string",
                  "x-order": 14
                },
                "azure_tenant_id": {
                  "description": "Azure tanant ID.",
                  "type": "string",
                  "x-order": 13
                },
                "custom_labels": {
                  "description": "Custom user-assigned labels for Node and Service.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-order": 18
                },
                "disable_query_examples": {
                  "description": "Disable query examples.",
                  "type": "boolean",
                  "x-order": 22
                },
                "environment": {
                  "description": "Environment name.",
                  "type": "string",
                  "x-order": 8
                },
                "instance_id": {
                  "description": "Azure database instance ID.",
                  "type": "string",
                  "x-order": 2
                },
                "node_model": {
                  "description": "Represents a purchasable Stock Keeping Unit (SKU) under a product.\nhttps://docs.microsoft.com/en-us/partner-center/develop/product-resources#sku.",
                  "type": "string",
                  "x-order": 3
                },
                "node_name": {
                  "description": "Unique across all Nodes user-defined name. Defaults to Azure Database instance ID.",
                  "type": "string",
                  "x-order": 6
                },
                "password": {
                  "description": "Password for scraping metrics.",
                  "type": "string",
                  "x-order": 10
                },
                "port": {
                  "description": "Access port.",
                  "type": "integer",
                  "format": "int64",
                  "x-order": 5
                },
                "qan": {
                  "description": "If true, adds qan-mysql-perfschema-agent or qan-postgresql-pgstatements-agent.",
                  "type": "boolean",
                  "x-order": 17
                },
                "region": {
                  "description": "Azure database location.",
                  "type": "string",
                  "x-order": 0
                },
                "service_name": {
                  "description": "Unique across all Services user-defined name. Defaults to Azure Database instance ID.",
                  "type": "string",
                  "x-order": 7
                },
                "skip_connection_check": {
                  "description": "Skip connection check.",
                  "type": "boolean",
                  "x-order": 19
                },
                "tablestats_group_table_limit": {
                  "description": "Tablestats group collectors will be disabled if there are more than that number of tables.\nIf zero, server's default value is used.\nUse negative value to disable them.",
                  "type": "integer",
                  "format": "int32",
                  "x-order": 23
                },
                "tls": {
                  "description": "Use TLS for database connections.",
                  "type": "boolean",
                  "x-order": 20
                },
                "tls_skip_verify": {
                  "description": "Skip TLS certificate and hostname validation.",
                  "type": "boolean",
                  "x-order": 21
                },
                "type": {
                  "description": "DiscoverAzureDatabaseType describes supported Azure Database instance engines.\n\n - DISCOVER_AZURE_DATABASE_TYPE_MYSQL: MySQL type: microsoft.dbformysql or MariaDB type: microsoft.dbformariadb\n - DISCOVER_AZURE_DATABASE_TYPE_POSTGRESQL: PostgreSQL type: microsoft.dbformysql",
                  "type": "string",
                  "default": "DISCOVER_AZURE_DATABASE_TYPE_UNSPECIFIED",
                  "enum": [
                    "DISCOVER_AZURE_DATABASE_TYPE_UNSPECIFIED",
                    "DISCOVER_AZURE_DATABASE_TYPE_MYSQL",
                    "DISCOVER_AZURE_DATABASE_TYPE_POSTGRESQL"
                  ],
                  "x-order": 24
                },
                "username": {
                  "description": "Username for scraping metrics.",
                  "type": "string",
                  "x-order": 9
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/AzureDatabase/Discover": {
      "post": {
        "description": "Discovers Azure Database for MySQL, MariaDB and PostgreSQL Server instances.",
        "tags": [
          "ManagementV1Beta1Service"
        ],
        "summary": "Discover Azure Database",
        "operationId": "DiscoverAzureDatabase",
        "parameters": [
          {
            "description": "DiscoverAzureDatabaseRequest discover azure databases request.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "DiscoverAzureDatabaseRequest discover azure databases request.",
              "type": "object",
              "properties": {
                "azure_client_id": {
                  "description": "Azure client ID.",
                  "type": "string",
                  "x-order": 0
                },
                "azure_client_secret": {
                  "description": "Azure client secret.",
                  "type": "string",
                  "x-order": 1
                },
                "azure_subscription_id": {
                  "description": "Azure subscription ID.",
                  "type": "string",
                  "x-order": 3
                },
                "azure_tenant_id": {
                  "description": "Azure tanant ID.",
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "DiscoverAzureDatabaseResponse discover azure databases response.",
              "type": "object",
              "properties": {
                "azure_database_instance": {
                  "type": "array",
                  "items": {
                    "description": "DiscoverAzureDatabaseInstance models an unique Azure Database instance for the list of instances returned by Discovery.",
                    "type": "object",
                    "properties": {
                      "address": {
                        "description": "Address used to connect to it.",
                        "type": "string",
                        "x-order": 4
                      },
                      "az": {
                        "description": "Azure database availability zone.",
                        "type": "string",
                        "x-order": 8
                      },
                      "azure_resource_group": {
                        "description": "Azure Resource group.",
                        "type": "string",
                        "x-order": 5
                      },
                      "environment": {
                        "description": "Environment tag.",
                        "type": "string",
                        "x-order": 6
                      },
                      "instance_id": {
                        "description": "Azure database instance ID.",
                        "type": "string",
                        "x-order": 0
                      },
                      "node_model": {
                        "description": "Represents a purchasable Stock Keeping Unit (SKU) under a product.\nhttps://docs.microsoft.com/en-us/partner-center/develop/product-resources#sku.",
                        "type": "string",
                        "x-order": 9
                      },
                      "region": {
                        "description": "Azure database location.",
                        "type": "string",
                        "x-order": 1
                      },
                      "service_name": {
                        "description": "Azure database server name.",
                        "type": "string",
                        "x-order": 2
                      },
                      "type": {
                        "description": "DiscoverAzureDatabaseType describes supported Azure Database instance engines.\n\n - DISCOVER_AZURE_DATABASE_TYPE_MYSQL: MySQL type: microsoft.dbformysql or MariaDB type: microsoft.dbformariadb\n - DISCOVER_AZURE_DATABASE_TYPE_POSTGRESQL: PostgreSQL type: microsoft.dbformysql",
                        "type": "string",
                        "default": "DISCOVER_AZURE_DATABASE_TYPE_UNSPECIFIED",
                        "enum": [
                          "DISCOVER_AZURE_DATABASE_TYPE_UNSPECIFIED",
                          "DISCOVER_AZURE_DATABASE_TYPE_MYSQL",
                          "DISCOVER_AZURE_DATABASE_TYPE_POSTGRESQL"
                        ],
                        "x-order": 7
                      },
                      "username": {
                        "description": "Database username.",
                        "type": "string",
                        "x-order": 3
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Node/Get": {
      "post": {
        "description": "Returns a single Node by ID.",
        "tags": [
          "ManagementV1Beta1Service"
        ],
        "summary": "Get Node",
        "operationId": "GetNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "node_id": {
                  "description": "Unique Node identifier.",
                  "type": "string",
                  "x-order": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "node": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "Node address (DNS name or IP).",
                      "type": "string",
                      "x-order": 8
                    },
                    "agents": {
                      "description": "List of agents related to this node.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "agent_id": {
                            "description": "Unique Agent identifier.",
                            "type": "string",
                            "x-order": 0
                          },
                          "agent_type": {
                            "description": "Agent type.",
                            "type": "string",
                            "x-order": 1
                          },
                          "is_connected": {
                            "description": "True if Agent is running and connected to pmm-managed.",
                            "type": "boolean",
                            "x-order": 3
                          },
                          "status": {
                            "description": "Actual Agent status.",
                            "type": "string",
                            "x-order": 2
                          }
                        }
                      },
                      "x-order": 15
                    },
                    "az": {
                      "description": "Node availability zone.",
                      "type": "string",
                      "x-order": 10
                    },
                    "container_id": {
                      "description": "A node's unique docker container identifier.",
                      "type": "string",
                      "x-order": 6
                    },
                    "container_name": {
                      "description": "Container name.",
                      "type": "string",
                      "x-order": 7
                    },
                    "created_at": {
                      "description": "Creation timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "x-order": 12
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Node.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 11
                    },
                    "distro": {
                      "description": "Linux distribution name and version.",
                      "type": "string",
                      "x-order": 4
                    },
                    "machine_id": {
                      "description": "Linux machine-id.",
                      "type": "string",
                      "x-order": 3
                    },
                    "node_id": {
                      "description": "Unique Node identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "node_model": {
                      "description": "Node model.",
                      "type": "string",
                      "x-order": 5
                    },
                    "node_name": {
                      "description": "User-defined node name.",
                      "type": "string",
                      "x-order": 2
                    },
                    "node_type": {
                      "description": "Node type.",
                      "type": "string",
                      "x-order": 1
                    },
                    "region": {
                      "description": "Node region.",
                      "type": "string",
                      "x-order": 9
                    },
                    "services": {
                      "description": "List of services running on this node.",
                      "type": "array",
                      "items": {
                        "description": "Service represents a service running on a node.",
                        "type": "object",
                        "properties": {
                          "service_id": {
                            "description": "Unique Service identifier.",
                            "type": "string",
                            "x-order": 0
                          },
                          "service_name": {
                            "description": "Service name.",
                            "type": "string",
                            "x-order": 2
                          },
                          "service_type": {
                            "description": "Service type.",
                            "type": "string",
                            "x-order": 1
                          }
                        }
                      },
                      "x-order": 16
                    },
                    "status": {
                      "description": "Node status.\n\n - STATUS_UNSPECIFIED: Invalid status.\n - STATUS_UP: The node is up.\n - STATUS_DOWN: The node is down.\n - STATUS_UNKNOWN: The node's status cannot be known (e.g. there are no metrics yet).",
                      "type": "string",
                      "default": "STATUS_UNSPECIFIED",
                      "enum": [
                        "STATUS_UNSPECIFIED",
                        "STATUS_UP",
                        "STATUS_DOWN",
                        "STATUS_UNKNOWN"
                      ],
                      "x-order": 14
                    },
                    "updated_at": {
                      "description": "Last update timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "x-order": 13
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Node/List": {
      "post": {
        "description": "Returns a filtered list of Nodes.",
        "tags": [
          "ManagementV1Beta1Service"
        ],
        "summary": "List Nodes",
        "operationId": "ListNodes",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "node_type": {
                  "description": "NodeType describes supported Node types.",
                  "type": "string",
                  "default": "NODE_TYPE_UNSPECIFIED",
                  "enum": [
                    "NODE_TYPE_UNSPECIFIED",
                    "NODE_TYPE_GENERIC_NODE",
                    "NODE_TYPE_CONTAINER_NODE",
                    "NODE_TYPE_REMOTE_NODE",
                    "NODE_TYPE_REMOTE_RDS_NODE",
                    "NODE_TYPE_REMOTE_AZURE_DATABASE_NODE"
                  ],
                  "x-order": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "nodes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "description": "Node address (DNS name or IP).",
                        "type": "string",
                        "x-order": 8
                      },
                      "agents": {
                        "description": "List of agents related to this node.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "agent_id": {
                              "description": "Unique Agent identifier.",
                              "type": "string",
                              "x-order": 0
                            },
                            "agent_type": {
                              "description": "Agent type.",
                              "type": "string",
                              "x-order": 1
                            },
                            "is_connected": {
                              "description": "True if Agent is running and connected to pmm-managed.",
                              "type": "boolean",
                              "x-order": 3
                            },
                            "status": {
                              "description": "Actual Agent status.",
                              "type": "string",
                              "x-order": 2
                            }
                          }
                        },
                        "x-order": 15
                      },
                      "az": {
                        "description": "Node availability zone.",
                        "type": "string",
                        "x-order": 10
                      },
                      "container_id": {
                        "description": "A node's unique docker container identifier.",
                        "type": "string",
                        "x-order": 6
                      },
                      "container_name": {
                        "description": "Container name.",
                        "type": "string",
                        "x-order": 7
                      },
                      "created_at": {
                        "description": "Creation timestamp.",
                        "type": "string",
                        "format": "date-time",
                        "x-order": 12
                      },
                      "custom_labels": {
                        "description": "Custom user-assigned labels for Node.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-order": 11
                      },
                      "distro": {
                        "description": "Linux distribution name and version.",
                        "type": "string",
                        "x-order": 4
                      },
                      "machine_id": {
                        "description": "Linux machine-id.",
                        "type": "string",
                        "x-order": 3
                      },
                      "node_id": {
                        "description": "Unique Node identifier.",
                        "type": "string",
                        "x-order": 0
                      },
                      "node_model": {
                        "description": "Node model.",
                        "type": "string",
                        "x-order": 5
                      },
                      "node_name": {
                        "description": "User-defined node name.",
                        "type": "string",
                        "x-order": 2
                      },
                      "node_type": {
                        "description": "Node type.",
                        "type": "string",
                        "x-order": 1
                      },
                      "region": {
                        "description": "Node region.",
                        "type": "string",
                        "x-order": 9
                      },
                      "services": {
                        "description": "List of services running on this node.",
                        "type": "array",
                        "items": {
                          "description": "Service represents a service running on a node.",
                          "type": "object",
                          "properties": {
                            "service_id": {
                              "description": "Unique Service identifier.",
                              "type": "string",
                              "x-order": 0
                            },
                            "service_name": {
                              "description": "Service name.",
                              "type": "string",
                              "x-order": 2
                            },
                            "service_type": {
                              "description": "Service type.",
                              "type": "string",
                              "x-order": 1
                            }
                          }
                        },
                        "x-order": 16
                      },
                      "status": {
                        "description": "Node status.\n\n - STATUS_UNSPECIFIED: Invalid status.\n - STATUS_UP: The node is up.\n - STATUS_DOWN: The node is down.\n - STATUS_UNKNOWN: The node's status cannot be known (e.g. there are no metrics yet).",
                        "type": "string",
                        "default": "STATUS_UNSPECIFIED",
                        "enum": [
                          "STATUS_UNSPECIFIED",
                          "STATUS_UP",
                          "STATUS_DOWN",
                          "STATUS_UNKNOWN"
                        ],
                        "x-order": 14
                      },
                      "updated_at": {
                        "description": "Last update timestamp.",
                        "type": "string",
                        "format": "date-time",
                        "x-order": 13
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Service/List": {
      "post": {
        "description": "Returns a filtered list of Services.",
        "tags": [
          "ManagementV1Beta1Service"
        ],
        "summary": "List Services",
        "operationId": "ListServices",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "external_group": {
                  "description": "Return only services in this external group.",
                  "type": "string",
                  "x-order": 2
                },
                "node_id": {
                  "description": "Return only Services running on that Node.",
                  "type": "string",
                  "x-order": 0
                },
                "service_type": {
                  "description": "ServiceType describes supported Service types.",
                  "type": "string",
                  "default": "SERVICE_TYPE_UNSPECIFIED",
                  "enum": [
                    "SERVICE_TYPE_UNSPECIFIED",
                    "SERVICE_TYPE_MYSQL_SERVICE",
                    "SERVICE_TYPE_MONGODB_SERVICE",
                    "SERVICE_TYPE_POSTGRESQL_SERVICE",
                    "SERVICE_TYPE_PROXYSQL_SERVICE",
                    "SERVICE_TYPE_HAPROXY_SERVICE",
                    "SERVICE_TYPE_EXTERNAL_SERVICE"
                  ],
                  "x-order": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "services": {
                  "description": "List of Services.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required.",
                        "type": "string",
                        "x-order": 11
                      },
                      "agents": {
                        "description": "List of agents related to this service.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "agent_id": {
                              "description": "Unique agent identifier.",
                              "type": "string",
                              "x-order": 0
                            },
                            "agent_type": {
                              "description": "Agent type.",
                              "type": "string",
                              "x-order": 2
                            },
                            "aws_access_key": {
                              "description": "AWS Access Key.",
                              "type": "string",
                              "x-order": 3
                            },
                            "azure_options": {
                              "type": "object",
                              "properties": {
                                "client_id": {
                                  "description": "Azure client ID.",
                                  "type": "string",
                                  "x-order": 0
                                },
                                "is_client_secret_set": {
                                  "description": "True if Azure client secret is set.",
                                  "type": "boolean",
                                  "x-order": 1
                                },
                                "resource_group": {
                                  "description": "Azure resource group.",
                                  "type": "string",
                                  "x-order": 2
                                },
                                "subscription_id": {
                                  "description": "Azure subscription ID.",
                                  "type": "string",
                                  "x-order": 3
                                },
                                "tenant_id": {
                                  "description": "Azure tenant ID.",
                                  "type": "string",
                                  "x-order": 4
                                }
                              },
                              "x-order": 5
                            },
                            "comments_parsing_disabled": {
                              "description": "True if query comments parsing is disabled.",
                              "type": "boolean",
                              "x-order": 25
                            },
                            "created_at": {
                              "description": "Creation timestamp.",
                              "type": "string",
                              "format": "date-time",
                              "x-order": 6
                            },
                            "custom_labels": {
                              "description": "Custom user-assigned labels.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "x-order": 7
                            },
                            "disabled": {
                              "description": "Desired Agent status: enabled (false) or disabled (true).",
                              "type": "boolean",
                              "x-order": 8
                            },
                            "disabled_collectors": {
                              "description": "List of disabled collector names.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-order": 9
                            },
                            "expose_exporter": {
                              "description": "True if an exporter agent is exposed on all host addresses.",
                              "type": "boolean",
                              "x-order": 39
                            },
                            "is_agent_password_set": {
                              "description": "True if the agent password is set.",
                              "type": "boolean",
                              "x-order": 1
                            },
                            "is_aws_secret_key_set": {
                              "description": "True if AWS Secret Key is set.",
                              "type": "boolean",
                              "x-order": 4
                            },
                            "is_connected": {
                              "description": "True if Agent is running and connected to pmm-managed.",
                              "type": "boolean",
                              "x-order": 38
                            },
                            "is_password_set": {
                              "description": "True if password for connecting the agent to the database is set.",
                              "type": "boolean",
                              "x-order": 19
                            },
                            "listen_port": {
                              "description": "Listen port for scraping metrics.",
                              "type": "integer",
                              "format": "int64",
                              "x-order": 10
                            },
                            "log_level": {
                              "description": "Log level for exporter.",
                              "type": "string",
                              "x-order": 11
                            },
                            "max_query_length": {
                              "description": "Limit query length in QAN.",
                              "type": "integer",
                              "format": "int32",
                              "x-order": 12
                            },
                            "max_query_log_size": {
                              "description": "Limit query log size in QAN.",
                              "type": "string",
                              "format": "int64",
                              "x-order": 13
                            },
                            "metrics_path": {
                              "description": "Path under which metrics are exposed, used to generate URI.",
                              "type": "string",
                              "x-order": 14
                            },
                            "metrics_scheme": {
                              "description": "Scheme to generate URI to exporter metrics endpoints.",
                              "type": "string",
                              "x-order": 15
                            },
                            "mongo_db_options": {
                              "type": "object",
                              "properties": {
                                "authentication_database": {
                                  "description": "MongoDB auth database.",
                                  "type": "string",
                                  "x-order": 3
                                },
                                "authentication_mechanism": {
                                  "description": "MongoDB auth mechanism.",
                                  "type": "string",
                                  "x-order": 2
                                },
                                "collections_limit": {
                                  "description": "MongoDB collections limit.",
                                  "type": "integer",
                                  "format": "int32",
                                  "x-order": 5
                                },
                                "enable_all_collectors": {
                                  "description": "True if all collectors are enabled.",
                                  "type": "boolean",
                                  "x-order": 6
                                },
                                "is_tls_certificate_key_file_password_set": {
                                  "description": "True if TLS certificate file password is set.",
                                  "type": "boolean",
                                  "x-order": 1
                                },
                                "is_tls_certificate_key_set": {
                                  "description": "True if TLS certificate is set.",
                                  "type": "boolean",
                                  "x-order": 0
                                },
                                "stats_collections": {
                                  "description": "MongoDB stats collections.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-order": 4
                                }
                              },
                              "x-order": 16
                            },
                            "mysql_options": {
                              "type": "object",
                              "properties": {
                                "is_tls_key_set": {
                                  "description": "True if TLS key is set.",
                                  "type": "boolean",
                                  "x-order": 0
                                }
                              },
                              "x-order": 17
                            },
                            "node_id": {
                              "description": "A unique node identifier.",
                              "type": "string",
                              "x-order": 18
                            },
                            "pmm_agent_id": {
                              "description": "The pmm-agent identifier.",
                              "type": "string",
                              "x-order": 20
                            },
                            "postgresql_options": {
                              "type": "object",
                              "properties": {
                                "auto_discovery_limit": {
                                  "description": "Limit of databases for auto-discovery.",
                                  "type": "integer",
                                  "format": "int32",
                                  "x-order": 1
                                },
                                "is_ssl_key_set": {
                                  "description": "True if TLS key is set.",
                                  "type": "boolean",
                                  "x-order": 0
                                }
                              },
                              "x-order": 21
                            },
                            "process_exec_path": {
                              "description": "Path to exec process.",
                              "type": "string",
                              "x-order": 22
                            },
                            "push_metrics": {
                              "description": "True if exporter uses push metrics mode.",
                              "type": "boolean",
                              "x-order": 23
                            },
                            "query_examples_disabled": {
                              "description": "True if query examples are disabled.",
                              "type": "boolean",
                              "x-order": 24
                            },
                            "rds_basic_metrics_disabled": {
                              "description": "True if RDS basic metrics are disdabled.",
                              "type": "boolean",
                              "x-order": 26
                            },
                            "rds_enhanced_metrics_disabled": {
                              "description": "True if RDS enhanced metrics are disdabled.",
                              "type": "boolean",
                              "x-order": 27
                            },
                            "runs_on_node_id": {
                              "description": "Node identifier where this instance runs.",
                              "type": "string",
                              "x-order": 28
                            },
                            "service_id": {
                              "description": "Service identifier.",
                              "type": "string",
                              "x-order": 29
                            },
                            "status": {
                              "description": "Actual Agent status.",
                              "type": "string",
                              "x-order": 30
                            },
                            "table_count": {
                              "description": "Last known table count.",
                              "type": "integer",
                              "format": "int32",
                              "x-order": 31
                            },
                            "table_count_tablestats_group_limit": {
                              "description": "Tablestats group collectors are disabled if there are more than that number of tables.\n0 means tablestats group collectors are always enabled (no limit).\nNegative value means tablestats group collectors are always disabled.",
                              "type": "integer",
                              "format": "int32",
                              "x-order": 32
                            },
                            "tls": {
                              "description": "Use TLS for database connections.",
                              "type": "boolean",
                              "x-order": 33
                            },
                            "tls_skip_verify": {
                              "description": "Skip TLS certificate and hostname validation.",
                              "type": "boolean",
                              "x-order": 34
                            },
                            "updated_at": {
                              "description": "Last update timestamp.",
                              "type": "string",
                              "format": "date-time",
                              "x-order": 36
                            },
                            "username": {
                              "description": "HTTP basic auth username for collecting metrics.",
                              "type": "string",
                              "x-order": 35
                            },
                            "version": {
                              "description": "Agent version.",
                              "type": "string",
                              "x-order": 37
                            }
                          }
                        },
                        "x-order": 16
                      },
                      "cluster": {
                        "description": "Cluster name.",
                        "type": "string",
                        "x-order": 7
                      },
                      "created_at": {
                        "description": "Creation timestamp.",
                        "type": "string",
                        "format": "date-time",
                        "x-order": 14
                      },
                      "custom_labels": {
                        "description": "Custom user-assigned labels for Service.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-order": 9
                      },
                      "database_name": {
                        "description": "Database name.",
                        "type": "string",
                        "x-order": 3
                      },
                      "environment": {
                        "description": "Environment name.",
                        "type": "string",
                        "x-order": 6
                      },
                      "external_group": {
                        "description": "External group name.",
                        "type": "string",
                        "x-order": 10
                      },
                      "node_id": {
                        "description": "Node identifier where this instance runs.",
                        "type": "string",
                        "x-order": 4
                      },
                      "node_name": {
                        "description": "Node name where this instance runs.",
                        "type": "string",
                        "x-order": 5
                      },
                      "port": {
                        "description": "Access port.\nPort is required when the address present.",
                        "type": "integer",
                        "format": "int64",
                        "x-order": 12
                      },
                      "replication_set": {
                        "description": "Replication set name.",
                        "type": "string",
                        "x-order": 8
                      },
                      "service_id": {
                        "description": "Unique service identifier.",
                        "type": "string",
                        "x-order": 0
                      },
                      "service_name": {
                        "description": "User-defined name unique across all Services.",
                        "type": "string",
                        "x-order": 2
                      },
                      "service_type": {
                        "description": "Service type.",
                        "type": "string",
                        "x-order": 1
                      },
                      "socket": {
                        "description": "Access unix socket.\nAddress (and port) or socket is required.",
                        "type": "string",
                        "x-order": 13
                      },
                      "status": {
                        "description": "Service status.\n\n - STATUS_UNSPECIFIED: In case we don't support the db vendor yet.\n - STATUS_UP: The service is up.\n - STATUS_DOWN: The service is down.\n - STATUS_UNKNOWN: The service's status cannot be known (e.g. there are no metrics yet).",
                        "type": "string",
                        "default": "STATUS_UNSPECIFIED",
                        "enum": [
                          "STATUS_UNSPECIFIED",
                          "STATUS_UP",
                          "STATUS_DOWN",
                          "STATUS_UNKNOWN"
                        ],
                        "x-order": 17
                      },
                      "updated_at": {
                        "description": "Last update timestamp.",
                        "type": "string",
                        "format": "date-time",
                        "x-order": 15
                      },
                      "version": {
                        "description": "The service/database version.",
                        "type": "string",
                        "x-order": 18
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "ManagementV1Beta1Service"
    }
  ]
}