// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: management/v1/service.proto

package managementv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"

	v1 "github.com/percona/pmm/api/inventory/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Service status.
type UniversalService_Status int32

const (
	// In case we don't support the db vendor yet.
	UniversalService_STATUS_UNSPECIFIED UniversalService_Status = 0
	// The service is up.
	UniversalService_STATUS_UP UniversalService_Status = 1
	// The service is down.
	UniversalService_STATUS_DOWN UniversalService_Status = 2
	// The service's status cannot be known (e.g. there are no metrics yet).
	UniversalService_STATUS_UNKNOWN UniversalService_Status = 3
)

// Enum value maps for UniversalService_Status.
var (
	UniversalService_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_UP",
		2: "STATUS_DOWN",
		3: "STATUS_UNKNOWN",
	}
	UniversalService_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_UP":          1,
		"STATUS_DOWN":        2,
		"STATUS_UNKNOWN":     3,
	}
)

func (x UniversalService_Status) Enum() *UniversalService_Status {
	p := new(UniversalService_Status)
	*p = x
	return p
}

func (x UniversalService_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UniversalService_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_management_v1_service_proto_enumTypes[0].Descriptor()
}

func (UniversalService_Status) Type() protoreflect.EnumType {
	return &file_management_v1_service_proto_enumTypes[0]
}

func (x UniversalService_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UniversalService_Status.Descriptor instead.
func (UniversalService_Status) EnumDescriptor() ([]byte, []int) {
	return file_management_v1_service_proto_rawDescGZIP(), []int{4, 0}
}

type AddServiceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Service:
	//
	//	*AddServiceRequest_Mysql
	//	*AddServiceRequest_Mongodb
	//	*AddServiceRequest_Postgresql
	//	*AddServiceRequest_Proxysql
	//	*AddServiceRequest_Haproxy
	//	*AddServiceRequest_External
	//	*AddServiceRequest_Rds
	Service       isAddServiceRequest_Service `protobuf_oneof:"service"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddServiceRequest) Reset() {
	*x = AddServiceRequest{}
	mi := &file_management_v1_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServiceRequest) ProtoMessage() {}

func (x *AddServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServiceRequest.ProtoReflect.Descriptor instead.
func (*AddServiceRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_service_proto_rawDescGZIP(), []int{0}
}

func (x *AddServiceRequest) GetService() isAddServiceRequest_Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *AddServiceRequest) GetMysql() *AddMySQLServiceParams {
	if x != nil {
		if x, ok := x.Service.(*AddServiceRequest_Mysql); ok {
			return x.Mysql
		}
	}
	return nil
}

func (x *AddServiceRequest) GetMongodb() *AddMongoDBServiceParams {
	if x != nil {
		if x, ok := x.Service.(*AddServiceRequest_Mongodb); ok {
			return x.Mongodb
		}
	}
	return nil
}

func (x *AddServiceRequest) GetPostgresql() *AddPostgreSQLServiceParams {
	if x != nil {
		if x, ok := x.Service.(*AddServiceRequest_Postgresql); ok {
			return x.Postgresql
		}
	}
	return nil
}

func (x *AddServiceRequest) GetProxysql() *AddProxySQLServiceParams {
	if x != nil {
		if x, ok := x.Service.(*AddServiceRequest_Proxysql); ok {
			return x.Proxysql
		}
	}
	return nil
}

func (x *AddServiceRequest) GetHaproxy() *AddHAProxyServiceParams {
	if x != nil {
		if x, ok := x.Service.(*AddServiceRequest_Haproxy); ok {
			return x.Haproxy
		}
	}
	return nil
}

func (x *AddServiceRequest) GetExternal() *AddExternalServiceParams {
	if x != nil {
		if x, ok := x.Service.(*AddServiceRequest_External); ok {
			return x.External
		}
	}
	return nil
}

func (x *AddServiceRequest) GetRds() *AddRDSServiceParams {
	if x != nil {
		if x, ok := x.Service.(*AddServiceRequest_Rds); ok {
			return x.Rds
		}
	}
	return nil
}

type isAddServiceRequest_Service interface {
	isAddServiceRequest_Service()
}

type AddServiceRequest_Mysql struct {
	Mysql *AddMySQLServiceParams `protobuf:"bytes,1,opt,name=mysql,proto3,oneof"`
}

type AddServiceRequest_Mongodb struct {
	Mongodb *AddMongoDBServiceParams `protobuf:"bytes,2,opt,name=mongodb,proto3,oneof"`
}

type AddServiceRequest_Postgresql struct {
	Postgresql *AddPostgreSQLServiceParams `protobuf:"bytes,3,opt,name=postgresql,proto3,oneof"`
}

type AddServiceRequest_Proxysql struct {
	Proxysql *AddProxySQLServiceParams `protobuf:"bytes,4,opt,name=proxysql,proto3,oneof"`
}

type AddServiceRequest_Haproxy struct {
	Haproxy *AddHAProxyServiceParams `protobuf:"bytes,5,opt,name=haproxy,proto3,oneof"`
}

type AddServiceRequest_External struct {
	External *AddExternalServiceParams `protobuf:"bytes,6,opt,name=external,proto3,oneof"`
}

type AddServiceRequest_Rds struct {
	Rds *AddRDSServiceParams `protobuf:"bytes,7,opt,name=rds,proto3,oneof"`
}

func (*AddServiceRequest_Mysql) isAddServiceRequest_Service() {}

func (*AddServiceRequest_Mongodb) isAddServiceRequest_Service() {}

func (*AddServiceRequest_Postgresql) isAddServiceRequest_Service() {}

func (*AddServiceRequest_Proxysql) isAddServiceRequest_Service() {}

func (*AddServiceRequest_Haproxy) isAddServiceRequest_Service() {}

func (*AddServiceRequest_External) isAddServiceRequest_Service() {}

func (*AddServiceRequest_Rds) isAddServiceRequest_Service() {}

type AddServiceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Service:
	//
	//	*AddServiceResponse_Mysql
	//	*AddServiceResponse_Mongodb
	//	*AddServiceResponse_Postgresql
	//	*AddServiceResponse_Proxysql
	//	*AddServiceResponse_Haproxy
	//	*AddServiceResponse_External
	//	*AddServiceResponse_Rds
	Service       isAddServiceResponse_Service `protobuf_oneof:"service"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddServiceResponse) Reset() {
	*x = AddServiceResponse{}
	mi := &file_management_v1_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddServiceResponse) ProtoMessage() {}

func (x *AddServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddServiceResponse.ProtoReflect.Descriptor instead.
func (*AddServiceResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_service_proto_rawDescGZIP(), []int{1}
}

func (x *AddServiceResponse) GetService() isAddServiceResponse_Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *AddServiceResponse) GetMysql() *MySQLServiceResult {
	if x != nil {
		if x, ok := x.Service.(*AddServiceResponse_Mysql); ok {
			return x.Mysql
		}
	}
	return nil
}

func (x *AddServiceResponse) GetMongodb() *MongoDBServiceResult {
	if x != nil {
		if x, ok := x.Service.(*AddServiceResponse_Mongodb); ok {
			return x.Mongodb
		}
	}
	return nil
}

func (x *AddServiceResponse) GetPostgresql() *PostgreSQLServiceResult {
	if x != nil {
		if x, ok := x.Service.(*AddServiceResponse_Postgresql); ok {
			return x.Postgresql
		}
	}
	return nil
}

func (x *AddServiceResponse) GetProxysql() *ProxySQLServiceResult {
	if x != nil {
		if x, ok := x.Service.(*AddServiceResponse_Proxysql); ok {
			return x.Proxysql
		}
	}
	return nil
}

func (x *AddServiceResponse) GetHaproxy() *HAProxyServiceResult {
	if x != nil {
		if x, ok := x.Service.(*AddServiceResponse_Haproxy); ok {
			return x.Haproxy
		}
	}
	return nil
}

func (x *AddServiceResponse) GetExternal() *ExternalServiceResult {
	if x != nil {
		if x, ok := x.Service.(*AddServiceResponse_External); ok {
			return x.External
		}
	}
	return nil
}

func (x *AddServiceResponse) GetRds() *RDSServiceResult {
	if x != nil {
		if x, ok := x.Service.(*AddServiceResponse_Rds); ok {
			return x.Rds
		}
	}
	return nil
}

type isAddServiceResponse_Service interface {
	isAddServiceResponse_Service()
}

type AddServiceResponse_Mysql struct {
	Mysql *MySQLServiceResult `protobuf:"bytes,1,opt,name=mysql,proto3,oneof"`
}

type AddServiceResponse_Mongodb struct {
	Mongodb *MongoDBServiceResult `protobuf:"bytes,2,opt,name=mongodb,proto3,oneof"`
}

type AddServiceResponse_Postgresql struct {
	Postgresql *PostgreSQLServiceResult `protobuf:"bytes,3,opt,name=postgresql,proto3,oneof"`
}

type AddServiceResponse_Proxysql struct {
	Proxysql *ProxySQLServiceResult `protobuf:"bytes,4,opt,name=proxysql,proto3,oneof"`
}

type AddServiceResponse_Haproxy struct {
	Haproxy *HAProxyServiceResult `protobuf:"bytes,5,opt,name=haproxy,proto3,oneof"`
}

type AddServiceResponse_External struct {
	External *ExternalServiceResult `protobuf:"bytes,6,opt,name=external,proto3,oneof"`
}

type AddServiceResponse_Rds struct {
	Rds *RDSServiceResult `protobuf:"bytes,7,opt,name=rds,proto3,oneof"`
}

func (*AddServiceResponse_Mysql) isAddServiceResponse_Service() {}

func (*AddServiceResponse_Mongodb) isAddServiceResponse_Service() {}

func (*AddServiceResponse_Postgresql) isAddServiceResponse_Service() {}

func (*AddServiceResponse_Proxysql) isAddServiceResponse_Service() {}

func (*AddServiceResponse_Haproxy) isAddServiceResponse_Service() {}

func (*AddServiceResponse_External) isAddServiceResponse_Service() {}

func (*AddServiceResponse_Rds) isAddServiceResponse_Service() {}

type RemoveServiceRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Either a Service ID or a Service Name.
	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Service type.
	ServiceType   v1.ServiceType `protobuf:"varint,2,opt,name=service_type,json=serviceType,proto3,enum=inventory.v1.ServiceType" json:"service_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveServiceRequest) Reset() {
	*x = RemoveServiceRequest{}
	mi := &file_management_v1_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveServiceRequest) ProtoMessage() {}

func (x *RemoveServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveServiceRequest.ProtoReflect.Descriptor instead.
func (*RemoveServiceRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_service_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveServiceRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *RemoveServiceRequest) GetServiceType() v1.ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return v1.ServiceType(0)
}

type RemoveServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveServiceResponse) Reset() {
	*x = RemoveServiceResponse{}
	mi := &file_management_v1_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveServiceResponse) ProtoMessage() {}

func (x *RemoveServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveServiceResponse.ProtoReflect.Descriptor instead.
func (*RemoveServiceResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_service_proto_rawDescGZIP(), []int{3}
}

type UniversalService struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique service identifier.
	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Service type.
	ServiceType string `protobuf:"bytes,2,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	// User-defined name unique across all Services.
	ServiceName string `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Database name.
	DatabaseName string `protobuf:"bytes,4,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	// Node identifier where this instance runs.
	NodeId string `protobuf:"bytes,5,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Node name where this instance runs.
	NodeName string `protobuf:"bytes,6,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Environment name.
	Environment string `protobuf:"bytes,7,opt,name=environment,proto3" json:"environment,omitempty"`
	// Cluster name.
	Cluster string `protobuf:"bytes,8,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Replication set name.
	ReplicationSet string `protobuf:"bytes,9,opt,name=replication_set,json=replicationSet,proto3" json:"replication_set,omitempty"`
	// Custom user-assigned labels for Service.
	CustomLabels map[string]string `protobuf:"bytes,10,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// External group name.
	ExternalGroup string `protobuf:"bytes,11,opt,name=external_group,json=externalGroup,proto3" json:"external_group,omitempty"`
	// Access address (DNS name or IP).
	// Address (and port) or socket is required.
	Address string `protobuf:"bytes,12,opt,name=address,proto3" json:"address,omitempty"`
	// Access port.
	// Port is required when the address present.
	Port uint32 `protobuf:"varint,13,opt,name=port,proto3" json:"port,omitempty"`
	// Access unix socket.
	// Address (and port) or socket is required.
	Socket string `protobuf:"bytes,14,opt,name=socket,proto3" json:"socket,omitempty"`
	// Creation timestamp.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// List of agents related to this service.
	Agents []*UniversalAgent `protobuf:"bytes,17,rep,name=agents,proto3" json:"agents,omitempty"`
	// The health status of the service.
	Status UniversalService_Status `protobuf:"varint,18,opt,name=status,proto3,enum=management.v1.UniversalService_Status" json:"status,omitempty"`
	// The service/database version.
	Version       string `protobuf:"bytes,19,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UniversalService) Reset() {
	*x = UniversalService{}
	mi := &file_management_v1_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UniversalService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniversalService) ProtoMessage() {}

func (x *UniversalService) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniversalService.ProtoReflect.Descriptor instead.
func (*UniversalService) Descriptor() ([]byte, []int) {
	return file_management_v1_service_proto_rawDescGZIP(), []int{4}
}

func (x *UniversalService) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *UniversalService) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *UniversalService) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *UniversalService) GetDatabaseName() string {
	if x != nil {
		return x.DatabaseName
	}
	return ""
}

func (x *UniversalService) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *UniversalService) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *UniversalService) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *UniversalService) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *UniversalService) GetReplicationSet() string {
	if x != nil {
		return x.ReplicationSet
	}
	return ""
}

func (x *UniversalService) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *UniversalService) GetExternalGroup() string {
	if x != nil {
		return x.ExternalGroup
	}
	return ""
}

func (x *UniversalService) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UniversalService) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *UniversalService) GetSocket() string {
	if x != nil {
		return x.Socket
	}
	return ""
}

func (x *UniversalService) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UniversalService) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UniversalService) GetAgents() []*UniversalAgent {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *UniversalService) GetStatus() UniversalService_Status {
	if x != nil {
		return x.Status
	}
	return UniversalService_STATUS_UNSPECIFIED
}

func (x *UniversalService) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ListServicesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Return only Services running on that Node.
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Return only services filtered by service type.
	ServiceType v1.ServiceType `protobuf:"varint,2,opt,name=service_type,json=serviceType,proto3,enum=inventory.v1.ServiceType" json:"service_type,omitempty"`
	// Return only services in this external group.
	ExternalGroup string `protobuf:"bytes,3,opt,name=external_group,json=externalGroup,proto3" json:"external_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServicesRequest) Reset() {
	*x = ListServicesRequest{}
	mi := &file_management_v1_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesRequest) ProtoMessage() {}

func (x *ListServicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesRequest.ProtoReflect.Descriptor instead.
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_service_proto_rawDescGZIP(), []int{5}
}

func (x *ListServicesRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ListServicesRequest) GetServiceType() v1.ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return v1.ServiceType(0)
}

func (x *ListServicesRequest) GetExternalGroup() string {
	if x != nil {
		return x.ExternalGroup
	}
	return ""
}

type ListServicesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of Services.
	Services      []*UniversalService `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServicesResponse) Reset() {
	*x = ListServicesResponse{}
	mi := &file_management_v1_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServicesResponse) ProtoMessage() {}

func (x *ListServicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServicesResponse.ProtoReflect.Descriptor instead.
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListServicesResponse) GetServices() []*UniversalService {
	if x != nil {
		return x.Services
	}
	return nil
}

var File_management_v1_service_proto protoreflect.FileDescriptor

const file_management_v1_service_proto_rawDesc = "" +
	"\n" +
	"\x1bmanagement/v1/service.proto\x12\rmanagement.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1binventory/v1/services.proto\x1a\x19management/v1/agent.proto\x1a\x1emanagement/v1/annotation.proto\x1a\x19management/v1/azure.proto\x1a\x1cmanagement/v1/external.proto\x1a\x1bmanagement/v1/haproxy.proto\x1a\x1bmanagement/v1/mongodb.proto\x1a\x19management/v1/mysql.proto\x1a\x18management/v1/node.proto\x1a\x1emanagement/v1/postgresql.proto\x1a\x1cmanagement/v1/proxysql.proto\x1a\x17management/v1/rds.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\xf7\x03\n" +
	"\x11AddServiceRequest\x12<\n" +
	"\x05mysql\x18\x01 \x01(\v2$.management.v1.AddMySQLServiceParamsH\x00R\x05mysql\x12B\n" +
	"\amongodb\x18\x02 \x01(\v2&.management.v1.AddMongoDBServiceParamsH\x00R\amongodb\x12K\n" +
	"\n" +
	"postgresql\x18\x03 \x01(\v2).management.v1.AddPostgreSQLServiceParamsH\x00R\n" +
	"postgresql\x12E\n" +
	"\bproxysql\x18\x04 \x01(\v2'.management.v1.AddProxySQLServiceParamsH\x00R\bproxysql\x12B\n" +
	"\ahaproxy\x18\x05 \x01(\v2&.management.v1.AddHAProxyServiceParamsH\x00R\ahaproxy\x12E\n" +
	"\bexternal\x18\x06 \x01(\v2'.management.v1.AddExternalServiceParamsH\x00R\bexternal\x126\n" +
	"\x03rds\x18\a \x01(\v2\".management.v1.AddRDSServiceParamsH\x00R\x03rdsB\t\n" +
	"\aservice\"\xe3\x03\n" +
	"\x12AddServiceResponse\x129\n" +
	"\x05mysql\x18\x01 \x01(\v2!.management.v1.MySQLServiceResultH\x00R\x05mysql\x12?\n" +
	"\amongodb\x18\x02 \x01(\v2#.management.v1.MongoDBServiceResultH\x00R\amongodb\x12H\n" +
	"\n" +
	"postgresql\x18\x03 \x01(\v2&.management.v1.PostgreSQLServiceResultH\x00R\n" +
	"postgresql\x12B\n" +
	"\bproxysql\x18\x04 \x01(\v2$.management.v1.ProxySQLServiceResultH\x00R\bproxysql\x12?\n" +
	"\ahaproxy\x18\x05 \x01(\v2#.management.v1.HAProxyServiceResultH\x00R\ahaproxy\x12B\n" +
	"\bexternal\x18\x06 \x01(\v2$.management.v1.ExternalServiceResultH\x00R\bexternal\x123\n" +
	"\x03rds\x18\a \x01(\v2\x1f.management.v1.RDSServiceResultH\x00R\x03rdsB\t\n" +
	"\aservice\"s\n" +
	"\x14RemoveServiceRequest\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\x12<\n" +
	"\fservice_type\x18\x02 \x01(\x0e2\x19.inventory.v1.ServiceTypeR\vserviceType\"\x17\n" +
	"\x15RemoveServiceResponse\"\x9a\a\n" +
	"\x10UniversalService\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\x12!\n" +
	"\fservice_type\x18\x02 \x01(\tR\vserviceType\x12!\n" +
	"\fservice_name\x18\x03 \x01(\tR\vserviceName\x12#\n" +
	"\rdatabase_name\x18\x04 \x01(\tR\fdatabaseName\x12\x17\n" +
	"\anode_id\x18\x05 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tnode_name\x18\x06 \x01(\tR\bnodeName\x12 \n" +
	"\venvironment\x18\a \x01(\tR\venvironment\x12\x18\n" +
	"\acluster\x18\b \x01(\tR\acluster\x12'\n" +
	"\x0freplication_set\x18\t \x01(\tR\x0ereplicationSet\x12V\n" +
	"\rcustom_labels\x18\n" +
	" \x03(\v21.management.v1.UniversalService.CustomLabelsEntryR\fcustomLabels\x12%\n" +
	"\x0eexternal_group\x18\v \x01(\tR\rexternalGroup\x12\x18\n" +
	"\aaddress\x18\f \x01(\tR\aaddress\x12\x12\n" +
	"\x04port\x18\r \x01(\rR\x04port\x12\x16\n" +
	"\x06socket\x18\x0e \x01(\tR\x06socket\x129\n" +
	"\n" +
	"created_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x125\n" +
	"\x06agents\x18\x11 \x03(\v2\x1d.management.v1.UniversalAgentR\x06agents\x12>\n" +
	"\x06status\x18\x12 \x01(\x0e2&.management.v1.UniversalService.StatusR\x06status\x12\x18\n" +
	"\aversion\x18\x13 \x01(\tR\aversion\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"T\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tSTATUS_UP\x10\x01\x12\x0f\n" +
	"\vSTATUS_DOWN\x10\x02\x12\x12\n" +
	"\x0eSTATUS_UNKNOWN\x10\x03\"\x93\x01\n" +
	"\x13ListServicesRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12<\n" +
	"\fservice_type\x18\x02 \x01(\x0e2\x19.inventory.v1.ServiceTypeR\vserviceType\x12%\n" +
	"\x0eexternal_group\x18\x03 \x01(\tR\rexternalGroup\"S\n" +
	"\x14ListServicesResponse\x12;\n" +
	"\bservices\x18\x01 \x03(\v2\x1f.management.v1.UniversalServiceR\bservices2\xa2\x13\n" +
	"\x11ManagementService\x12\xac\x01\n" +
	"\rAddAnnotation\x12#.management.v1.AddAnnotationRequest\x1a$.management.v1.AddAnnotationResponse\"P\x92A(\x12\x11Add an Annotation\x1a\x13Adds an annotation.\x82\xd3\xe4\x93\x02\x1f:\x01*\"\x1a/v1/management/annotations\x12\x9b\x01\n" +
	"\n" +
	"ListAgents\x12 .management.v1.ListAgentsRequest\x1a!.management.v1.ListAgentsResponse\"H\x92A(\x12\vList Agents\x1a\x19Lists Agents with filter.\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/management/agents\x12\xd7\x01\n" +
	"\x11ListAgentVersions\x12'.management.v1.ListAgentVersionsRequest\x1a(.management.v1.ListAgentVersionsResponse\"o\x92AF\x12\x13List Agent Versions\x1a/Lists Agent versions and their update severity.\x82\xd3\xe4\x93\x02 \x12\x1e/v1/management/agents/versions\x12\xb3\x01\n" +
	"\fRegisterNode\x12\".management.v1.RegisterNodeRequest\x1a#.management.v1.RegisterNodeResponse\"Z\x92A8\x12\x0fRegister a Node\x1a%Registers a new Node and a pmm-agent.\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/v1/management/nodes\x12\xbd\x01\n" +
	"\x0eUnregisterNode\x12$.management.v1.UnregisterNodeRequest\x1a%.management.v1.UnregisterNodeResponse\"^\x92A5\x12\x11Unregister a Node\x1a Unregisters a Node and pmm-agent\x82\xd3\xe4\x93\x02 *\x1e/v1/management/nodes/{node_id}\x12\x95\x01\n" +
	"\tListNodes\x12\x1f.management.v1.ListNodesRequest\x1a .management.v1.ListNodesResponse\"E\x92A&\x12\n" +
	"List Nodes\x1a\x18Lists Nodes with filter.\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/management/nodes\x12\x98\x01\n" +
	"\aGetNode\x12\x1d.management.v1.GetNodeRequest\x1a\x1e.management.v1.GetNodeResponse\"N\x92A%\x12\bGet Node\x1a\x19Gets a single Node by ID.\x82\xd3\xe4\x93\x02 \x12\x1e/v1/management/nodes/{node_id}\x12\xb2\x01\n" +
	"\n" +
	"AddService\x12 .management.v1.AddServiceRequest\x1a!.management.v1.AddServiceResponse\"_\x92A:\x12\rAdd a Service\x1a)Adds a service and starts several agents.\x82\xd3\xe4\x93\x02\x1c:\x01*\"\x17/v1/management/services\x12\xb0\x01\n" +
	"\fListServices\x12\".management.v1.ListServicesRequest\x1a#.management.v1.ListServicesResponse\"W\x92A5\x12\rList Services\x1a$Returns a filtered list of Services.\x82\xd3\xe4\x93\x02\x19\x12\x17/v1/management/services\x12\xaf\x01\n" +
	"\vDiscoverRDS\x12!.management.v1.DiscoverRDSRequest\x1a\".management.v1.DiscoverRDSResponse\"Y\x92A(\x12\fDiscover RDS\x1a\x18Discovers RDS instances.\x82\xd3\xe4\x93\x02(:\x01*\"#/v1/management/services:discoverRDS\x12\x8f\x02\n" +
	"\x15DiscoverAzureDatabase\x12+.management.v1.DiscoverAzureDatabaseRequest\x1a,.management.v1.DiscoverAzureDatabaseResponse\"\x9a\x01\x92Ag\x12\x17Discover Azure Database\x1aLDiscovers Azure Database for MySQL, MariaDB and PostgreSQL Server instances.\x82\xd3\xe4\x93\x02*:\x01*\"%/v1/management/services:discoverAzure\x12\xc6\x01\n" +
	"\x10AddAzureDatabase\x12&.management.v1.AddAzureDatabaseRequest\x1a'.management.v1.AddAzureDatabaseResponse\"a\x92A6\x12\x12Add Azure Database\x1a Adds an Azure Database instance.\x82\xd3\xe4\x93\x02\":\x01*\"\x1d/v1/management/services/azure\x12\xc7\x01\n" +
	"\rRemoveService\x12#.management.v1.RemoveServiceRequest\x1a$.management.v1.RemoveServiceResponse\"k\x92A<\x12\x10Remove a Service\x1a(Removes a Service along with its Agents.\x82\xd3\xe4\x93\x02&*$/v1/management/services/{service_id}B\xad\x01\n" +
	"\x11com.management.v1B\fServiceProtoP\x01Z5github.com/percona/pmm/api/management/v1;managementv1\xa2\x02\x03MXX\xaa\x02\rManagement.V1\xca\x02\rManagement\\V1\xe2\x02\x19Management\\V1\\GPBMetadata\xea\x02\x0eManagement::V1b\x06proto3"

var (
	file_management_v1_service_proto_rawDescOnce sync.Once
	file_management_v1_service_proto_rawDescData []byte
)

func file_management_v1_service_proto_rawDescGZIP() []byte {
	file_management_v1_service_proto_rawDescOnce.Do(func() {
		file_management_v1_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_management_v1_service_proto_rawDesc), len(file_management_v1_service_proto_rawDesc)))
	})
	return file_management_v1_service_proto_rawDescData
}

var (
	file_management_v1_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_management_v1_service_proto_msgTypes  = make([]protoimpl.MessageInfo, 8)
	file_management_v1_service_proto_goTypes   = []any{
		(UniversalService_Status)(0),          // 0: management.v1.UniversalService.Status
		(*AddServiceRequest)(nil),             // 1: management.v1.AddServiceRequest
		(*AddServiceResponse)(nil),            // 2: management.v1.AddServiceResponse
		(*RemoveServiceRequest)(nil),          // 3: management.v1.RemoveServiceRequest
		(*RemoveServiceResponse)(nil),         // 4: management.v1.RemoveServiceResponse
		(*UniversalService)(nil),              // 5: management.v1.UniversalService
		(*ListServicesRequest)(nil),           // 6: management.v1.ListServicesRequest
		(*ListServicesResponse)(nil),          // 7: management.v1.ListServicesResponse
		nil,                                   // 8: management.v1.UniversalService.CustomLabelsEntry
		(*AddMySQLServiceParams)(nil),         // 9: management.v1.AddMySQLServiceParams
		(*AddMongoDBServiceParams)(nil),       // 10: management.v1.AddMongoDBServiceParams
		(*AddPostgreSQLServiceParams)(nil),    // 11: management.v1.AddPostgreSQLServiceParams
		(*AddProxySQLServiceParams)(nil),      // 12: management.v1.AddProxySQLServiceParams
		(*AddHAProxyServiceParams)(nil),       // 13: management.v1.AddHAProxyServiceParams
		(*AddExternalServiceParams)(nil),      // 14: management.v1.AddExternalServiceParams
		(*AddRDSServiceParams)(nil),           // 15: management.v1.AddRDSServiceParams
		(*MySQLServiceResult)(nil),            // 16: management.v1.MySQLServiceResult
		(*MongoDBServiceResult)(nil),          // 17: management.v1.MongoDBServiceResult
		(*PostgreSQLServiceResult)(nil),       // 18: management.v1.PostgreSQLServiceResult
		(*ProxySQLServiceResult)(nil),         // 19: management.v1.ProxySQLServiceResult
		(*HAProxyServiceResult)(nil),          // 20: management.v1.HAProxyServiceResult
		(*ExternalServiceResult)(nil),         // 21: management.v1.ExternalServiceResult
		(*RDSServiceResult)(nil),              // 22: management.v1.RDSServiceResult
		(v1.ServiceType)(0),                   // 23: inventory.v1.ServiceType
		(*timestamppb.Timestamp)(nil),         // 24: google.protobuf.Timestamp
		(*UniversalAgent)(nil),                // 25: management.v1.UniversalAgent
		(*AddAnnotationRequest)(nil),          // 26: management.v1.AddAnnotationRequest
		(*ListAgentsRequest)(nil),             // 27: management.v1.ListAgentsRequest
		(*ListAgentVersionsRequest)(nil),      // 28: management.v1.ListAgentVersionsRequest
		(*RegisterNodeRequest)(nil),           // 29: management.v1.RegisterNodeRequest
		(*UnregisterNodeRequest)(nil),         // 30: management.v1.UnregisterNodeRequest
		(*ListNodesRequest)(nil),              // 31: management.v1.ListNodesRequest
		(*GetNodeRequest)(nil),                // 32: management.v1.GetNodeRequest
		(*DiscoverRDSRequest)(nil),            // 33: management.v1.DiscoverRDSRequest
		(*DiscoverAzureDatabaseRequest)(nil),  // 34: management.v1.DiscoverAzureDatabaseRequest
		(*AddAzureDatabaseRequest)(nil),       // 35: management.v1.AddAzureDatabaseRequest
		(*AddAnnotationResponse)(nil),         // 36: management.v1.AddAnnotationResponse
		(*ListAgentsResponse)(nil),            // 37: management.v1.ListAgentsResponse
		(*ListAgentVersionsResponse)(nil),     // 38: management.v1.ListAgentVersionsResponse
		(*RegisterNodeResponse)(nil),          // 39: management.v1.RegisterNodeResponse
		(*UnregisterNodeResponse)(nil),        // 40: management.v1.UnregisterNodeResponse
		(*ListNodesResponse)(nil),             // 41: management.v1.ListNodesResponse
		(*GetNodeResponse)(nil),               // 42: management.v1.GetNodeResponse
		(*DiscoverRDSResponse)(nil),           // 43: management.v1.DiscoverRDSResponse
		(*DiscoverAzureDatabaseResponse)(nil), // 44: management.v1.DiscoverAzureDatabaseResponse
		(*AddAzureDatabaseResponse)(nil),      // 45: management.v1.AddAzureDatabaseResponse
	}
)

var file_management_v1_service_proto_depIdxs = []int32{
	9,  // 0: management.v1.AddServiceRequest.mysql:type_name -> management.v1.AddMySQLServiceParams
	10, // 1: management.v1.AddServiceRequest.mongodb:type_name -> management.v1.AddMongoDBServiceParams
	11, // 2: management.v1.AddServiceRequest.postgresql:type_name -> management.v1.AddPostgreSQLServiceParams
	12, // 3: management.v1.AddServiceRequest.proxysql:type_name -> management.v1.AddProxySQLServiceParams
	13, // 4: management.v1.AddServiceRequest.haproxy:type_name -> management.v1.AddHAProxyServiceParams
	14, // 5: management.v1.AddServiceRequest.external:type_name -> management.v1.AddExternalServiceParams
	15, // 6: management.v1.AddServiceRequest.rds:type_name -> management.v1.AddRDSServiceParams
	16, // 7: management.v1.AddServiceResponse.mysql:type_name -> management.v1.MySQLServiceResult
	17, // 8: management.v1.AddServiceResponse.mongodb:type_name -> management.v1.MongoDBServiceResult
	18, // 9: management.v1.AddServiceResponse.postgresql:type_name -> management.v1.PostgreSQLServiceResult
	19, // 10: management.v1.AddServiceResponse.proxysql:type_name -> management.v1.ProxySQLServiceResult
	20, // 11: management.v1.AddServiceResponse.haproxy:type_name -> management.v1.HAProxyServiceResult
	21, // 12: management.v1.AddServiceResponse.external:type_name -> management.v1.ExternalServiceResult
	22, // 13: management.v1.AddServiceResponse.rds:type_name -> management.v1.RDSServiceResult
	23, // 14: management.v1.RemoveServiceRequest.service_type:type_name -> inventory.v1.ServiceType
	8,  // 15: management.v1.UniversalService.custom_labels:type_name -> management.v1.UniversalService.CustomLabelsEntry
	24, // 16: management.v1.UniversalService.created_at:type_name -> google.protobuf.Timestamp
	24, // 17: management.v1.UniversalService.updated_at:type_name -> google.protobuf.Timestamp
	25, // 18: management.v1.UniversalService.agents:type_name -> management.v1.UniversalAgent
	0,  // 19: management.v1.UniversalService.status:type_name -> management.v1.UniversalService.Status
	23, // 20: management.v1.ListServicesRequest.service_type:type_name -> inventory.v1.ServiceType
	5,  // 21: management.v1.ListServicesResponse.services:type_name -> management.v1.UniversalService
	26, // 22: management.v1.ManagementService.AddAnnotation:input_type -> management.v1.AddAnnotationRequest
	27, // 23: management.v1.ManagementService.ListAgents:input_type -> management.v1.ListAgentsRequest
	28, // 24: management.v1.ManagementService.ListAgentVersions:input_type -> management.v1.ListAgentVersionsRequest
	29, // 25: management.v1.ManagementService.RegisterNode:input_type -> management.v1.RegisterNodeRequest
	30, // 26: management.v1.ManagementService.UnregisterNode:input_type -> management.v1.UnregisterNodeRequest
	31, // 27: management.v1.ManagementService.ListNodes:input_type -> management.v1.ListNodesRequest
	32, // 28: management.v1.ManagementService.GetNode:input_type -> management.v1.GetNodeRequest
	1,  // 29: management.v1.ManagementService.AddService:input_type -> management.v1.AddServiceRequest
	6,  // 30: management.v1.ManagementService.ListServices:input_type -> management.v1.ListServicesRequest
	33, // 31: management.v1.ManagementService.DiscoverRDS:input_type -> management.v1.DiscoverRDSRequest
	34, // 32: management.v1.ManagementService.DiscoverAzureDatabase:input_type -> management.v1.DiscoverAzureDatabaseRequest
	35, // 33: management.v1.ManagementService.AddAzureDatabase:input_type -> management.v1.AddAzureDatabaseRequest
	3,  // 34: management.v1.ManagementService.RemoveService:input_type -> management.v1.RemoveServiceRequest
	36, // 35: management.v1.ManagementService.AddAnnotation:output_type -> management.v1.AddAnnotationResponse
	37, // 36: management.v1.ManagementService.ListAgents:output_type -> management.v1.ListAgentsResponse
	38, // 37: management.v1.ManagementService.ListAgentVersions:output_type -> management.v1.ListAgentVersionsResponse
	39, // 38: management.v1.ManagementService.RegisterNode:output_type -> management.v1.RegisterNodeResponse
	40, // 39: management.v1.ManagementService.UnregisterNode:output_type -> management.v1.UnregisterNodeResponse
	41, // 40: management.v1.ManagementService.ListNodes:output_type -> management.v1.ListNodesResponse
	42, // 41: management.v1.ManagementService.GetNode:output_type -> management.v1.GetNodeResponse
	2,  // 42: management.v1.ManagementService.AddService:output_type -> management.v1.AddServiceResponse
	7,  // 43: management.v1.ManagementService.ListServices:output_type -> management.v1.ListServicesResponse
	43, // 44: management.v1.ManagementService.DiscoverRDS:output_type -> management.v1.DiscoverRDSResponse
	44, // 45: management.v1.ManagementService.DiscoverAzureDatabase:output_type -> management.v1.DiscoverAzureDatabaseResponse
	45, // 46: management.v1.ManagementService.AddAzureDatabase:output_type -> management.v1.AddAzureDatabaseResponse
	4,  // 47: management.v1.ManagementService.RemoveService:output_type -> management.v1.RemoveServiceResponse
	35, // [35:48] is the sub-list for method output_type
	22, // [22:35] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_management_v1_service_proto_init() }
func file_management_v1_service_proto_init() {
	if File_management_v1_service_proto != nil {
		return
	}
	file_management_v1_agent_proto_init()
	file_management_v1_annotation_proto_init()
	file_management_v1_azure_proto_init()
	file_management_v1_external_proto_init()
	file_management_v1_haproxy_proto_init()
	file_management_v1_mongodb_proto_init()
	file_management_v1_mysql_proto_init()
	file_management_v1_node_proto_init()
	file_management_v1_postgresql_proto_init()
	file_management_v1_proxysql_proto_init()
	file_management_v1_rds_proto_init()
	file_management_v1_service_proto_msgTypes[0].OneofWrappers = []any{
		(*AddServiceRequest_Mysql)(nil),
		(*AddServiceRequest_Mongodb)(nil),
		(*AddServiceRequest_Postgresql)(nil),
		(*AddServiceRequest_Proxysql)(nil),
		(*AddServiceRequest_Haproxy)(nil),
		(*AddServiceRequest_External)(nil),
		(*AddServiceRequest_Rds)(nil),
	}
	file_management_v1_service_proto_msgTypes[1].OneofWrappers = []any{
		(*AddServiceResponse_Mysql)(nil),
		(*AddServiceResponse_Mongodb)(nil),
		(*AddServiceResponse_Postgresql)(nil),
		(*AddServiceResponse_Proxysql)(nil),
		(*AddServiceResponse_Haproxy)(nil),
		(*AddServiceResponse_External)(nil),
		(*AddServiceResponse_Rds)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_management_v1_service_proto_rawDesc), len(file_management_v1_service_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_management_v1_service_proto_goTypes,
		DependencyIndexes: file_management_v1_service_proto_depIdxs,
		EnumInfos:         file_management_v1_service_proto_enumTypes,
		MessageInfos:      file_management_v1_service_proto_msgTypes,
	}.Build()
	File_management_v1_service_proto = out.File
	file_management_v1_service_proto_goTypes = nil
	file_management_v1_service_proto_depIdxs = nil
}
