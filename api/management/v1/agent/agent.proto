syntax = "proto3";

package agent.v1beta1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

message UniversalAgent {
  message MySQLOptions {
    reserved 1; // tls_ca
    reserved 2; // tls_cert
    // True if TLS key is set.
    bool is_tls_key_set = 3;
  }

  message AzureOptions {
    // Azure client ID.
    string client_id = 1;
    // True if Azure client secret is set.
    bool is_client_secret_set = 2;
    // Azure resource group.
    string resource_group = 3;
    // Azure subscription ID.
    string subscription_id = 4;
    // Azure tenant ID.
    string tenant_id = 5;
  }

  message MongoDBOptions {
    // True if TLS certificate is set.
    bool is_tls_certificate_key_set = 1;
    // True if TLS certificate file password is set.
    bool is_tls_certificate_key_file_password_set = 2;
    reserved 3; // tls_ca
    // MongoDB auth mechanism.
    string authentication_mechanism = 4;
    // MongoDB auth database.
    string authentication_database = 5;
    // MongoDB stats collections.
    repeated string stats_collections = 6;
    // MongoDB collections limit.
    int32 collections_limit = 7;
    // True if all collectors are enabled.
    bool enable_all_collectors = 8;
  }

  message PostgreSQLOptions {
    reserved 1; // ssl_ca
    reserved 2; // ssl_cert
    // True if TLS key is set.
    bool is_ssl_key_set = 3;
    // Limit of databases for auto-discovery.
    int32 auto_discovery_limit = 4;
  }

  // Unique agent identifier.
  string agent_id = 1;
  // True if the agent password is set.
  bool is_agent_password_set = 2;
  // Agent type.
  string agent_type = 3;
  // AWS Access Key.
  string aws_access_key = 4;
  // True if AWS Secret Key is set.
  bool is_aws_secret_key_set = 5;
  // Options used for connecting to Azure.
  AzureOptions azure_options = 6;
  // Creation timestamp.
  google.protobuf.Timestamp created_at = 7;
  // Custom user-assigned labels.
  map<string, string> custom_labels = 8;
  // Desired Agent status: enabled (false) or disabled (true).
  bool disabled = 9;
  // List of disabled collector names.
  repeated string disabled_collectors = 10;
  // Listen port for scraping metrics.
  uint32 listen_port = 11;
  // Log level for exporter.
  string log_level = 12;
  // Limit query length in QAN.
  int32 max_query_length = 13;
  // Limit query log size in QAN.
  int64 max_query_log_size = 14;
  // Path under which metrics are exposed, used to generate URI.
  string metrics_path = 15;
  // Scheme to generate URI to exporter metrics endpoints.
  string metrics_scheme = 16;
  // TLS and other options for connecting to MongoDB.
  MongoDBOptions mongo_db_options = 17;
  // TLS options for connecting to MySQL.
  MySQLOptions mysql_options = 18;
  // A unique node identifier.
  string node_id = 19;
  // True if password for connecting the agent to the database is set.
  bool is_password_set = 20;
  // The pmm-agent identifier.
  string pmm_agent_id = 21;
  // TLS options for connecting to PostgreSQL.
  PostgreSQLOptions postgresql_options = 22;
  // Path to exec process.
  string process_exec_path = 23;
  // True if exporter uses push metrics mode.
  bool push_metrics = 24;
  // True if query examples are disabled.
  bool query_examples_disabled = 25;
  // True if query comments parsing is disabled.
  bool comments_parsing_disabled = 39;
  // True if RDS basic metrics are disdabled.
  bool rds_basic_metrics_disabled = 26;
  // True if RDS enhanced metrics are disdabled.
  bool rds_enhanced_metrics_disabled = 27;
  // Node identifier where this instance runs.
  string runs_on_node_id = 28;
  // Service identifier.
  string service_id = 29;
  // Actual Agent status.
  string status = 30;
  // Last known table count.
  int32 table_count = 31;
  // Tablestats group collectors are disabled if there are more than that number of tables.
  // 0 means tablestats group collectors are always enabled (no limit).
  // Negative value means tablestats group collectors are always disabled.
  int32 table_count_tablestats_group_limit = 32;
  // Use TLS for database connections.
  bool tls = 33;
  // Skip TLS certificate and hostname validation.
  bool tls_skip_verify = 34;
  // HTTP basic auth username for collecting metrics.
  string username = 35;
  // Last update timestamp.
  google.protobuf.Timestamp updated_at = 36;
  // Agent version.
  string version = 37;
  // True if Agent is running and connected to pmm-managed.
  bool is_connected = 38;
  // True if an exporter agent is exposed on all host addresses.
  bool expose_exporter = 40;
}

message ListAgentsRequest {
  // Only one of the parameters below must be set.

  // Return only Agents that relate to a specific ServiceID.
  string service_id = 1;
  // Return only Agents that relate to a specific NodeID.
  string node_id = 2;
}

message ListAgentsResponse {
  // List of Agents.
  repeated UniversalAgent agents = 1;
}

// Agent service provides public methods for managing and querying Agents.
service AgentService {
  // ListAgents returns a list of Agents filtered by service_id.
  rpc ListAgents(ListAgentsRequest) returns (ListAgentsResponse) {
    option (google.api.http) = {
      post: "/v1/management/Agent/List"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List Agents"
      description: "Returns a filtered list of Agents."
    };
  }
}
