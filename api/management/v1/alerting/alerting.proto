syntax = "proto3";

package alerting.v1;

import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "management/v1/alerting/params.proto";
import "management/v1/boolean_flag.proto";
import "management/v1/pagination.proto";
import "management/v1/severity.proto";
import "validate/validate.proto";

// BoolParamDefinition represents boolean parameter's default value.
message BoolParamDefinition {
  management.v1.BooleanFlag default = 1;
}

// FloatParamDefinition represents float parameter's default value and valid range.
message FloatParamDefinition {
  // True if default value is set.
  bool has_default = 1;
  // Default value if has_default is true.
  double default = 2;
  // True if minimal valid value is set.
  bool has_min = 3;
  // Minimal valid value (inclusive) if has_min is true.
  double min = 4;
  // True if maximal valid value is set.
  bool has_max = 5;
  // Maximal valid value (inclusive) if has_max is true.
  double max = 6;
}

// StringParamDefinition represents string parameter's default value.
message StringParamDefinition {
  // True if default value is set.
  bool has_default = 1;
  // Default value if has_default is true.
  string default = 2;
}

// ParamDefinition represents a single query parameter.
message ParamDefinition {
  // Machine-readable name (ID) that is used in expression.
  string name = 1 [(validate.rules).string.min_len = 1];
  // Short human-readable parameter summary.
  string summary = 2 [(validate.rules).string.min_len = 1];
  // Parameter unit.
  ParamUnit unit = 3;
  // Parameter type.
  ParamType type = 4;
  // Parameter value.
  oneof value {
    // Bool value.
    BoolParamDefinition bool = 5;
    // Float value.
    FloatParamDefinition float = 6;
    // String value.
    StringParamDefinition string = 7;
  }
}

// TemplateSource defines template source.
enum TemplateSource {
  TEMPLATE_SOURCE_UNSPECIFIED = 0;
  // Template that is shipped with PMM Server releases.
  TEMPLATE_SOURCE_BUILT_IN = 1;
  // Template that is downloaded from check.percona.com.
  TEMPLATE_SOURCE_SAAS = 2;
  // Templated loaded from user-suplied file.
  TEMPLATE_SOURCE_USER_FILE = 3;
  // Templated created via API.
  TEMPLATE_SOURCE_USER_API = 4;
}

// Template represents Alert Template that is used to create Alert Rule.
message Template {
  // Machine-readable name (ID).
  string name = 1;
  // Short human-readable summary.
  string summary = 2;
  // PromQL query expression with templating parameters.
  string expr = 3;
  // Query parameters definitions.
  repeated ParamDefinition params = 4;
  // Default duration value.
  google.protobuf.Duration for = 5;
  // Severity.
  management.v1.Severity severity = 6;
  // Labels.
  map<string, string> labels = 7;
  // Annotations.
  map<string, string> annotations = 8;
  // Template source. Only templates created via API can be updated or deleted via API.
  TemplateSource source = 9;
  // Template creation time. Empty for built-in and SaaS templates.
  google.protobuf.Timestamp created_at = 10;
  // YAML template file content. Empty for built-in and SaaS templates.
  string yaml = 11;
}

message ListTemplatesRequest {
  // If true, template files will be re-read from disk.
  bool reload = 1;
  // Page request.
  management.v1.PageParams page_params = 2;
}

message ListTemplatesResponse {
  repeated Template templates = 1;
  // Total items and pages.
  management.v1.PageTotals totals = 2;
}

message CreateTemplateRequest {
  // YAML template file content.
  string yaml = 1 [(validate.rules).string.min_len = 1];
}

message CreateTemplateResponse {}

message UpdateTemplateRequest {
  // Machine-readable name (ID).
  string name = 1 [(validate.rules).string.min_len = 1];
  // YAML template file content.
  string yaml = 2 [(validate.rules).string.min_len = 1];
}

message UpdateTemplateResponse {}

message DeleteTemplateRequest {
  string name = 1 [(validate.rules).string.min_len = 1];
}

message DeleteTemplateResponse {}

// FilterType represents filter matching type.
enum FilterType {
  FILTER_TYPE_UNSPECIFIED = 0;
  FILTER_TYPE_MATCH = 1;
  FILTER_TYPE_MISMATCH = 2;
}

// Filter represents a single filter condition.
message Filter {
  FilterType type = 1;
  string label = 2;
  string regexp = 3;
}

// ParamValue represents a single rule parameter value.
message ParamValue {
  // Machine-readable name (ID) that is used in expression.
  string name = 1 [(validate.rules).string.min_len = 1];
  // Parameter type.
  ParamType type = 2;
  // Parameter value.
  oneof value {
    // Bool value.
    bool bool = 3;
    // Float value.
    double float = 4;
    // String value.
    string string = 5;
  }
}

message CreateRuleRequest {
  // Template name.
  string template_name = 1;
  // Rule name.
  string name = 2;
  // Rule group name.
  string group = 3;
  // Folder UID.
  string folder_uid = 4;
  // Rule parameters. All template parameters should be set.
  repeated ParamValue params = 5;
  // Rule duration. Should be set.
  google.protobuf.Duration for = 6;
  // Rule severity. Should be set.
  management.v1.Severity severity = 7;
  // All custom labels to add or remove (with empty values) to default labels from template.
  map<string, string> custom_labels = 8;
  // Filters.
  repeated Filter filters = 9;
}

message CreateRuleResponse {}

// Alerting service lets to manage alerting templates and create alerting rules from them.
service AlertingService {
  // ListTemplates returns a list of all collected alert rule templates.
  rpc ListTemplates(ListTemplatesRequest) returns (ListTemplatesResponse) {
    option (google.api.http) = {
      post: "/v1/management/alerting/Templates/List"
      body: "*"
    };
  }
  // CreateTemplate creates a new template.
  rpc CreateTemplate(CreateTemplateRequest) returns (CreateTemplateResponse) {
    option (google.api.http) = {
      post: "/v1/management/alerting/Templates/Create"
      body: "*"
    };
  }
  // UpdateTemplate updates existing template, previously created via API.
  rpc UpdateTemplate(UpdateTemplateRequest) returns (UpdateTemplateResponse) {
    option (google.api.http) = {
      post: "/v1/management/alerting/Templates/Update"
      body: "*"
    };
  }
  // DeleteTemplate deletes existing, previously created via API.
  rpc DeleteTemplate(DeleteTemplateRequest) returns (DeleteTemplateResponse) {
    option (google.api.http) = {
      post: "/v1/management/alerting/Templates/Delete"
      body: "*"
    };
  }
  // CreateRule creates alerting rule from the given template.
  rpc CreateRule(CreateRuleRequest) returns (CreateRuleResponse) {
    option (google.api.http) = {
      post: "/v1/management/alerting/Rules/Create"
      body: "*"
    };
  }
}
