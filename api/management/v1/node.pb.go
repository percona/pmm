// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: management/v1/node.proto

package managementv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"

	v1 "github.com/percona/pmm/api/inventory/v1"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Node status.
type UniversalNode_Status int32

const (
	// Invalid status.
	UniversalNode_STATUS_UNSPECIFIED UniversalNode_Status = 0
	// The node is up.
	UniversalNode_STATUS_UP UniversalNode_Status = 1
	// The node is down.
	UniversalNode_STATUS_DOWN UniversalNode_Status = 2
	// The node's status cannot be known (e.g. there are no metrics yet).
	UniversalNode_STATUS_UNKNOWN UniversalNode_Status = 3
)

// Enum value maps for UniversalNode_Status.
var (
	UniversalNode_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_UP",
		2: "STATUS_DOWN",
		3: "STATUS_UNKNOWN",
	}
	UniversalNode_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_UP":          1,
		"STATUS_DOWN":        2,
		"STATUS_UNKNOWN":     3,
	}
)

func (x UniversalNode_Status) Enum() *UniversalNode_Status {
	p := new(UniversalNode_Status)
	*p = x
	return p
}

func (x UniversalNode_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UniversalNode_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_management_v1_node_proto_enumTypes[0].Descriptor()
}

func (UniversalNode_Status) Type() protoreflect.EnumType {
	return &file_management_v1_node_proto_enumTypes[0]
}

func (x UniversalNode_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UniversalNode_Status.Descriptor instead.
func (UniversalNode_Status) EnumDescriptor() ([]byte, []int) {
	return file_management_v1_node_proto_rawDescGZIP(), []int{5, 0}
}

// AddNodeParams holds node params and is used to add new node to inventory while adding new service.
type AddNodeParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Node type to be registered.
	NodeType v1.NodeType `protobuf:"varint,1,opt,name=node_type,json=nodeType,proto3,enum=inventory.v1.NodeType" json:"node_type,omitempty"`
	// Unique across all Nodes user-defined name.
	NodeName string `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Linux machine-id.
	MachineId string `protobuf:"bytes,3,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	// Linux distribution name and version.
	Distro string `protobuf:"bytes,4,opt,name=distro,proto3" json:"distro,omitempty"`
	// Container identifier. If specified, must be a unique Docker container identifier.
	ContainerId string `protobuf:"bytes,5,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Container name.
	ContainerName string `protobuf:"bytes,6,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	// Node model.
	NodeModel string `protobuf:"bytes,7,opt,name=node_model,json=nodeModel,proto3" json:"node_model,omitempty"`
	// Node region.
	Region string `protobuf:"bytes,8,opt,name=region,proto3" json:"region,omitempty"`
	// Node availability zone.
	Az string `protobuf:"bytes,9,opt,name=az,proto3" json:"az,omitempty"`
	// Custom user-assigned labels for Node.
	CustomLabels  map[string]string `protobuf:"bytes,10,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddNodeParams) Reset() {
	*x = AddNodeParams{}
	mi := &file_management_v1_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNodeParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNodeParams) ProtoMessage() {}

func (x *AddNodeParams) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNodeParams.ProtoReflect.Descriptor instead.
func (*AddNodeParams) Descriptor() ([]byte, []int) {
	return file_management_v1_node_proto_rawDescGZIP(), []int{0}
}

func (x *AddNodeParams) GetNodeType() v1.NodeType {
	if x != nil {
		return x.NodeType
	}
	return v1.NodeType(0)
}

func (x *AddNodeParams) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *AddNodeParams) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *AddNodeParams) GetDistro() string {
	if x != nil {
		return x.Distro
	}
	return ""
}

func (x *AddNodeParams) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *AddNodeParams) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *AddNodeParams) GetNodeModel() string {
	if x != nil {
		return x.NodeModel
	}
	return ""
}

func (x *AddNodeParams) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddNodeParams) GetAz() string {
	if x != nil {
		return x.Az
	}
	return ""
}

func (x *AddNodeParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

type RegisterNodeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Node type to be registered.
	NodeType v1.NodeType `protobuf:"varint,1,opt,name=node_type,json=nodeType,proto3,enum=inventory.v1.NodeType" json:"node_type,omitempty"`
	// A user-defined name unique across all Nodes.
	NodeName string `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Node address (DNS name or IP).
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Linux machine-id.
	MachineId string `protobuf:"bytes,4,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	// Linux distribution name and version.
	Distro string `protobuf:"bytes,5,opt,name=distro,proto3" json:"distro,omitempty"`
	// Container identifier. If specified, must be a unique Docker container identifier.
	ContainerId string `protobuf:"bytes,6,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Container name.
	ContainerName string `protobuf:"bytes,7,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	// Node model.
	NodeModel string `protobuf:"bytes,8,opt,name=node_model,json=nodeModel,proto3" json:"node_model,omitempty"`
	// Node region.
	Region string `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`
	// Node availability zone.
	Az string `protobuf:"bytes,10,opt,name=az,proto3" json:"az,omitempty"`
	// Custom user-assigned labels for Node.
	CustomLabels map[string]string `protobuf:"bytes,11,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// If true, and Node with that name already exist, it will be removed with all dependent Services and Agents.
	Reregister bool `protobuf:"varint,12,opt,name=reregister,proto3" json:"reregister,omitempty"`
	// Defines metrics flow model for node_exporter being added by this request.
	// Metrics could be pushed to the server with vmagent,
	// pulled by the server, or the server could choose behavior automatically.
	MetricsMode MetricsMode `protobuf:"varint,13,opt,name=metrics_mode,json=metricsMode,proto3,enum=management.v1.MetricsMode" json:"metrics_mode,omitempty"`
	// List of collector names to disable in this exporter.
	DisableCollectors []string `protobuf:"bytes,14,rep,name=disable_collectors,json=disableCollectors,proto3" json:"disable_collectors,omitempty"`
	// Custom password for exporter endpoint /metrics.
	AgentPassword string `protobuf:"bytes,15,opt,name=agent_password,json=agentPassword,proto3" json:"agent_password,omitempty"`
	// Optionally expose the exporter process on all public interfaces
	ExposeExporter bool `protobuf:"varint,16,opt,name=expose_exporter,json=exposeExporter,proto3" json:"expose_exporter,omitempty"`
	// AWS instance ID.
	InstanceId    string `protobuf:"bytes,17,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeRequest) Reset() {
	*x = RegisterNodeRequest{}
	mi := &file_management_v1_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeRequest) ProtoMessage() {}

func (x *RegisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_node_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterNodeRequest) GetNodeType() v1.NodeType {
	if x != nil {
		return x.NodeType
	}
	return v1.NodeType(0)
}

func (x *RegisterNodeRequest) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *RegisterNodeRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RegisterNodeRequest) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *RegisterNodeRequest) GetDistro() string {
	if x != nil {
		return x.Distro
	}
	return ""
}

func (x *RegisterNodeRequest) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *RegisterNodeRequest) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *RegisterNodeRequest) GetNodeModel() string {
	if x != nil {
		return x.NodeModel
	}
	return ""
}

func (x *RegisterNodeRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *RegisterNodeRequest) GetAz() string {
	if x != nil {
		return x.Az
	}
	return ""
}

func (x *RegisterNodeRequest) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *RegisterNodeRequest) GetReregister() bool {
	if x != nil {
		return x.Reregister
	}
	return false
}

func (x *RegisterNodeRequest) GetMetricsMode() MetricsMode {
	if x != nil {
		return x.MetricsMode
	}
	return MetricsMode_METRICS_MODE_UNSPECIFIED
}

func (x *RegisterNodeRequest) GetDisableCollectors() []string {
	if x != nil {
		return x.DisableCollectors
	}
	return nil
}

func (x *RegisterNodeRequest) GetAgentPassword() string {
	if x != nil {
		return x.AgentPassword
	}
	return ""
}

func (x *RegisterNodeRequest) GetExposeExporter() bool {
	if x != nil {
		return x.ExposeExporter
	}
	return false
}

func (x *RegisterNodeRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type RegisterNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GenericNode   *v1.GenericNode        `protobuf:"bytes,1,opt,name=generic_node,json=genericNode,proto3" json:"generic_node,omitempty"`
	ContainerNode *v1.ContainerNode      `protobuf:"bytes,2,opt,name=container_node,json=containerNode,proto3" json:"container_node,omitempty"`
	PmmAgent      *v1.PMMAgent           `protobuf:"bytes,3,opt,name=pmm_agent,json=pmmAgent,proto3" json:"pmm_agent,omitempty"`
	// Token represents token for vmagent auth config.
	Token string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	// Warning message.
	Warning       string `protobuf:"bytes,5,opt,name=warning,proto3" json:"warning,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeResponse) Reset() {
	*x = RegisterNodeResponse{}
	mi := &file_management_v1_node_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeResponse) ProtoMessage() {}

func (x *RegisterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_node_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeResponse.ProtoReflect.Descriptor instead.
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_node_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterNodeResponse) GetGenericNode() *v1.GenericNode {
	if x != nil {
		return x.GenericNode
	}
	return nil
}

func (x *RegisterNodeResponse) GetContainerNode() *v1.ContainerNode {
	if x != nil {
		return x.ContainerNode
	}
	return nil
}

func (x *RegisterNodeResponse) GetPmmAgent() *v1.PMMAgent {
	if x != nil {
		return x.PmmAgent
	}
	return nil
}

func (x *RegisterNodeResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RegisterNodeResponse) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

type UnregisterNodeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Node_id to be unregistered.
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Force delete node, related service account, even if it has more service tokens attached.
	Force         bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterNodeRequest) Reset() {
	*x = UnregisterNodeRequest{}
	mi := &file_management_v1_node_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterNodeRequest) ProtoMessage() {}

func (x *UnregisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_node_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterNodeRequest.ProtoReflect.Descriptor instead.
func (*UnregisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_node_proto_rawDescGZIP(), []int{3}
}

func (x *UnregisterNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *UnregisterNodeRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type UnregisterNodeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Warning message if there are more service tokens attached to service account.
	Warning       string `protobuf:"bytes,1,opt,name=warning,proto3" json:"warning,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterNodeResponse) Reset() {
	*x = UnregisterNodeResponse{}
	mi := &file_management_v1_node_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterNodeResponse) ProtoMessage() {}

func (x *UnregisterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_node_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterNodeResponse.ProtoReflect.Descriptor instead.
func (*UnregisterNodeResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_node_proto_rawDescGZIP(), []int{4}
}

func (x *UnregisterNodeResponse) GetWarning() string {
	if x != nil {
		return x.Warning
	}
	return ""
}

type UniversalNode struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique Node identifier.
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Node type.
	NodeType string `protobuf:"bytes,2,opt,name=node_type,json=nodeType,proto3" json:"node_type,omitempty"`
	// User-defined node name.
	NodeName string `protobuf:"bytes,3,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Linux machine-id.
	MachineId string `protobuf:"bytes,4,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	// Linux distribution name and version.
	Distro string `protobuf:"bytes,5,opt,name=distro,proto3" json:"distro,omitempty"`
	// Node model.
	NodeModel string `protobuf:"bytes,6,opt,name=node_model,json=nodeModel,proto3" json:"node_model,omitempty"`
	// A node's unique docker container identifier.
	ContainerId string `protobuf:"bytes,7,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Container name.
	ContainerName string `protobuf:"bytes,8,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	// Node address (DNS name or IP).
	Address string `protobuf:"bytes,9,opt,name=address,proto3" json:"address,omitempty"`
	// Node region.
	Region string `protobuf:"bytes,10,opt,name=region,proto3" json:"region,omitempty"`
	// Node availability zone.
	Az string `protobuf:"bytes,11,opt,name=az,proto3" json:"az,omitempty"`
	// Custom user-assigned labels for Node.
	CustomLabels map[string]string `protobuf:"bytes,12,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Creation timestamp.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Last update timestamp.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// The health status of the node.
	Status UniversalNode_Status `protobuf:"varint,15,opt,name=status,proto3,enum=management.v1.UniversalNode_Status" json:"status,omitempty"`
	// List of agents related to this node.
	Agents []*UniversalNode_Agent `protobuf:"bytes,16,rep,name=agents,proto3" json:"agents,omitempty"`
	// List of services running on this node.
	Services []*UniversalNode_Service `protobuf:"bytes,17,rep,name=services,proto3" json:"services,omitempty"`
	// Instance ID for cloud providers (e.g. AWS RDS).
	InstanceId    string `protobuf:"bytes,18,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UniversalNode) Reset() {
	*x = UniversalNode{}
	mi := &file_management_v1_node_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UniversalNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniversalNode) ProtoMessage() {}

func (x *UniversalNode) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_node_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniversalNode.ProtoReflect.Descriptor instead.
func (*UniversalNode) Descriptor() ([]byte, []int) {
	return file_management_v1_node_proto_rawDescGZIP(), []int{5}
}

func (x *UniversalNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *UniversalNode) GetNodeType() string {
	if x != nil {
		return x.NodeType
	}
	return ""
}

func (x *UniversalNode) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *UniversalNode) GetMachineId() string {
	if x != nil {
		return x.MachineId
	}
	return ""
}

func (x *UniversalNode) GetDistro() string {
	if x != nil {
		return x.Distro
	}
	return ""
}

func (x *UniversalNode) GetNodeModel() string {
	if x != nil {
		return x.NodeModel
	}
	return ""
}

func (x *UniversalNode) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *UniversalNode) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *UniversalNode) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *UniversalNode) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *UniversalNode) GetAz() string {
	if x != nil {
		return x.Az
	}
	return ""
}

func (x *UniversalNode) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *UniversalNode) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UniversalNode) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UniversalNode) GetStatus() UniversalNode_Status {
	if x != nil {
		return x.Status
	}
	return UniversalNode_STATUS_UNSPECIFIED
}

func (x *UniversalNode) GetAgents() []*UniversalNode_Agent {
	if x != nil {
		return x.Agents
	}
	return nil
}

func (x *UniversalNode) GetServices() []*UniversalNode_Service {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *UniversalNode) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

type ListNodesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Node type to be filtered out.
	NodeType      v1.NodeType `protobuf:"varint,1,opt,name=node_type,json=nodeType,proto3,enum=inventory.v1.NodeType" json:"node_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesRequest) Reset() {
	*x = ListNodesRequest{}
	mi := &file_management_v1_node_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesRequest) ProtoMessage() {}

func (x *ListNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_node_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesRequest.ProtoReflect.Descriptor instead.
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_node_proto_rawDescGZIP(), []int{6}
}

func (x *ListNodesRequest) GetNodeType() v1.NodeType {
	if x != nil {
		return x.NodeType
	}
	return v1.NodeType(0)
}

type ListNodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*UniversalNode       `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesResponse) Reset() {
	*x = ListNodesResponse{}
	mi := &file_management_v1_node_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesResponse) ProtoMessage() {}

func (x *ListNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_node_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_node_proto_rawDescGZIP(), []int{7}
}

func (x *ListNodesResponse) GetNodes() []*UniversalNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type GetNodeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique Node identifier.
	NodeId        string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeRequest) Reset() {
	*x = GetNodeRequest{}
	mi := &file_management_v1_node_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRequest) ProtoMessage() {}

func (x *GetNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_node_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRequest.ProtoReflect.Descriptor instead.
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_node_proto_rawDescGZIP(), []int{8}
}

func (x *GetNodeRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type GetNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *UniversalNode         `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeResponse) Reset() {
	*x = GetNodeResponse{}
	mi := &file_management_v1_node_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeResponse) ProtoMessage() {}

func (x *GetNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_node_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeResponse.ProtoReflect.Descriptor instead.
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_node_proto_rawDescGZIP(), []int{9}
}

func (x *GetNodeResponse) GetNode() *UniversalNode {
	if x != nil {
		return x.Node
	}
	return nil
}

// Service represents a service running on a node.
type UniversalNode_Service struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique Service identifier.
	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Service type.
	ServiceType string `protobuf:"bytes,2,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	// Service name.
	ServiceName   string `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UniversalNode_Service) Reset() {
	*x = UniversalNode_Service{}
	mi := &file_management_v1_node_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UniversalNode_Service) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniversalNode_Service) ProtoMessage() {}

func (x *UniversalNode_Service) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_node_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniversalNode_Service.ProtoReflect.Descriptor instead.
func (*UniversalNode_Service) Descriptor() ([]byte, []int) {
	return file_management_v1_node_proto_rawDescGZIP(), []int{5, 0}
}

func (x *UniversalNode_Service) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *UniversalNode_Service) GetServiceType() string {
	if x != nil {
		return x.ServiceType
	}
	return ""
}

func (x *UniversalNode_Service) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type UniversalNode_Agent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique Agent identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// Agent type.
	AgentType string `protobuf:"bytes,2,opt,name=agent_type,json=agentType,proto3" json:"agent_type,omitempty"`
	// Actual Agent status.
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// True if Agent is running and connected to pmm-managed.
	IsConnected   bool `protobuf:"varint,4,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UniversalNode_Agent) Reset() {
	*x = UniversalNode_Agent{}
	mi := &file_management_v1_node_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UniversalNode_Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UniversalNode_Agent) ProtoMessage() {}

func (x *UniversalNode_Agent) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_node_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UniversalNode_Agent.ProtoReflect.Descriptor instead.
func (*UniversalNode_Agent) Descriptor() ([]byte, []int) {
	return file_management_v1_node_proto_rawDescGZIP(), []int{5, 1}
}

func (x *UniversalNode_Agent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *UniversalNode_Agent) GetAgentType() string {
	if x != nil {
		return x.AgentType
	}
	return ""
}

func (x *UniversalNode_Agent) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UniversalNode_Agent) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

var File_management_v1_node_proto protoreflect.FileDescriptor

const file_management_v1_node_proto_rawDesc = "" +
	"\n" +
	"\x18management/v1/node.proto\x12\rmanagement.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19inventory/v1/agents.proto\x1a\x18inventory/v1/nodes.proto\x1a\x1bmanagement/v1/metrics.proto\x1a\x17validate/validate.proto\"\xc8\x03\n" +
	"\rAddNodeParams\x123\n" +
	"\tnode_type\x18\x01 \x01(\x0e2\x16.inventory.v1.NodeTypeR\bnodeType\x12$\n" +
	"\tnode_name\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\bnodeName\x12\x1d\n" +
	"\n" +
	"machine_id\x18\x03 \x01(\tR\tmachineId\x12\x16\n" +
	"\x06distro\x18\x04 \x01(\tR\x06distro\x12!\n" +
	"\fcontainer_id\x18\x05 \x01(\tR\vcontainerId\x12%\n" +
	"\x0econtainer_name\x18\x06 \x01(\tR\rcontainerName\x12\x1d\n" +
	"\n" +
	"node_model\x18\a \x01(\tR\tnodeModel\x12\x16\n" +
	"\x06region\x18\b \x01(\tR\x06region\x12\x0e\n" +
	"\x02az\x18\t \x01(\tR\x02az\x12S\n" +
	"\rcustom_labels\x18\n" +
	" \x03(\v2..management.v1.AddNodeParams.CustomLabelsEntryR\fcustomLabels\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xed\x05\n" +
	"\x13RegisterNodeRequest\x123\n" +
	"\tnode_type\x18\x01 \x01(\x0e2\x16.inventory.v1.NodeTypeR\bnodeType\x12$\n" +
	"\tnode_name\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\bnodeName\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\x12\x1d\n" +
	"\n" +
	"machine_id\x18\x04 \x01(\tR\tmachineId\x12\x16\n" +
	"\x06distro\x18\x05 \x01(\tR\x06distro\x12!\n" +
	"\fcontainer_id\x18\x06 \x01(\tR\vcontainerId\x12%\n" +
	"\x0econtainer_name\x18\a \x01(\tR\rcontainerName\x12\x1d\n" +
	"\n" +
	"node_model\x18\b \x01(\tR\tnodeModel\x12\x16\n" +
	"\x06region\x18\t \x01(\tR\x06region\x12\x0e\n" +
	"\x02az\x18\n" +
	" \x01(\tR\x02az\x12Y\n" +
	"\rcustom_labels\x18\v \x03(\v24.management.v1.RegisterNodeRequest.CustomLabelsEntryR\fcustomLabels\x12\x1e\n" +
	"\n" +
	"reregister\x18\f \x01(\bR\n" +
	"reregister\x12=\n" +
	"\fmetrics_mode\x18\r \x01(\x0e2\x1a.management.v1.MetricsModeR\vmetricsMode\x12-\n" +
	"\x12disable_collectors\x18\x0e \x03(\tR\x11disableCollectors\x12%\n" +
	"\x0eagent_password\x18\x0f \x01(\tR\ragentPassword\x12'\n" +
	"\x0fexpose_exporter\x18\x10 \x01(\bR\x0eexposeExporter\x12\x1f\n" +
	"\vinstance_id\x18\x11 \x01(\tR\n" +
	"instanceId\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xfd\x01\n" +
	"\x14RegisterNodeResponse\x12<\n" +
	"\fgeneric_node\x18\x01 \x01(\v2\x19.inventory.v1.GenericNodeR\vgenericNode\x12B\n" +
	"\x0econtainer_node\x18\x02 \x01(\v2\x1b.inventory.v1.ContainerNodeR\rcontainerNode\x123\n" +
	"\tpmm_agent\x18\x03 \x01(\v2\x16.inventory.v1.PMMAgentR\bpmmAgent\x12\x14\n" +
	"\x05token\x18\x04 \x01(\tR\x05token\x12\x18\n" +
	"\awarning\x18\x05 \x01(\tR\awarning\"O\n" +
	"\x15UnregisterNodeRequest\x12 \n" +
	"\anode_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x06nodeId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"2\n" +
	"\x16UnregisterNodeResponse\x12\x18\n" +
	"\awarning\x18\x01 \x01(\tR\awarning\"\xf0\b\n" +
	"\rUniversalNode\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1b\n" +
	"\tnode_type\x18\x02 \x01(\tR\bnodeType\x12\x1b\n" +
	"\tnode_name\x18\x03 \x01(\tR\bnodeName\x12\x1d\n" +
	"\n" +
	"machine_id\x18\x04 \x01(\tR\tmachineId\x12\x16\n" +
	"\x06distro\x18\x05 \x01(\tR\x06distro\x12\x1d\n" +
	"\n" +
	"node_model\x18\x06 \x01(\tR\tnodeModel\x12!\n" +
	"\fcontainer_id\x18\a \x01(\tR\vcontainerId\x12%\n" +
	"\x0econtainer_name\x18\b \x01(\tR\rcontainerName\x12\x18\n" +
	"\aaddress\x18\t \x01(\tR\aaddress\x12\x16\n" +
	"\x06region\x18\n" +
	" \x01(\tR\x06region\x12\x0e\n" +
	"\x02az\x18\v \x01(\tR\x02az\x12S\n" +
	"\rcustom_labels\x18\f \x03(\v2..management.v1.UniversalNode.CustomLabelsEntryR\fcustomLabels\x129\n" +
	"\n" +
	"created_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12;\n" +
	"\x06status\x18\x0f \x01(\x0e2#.management.v1.UniversalNode.StatusR\x06status\x12:\n" +
	"\x06agents\x18\x10 \x03(\v2\".management.v1.UniversalNode.AgentR\x06agents\x12@\n" +
	"\bservices\x18\x11 \x03(\v2$.management.v1.UniversalNode.ServiceR\bservices\x12\x1f\n" +
	"\vinstance_id\x18\x12 \x01(\tR\n" +
	"instanceId\x1an\n" +
	"\aService\x12\x1d\n" +
	"\n" +
	"service_id\x18\x01 \x01(\tR\tserviceId\x12!\n" +
	"\fservice_type\x18\x02 \x01(\tR\vserviceType\x12!\n" +
	"\fservice_name\x18\x03 \x01(\tR\vserviceName\x1a|\n" +
	"\x05Agent\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1d\n" +
	"\n" +
	"agent_type\x18\x02 \x01(\tR\tagentType\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12!\n" +
	"\fis_connected\x18\x04 \x01(\bR\visConnected\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"T\n" +
	"\x06Status\x12\x16\n" +
	"\x12STATUS_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tSTATUS_UP\x10\x01\x12\x0f\n" +
	"\vSTATUS_DOWN\x10\x02\x12\x12\n" +
	"\x0eSTATUS_UNKNOWN\x10\x03\"G\n" +
	"\x10ListNodesRequest\x123\n" +
	"\tnode_type\x18\x01 \x01(\x0e2\x16.inventory.v1.NodeTypeR\bnodeType\"G\n" +
	"\x11ListNodesResponse\x122\n" +
	"\x05nodes\x18\x01 \x03(\v2\x1c.management.v1.UniversalNodeR\x05nodes\"2\n" +
	"\x0eGetNodeRequest\x12 \n" +
	"\anode_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x06nodeId\"C\n" +
	"\x0fGetNodeResponse\x120\n" +
	"\x04node\x18\x01 \x01(\v2\x1c.management.v1.UniversalNodeR\x04nodeB\xaa\x01\n" +
	"\x11com.management.v1B\tNodeProtoP\x01Z5github.com/percona/pmm/api/management/v1;managementv1\xa2\x02\x03MXX\xaa\x02\rManagement.V1\xca\x02\rManagement\\V1\xe2\x02\x19Management\\V1\\GPBMetadata\xea\x02\x0eManagement::V1b\x06proto3"

var (
	file_management_v1_node_proto_rawDescOnce sync.Once
	file_management_v1_node_proto_rawDescData []byte
)

func file_management_v1_node_proto_rawDescGZIP() []byte {
	file_management_v1_node_proto_rawDescOnce.Do(func() {
		file_management_v1_node_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_management_v1_node_proto_rawDesc), len(file_management_v1_node_proto_rawDesc)))
	})
	return file_management_v1_node_proto_rawDescData
}

var (
	file_management_v1_node_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_management_v1_node_proto_msgTypes  = make([]protoimpl.MessageInfo, 15)
	file_management_v1_node_proto_goTypes   = []any{
		(UniversalNode_Status)(0),      // 0: management.v1.UniversalNode.Status
		(*AddNodeParams)(nil),          // 1: management.v1.AddNodeParams
		(*RegisterNodeRequest)(nil),    // 2: management.v1.RegisterNodeRequest
		(*RegisterNodeResponse)(nil),   // 3: management.v1.RegisterNodeResponse
		(*UnregisterNodeRequest)(nil),  // 4: management.v1.UnregisterNodeRequest
		(*UnregisterNodeResponse)(nil), // 5: management.v1.UnregisterNodeResponse
		(*UniversalNode)(nil),          // 6: management.v1.UniversalNode
		(*ListNodesRequest)(nil),       // 7: management.v1.ListNodesRequest
		(*ListNodesResponse)(nil),      // 8: management.v1.ListNodesResponse
		(*GetNodeRequest)(nil),         // 9: management.v1.GetNodeRequest
		(*GetNodeResponse)(nil),        // 10: management.v1.GetNodeResponse
		nil,                            // 11: management.v1.AddNodeParams.CustomLabelsEntry
		nil,                            // 12: management.v1.RegisterNodeRequest.CustomLabelsEntry
		(*UniversalNode_Service)(nil),  // 13: management.v1.UniversalNode.Service
		(*UniversalNode_Agent)(nil),    // 14: management.v1.UniversalNode.Agent
		nil,                            // 15: management.v1.UniversalNode.CustomLabelsEntry
		(v1.NodeType)(0),               // 16: inventory.v1.NodeType
		(MetricsMode)(0),               // 17: management.v1.MetricsMode
		(*v1.GenericNode)(nil),         // 18: inventory.v1.GenericNode
		(*v1.ContainerNode)(nil),       // 19: inventory.v1.ContainerNode
		(*v1.PMMAgent)(nil),            // 20: inventory.v1.PMMAgent
		(*timestamppb.Timestamp)(nil),  // 21: google.protobuf.Timestamp
	}
)

var file_management_v1_node_proto_depIdxs = []int32{
	16, // 0: management.v1.AddNodeParams.node_type:type_name -> inventory.v1.NodeType
	11, // 1: management.v1.AddNodeParams.custom_labels:type_name -> management.v1.AddNodeParams.CustomLabelsEntry
	16, // 2: management.v1.RegisterNodeRequest.node_type:type_name -> inventory.v1.NodeType
	12, // 3: management.v1.RegisterNodeRequest.custom_labels:type_name -> management.v1.RegisterNodeRequest.CustomLabelsEntry
	17, // 4: management.v1.RegisterNodeRequest.metrics_mode:type_name -> management.v1.MetricsMode
	18, // 5: management.v1.RegisterNodeResponse.generic_node:type_name -> inventory.v1.GenericNode
	19, // 6: management.v1.RegisterNodeResponse.container_node:type_name -> inventory.v1.ContainerNode
	20, // 7: management.v1.RegisterNodeResponse.pmm_agent:type_name -> inventory.v1.PMMAgent
	15, // 8: management.v1.UniversalNode.custom_labels:type_name -> management.v1.UniversalNode.CustomLabelsEntry
	21, // 9: management.v1.UniversalNode.created_at:type_name -> google.protobuf.Timestamp
	21, // 10: management.v1.UniversalNode.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 11: management.v1.UniversalNode.status:type_name -> management.v1.UniversalNode.Status
	14, // 12: management.v1.UniversalNode.agents:type_name -> management.v1.UniversalNode.Agent
	13, // 13: management.v1.UniversalNode.services:type_name -> management.v1.UniversalNode.Service
	16, // 14: management.v1.ListNodesRequest.node_type:type_name -> inventory.v1.NodeType
	6,  // 15: management.v1.ListNodesResponse.nodes:type_name -> management.v1.UniversalNode
	6,  // 16: management.v1.GetNodeResponse.node:type_name -> management.v1.UniversalNode
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_management_v1_node_proto_init() }
func file_management_v1_node_proto_init() {
	if File_management_v1_node_proto != nil {
		return
	}
	file_management_v1_metrics_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_management_v1_node_proto_rawDesc), len(file_management_v1_node_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_management_v1_node_proto_goTypes,
		DependencyIndexes: file_management_v1_node_proto_depIdxs,
		EnumInfos:         file_management_v1_node_proto_enumTypes,
		MessageInfos:      file_management_v1_node_proto_msgTypes,
	}.Build()
	File_management_v1_node_proto = out.File
	file_management_v1_node_proto_goTypes = nil
	file_management_v1_node_proto_depIdxs = nil
}
