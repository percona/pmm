// Code generated by go-swagger; DO NOT EDIT.

package advisor_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// StartAdvisorChecksReader is a Reader for the StartAdvisorChecks structure.
type StartAdvisorChecksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartAdvisorChecksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartAdvisorChecksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewStartAdvisorChecksDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStartAdvisorChecksOK creates a StartAdvisorChecksOK with default headers values
func NewStartAdvisorChecksOK() *StartAdvisorChecksOK {
	return &StartAdvisorChecksOK{}
}

/*
StartAdvisorChecksOK describes a response with status code 200, with default header values.

A successful response.
*/
type StartAdvisorChecksOK struct {
	Payload interface{}
}

func (o *StartAdvisorChecksOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/Advisors/StartChecks][%d] startAdvisorChecksOk  %+v", 200, o.Payload)
}

func (o *StartAdvisorChecksOK) GetPayload() interface{} {
	return o.Payload
}

func (o *StartAdvisorChecksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartAdvisorChecksDefault creates a StartAdvisorChecksDefault with default headers values
func NewStartAdvisorChecksDefault(code int) *StartAdvisorChecksDefault {
	return &StartAdvisorChecksDefault{
		_statusCode: code,
	}
}

/*
StartAdvisorChecksDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type StartAdvisorChecksDefault struct {
	_statusCode int

	Payload *StartAdvisorChecksDefaultBody
}

// Code gets the status code for the start advisor checks default response
func (o *StartAdvisorChecksDefault) Code() int {
	return o._statusCode
}

func (o *StartAdvisorChecksDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/Advisors/StartChecks][%d] StartAdvisorChecks default  %+v", o._statusCode, o.Payload)
}

func (o *StartAdvisorChecksDefault) GetPayload() *StartAdvisorChecksDefaultBody {
	return o.Payload
}

func (o *StartAdvisorChecksDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(StartAdvisorChecksDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
StartAdvisorChecksBody start advisor checks body
swagger:model StartAdvisorChecksBody
*/
type StartAdvisorChecksBody struct {
	// Names of the checks that should be started.
	Names []string `json:"names"`
}

// Validate validates this start advisor checks body
func (o *StartAdvisorChecksBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this start advisor checks body based on context it is used
func (o *StartAdvisorChecksBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *StartAdvisorChecksBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StartAdvisorChecksBody) UnmarshalBinary(b []byte) error {
	var res StartAdvisorChecksBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
StartAdvisorChecksDefaultBody start advisor checks default body
swagger:model StartAdvisorChecksDefaultBody
*/
type StartAdvisorChecksDefaultBody struct {
	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*StartAdvisorChecksDefaultBodyDetailsItems0 `json:"details"`
}

// Validate validates this start advisor checks default body
func (o *StartAdvisorChecksDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *StartAdvisorChecksDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("StartAdvisorChecks default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("StartAdvisorChecks default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this start advisor checks default body based on the context it is used
func (o *StartAdvisorChecksDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *StartAdvisorChecksDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Details); i++ {
		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("StartAdvisorChecks default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("StartAdvisorChecks default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *StartAdvisorChecksDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StartAdvisorChecksDefaultBody) UnmarshalBinary(b []byte) error {
	var res StartAdvisorChecksDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
StartAdvisorChecksDefaultBodyDetailsItems0 start advisor checks default body details items0
swagger:model StartAdvisorChecksDefaultBodyDetailsItems0
*/
type StartAdvisorChecksDefaultBodyDetailsItems0 struct {
	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this start advisor checks default body details items0
func (o *StartAdvisorChecksDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this start advisor checks default body details items0 based on context it is used
func (o *StartAdvisorChecksDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *StartAdvisorChecksDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StartAdvisorChecksDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res StartAdvisorChecksDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
