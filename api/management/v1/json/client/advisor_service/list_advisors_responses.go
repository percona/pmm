// Code generated by go-swagger; DO NOT EDIT.

package advisor_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ListAdvisorsReader is a Reader for the ListAdvisors structure.
type ListAdvisorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAdvisorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAdvisorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListAdvisorsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListAdvisorsOK creates a ListAdvisorsOK with default headers values
func NewListAdvisorsOK() *ListAdvisorsOK {
	return &ListAdvisorsOK{}
}

/*
ListAdvisorsOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListAdvisorsOK struct {
	Payload *ListAdvisorsOKBody
}

func (o *ListAdvisorsOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/Advisors/List][%d] listAdvisorsOk  %+v", 200, o.Payload)
}

func (o *ListAdvisorsOK) GetPayload() *ListAdvisorsOKBody {
	return o.Payload
}

func (o *ListAdvisorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(ListAdvisorsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAdvisorsDefault creates a ListAdvisorsDefault with default headers values
func NewListAdvisorsDefault(code int) *ListAdvisorsDefault {
	return &ListAdvisorsDefault{
		_statusCode: code,
	}
}

/*
ListAdvisorsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListAdvisorsDefault struct {
	_statusCode int

	Payload *ListAdvisorsDefaultBody
}

// Code gets the status code for the list advisors default response
func (o *ListAdvisorsDefault) Code() int {
	return o._statusCode
}

func (o *ListAdvisorsDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/Advisors/List][%d] ListAdvisors default  %+v", o._statusCode, o.Payload)
}

func (o *ListAdvisorsDefault) GetPayload() *ListAdvisorsDefaultBody {
	return o.Payload
}

func (o *ListAdvisorsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(ListAdvisorsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
ListAdvisorsDefaultBody list advisors default body
swagger:model ListAdvisorsDefaultBody
*/
type ListAdvisorsDefaultBody struct {
	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*ListAdvisorsDefaultBodyDetailsItems0 `json:"details"`
}

// Validate validates this list advisors default body
func (o *ListAdvisorsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAdvisorsDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ListAdvisors default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("ListAdvisors default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this list advisors default body based on the context it is used
func (o *ListAdvisorsDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAdvisorsDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Details); i++ {
		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ListAdvisors default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("ListAdvisors default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListAdvisorsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAdvisorsDefaultBody) UnmarshalBinary(b []byte) error {
	var res ListAdvisorsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAdvisorsDefaultBodyDetailsItems0 list advisors default body details items0
swagger:model ListAdvisorsDefaultBodyDetailsItems0
*/
type ListAdvisorsDefaultBodyDetailsItems0 struct {
	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this list advisors default body details items0
func (o *ListAdvisorsDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list advisors default body details items0 based on context it is used
func (o *ListAdvisorsDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListAdvisorsDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAdvisorsDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res ListAdvisorsDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAdvisorsOKBody list advisors OK body
swagger:model ListAdvisorsOKBody
*/
type ListAdvisorsOKBody struct {
	// advisors
	Advisors []*ListAdvisorsOKBodyAdvisorsItems0 `json:"advisors"`
}

// Validate validates this list advisors OK body
func (o *ListAdvisorsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAdvisors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAdvisorsOKBody) validateAdvisors(formats strfmt.Registry) error {
	if swag.IsZero(o.Advisors) { // not required
		return nil
	}

	for i := 0; i < len(o.Advisors); i++ {
		if swag.IsZero(o.Advisors[i]) { // not required
			continue
		}

		if o.Advisors[i] != nil {
			if err := o.Advisors[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listAdvisorsOk" + "." + "advisors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("listAdvisorsOk" + "." + "advisors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this list advisors OK body based on the context it is used
func (o *ListAdvisorsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAdvisors(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAdvisorsOKBody) contextValidateAdvisors(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Advisors); i++ {
		if o.Advisors[i] != nil {
			if err := o.Advisors[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listAdvisorsOk" + "." + "advisors" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("listAdvisorsOk" + "." + "advisors" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListAdvisorsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAdvisorsOKBody) UnmarshalBinary(b []byte) error {
	var res ListAdvisorsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAdvisorsOKBodyAdvisorsItems0 list advisors OK body advisors items0
swagger:model ListAdvisorsOKBodyAdvisorsItems0
*/
type ListAdvisorsOKBodyAdvisorsItems0 struct {
	// Machine-readable name (ID) that is used in expression.
	Name string `json:"name,omitempty"`

	// Long human-readable description.
	Description string `json:"description,omitempty"`

	// Short human-readable summary.
	Summary string `json:"summary,omitempty"`

	// Comment.
	Comment string `json:"comment,omitempty"`

	// Category.
	Category string `json:"category,omitempty"`

	// Advisor checks.
	Checks []*ListAdvisorsOKBodyAdvisorsItems0ChecksItems0 `json:"checks"`
}

// Validate validates this list advisors OK body advisors items0
func (o *ListAdvisorsOKBodyAdvisorsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateChecks(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAdvisorsOKBodyAdvisorsItems0) validateChecks(formats strfmt.Registry) error {
	if swag.IsZero(o.Checks) { // not required
		return nil
	}

	for i := 0; i < len(o.Checks); i++ {
		if swag.IsZero(o.Checks[i]) { // not required
			continue
		}

		if o.Checks[i] != nil {
			if err := o.Checks[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("checks" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("checks" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this list advisors OK body advisors items0 based on the context it is used
func (o *ListAdvisorsOKBodyAdvisorsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateChecks(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAdvisorsOKBodyAdvisorsItems0) contextValidateChecks(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Checks); i++ {
		if o.Checks[i] != nil {
			if err := o.Checks[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("checks" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("checks" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListAdvisorsOKBodyAdvisorsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAdvisorsOKBodyAdvisorsItems0) UnmarshalBinary(b []byte) error {
	var res ListAdvisorsOKBodyAdvisorsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAdvisorsOKBodyAdvisorsItems0ChecksItems0 AdvisorCheck contains check name and status.
swagger:model ListAdvisorsOKBodyAdvisorsItems0ChecksItems0
*/
type ListAdvisorsOKBodyAdvisorsItems0ChecksItems0 struct {
	// Machine-readable name (ID) that is used in expression.
	Name string `json:"name,omitempty"`

	// True if that check is enabled.
	Enabled bool `json:"enabled,omitempty"`

	// Long human-readable description.
	Description string `json:"description,omitempty"`

	// Short human-readable summary.
	Summary string `json:"summary,omitempty"`

	// AdvisorCheckInterval represents possible execution interval values for checks.
	// Enum: [ADVISOR_CHECK_INTERVAL_UNSPECIFIED ADVISOR_CHECK_INTERVAL_STANDARD ADVISOR_CHECK_INTERVAL_FREQUENT ADVISOR_CHECK_INTERVAL_RARE]
	Interval *string `json:"interval,omitempty"`

	// family
	// Enum: [ADVISOR_CHECK_FAMILY_UNSPECIFIED ADVISOR_CHECK_FAMILY_MYSQL ADVISOR_CHECK_FAMILY_POSTGRESQL ADVISOR_CHECK_FAMILY_MONGODB]
	Family *string `json:"family,omitempty"`
}

// Validate validates this list advisors OK body advisors items0 checks items0
func (o *ListAdvisorsOKBodyAdvisorsItems0ChecksItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateInterval(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFamily(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var listAdvisorsOkBodyAdvisorsItems0ChecksItems0TypeIntervalPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ADVISOR_CHECK_INTERVAL_UNSPECIFIED","ADVISOR_CHECK_INTERVAL_STANDARD","ADVISOR_CHECK_INTERVAL_FREQUENT","ADVISOR_CHECK_INTERVAL_RARE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		listAdvisorsOkBodyAdvisorsItems0ChecksItems0TypeIntervalPropEnum = append(listAdvisorsOkBodyAdvisorsItems0ChecksItems0TypeIntervalPropEnum, v)
	}
}

const (

	// ListAdvisorsOKBodyAdvisorsItems0ChecksItems0IntervalADVISORCHECKINTERVALUNSPECIFIED captures enum value "ADVISOR_CHECK_INTERVAL_UNSPECIFIED"
	ListAdvisorsOKBodyAdvisorsItems0ChecksItems0IntervalADVISORCHECKINTERVALUNSPECIFIED string = "ADVISOR_CHECK_INTERVAL_UNSPECIFIED"

	// ListAdvisorsOKBodyAdvisorsItems0ChecksItems0IntervalADVISORCHECKINTERVALSTANDARD captures enum value "ADVISOR_CHECK_INTERVAL_STANDARD"
	ListAdvisorsOKBodyAdvisorsItems0ChecksItems0IntervalADVISORCHECKINTERVALSTANDARD string = "ADVISOR_CHECK_INTERVAL_STANDARD"

	// ListAdvisorsOKBodyAdvisorsItems0ChecksItems0IntervalADVISORCHECKINTERVALFREQUENT captures enum value "ADVISOR_CHECK_INTERVAL_FREQUENT"
	ListAdvisorsOKBodyAdvisorsItems0ChecksItems0IntervalADVISORCHECKINTERVALFREQUENT string = "ADVISOR_CHECK_INTERVAL_FREQUENT"

	// ListAdvisorsOKBodyAdvisorsItems0ChecksItems0IntervalADVISORCHECKINTERVALRARE captures enum value "ADVISOR_CHECK_INTERVAL_RARE"
	ListAdvisorsOKBodyAdvisorsItems0ChecksItems0IntervalADVISORCHECKINTERVALRARE string = "ADVISOR_CHECK_INTERVAL_RARE"
)

// prop value enum
func (o *ListAdvisorsOKBodyAdvisorsItems0ChecksItems0) validateIntervalEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, listAdvisorsOkBodyAdvisorsItems0ChecksItems0TypeIntervalPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *ListAdvisorsOKBodyAdvisorsItems0ChecksItems0) validateInterval(formats strfmt.Registry) error {
	if swag.IsZero(o.Interval) { // not required
		return nil
	}

	// value enum
	if err := o.validateIntervalEnum("interval", "body", *o.Interval); err != nil {
		return err
	}

	return nil
}

var listAdvisorsOkBodyAdvisorsItems0ChecksItems0TypeFamilyPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ADVISOR_CHECK_FAMILY_UNSPECIFIED","ADVISOR_CHECK_FAMILY_MYSQL","ADVISOR_CHECK_FAMILY_POSTGRESQL","ADVISOR_CHECK_FAMILY_MONGODB"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		listAdvisorsOkBodyAdvisorsItems0ChecksItems0TypeFamilyPropEnum = append(listAdvisorsOkBodyAdvisorsItems0ChecksItems0TypeFamilyPropEnum, v)
	}
}

const (

	// ListAdvisorsOKBodyAdvisorsItems0ChecksItems0FamilyADVISORCHECKFAMILYUNSPECIFIED captures enum value "ADVISOR_CHECK_FAMILY_UNSPECIFIED"
	ListAdvisorsOKBodyAdvisorsItems0ChecksItems0FamilyADVISORCHECKFAMILYUNSPECIFIED string = "ADVISOR_CHECK_FAMILY_UNSPECIFIED"

	// ListAdvisorsOKBodyAdvisorsItems0ChecksItems0FamilyADVISORCHECKFAMILYMYSQL captures enum value "ADVISOR_CHECK_FAMILY_MYSQL"
	ListAdvisorsOKBodyAdvisorsItems0ChecksItems0FamilyADVISORCHECKFAMILYMYSQL string = "ADVISOR_CHECK_FAMILY_MYSQL"

	// ListAdvisorsOKBodyAdvisorsItems0ChecksItems0FamilyADVISORCHECKFAMILYPOSTGRESQL captures enum value "ADVISOR_CHECK_FAMILY_POSTGRESQL"
	ListAdvisorsOKBodyAdvisorsItems0ChecksItems0FamilyADVISORCHECKFAMILYPOSTGRESQL string = "ADVISOR_CHECK_FAMILY_POSTGRESQL"

	// ListAdvisorsOKBodyAdvisorsItems0ChecksItems0FamilyADVISORCHECKFAMILYMONGODB captures enum value "ADVISOR_CHECK_FAMILY_MONGODB"
	ListAdvisorsOKBodyAdvisorsItems0ChecksItems0FamilyADVISORCHECKFAMILYMONGODB string = "ADVISOR_CHECK_FAMILY_MONGODB"
)

// prop value enum
func (o *ListAdvisorsOKBodyAdvisorsItems0ChecksItems0) validateFamilyEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, listAdvisorsOkBodyAdvisorsItems0ChecksItems0TypeFamilyPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *ListAdvisorsOKBodyAdvisorsItems0ChecksItems0) validateFamily(formats strfmt.Registry) error {
	if swag.IsZero(o.Family) { // not required
		return nil
	}

	// value enum
	if err := o.validateFamilyEnum("family", "body", *o.Family); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this list advisors OK body advisors items0 checks items0 based on context it is used
func (o *ListAdvisorsOKBodyAdvisorsItems0ChecksItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListAdvisorsOKBodyAdvisorsItems0ChecksItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAdvisorsOKBodyAdvisorsItems0ChecksItems0) UnmarshalBinary(b []byte) error {
	var res ListAdvisorsOKBodyAdvisorsItems0ChecksItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
