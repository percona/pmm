// Code generated by go-swagger; DO NOT EDIT.

package management_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ListAgentVersionsReader is a Reader for the ListAgentVersions structure.
type ListAgentVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAgentVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAgentVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListAgentVersionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListAgentVersionsOK creates a ListAgentVersionsOK with default headers values
func NewListAgentVersionsOK() *ListAgentVersionsOK {
	return &ListAgentVersionsOK{}
}

/*
ListAgentVersionsOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListAgentVersionsOK struct {
	Payload *ListAgentVersionsOKBody
}

func (o *ListAgentVersionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/management/agents/versions][%d] listAgentVersionsOk  %+v", 200, o.Payload)
}

func (o *ListAgentVersionsOK) GetPayload() *ListAgentVersionsOKBody {
	return o.Payload
}

func (o *ListAgentVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(ListAgentVersionsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAgentVersionsDefault creates a ListAgentVersionsDefault with default headers values
func NewListAgentVersionsDefault(code int) *ListAgentVersionsDefault {
	return &ListAgentVersionsDefault{
		_statusCode: code,
	}
}

/*
ListAgentVersionsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListAgentVersionsDefault struct {
	_statusCode int

	Payload *ListAgentVersionsDefaultBody
}

// Code gets the status code for the list agent versions default response
func (o *ListAgentVersionsDefault) Code() int {
	return o._statusCode
}

func (o *ListAgentVersionsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/management/agents/versions][%d] ListAgentVersions default  %+v", o._statusCode, o.Payload)
}

func (o *ListAgentVersionsDefault) GetPayload() *ListAgentVersionsDefaultBody {
	return o.Payload
}

func (o *ListAgentVersionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(ListAgentVersionsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
ListAgentVersionsDefaultBody list agent versions default body
swagger:model ListAgentVersionsDefaultBody
*/
type ListAgentVersionsDefaultBody struct {
	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*ListAgentVersionsDefaultBodyDetailsItems0 `json:"details"`
}

// Validate validates this list agent versions default body
func (o *ListAgentVersionsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAgentVersionsDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ListAgentVersions default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("ListAgentVersions default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this list agent versions default body based on the context it is used
func (o *ListAgentVersionsDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAgentVersionsDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Details); i++ {
		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ListAgentVersions default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("ListAgentVersions default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListAgentVersionsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAgentVersionsDefaultBody) UnmarshalBinary(b []byte) error {
	var res ListAgentVersionsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAgentVersionsDefaultBodyDetailsItems0 list agent versions default body details items0
swagger:model ListAgentVersionsDefaultBodyDetailsItems0
*/
type ListAgentVersionsDefaultBodyDetailsItems0 struct {
	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this list agent versions default body details items0
func (o *ListAgentVersionsDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list agent versions default body details items0 based on context it is used
func (o *ListAgentVersionsDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListAgentVersionsDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAgentVersionsDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res ListAgentVersionsDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAgentVersionsOKBody list agent versions OK body
swagger:model ListAgentVersionsOKBody
*/
type ListAgentVersionsOKBody struct {
	// List of Agent versions.
	AgentVersions []*ListAgentVersionsOKBodyAgentVersionsItems0 `json:"agent_versions"`
}

// Validate validates this list agent versions OK body
func (o *ListAgentVersionsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAgentVersions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAgentVersionsOKBody) validateAgentVersions(formats strfmt.Registry) error {
	if swag.IsZero(o.AgentVersions) { // not required
		return nil
	}

	for i := 0; i < len(o.AgentVersions); i++ {
		if swag.IsZero(o.AgentVersions[i]) { // not required
			continue
		}

		if o.AgentVersions[i] != nil {
			if err := o.AgentVersions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listAgentVersionsOk" + "." + "agent_versions" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("listAgentVersionsOk" + "." + "agent_versions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this list agent versions OK body based on the context it is used
func (o *ListAgentVersionsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateAgentVersions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAgentVersionsOKBody) contextValidateAgentVersions(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.AgentVersions); i++ {
		if o.AgentVersions[i] != nil {
			if err := o.AgentVersions[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listAgentVersionsOk" + "." + "agent_versions" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("listAgentVersionsOk" + "." + "agent_versions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListAgentVersionsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAgentVersionsOKBody) UnmarshalBinary(b []byte) error {
	var res ListAgentVersionsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
ListAgentVersionsOKBodyAgentVersionsItems0 list agent versions OK body agent versions items0
swagger:model ListAgentVersionsOKBodyAgentVersionsItems0
*/
type ListAgentVersionsOKBodyAgentVersionsItems0 struct {
	// Agent ID.
	AgentID string `json:"agent_id,omitempty"`

	// Agent version.
	Version string `json:"version,omitempty"`

	// Node name where the agent runs.
	NodeName string `json:"node_name,omitempty"`

	//  - UPDATE_SEVERITY_UNSUPPORTED: The client version is newer than the server version.
	//  - UPDATE_SEVERITY_UP_TO_DATE: The client version matches the server version.
	//  - UPDATE_SEVERITY_REQUIRED: The client's minor or patch version is older.
	//  - UPDATE_SEVERITY_CRITICAL: The client's major version is older.
	// Enum: [UPDATE_SEVERITY_UNSPECIFIED UPDATE_SEVERITY_UNSUPPORTED UPDATE_SEVERITY_UP_TO_DATE UPDATE_SEVERITY_REQUIRED UPDATE_SEVERITY_CRITICAL]
	Severity *string `json:"severity,omitempty"`
}

// Validate validates this list agent versions OK body agent versions items0
func (o *ListAgentVersionsOKBodyAgentVersionsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSeverity(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var listAgentVersionsOkBodyAgentVersionsItems0TypeSeverityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["UPDATE_SEVERITY_UNSPECIFIED","UPDATE_SEVERITY_UNSUPPORTED","UPDATE_SEVERITY_UP_TO_DATE","UPDATE_SEVERITY_REQUIRED","UPDATE_SEVERITY_CRITICAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		listAgentVersionsOkBodyAgentVersionsItems0TypeSeverityPropEnum = append(listAgentVersionsOkBodyAgentVersionsItems0TypeSeverityPropEnum, v)
	}
}

const (

	// ListAgentVersionsOKBodyAgentVersionsItems0SeverityUPDATESEVERITYUNSPECIFIED captures enum value "UPDATE_SEVERITY_UNSPECIFIED"
	ListAgentVersionsOKBodyAgentVersionsItems0SeverityUPDATESEVERITYUNSPECIFIED string = "UPDATE_SEVERITY_UNSPECIFIED"

	// ListAgentVersionsOKBodyAgentVersionsItems0SeverityUPDATESEVERITYUNSUPPORTED captures enum value "UPDATE_SEVERITY_UNSUPPORTED"
	ListAgentVersionsOKBodyAgentVersionsItems0SeverityUPDATESEVERITYUNSUPPORTED string = "UPDATE_SEVERITY_UNSUPPORTED"

	// ListAgentVersionsOKBodyAgentVersionsItems0SeverityUPDATESEVERITYUPTODATE captures enum value "UPDATE_SEVERITY_UP_TO_DATE"
	ListAgentVersionsOKBodyAgentVersionsItems0SeverityUPDATESEVERITYUPTODATE string = "UPDATE_SEVERITY_UP_TO_DATE"

	// ListAgentVersionsOKBodyAgentVersionsItems0SeverityUPDATESEVERITYREQUIRED captures enum value "UPDATE_SEVERITY_REQUIRED"
	ListAgentVersionsOKBodyAgentVersionsItems0SeverityUPDATESEVERITYREQUIRED string = "UPDATE_SEVERITY_REQUIRED"

	// ListAgentVersionsOKBodyAgentVersionsItems0SeverityUPDATESEVERITYCRITICAL captures enum value "UPDATE_SEVERITY_CRITICAL"
	ListAgentVersionsOKBodyAgentVersionsItems0SeverityUPDATESEVERITYCRITICAL string = "UPDATE_SEVERITY_CRITICAL"
)

// prop value enum
func (o *ListAgentVersionsOKBodyAgentVersionsItems0) validateSeverityEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, listAgentVersionsOkBodyAgentVersionsItems0TypeSeverityPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *ListAgentVersionsOKBodyAgentVersionsItems0) validateSeverity(formats strfmt.Registry) error {
	if swag.IsZero(o.Severity) { // not required
		return nil
	}

	// value enum
	if err := o.validateSeverityEnum("severity", "body", *o.Severity); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this list agent versions OK body agent versions items0 based on context it is used
func (o *ListAgentVersionsOKBodyAgentVersionsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListAgentVersionsOKBodyAgentVersionsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAgentVersionsOKBodyAgentVersionsItems0) UnmarshalBinary(b []byte) error {
	var res ListAgentVersionsOKBodyAgentVersionsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
