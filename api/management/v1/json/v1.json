{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "PMM Management API",
    "version": "v1"
  },
  "paths": {
    "/v1/management/agents": {
      "get": {
        "description": "Lists Agents with filter.",
        "tags": [
          "ManagementService"
        ],
        "summary": "List Agents",
        "operationId": "ListAgents",
        "parameters": [
          {
            "type": "string",
            "description": "Return only Agents that relate to a specific ServiceID.",
            "name": "service_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Return only Agents that relate to a specific NodeID.",
            "name": "node_id",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "agents": {
                  "description": "List of Agents.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "agent_id": {
                        "description": "Unique agent identifier.",
                        "type": "string",
                        "x-order": 0
                      },
                      "agent_type": {
                        "description": "Agent type.",
                        "type": "string",
                        "x-order": 2
                      },
                      "aws_access_key": {
                        "description": "AWS Access Key.",
                        "type": "string",
                        "x-order": 3
                      },
                      "azure_options": {
                        "type": "object",
                        "properties": {
                          "client_id": {
                            "description": "Azure client ID.",
                            "type": "string",
                            "x-order": 0
                          },
                          "is_client_secret_set": {
                            "description": "True if Azure client secret is set.",
                            "type": "boolean",
                            "x-order": 1
                          },
                          "resource_group": {
                            "description": "Azure resource group.",
                            "type": "string",
                            "x-order": 2
                          },
                          "subscription_id": {
                            "description": "Azure subscription ID.",
                            "type": "string",
                            "x-order": 3
                          },
                          "tenant_id": {
                            "description": "Azure tenant ID.",
                            "type": "string",
                            "x-order": 4
                          }
                        },
                        "x-order": 5
                      },
                      "comments_parsing_disabled": {
                        "description": "True if query comments parsing is disabled.",
                        "type": "boolean",
                        "x-order": 25
                      },
                      "created_at": {
                        "description": "Creation timestamp.",
                        "type": "string",
                        "format": "date-time",
                        "x-order": 6
                      },
                      "custom_labels": {
                        "description": "Custom user-assigned labels.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-order": 7
                      },
                      "disabled": {
                        "description": "Desired Agent status: enabled (false) or disabled (true).",
                        "type": "boolean",
                        "x-order": 8
                      },
                      "disabled_collectors": {
                        "description": "List of disabled collector names.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-order": 9
                      },
                      "expose_exporter": {
                        "description": "True if an exporter agent is exposed on all host addresses.",
                        "type": "boolean",
                        "x-order": 39
                      },
                      "is_agent_password_set": {
                        "description": "True if the agent password is set.",
                        "type": "boolean",
                        "x-order": 1
                      },
                      "is_aws_secret_key_set": {
                        "description": "True if AWS Secret Key is set.",
                        "type": "boolean",
                        "x-order": 4
                      },
                      "is_connected": {
                        "description": "True if Agent is running and connected to pmm-managed.",
                        "type": "boolean",
                        "x-order": 38
                      },
                      "is_password_set": {
                        "description": "True if password for connecting the agent to the database is set.",
                        "type": "boolean",
                        "x-order": 19
                      },
                      "listen_port": {
                        "description": "Listen port for scraping metrics.",
                        "type": "integer",
                        "format": "int64",
                        "x-order": 10
                      },
                      "log_level": {
                        "description": "Log level for exporter.",
                        "type": "string",
                        "x-order": 11
                      },
                      "max_query_length": {
                        "description": "Limit query length in QAN.",
                        "type": "integer",
                        "format": "int32",
                        "x-order": 12
                      },
                      "max_query_log_size": {
                        "description": "Limit query log size in QAN.",
                        "type": "string",
                        "format": "int64",
                        "x-order": 13
                      },
                      "metrics_path": {
                        "description": "Path under which metrics are exposed, used to generate URI.",
                        "type": "string",
                        "x-order": 14
                      },
                      "metrics_scheme": {
                        "description": "Scheme to generate URI to exporter metrics endpoints.",
                        "type": "string",
                        "x-order": 15
                      },
                      "mongo_db_options": {
                        "type": "object",
                        "properties": {
                          "authentication_database": {
                            "description": "MongoDB auth database.",
                            "type": "string",
                            "x-order": 3
                          },
                          "authentication_mechanism": {
                            "description": "MongoDB auth mechanism.",
                            "type": "string",
                            "x-order": 2
                          },
                          "collections_limit": {
                            "description": "MongoDB collections limit.",
                            "type": "integer",
                            "format": "int32",
                            "x-order": 5
                          },
                          "enable_all_collectors": {
                            "description": "True if all collectors are enabled.",
                            "type": "boolean",
                            "x-order": 6
                          },
                          "is_tls_certificate_key_file_password_set": {
                            "description": "True if TLS certificate file password is set.",
                            "type": "boolean",
                            "x-order": 1
                          },
                          "is_tls_certificate_key_set": {
                            "description": "True if TLS certificate is set.",
                            "type": "boolean",
                            "x-order": 0
                          },
                          "stats_collections": {
                            "description": "MongoDB stats collections.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-order": 4
                          }
                        },
                        "x-order": 16
                      },
                      "mysql_options": {
                        "type": "object",
                        "properties": {
                          "is_tls_key_set": {
                            "description": "True if TLS key is set.",
                            "type": "boolean",
                            "x-order": 0
                          }
                        },
                        "x-order": 17
                      },
                      "node_id": {
                        "description": "A unique node identifier.",
                        "type": "string",
                        "x-order": 18
                      },
                      "pmm_agent_id": {
                        "description": "The pmm-agent identifier.",
                        "type": "string",
                        "x-order": 20
                      },
                      "postgresql_options": {
                        "type": "object",
                        "properties": {
                          "auto_discovery_limit": {
                            "description": "Limit of databases for auto-discovery.",
                            "type": "integer",
                            "format": "int32",
                            "x-order": 1
                          },
                          "is_ssl_key_set": {
                            "description": "True if TLS key is set.",
                            "type": "boolean",
                            "x-order": 0
                          },
                          "max_exporter_connections": {
                            "description": "Maximum number of connections from exporter to PostgreSQL instance.",
                            "type": "integer",
                            "format": "int32",
                            "x-order": 2
                          }
                        },
                        "x-order": 21
                      },
                      "process_exec_path": {
                        "description": "Path to exec process.",
                        "type": "string",
                        "x-order": 22
                      },
                      "push_metrics": {
                        "description": "True if exporter uses push metrics mode.",
                        "type": "boolean",
                        "x-order": 23
                      },
                      "query_examples_disabled": {
                        "description": "True if query examples are disabled.",
                        "type": "boolean",
                        "x-order": 24
                      },
                      "rds_basic_metrics_disabled": {
                        "description": "True if RDS basic metrics are disdabled.",
                        "type": "boolean",
                        "x-order": 26
                      },
                      "rds_enhanced_metrics_disabled": {
                        "description": "True if RDS enhanced metrics are disdabled.",
                        "type": "boolean",
                        "x-order": 27
                      },
                      "runs_on_node_id": {
                        "description": "Node identifier where this instance runs.",
                        "type": "string",
                        "x-order": 28
                      },
                      "service_id": {
                        "description": "Service identifier.",
                        "type": "string",
                        "x-order": 29
                      },
                      "status": {
                        "description": "Actual Agent status.",
                        "type": "string",
                        "x-order": 30
                      },
                      "table_count": {
                        "description": "Last known table count.",
                        "type": "integer",
                        "format": "int32",
                        "x-order": 31
                      },
                      "table_count_tablestats_group_limit": {
                        "description": "Tablestats group collectors are disabled if there are more than that number of tables.\n0 means tablestats group collectors are always enabled (no limit).\nNegative value means tablestats group collectors are always disabled.",
                        "type": "integer",
                        "format": "int32",
                        "x-order": 32
                      },
                      "tls": {
                        "description": "Use TLS for database connections.",
                        "type": "boolean",
                        "x-order": 33
                      },
                      "tls_skip_verify": {
                        "description": "Skip TLS certificate and hostname validation.",
                        "type": "boolean",
                        "x-order": 34
                      },
                      "updated_at": {
                        "description": "Last update timestamp.",
                        "type": "string",
                        "format": "date-time",
                        "x-order": 36
                      },
                      "username": {
                        "description": "HTTP basic auth username for collecting metrics.",
                        "type": "string",
                        "x-order": 35
                      },
                      "version": {
                        "description": "Agent version.",
                        "type": "string",
                        "x-order": 37
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/annotations": {
      "post": {
        "description": "Adds an annotation.",
        "tags": [
          "ManagementService"
        ],
        "summary": "Add an Annotation",
        "operationId": "AddAnnotation",
        "parameters": [
          {
            "description": "AddAnnotationRequest is a params to add new annotation.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "AddAnnotationRequest is a params to add new annotation.",
              "type": "object",
              "properties": {
                "node_name": {
                  "description": "Used for annotating a node.",
                  "type": "string",
                  "x-order": 2
                },
                "service_names": {
                  "description": "Used for annotating services.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-order": 3
                },
                "tags": {
                  "description": "Tags are used to filter annotations.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-order": 1
                },
                "text": {
                  "description": "An annotation description. Required.",
                  "type": "string",
                  "x-order": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/nodes": {
      "get": {
        "description": "Lists Nodes with filter.",
        "tags": [
          "ManagementService"
        ],
        "summary": "List Nodes",
        "operationId": "ListNodes",
        "parameters": [
          {
            "enum": [
              "NODE_TYPE_UNSPECIFIED",
              "NODE_TYPE_GENERIC_NODE",
              "NODE_TYPE_CONTAINER_NODE",
              "NODE_TYPE_REMOTE_NODE",
              "NODE_TYPE_REMOTE_RDS_NODE",
              "NODE_TYPE_REMOTE_AZURE_DATABASE_NODE"
            ],
            "type": "string",
            "default": "NODE_TYPE_UNSPECIFIED",
            "description": "Node type to be filtered out.",
            "name": "node_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "nodes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "description": "Node address (DNS name or IP).",
                        "type": "string",
                        "x-order": 8
                      },
                      "agents": {
                        "description": "List of agents related to this node.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "agent_id": {
                              "description": "Unique Agent identifier.",
                              "type": "string",
                              "x-order": 0
                            },
                            "agent_type": {
                              "description": "Agent type.",
                              "type": "string",
                              "x-order": 1
                            },
                            "is_connected": {
                              "description": "True if Agent is running and connected to pmm-managed.",
                              "type": "boolean",
                              "x-order": 3
                            },
                            "status": {
                              "description": "Actual Agent status.",
                              "type": "string",
                              "x-order": 2
                            }
                          }
                        },
                        "x-order": 15
                      },
                      "az": {
                        "description": "Node availability zone.",
                        "type": "string",
                        "x-order": 10
                      },
                      "container_id": {
                        "description": "A node's unique docker container identifier.",
                        "type": "string",
                        "x-order": 6
                      },
                      "container_name": {
                        "description": "Container name.",
                        "type": "string",
                        "x-order": 7
                      },
                      "created_at": {
                        "description": "Creation timestamp.",
                        "type": "string",
                        "format": "date-time",
                        "x-order": 12
                      },
                      "custom_labels": {
                        "description": "Custom user-assigned labels for Node.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-order": 11
                      },
                      "distro": {
                        "description": "Linux distribution name and version.",
                        "type": "string",
                        "x-order": 4
                      },
                      "machine_id": {
                        "description": "Linux machine-id.",
                        "type": "string",
                        "x-order": 3
                      },
                      "node_id": {
                        "description": "Unique Node identifier.",
                        "type": "string",
                        "x-order": 0
                      },
                      "node_model": {
                        "description": "Node model.",
                        "type": "string",
                        "x-order": 5
                      },
                      "node_name": {
                        "description": "User-defined node name.",
                        "type": "string",
                        "x-order": 2
                      },
                      "node_type": {
                        "description": "Node type.",
                        "type": "string",
                        "x-order": 1
                      },
                      "region": {
                        "description": "Node region.",
                        "type": "string",
                        "x-order": 9
                      },
                      "services": {
                        "description": "List of services running on this node.",
                        "type": "array",
                        "items": {
                          "description": "Service represents a service running on a node.",
                          "type": "object",
                          "properties": {
                            "service_id": {
                              "description": "Unique Service identifier.",
                              "type": "string",
                              "x-order": 0
                            },
                            "service_name": {
                              "description": "Service name.",
                              "type": "string",
                              "x-order": 2
                            },
                            "service_type": {
                              "description": "Service type.",
                              "type": "string",
                              "x-order": 1
                            }
                          }
                        },
                        "x-order": 16
                      },
                      "status": {
                        "description": "Node status.\n\n - STATUS_UNSPECIFIED: Invalid status.\n - STATUS_UP: The node is up.\n - STATUS_DOWN: The node is down.\n - STATUS_UNKNOWN: The node's status cannot be known (e.g. there are no metrics yet).",
                        "type": "string",
                        "default": "STATUS_UNSPECIFIED",
                        "enum": [
                          "STATUS_UNSPECIFIED",
                          "STATUS_UP",
                          "STATUS_DOWN",
                          "STATUS_UNKNOWN"
                        ],
                        "x-order": 14
                      },
                      "updated_at": {
                        "description": "Last update timestamp.",
                        "type": "string",
                        "format": "date-time",
                        "x-order": 13
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Registers a new Node and a pmm-agent.",
        "tags": [
          "ManagementService"
        ],
        "summary": "Register a Node",
        "operationId": "RegisterNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "description": "Node address (DNS name or IP).",
                  "type": "string",
                  "x-order": 2
                },
                "agent_password": {
                  "description": "Custom password for exporter endpoint /metrics.",
                  "type": "string",
                  "x-order": 14
                },
                "az": {
                  "description": "Node availability zone.",
                  "type": "string",
                  "x-order": 9
                },
                "container_id": {
                  "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                  "type": "string",
                  "x-order": 5
                },
                "container_name": {
                  "description": "Container name.",
                  "type": "string",
                  "x-order": 6
                },
                "custom_labels": {
                  "description": "Custom user-assigned labels for Node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-order": 10
                },
                "disable_collectors": {
                  "description": "List of collector names to disable in this exporter.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-order": 13
                },
                "distro": {
                  "description": "Linux distribution name and version.",
                  "type": "string",
                  "x-order": 4
                },
                "expose_exporter": {
                  "type": "boolean",
                  "title": "Optionally expose the exporter process on all public interfaces",
                  "x-order": 15
                },
                "machine_id": {
                  "description": "Linux machine-id.",
                  "type": "string",
                  "x-order": 3
                },
                "metrics_mode": {
                  "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.\n\n - METRICS_MODE_UNSPECIFIED: Auto",
                  "type": "string",
                  "default": "METRICS_MODE_UNSPECIFIED",
                  "enum": [
                    "METRICS_MODE_UNSPECIFIED",
                    "METRICS_MODE_PULL",
                    "METRICS_MODE_PUSH"
                  ],
                  "x-order": 12
                },
                "node_model": {
                  "description": "Node model.",
                  "type": "string",
                  "x-order": 7
                },
                "node_name": {
                  "description": "A user-defined name unique across all Nodes.",
                  "type": "string",
                  "x-order": 1
                },
                "node_type": {
                  "description": "NodeType describes supported Node types.",
                  "type": "string",
                  "default": "NODE_TYPE_UNSPECIFIED",
                  "enum": [
                    "NODE_TYPE_UNSPECIFIED",
                    "NODE_TYPE_GENERIC_NODE",
                    "NODE_TYPE_CONTAINER_NODE",
                    "NODE_TYPE_REMOTE_NODE",
                    "NODE_TYPE_REMOTE_RDS_NODE",
                    "NODE_TYPE_REMOTE_AZURE_DATABASE_NODE"
                  ],
                  "x-order": 0
                },
                "region": {
                  "description": "Node region.",
                  "type": "string",
                  "x-order": 8
                },
                "reregister": {
                  "description": "If true, and Node with that name already exist, it will be removed with all dependent Services and Agents.",
                  "type": "boolean",
                  "x-order": 11
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "container_node": {
                  "description": "ContainerNode represents a Docker container.",
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "Node address (DNS name or IP).",
                      "type": "string",
                      "x-order": 2
                    },
                    "az": {
                      "description": "Node availability zone.",
                      "type": "string",
                      "x-order": 8
                    },
                    "container_id": {
                      "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                      "type": "string",
                      "x-order": 4
                    },
                    "container_name": {
                      "description": "Container name.",
                      "type": "string",
                      "x-order": 5
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "machine_id": {
                      "description": "Linux machine-id of the Generic Node where this Container Node runs.",
                      "type": "string",
                      "x-order": 3
                    },
                    "node_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "node_model": {
                      "description": "Node model.",
                      "type": "string",
                      "x-order": 6
                    },
                    "node_name": {
                      "description": "Unique across all Nodes user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "region": {
                      "description": "Node region.",
                      "type": "string",
                      "x-order": 7
                    }
                  },
                  "x-order": 1
                },
                "generic_node": {
                  "description": "GenericNode represents a bare metal server or virtual machine.",
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "Node address (DNS name or IP).",
                      "type": "string",
                      "x-order": 2
                    },
                    "az": {
                      "description": "Node availability zone.",
                      "type": "string",
                      "x-order": 7
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 8
                    },
                    "distro": {
                      "description": "Linux distribution name and version.",
                      "type": "string",
                      "x-order": 4
                    },
                    "machine_id": {
                      "description": "Linux machine-id.",
                      "type": "string",
                      "x-order": 3
                    },
                    "node_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "node_model": {
                      "description": "Node model.",
                      "type": "string",
                      "x-order": 5
                    },
                    "node_name": {
                      "description": "Unique across all Nodes user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "region": {
                      "description": "Node region.",
                      "type": "string",
                      "x-order": 6
                    }
                  },
                  "x-order": 0
                },
                "pmm_agent": {
                  "description": "PMMAgent runs on Generic or Container Node.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "connected": {
                      "description": "True if Agent is running and connected to pmm-managed.",
                      "type": "boolean",
                      "x-order": 3
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 2
                    },
                    "process_exec_path": {
                      "description": "Path to exec process.",
                      "type": "string",
                      "x-order": 4
                    },
                    "runs_on_node_id": {
                      "description": "Node identifier where this instance runs.",
                      "type": "string",
                      "x-order": 1
                    }
                  },
                  "x-order": 2
                },
                "token": {
                  "description": "Token represents token for vmagent auth config.",
                  "type": "string",
                  "x-order": 3
                },
                "warning": {
                  "description": "Warning message.",
                  "type": "string",
                  "x-order": 4
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/nodes/{node_id}": {
      "get": {
        "description": "Gets a single Node by ID.",
        "tags": [
          "ManagementService"
        ],
        "summary": "Get Node",
        "operationId": "GetNode",
        "parameters": [
          {
            "type": "string",
            "description": "Unique Node identifier.",
            "name": "node_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "node": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "Node address (DNS name or IP).",
                      "type": "string",
                      "x-order": 8
                    },
                    "agents": {
                      "description": "List of agents related to this node.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "agent_id": {
                            "description": "Unique Agent identifier.",
                            "type": "string",
                            "x-order": 0
                          },
                          "agent_type": {
                            "description": "Agent type.",
                            "type": "string",
                            "x-order": 1
                          },
                          "is_connected": {
                            "description": "True if Agent is running and connected to pmm-managed.",
                            "type": "boolean",
                            "x-order": 3
                          },
                          "status": {
                            "description": "Actual Agent status.",
                            "type": "string",
                            "x-order": 2
                          }
                        }
                      },
                      "x-order": 15
                    },
                    "az": {
                      "description": "Node availability zone.",
                      "type": "string",
                      "x-order": 10
                    },
                    "container_id": {
                      "description": "A node's unique docker container identifier.",
                      "type": "string",
                      "x-order": 6
                    },
                    "container_name": {
                      "description": "Container name.",
                      "type": "string",
                      "x-order": 7
                    },
                    "created_at": {
                      "description": "Creation timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "x-order": 12
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Node.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 11
                    },
                    "distro": {
                      "description": "Linux distribution name and version.",
                      "type": "string",
                      "x-order": 4
                    },
                    "machine_id": {
                      "description": "Linux machine-id.",
                      "type": "string",
                      "x-order": 3
                    },
                    "node_id": {
                      "description": "Unique Node identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "node_model": {
                      "description": "Node model.",
                      "type": "string",
                      "x-order": 5
                    },
                    "node_name": {
                      "description": "User-defined node name.",
                      "type": "string",
                      "x-order": 2
                    },
                    "node_type": {
                      "description": "Node type.",
                      "type": "string",
                      "x-order": 1
                    },
                    "region": {
                      "description": "Node region.",
                      "type": "string",
                      "x-order": 9
                    },
                    "services": {
                      "description": "List of services running on this node.",
                      "type": "array",
                      "items": {
                        "description": "Service represents a service running on a node.",
                        "type": "object",
                        "properties": {
                          "service_id": {
                            "description": "Unique Service identifier.",
                            "type": "string",
                            "x-order": 0
                          },
                          "service_name": {
                            "description": "Service name.",
                            "type": "string",
                            "x-order": 2
                          },
                          "service_type": {
                            "description": "Service type.",
                            "type": "string",
                            "x-order": 1
                          }
                        }
                      },
                      "x-order": 16
                    },
                    "status": {
                      "description": "Node status.\n\n - STATUS_UNSPECIFIED: Invalid status.\n - STATUS_UP: The node is up.\n - STATUS_DOWN: The node is down.\n - STATUS_UNKNOWN: The node's status cannot be known (e.g. there are no metrics yet).",
                      "type": "string",
                      "default": "STATUS_UNSPECIFIED",
                      "enum": [
                        "STATUS_UNSPECIFIED",
                        "STATUS_UP",
                        "STATUS_DOWN",
                        "STATUS_UNKNOWN"
                      ],
                      "x-order": 14
                    },
                    "updated_at": {
                      "description": "Last update timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "x-order": 13
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Unregisters a Node and pmm-agent",
        "tags": [
          "ManagementService"
        ],
        "summary": "Unregister a Node",
        "operationId": "UnregisterNode",
        "parameters": [
          {
            "type": "string",
            "description": "Node_id to be unregistered.",
            "name": "node_id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Force delete node, related service account, even if it has more service tokens attached.",
            "name": "force",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "warning": {
                  "description": "Warning message if there are more service tokens attached to service account.",
                  "type": "string",
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/services": {
      "get": {
        "description": "Returns a filtered list of Services.",
        "tags": [
          "ManagementService"
        ],
        "summary": "List Services",
        "operationId": "ListServices",
        "parameters": [
          {
            "type": "string",
            "description": "Return only Services running on that Node.",
            "name": "node_id",
            "in": "query"
          },
          {
            "enum": [
              "SERVICE_TYPE_UNSPECIFIED",
              "SERVICE_TYPE_MYSQL_SERVICE",
              "SERVICE_TYPE_MONGODB_SERVICE",
              "SERVICE_TYPE_POSTGRESQL_SERVICE",
              "SERVICE_TYPE_PROXYSQL_SERVICE",
              "SERVICE_TYPE_HAPROXY_SERVICE",
              "SERVICE_TYPE_EXTERNAL_SERVICE"
            ],
            "type": "string",
            "default": "SERVICE_TYPE_UNSPECIFIED",
            "description": "Return only services filtered by service type.",
            "name": "service_type",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Return only services in this external group.",
            "name": "external_group",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "services": {
                  "description": "List of Services.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required.",
                        "type": "string",
                        "x-order": 11
                      },
                      "agents": {
                        "description": "List of agents related to this service.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "agent_id": {
                              "description": "Unique agent identifier.",
                              "type": "string",
                              "x-order": 0
                            },
                            "agent_type": {
                              "description": "Agent type.",
                              "type": "string",
                              "x-order": 2
                            },
                            "aws_access_key": {
                              "description": "AWS Access Key.",
                              "type": "string",
                              "x-order": 3
                            },
                            "azure_options": {
                              "type": "object",
                              "properties": {
                                "client_id": {
                                  "description": "Azure client ID.",
                                  "type": "string",
                                  "x-order": 0
                                },
                                "is_client_secret_set": {
                                  "description": "True if Azure client secret is set.",
                                  "type": "boolean",
                                  "x-order": 1
                                },
                                "resource_group": {
                                  "description": "Azure resource group.",
                                  "type": "string",
                                  "x-order": 2
                                },
                                "subscription_id": {
                                  "description": "Azure subscription ID.",
                                  "type": "string",
                                  "x-order": 3
                                },
                                "tenant_id": {
                                  "description": "Azure tenant ID.",
                                  "type": "string",
                                  "x-order": 4
                                }
                              },
                              "x-order": 5
                            },
                            "comments_parsing_disabled": {
                              "description": "True if query comments parsing is disabled.",
                              "type": "boolean",
                              "x-order": 25
                            },
                            "created_at": {
                              "description": "Creation timestamp.",
                              "type": "string",
                              "format": "date-time",
                              "x-order": 6
                            },
                            "custom_labels": {
                              "description": "Custom user-assigned labels.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              },
                              "x-order": 7
                            },
                            "disabled": {
                              "description": "Desired Agent status: enabled (false) or disabled (true).",
                              "type": "boolean",
                              "x-order": 8
                            },
                            "disabled_collectors": {
                              "description": "List of disabled collector names.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-order": 9
                            },
                            "expose_exporter": {
                              "description": "True if an exporter agent is exposed on all host addresses.",
                              "type": "boolean",
                              "x-order": 39
                            },
                            "is_agent_password_set": {
                              "description": "True if the agent password is set.",
                              "type": "boolean",
                              "x-order": 1
                            },
                            "is_aws_secret_key_set": {
                              "description": "True if AWS Secret Key is set.",
                              "type": "boolean",
                              "x-order": 4
                            },
                            "is_connected": {
                              "description": "True if Agent is running and connected to pmm-managed.",
                              "type": "boolean",
                              "x-order": 38
                            },
                            "is_password_set": {
                              "description": "True if password for connecting the agent to the database is set.",
                              "type": "boolean",
                              "x-order": 19
                            },
                            "listen_port": {
                              "description": "Listen port for scraping metrics.",
                              "type": "integer",
                              "format": "int64",
                              "x-order": 10
                            },
                            "log_level": {
                              "description": "Log level for exporter.",
                              "type": "string",
                              "x-order": 11
                            },
                            "max_query_length": {
                              "description": "Limit query length in QAN.",
                              "type": "integer",
                              "format": "int32",
                              "x-order": 12
                            },
                            "max_query_log_size": {
                              "description": "Limit query log size in QAN.",
                              "type": "string",
                              "format": "int64",
                              "x-order": 13
                            },
                            "metrics_path": {
                              "description": "Path under which metrics are exposed, used to generate URI.",
                              "type": "string",
                              "x-order": 14
                            },
                            "metrics_scheme": {
                              "description": "Scheme to generate URI to exporter metrics endpoints.",
                              "type": "string",
                              "x-order": 15
                            },
                            "mongo_db_options": {
                              "type": "object",
                              "properties": {
                                "authentication_database": {
                                  "description": "MongoDB auth database.",
                                  "type": "string",
                                  "x-order": 3
                                },
                                "authentication_mechanism": {
                                  "description": "MongoDB auth mechanism.",
                                  "type": "string",
                                  "x-order": 2
                                },
                                "collections_limit": {
                                  "description": "MongoDB collections limit.",
                                  "type": "integer",
                                  "format": "int32",
                                  "x-order": 5
                                },
                                "enable_all_collectors": {
                                  "description": "True if all collectors are enabled.",
                                  "type": "boolean",
                                  "x-order": 6
                                },
                                "is_tls_certificate_key_file_password_set": {
                                  "description": "True if TLS certificate file password is set.",
                                  "type": "boolean",
                                  "x-order": 1
                                },
                                "is_tls_certificate_key_set": {
                                  "description": "True if TLS certificate is set.",
                                  "type": "boolean",
                                  "x-order": 0
                                },
                                "stats_collections": {
                                  "description": "MongoDB stats collections.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-order": 4
                                }
                              },
                              "x-order": 16
                            },
                            "mysql_options": {
                              "type": "object",
                              "properties": {
                                "is_tls_key_set": {
                                  "description": "True if TLS key is set.",
                                  "type": "boolean",
                                  "x-order": 0
                                }
                              },
                              "x-order": 17
                            },
                            "node_id": {
                              "description": "A unique node identifier.",
                              "type": "string",
                              "x-order": 18
                            },
                            "pmm_agent_id": {
                              "description": "The pmm-agent identifier.",
                              "type": "string",
                              "x-order": 20
                            },
                            "postgresql_options": {
                              "type": "object",
                              "properties": {
                                "auto_discovery_limit": {
                                  "description": "Limit of databases for auto-discovery.",
                                  "type": "integer",
                                  "format": "int32",
                                  "x-order": 1
                                },
                                "is_ssl_key_set": {
                                  "description": "True if TLS key is set.",
                                  "type": "boolean",
                                  "x-order": 0
                                },
                                "max_exporter_connections": {
                                  "description": "Maximum number of connections from exporter to PostgreSQL instance.",
                                  "type": "integer",
                                  "format": "int32",
                                  "x-order": 2
                                }
                              },
                              "x-order": 21
                            },
                            "process_exec_path": {
                              "description": "Path to exec process.",
                              "type": "string",
                              "x-order": 22
                            },
                            "push_metrics": {
                              "description": "True if exporter uses push metrics mode.",
                              "type": "boolean",
                              "x-order": 23
                            },
                            "query_examples_disabled": {
                              "description": "True if query examples are disabled.",
                              "type": "boolean",
                              "x-order": 24
                            },
                            "rds_basic_metrics_disabled": {
                              "description": "True if RDS basic metrics are disdabled.",
                              "type": "boolean",
                              "x-order": 26
                            },
                            "rds_enhanced_metrics_disabled": {
                              "description": "True if RDS enhanced metrics are disdabled.",
                              "type": "boolean",
                              "x-order": 27
                            },
                            "runs_on_node_id": {
                              "description": "Node identifier where this instance runs.",
                              "type": "string",
                              "x-order": 28
                            },
                            "service_id": {
                              "description": "Service identifier.",
                              "type": "string",
                              "x-order": 29
                            },
                            "status": {
                              "description": "Actual Agent status.",
                              "type": "string",
                              "x-order": 30
                            },
                            "table_count": {
                              "description": "Last known table count.",
                              "type": "integer",
                              "format": "int32",
                              "x-order": 31
                            },
                            "table_count_tablestats_group_limit": {
                              "description": "Tablestats group collectors are disabled if there are more than that number of tables.\n0 means tablestats group collectors are always enabled (no limit).\nNegative value means tablestats group collectors are always disabled.",
                              "type": "integer",
                              "format": "int32",
                              "x-order": 32
                            },
                            "tls": {
                              "description": "Use TLS for database connections.",
                              "type": "boolean",
                              "x-order": 33
                            },
                            "tls_skip_verify": {
                              "description": "Skip TLS certificate and hostname validation.",
                              "type": "boolean",
                              "x-order": 34
                            },
                            "updated_at": {
                              "description": "Last update timestamp.",
                              "type": "string",
                              "format": "date-time",
                              "x-order": 36
                            },
                            "username": {
                              "description": "HTTP basic auth username for collecting metrics.",
                              "type": "string",
                              "x-order": 35
                            },
                            "version": {
                              "description": "Agent version.",
                              "type": "string",
                              "x-order": 37
                            }
                          }
                        },
                        "x-order": 16
                      },
                      "cluster": {
                        "description": "Cluster name.",
                        "type": "string",
                        "x-order": 7
                      },
                      "created_at": {
                        "description": "Creation timestamp.",
                        "type": "string",
                        "format": "date-time",
                        "x-order": 14
                      },
                      "custom_labels": {
                        "description": "Custom user-assigned labels for Service.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-order": 9
                      },
                      "database_name": {
                        "description": "Database name.",
                        "type": "string",
                        "x-order": 3
                      },
                      "environment": {
                        "description": "Environment name.",
                        "type": "string",
                        "x-order": 6
                      },
                      "external_group": {
                        "description": "External group name.",
                        "type": "string",
                        "x-order": 10
                      },
                      "node_id": {
                        "description": "Node identifier where this instance runs.",
                        "type": "string",
                        "x-order": 4
                      },
                      "node_name": {
                        "description": "Node name where this instance runs.",
                        "type": "string",
                        "x-order": 5
                      },
                      "port": {
                        "description": "Access port.\nPort is required when the address present.",
                        "type": "integer",
                        "format": "int64",
                        "x-order": 12
                      },
                      "replication_set": {
                        "description": "Replication set name.",
                        "type": "string",
                        "x-order": 8
                      },
                      "service_id": {
                        "description": "Unique service identifier.",
                        "type": "string",
                        "x-order": 0
                      },
                      "service_name": {
                        "description": "User-defined name unique across all Services.",
                        "type": "string",
                        "x-order": 2
                      },
                      "service_type": {
                        "description": "Service type.",
                        "type": "string",
                        "x-order": 1
                      },
                      "socket": {
                        "description": "Access unix socket.\nAddress (and port) or socket is required.",
                        "type": "string",
                        "x-order": 13
                      },
                      "status": {
                        "description": "Service status.\n\n - STATUS_UNSPECIFIED: In case we don't support the db vendor yet.\n - STATUS_UP: The service is up.\n - STATUS_DOWN: The service is down.\n - STATUS_UNKNOWN: The service's status cannot be known (e.g. there are no metrics yet).",
                        "type": "string",
                        "default": "STATUS_UNSPECIFIED",
                        "enum": [
                          "STATUS_UNSPECIFIED",
                          "STATUS_UP",
                          "STATUS_DOWN",
                          "STATUS_UNKNOWN"
                        ],
                        "x-order": 17
                      },
                      "updated_at": {
                        "description": "Last update timestamp.",
                        "type": "string",
                        "format": "date-time",
                        "x-order": 15
                      },
                      "version": {
                        "description": "The service/database version.",
                        "type": "string",
                        "x-order": 18
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Adds a service and starts several agents.",
        "tags": [
          "ManagementService"
        ],
        "summary": "Add a Service",
        "operationId": "AddService",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "external": {
                  "type": "object",
                  "properties": {
                    "add_node": {
                      "description": "AddNodeParams holds node params and is used to add new node to inventory while adding new service.",
                      "type": "object",
                      "properties": {
                        "az": {
                          "description": "Node availability zone.",
                          "type": "string",
                          "x-order": 8
                        },
                        "container_id": {
                          "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                          "type": "string",
                          "x-order": 4
                        },
                        "container_name": {
                          "description": "Container name.",
                          "type": "string",
                          "x-order": 5
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels for Node.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "distro": {
                          "description": "Linux distribution name and version.",
                          "type": "string",
                          "x-order": 3
                        },
                        "machine_id": {
                          "description": "Linux machine-id.",
                          "type": "string",
                          "x-order": 2
                        },
                        "node_model": {
                          "description": "Node model.",
                          "type": "string",
                          "x-order": 6
                        },
                        "node_name": {
                          "description": "Unique across all Nodes user-defined name.",
                          "type": "string",
                          "x-order": 1
                        },
                        "node_type": {
                          "description": "NodeType describes supported Node types.",
                          "type": "string",
                          "default": "NODE_TYPE_UNSPECIFIED",
                          "enum": [
                            "NODE_TYPE_UNSPECIFIED",
                            "NODE_TYPE_GENERIC_NODE",
                            "NODE_TYPE_CONTAINER_NODE",
                            "NODE_TYPE_REMOTE_NODE",
                            "NODE_TYPE_REMOTE_RDS_NODE",
                            "NODE_TYPE_REMOTE_AZURE_DATABASE_NODE"
                          ],
                          "x-order": 0
                        },
                        "region": {
                          "description": "Node region.",
                          "type": "string",
                          "x-order": 7
                        }
                      },
                      "x-order": 2
                    },
                    "address": {
                      "description": "Node and Exporter access address (DNS name or IP).\naddress should always be passed with add_node.",
                      "type": "string",
                      "x-order": 3
                    },
                    "cluster": {
                      "description": "Cluster name.",
                      "type": "string",
                      "x-order": 12
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Service.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 14
                    },
                    "environment": {
                      "description": "Environment name.",
                      "type": "string",
                      "x-order": 11
                    },
                    "group": {
                      "description": "Group name of external service.",
                      "type": "string",
                      "x-order": 15
                    },
                    "listen_port": {
                      "description": "Listen port for scraping metrics.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 9
                    },
                    "metrics_mode": {
                      "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.\n\n - METRICS_MODE_UNSPECIFIED: Auto",
                      "type": "string",
                      "default": "METRICS_MODE_UNSPECIFIED",
                      "enum": [
                        "METRICS_MODE_UNSPECIFIED",
                        "METRICS_MODE_PULL",
                        "METRICS_MODE_PUSH"
                      ],
                      "x-order": 16
                    },
                    "metrics_path": {
                      "description": "Path under which metrics are exposed, used to generate URI.",
                      "type": "string",
                      "x-order": 8
                    },
                    "node_id": {
                      "description": "Node identifier on which an external service is been running.\nnode_id should always be passed with runs_on_node_id.",
                      "type": "string",
                      "x-order": 10
                    },
                    "node_name": {
                      "description": "Node name on which a service and node is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                      "type": "string",
                      "x-order": 1
                    },
                    "password": {
                      "description": "HTTP basic auth password for collecting metrics.",
                      "type": "string",
                      "x-order": 6
                    },
                    "replication_set": {
                      "description": "Replication set name.",
                      "type": "string",
                      "x-order": 13
                    },
                    "runs_on_node_id": {
                      "description": "Node identifier on which an external exporter is been running.\nruns_on_node_id should always be passed with node_id.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                      "type": "string",
                      "x-order": 0
                    },
                    "scheme": {
                      "description": "Scheme to generate URI to exporter metrics endpoints.",
                      "type": "string",
                      "x-order": 7
                    },
                    "service_name": {
                      "description": "Unique across all Services user-defined name. Required.",
                      "type": "string",
                      "x-order": 4
                    },
                    "skip_connection_check": {
                      "description": "Skip connection check.",
                      "type": "boolean",
                      "x-order": 17
                    },
                    "username": {
                      "description": "HTTP basic auth username for collecting metrics.",
                      "type": "string",
                      "x-order": 5
                    }
                  },
                  "x-order": 5
                },
                "haproxy": {
                  "type": "object",
                  "properties": {
                    "add_node": {
                      "description": "AddNodeParams holds node params and is used to add new node to inventory while adding new service.",
                      "type": "object",
                      "properties": {
                        "az": {
                          "description": "Node availability zone.",
                          "type": "string",
                          "x-order": 8
                        },
                        "container_id": {
                          "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                          "type": "string",
                          "x-order": 4
                        },
                        "container_name": {
                          "description": "Container name.",
                          "type": "string",
                          "x-order": 5
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels for Node.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "distro": {
                          "description": "Linux distribution name and version.",
                          "type": "string",
                          "x-order": 3
                        },
                        "machine_id": {
                          "description": "Linux machine-id.",
                          "type": "string",
                          "x-order": 2
                        },
                        "node_model": {
                          "description": "Node model.",
                          "type": "string",
                          "x-order": 6
                        },
                        "node_name": {
                          "description": "Unique across all Nodes user-defined name.",
                          "type": "string",
                          "x-order": 1
                        },
                        "node_type": {
                          "description": "NodeType describes supported Node types.",
                          "type": "string",
                          "default": "NODE_TYPE_UNSPECIFIED",
                          "enum": [
                            "NODE_TYPE_UNSPECIFIED",
                            "NODE_TYPE_GENERIC_NODE",
                            "NODE_TYPE_CONTAINER_NODE",
                            "NODE_TYPE_REMOTE_NODE",
                            "NODE_TYPE_REMOTE_RDS_NODE",
                            "NODE_TYPE_REMOTE_AZURE_DATABASE_NODE"
                          ],
                          "x-order": 0
                        },
                        "region": {
                          "description": "Node region.",
                          "type": "string",
                          "x-order": 7
                        }
                      },
                      "x-order": 2
                    },
                    "address": {
                      "description": "Node and Exporter access address (DNS name or IP).\naddress always should be passed with add_node.",
                      "type": "string",
                      "x-order": 3
                    },
                    "cluster": {
                      "description": "Cluster name.",
                      "type": "string",
                      "x-order": 11
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Service.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 13
                    },
                    "environment": {
                      "description": "Environment name.",
                      "type": "string",
                      "x-order": 10
                    },
                    "listen_port": {
                      "description": "Listen port for scraping metrics.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 9
                    },
                    "metrics_mode": {
                      "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.\n\n - METRICS_MODE_UNSPECIFIED: Auto",
                      "type": "string",
                      "default": "METRICS_MODE_UNSPECIFIED",
                      "enum": [
                        "METRICS_MODE_UNSPECIFIED",
                        "METRICS_MODE_PULL",
                        "METRICS_MODE_PUSH"
                      ],
                      "x-order": 14
                    },
                    "metrics_path": {
                      "description": "Path under which metrics are exposed, used to generate URI.",
                      "type": "string",
                      "x-order": 8
                    },
                    "node_id": {
                      "description": "Node identifier on which an external exporter is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                      "type": "string",
                      "x-order": 0
                    },
                    "node_name": {
                      "description": "Node name on which a service and node is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                      "type": "string",
                      "x-order": 1
                    },
                    "password": {
                      "description": "HTTP basic auth password for collecting metrics.",
                      "type": "string",
                      "x-order": 6
                    },
                    "replication_set": {
                      "description": "Replication set name.",
                      "type": "string",
                      "x-order": 12
                    },
                    "scheme": {
                      "description": "Scheme to generate URI to exporter metrics endpoints.",
                      "type": "string",
                      "x-order": 7
                    },
                    "service_name": {
                      "description": "Unique across all Services user-defined name. Required.",
                      "type": "string",
                      "x-order": 4
                    },
                    "skip_connection_check": {
                      "description": "Skip connection check.",
                      "type": "boolean",
                      "x-order": 15
                    },
                    "username": {
                      "description": "HTTP basic auth username for collecting metrics.",
                      "type": "string",
                      "x-order": 5
                    }
                  },
                  "x-order": 4
                },
                "mongodb": {
                  "type": "object",
                  "properties": {
                    "add_node": {
                      "description": "AddNodeParams holds node params and is used to add new node to inventory while adding new service.",
                      "type": "object",
                      "properties": {
                        "az": {
                          "description": "Node availability zone.",
                          "type": "string",
                          "x-order": 8
                        },
                        "container_id": {
                          "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                          "type": "string",
                          "x-order": 4
                        },
                        "container_name": {
                          "description": "Container name.",
                          "type": "string",
                          "x-order": 5
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels for Node.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "distro": {
                          "description": "Linux distribution name and version.",
                          "type": "string",
                          "x-order": 3
                        },
                        "machine_id": {
                          "description": "Linux machine-id.",
                          "type": "string",
                          "x-order": 2
                        },
                        "node_model": {
                          "description": "Node model.",
                          "type": "string",
                          "x-order": 6
                        },
                        "node_name": {
                          "description": "Unique across all Nodes user-defined name.",
                          "type": "string",
                          "x-order": 1
                        },
                        "node_type": {
                          "description": "NodeType describes supported Node types.",
                          "type": "string",
                          "default": "NODE_TYPE_UNSPECIFIED",
                          "enum": [
                            "NODE_TYPE_UNSPECIFIED",
                            "NODE_TYPE_GENERIC_NODE",
                            "NODE_TYPE_CONTAINER_NODE",
                            "NODE_TYPE_REMOTE_NODE",
                            "NODE_TYPE_REMOTE_RDS_NODE",
                            "NODE_TYPE_REMOTE_AZURE_DATABASE_NODE"
                          ],
                          "x-order": 0
                        },
                        "region": {
                          "description": "Node region.",
                          "type": "string",
                          "x-order": 7
                        }
                      },
                      "x-order": 2
                    },
                    "address": {
                      "description": "Node and Service access address (DNS name or IP).\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 4
                    },
                    "agent_password": {
                      "description": "Custom password for exporter endpoint /metrics.",
                      "type": "string",
                      "x-order": 26
                    },
                    "authentication_database": {
                      "description": "Authentication database.",
                      "type": "string",
                      "x-order": 25
                    },
                    "authentication_mechanism": {
                      "description": "Authentication mechanism.\nSee https://docs.mongodb.com/manual/reference/connection-string/#mongodb-urioption-urioption.authMechanism\nfor details.",
                      "type": "string",
                      "x-order": 24
                    },
                    "cluster": {
                      "description": "Cluster name.",
                      "type": "string",
                      "x-order": 9
                    },
                    "collections_limit": {
                      "type": "integer",
                      "format": "int32",
                      "title": "Collections limit. Only get Databases and collection stats if the total number of collections in the server\nis less than this value. 0: no limit",
                      "x-order": 28
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Service.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 14
                    },
                    "disable_collectors": {
                      "description": "List of collector names to disable in this exporter.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-order": 23
                    },
                    "enable_all_collectors": {
                      "type": "boolean",
                      "title": "Enable all collectors",
                      "x-order": 29
                    },
                    "environment": {
                      "description": "Environment name.",
                      "type": "string",
                      "x-order": 8
                    },
                    "expose_exporter": {
                      "type": "boolean",
                      "title": "Optionally expose the exporter process on all public interfaces",
                      "x-order": 31
                    },
                    "log_level": {
                      "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                      "type": "string",
                      "title": "Log level for exporters",
                      "default": "LOG_LEVEL_UNSPECIFIED",
                      "enum": [
                        "LOG_LEVEL_UNSPECIFIED",
                        "LOG_LEVEL_FATAL",
                        "LOG_LEVEL_ERROR",
                        "LOG_LEVEL_WARN",
                        "LOG_LEVEL_INFO",
                        "LOG_LEVEL_DEBUG"
                      ],
                      "x-order": 30
                    },
                    "max_query_length": {
                      "description": "Limit query length in QAN (default: server-defined; -1: no limit).",
                      "type": "integer",
                      "format": "int32",
                      "x-order": 21
                    },
                    "metrics_mode": {
                      "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.\n\n - METRICS_MODE_UNSPECIFIED: Auto",
                      "type": "string",
                      "default": "METRICS_MODE_UNSPECIFIED",
                      "enum": [
                        "METRICS_MODE_UNSPECIFIED",
                        "METRICS_MODE_PULL",
                        "METRICS_MODE_PUSH"
                      ],
                      "x-order": 22
                    },
                    "node_id": {
                      "description": "Node identifier on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                      "type": "string",
                      "x-order": 0
                    },
                    "node_name": {
                      "description": "Node name on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                      "type": "string",
                      "x-order": 1
                    },
                    "password": {
                      "description": "MongoDB password for exporter and QAN agent access.",
                      "type": "string",
                      "x-order": 12
                    },
                    "pmm_agent_id": {
                      "description": "The \"pmm-agent\" identifier which should run agents. Required.",
                      "type": "string",
                      "x-order": 7
                    },
                    "port": {
                      "description": "Service Access port.\nPort is required when the address present.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 5
                    },
                    "qan_mongodb_profiler": {
                      "description": "If true, adds qan-mongodb-profiler-agent for provided service.",
                      "type": "boolean",
                      "x-order": 13
                    },
                    "replication_set": {
                      "description": "Replication set name.",
                      "type": "string",
                      "x-order": 10
                    },
                    "service_name": {
                      "description": "Unique across all Services user-defined name. Required.",
                      "type": "string",
                      "x-order": 3
                    },
                    "skip_connection_check": {
                      "description": "Skip connection check.",
                      "type": "boolean",
                      "x-order": 15
                    },
                    "socket": {
                      "description": "Service Access socket.\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 6
                    },
                    "stats_collections": {
                      "description": "List of collections to get stats from. Can use * .",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-order": 27
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 16
                    },
                    "tls_ca": {
                      "description": "Certificate Authority certificate chain.",
                      "type": "string",
                      "x-order": 20
                    },
                    "tls_certificate_key": {
                      "description": "Client certificate and key.",
                      "type": "string",
                      "x-order": 18
                    },
                    "tls_certificate_key_file_password": {
                      "description": "Password for decrypting tls_certificate_key.",
                      "type": "string",
                      "x-order": 19
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation.",
                      "type": "boolean",
                      "x-order": 17
                    },
                    "username": {
                      "description": "MongoDB username for exporter and QAN agent access.",
                      "type": "string",
                      "x-order": 11
                    }
                  },
                  "x-order": 1
                },
                "mysql": {
                  "type": "object",
                  "properties": {
                    "add_node": {
                      "description": "AddNodeParams holds node params and is used to add new node to inventory while adding new service.",
                      "type": "object",
                      "properties": {
                        "az": {
                          "description": "Node availability zone.",
                          "type": "string",
                          "x-order": 8
                        },
                        "container_id": {
                          "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                          "type": "string",
                          "x-order": 4
                        },
                        "container_name": {
                          "description": "Container name.",
                          "type": "string",
                          "x-order": 5
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels for Node.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "distro": {
                          "description": "Linux distribution name and version.",
                          "type": "string",
                          "x-order": 3
                        },
                        "machine_id": {
                          "description": "Linux machine-id.",
                          "type": "string",
                          "x-order": 2
                        },
                        "node_model": {
                          "description": "Node model.",
                          "type": "string",
                          "x-order": 6
                        },
                        "node_name": {
                          "description": "Unique across all Nodes user-defined name.",
                          "type": "string",
                          "x-order": 1
                        },
                        "node_type": {
                          "description": "NodeType describes supported Node types.",
                          "type": "string",
                          "default": "NODE_TYPE_UNSPECIFIED",
                          "enum": [
                            "NODE_TYPE_UNSPECIFIED",
                            "NODE_TYPE_GENERIC_NODE",
                            "NODE_TYPE_CONTAINER_NODE",
                            "NODE_TYPE_REMOTE_NODE",
                            "NODE_TYPE_REMOTE_RDS_NODE",
                            "NODE_TYPE_REMOTE_AZURE_DATABASE_NODE"
                          ],
                          "x-order": 0
                        },
                        "region": {
                          "description": "Node region.",
                          "type": "string",
                          "x-order": 7
                        }
                      },
                      "x-order": 2
                    },
                    "address": {
                      "description": "Node and Service access address (DNS name or IP).\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 4
                    },
                    "agent_password": {
                      "description": "Custom password for exporter endpoint /metrics.",
                      "type": "string",
                      "x-order": 29
                    },
                    "cluster": {
                      "description": "Cluster name.",
                      "type": "string",
                      "x-order": 9
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Service.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 15
                    },
                    "disable_collectors": {
                      "description": "List of collector names to disable in this exporter.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-order": 28
                    },
                    "disable_comments_parsing": {
                      "description": "Disable parsing comments from queries and showing them in QAN.",
                      "type": "boolean",
                      "x-order": 17
                    },
                    "disable_query_examples": {
                      "description": "Disable query examples.",
                      "type": "boolean",
                      "x-order": 19
                    },
                    "environment": {
                      "description": "Environment name.",
                      "type": "string",
                      "x-order": 8
                    },
                    "expose_exporter": {
                      "type": "boolean",
                      "title": "Optionally expose the exporter process on all public interfaces",
                      "x-order": 31
                    },
                    "log_level": {
                      "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                      "type": "string",
                      "title": "Log level for exporters",
                      "default": "LOG_LEVEL_UNSPECIFIED",
                      "enum": [
                        "LOG_LEVEL_UNSPECIFIED",
                        "LOG_LEVEL_FATAL",
                        "LOG_LEVEL_ERROR",
                        "LOG_LEVEL_WARN",
                        "LOG_LEVEL_INFO",
                        "LOG_LEVEL_DEBUG"
                      ],
                      "x-order": 30
                    },
                    "max_query_length": {
                      "description": "Limit query length in QAN (default: server-defined; -1: no limit).",
                      "type": "integer",
                      "format": "int32",
                      "x-order": 18
                    },
                    "max_slowlog_file_size": {
                      "description": "If qan-mysql-slowlog-agent is added, slowlog file is rotated at this size if \u003e 0.\nIf zero, server's default value is used.\nUse negative value to disable rotation.",
                      "type": "string",
                      "format": "int64",
                      "x-order": 20
                    },
                    "metrics_mode": {
                      "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.\n\n - METRICS_MODE_UNSPECIFIED: Auto",
                      "type": "string",
                      "default": "METRICS_MODE_UNSPECIFIED",
                      "enum": [
                        "METRICS_MODE_UNSPECIFIED",
                        "METRICS_MODE_PULL",
                        "METRICS_MODE_PUSH"
                      ],
                      "x-order": 27
                    },
                    "node_id": {
                      "description": "Node identifier on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                      "type": "string",
                      "x-order": 0
                    },
                    "node_name": {
                      "description": "Node name on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                      "type": "string",
                      "x-order": 1
                    },
                    "password": {
                      "description": "MySQL password for scraping metrics.",
                      "type": "string",
                      "x-order": 12
                    },
                    "pmm_agent_id": {
                      "description": "The \"pmm-agent\" identifier which should run agents. Required.",
                      "type": "string",
                      "x-order": 7
                    },
                    "port": {
                      "description": "Service Access port.\nPort is required when the address present.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 5
                    },
                    "qan_mysql_perfschema": {
                      "description": "If true, adds qan-mysql-perfschema-agent for provided service.",
                      "type": "boolean",
                      "x-order": 13
                    },
                    "qan_mysql_slowlog": {
                      "description": "If true, adds qan-mysql-slowlog-agent for provided service.",
                      "type": "boolean",
                      "x-order": 14
                    },
                    "replication_set": {
                      "description": "Replication set name.",
                      "type": "string",
                      "x-order": 10
                    },
                    "service_name": {
                      "description": "Unique across all Services user-defined name. Required.",
                      "type": "string",
                      "x-order": 3
                    },
                    "skip_connection_check": {
                      "description": "Skip connection check.",
                      "type": "boolean",
                      "x-order": 16
                    },
                    "socket": {
                      "description": "Service Access socket.\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 6
                    },
                    "tablestats_group_table_limit": {
                      "description": "Tablestats group collectors will be disabled if there are more than that number of tables.\nIf zero, server's default value is used.\nUse negative value to disable them.",
                      "type": "integer",
                      "format": "int32",
                      "x-order": 26
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 21
                    },
                    "tls_ca": {
                      "description": "Certificate Authority certificate chain.",
                      "type": "string",
                      "x-order": 23
                    },
                    "tls_cert": {
                      "description": "Client certificate.",
                      "type": "string",
                      "x-order": 24
                    },
                    "tls_key": {
                      "description": "Password for decrypting tls_cert.",
                      "type": "string",
                      "x-order": 25
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation.",
                      "type": "boolean",
                      "x-order": 22
                    },
                    "username": {
                      "description": "MySQL username for scraping metrics.",
                      "type": "string",
                      "x-order": 11
                    }
                  },
                  "x-order": 0
                },
                "postgresql": {
                  "type": "object",
                  "properties": {
                    "add_node": {
                      "description": "AddNodeParams holds node params and is used to add new node to inventory while adding new service.",
                      "type": "object",
                      "properties": {
                        "az": {
                          "description": "Node availability zone.",
                          "type": "string",
                          "x-order": 8
                        },
                        "container_id": {
                          "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                          "type": "string",
                          "x-order": 4
                        },
                        "container_name": {
                          "description": "Container name.",
                          "type": "string",
                          "x-order": 5
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels for Node.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "distro": {
                          "description": "Linux distribution name and version.",
                          "type": "string",
                          "x-order": 3
                        },
                        "machine_id": {
                          "description": "Linux machine-id.",
                          "type": "string",
                          "x-order": 2
                        },
                        "node_model": {
                          "description": "Node model.",
                          "type": "string",
                          "x-order": 6
                        },
                        "node_name": {
                          "description": "Unique across all Nodes user-defined name.",
                          "type": "string",
                          "x-order": 1
                        },
                        "node_type": {
                          "description": "NodeType describes supported Node types.",
                          "type": "string",
                          "default": "NODE_TYPE_UNSPECIFIED",
                          "enum": [
                            "NODE_TYPE_UNSPECIFIED",
                            "NODE_TYPE_GENERIC_NODE",
                            "NODE_TYPE_CONTAINER_NODE",
                            "NODE_TYPE_REMOTE_NODE",
                            "NODE_TYPE_REMOTE_RDS_NODE",
                            "NODE_TYPE_REMOTE_AZURE_DATABASE_NODE"
                          ],
                          "x-order": 0
                        },
                        "region": {
                          "description": "Node region.",
                          "type": "string",
                          "x-order": 7
                        }
                      },
                      "x-order": 2
                    },
                    "address": {
                      "description": "Node and Service access address (DNS name or IP).\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 4
                    },
                    "agent_password": {
                      "description": "Custom password for exporter endpoint /metrics.",
                      "type": "string",
                      "x-order": 28
                    },
                    "auto_discovery_limit": {
                      "description": "Limit for auto discovery.",
                      "type": "integer",
                      "format": "int32",
                      "x-order": 30
                    },
                    "cluster": {
                      "description": "Cluster name.",
                      "type": "string",
                      "x-order": 10
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Service.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 18
                    },
                    "database": {
                      "description": "Database name.",
                      "type": "string",
                      "x-order": 6
                    },
                    "disable_collectors": {
                      "description": "List of collector names to disable in this exporter.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-order": 24
                    },
                    "disable_comments_parsing": {
                      "description": "Disable parsing comments from queries and showing them in QAN.",
                      "type": "boolean",
                      "x-order": 20
                    },
                    "disable_query_examples": {
                      "description": "Disable query examples.",
                      "type": "boolean",
                      "x-order": 17
                    },
                    "environment": {
                      "description": "Environment name.",
                      "type": "string",
                      "x-order": 9
                    },
                    "expose_exporter": {
                      "type": "boolean",
                      "title": "Optionally expose the exporter process on all public interfaces",
                      "x-order": 31
                    },
                    "log_level": {
                      "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                      "type": "string",
                      "title": "Log level for exporters",
                      "default": "LOG_LEVEL_UNSPECIFIED",
                      "enum": [
                        "LOG_LEVEL_UNSPECIFIED",
                        "LOG_LEVEL_FATAL",
                        "LOG_LEVEL_ERROR",
                        "LOG_LEVEL_WARN",
                        "LOG_LEVEL_INFO",
                        "LOG_LEVEL_DEBUG"
                      ],
                      "x-order": 29
                    },
                    "max_exporter_connections": {
                      "description": "Maximum number of connections that exporter can open to the database instance.",
                      "type": "integer",
                      "format": "int32",
                      "x-order": 32
                    },
                    "max_query_length": {
                      "description": "Limit query length in QAN (default: server-defined; -1: no limit).",
                      "type": "integer",
                      "format": "int32",
                      "x-order": 16
                    },
                    "metrics_mode": {
                      "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.\n\n - METRICS_MODE_UNSPECIFIED: Auto",
                      "type": "string",
                      "default": "METRICS_MODE_UNSPECIFIED",
                      "enum": [
                        "METRICS_MODE_UNSPECIFIED",
                        "METRICS_MODE_PULL",
                        "METRICS_MODE_PUSH"
                      ],
                      "x-order": 23
                    },
                    "node_id": {
                      "description": "Node identifier on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                      "type": "string",
                      "x-order": 0
                    },
                    "node_name": {
                      "description": "Node name on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                      "type": "string",
                      "x-order": 1
                    },
                    "password": {
                      "description": "PostgreSQL password for scraping metrics.",
                      "type": "string",
                      "x-order": 13
                    },
                    "pmm_agent_id": {
                      "description": "The \"pmm-agent\" identifier which should run agents. Required.",
                      "type": "string",
                      "x-order": 8
                    },
                    "port": {
                      "description": "Service Access port.\nPort is required when the address present.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 5
                    },
                    "qan_postgresql_pgstatements_agent": {
                      "description": "If true, adds qan-postgresql-pgstatements-agent for provided service.",
                      "type": "boolean",
                      "x-order": 14
                    },
                    "qan_postgresql_pgstatmonitor_agent": {
                      "description": "If true, adds qan-postgresql-pgstatmonitor-agent for provided service.",
                      "type": "boolean",
                      "x-order": 15
                    },
                    "replication_set": {
                      "description": "Replication set name.",
                      "type": "string",
                      "x-order": 11
                    },
                    "service_name": {
                      "description": "Unique across all Services user-defined name. Required.",
                      "type": "string",
                      "x-order": 3
                    },
                    "skip_connection_check": {
                      "description": "Skip connection check.",
                      "type": "boolean",
                      "x-order": 19
                    },
                    "socket": {
                      "description": "Service Access socket.\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 7
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 21
                    },
                    "tls_ca": {
                      "description": "TLS CA certificate.",
                      "type": "string",
                      "x-order": 25
                    },
                    "tls_cert": {
                      "description": "TLS Certifcate.",
                      "type": "string",
                      "x-order": 26
                    },
                    "tls_key": {
                      "description": "TLS Certificate Key.",
                      "type": "string",
                      "x-order": 27
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation. Uses sslmode=required instead of verify-full.",
                      "type": "boolean",
                      "x-order": 22
                    },
                    "username": {
                      "description": "PostgreSQL username for scraping metrics.",
                      "type": "string",
                      "x-order": 12
                    }
                  },
                  "x-order": 2
                },
                "proxysql": {
                  "type": "object",
                  "properties": {
                    "add_node": {
                      "description": "AddNodeParams holds node params and is used to add new node to inventory while adding new service.",
                      "type": "object",
                      "properties": {
                        "az": {
                          "description": "Node availability zone.",
                          "type": "string",
                          "x-order": 8
                        },
                        "container_id": {
                          "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                          "type": "string",
                          "x-order": 4
                        },
                        "container_name": {
                          "description": "Container name.",
                          "type": "string",
                          "x-order": 5
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels for Node.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "distro": {
                          "description": "Linux distribution name and version.",
                          "type": "string",
                          "x-order": 3
                        },
                        "machine_id": {
                          "description": "Linux machine-id.",
                          "type": "string",
                          "x-order": 2
                        },
                        "node_model": {
                          "description": "Node model.",
                          "type": "string",
                          "x-order": 6
                        },
                        "node_name": {
                          "description": "Unique across all Nodes user-defined name.",
                          "type": "string",
                          "x-order": 1
                        },
                        "node_type": {
                          "description": "NodeType describes supported Node types.",
                          "type": "string",
                          "default": "NODE_TYPE_UNSPECIFIED",
                          "enum": [
                            "NODE_TYPE_UNSPECIFIED",
                            "NODE_TYPE_GENERIC_NODE",
                            "NODE_TYPE_CONTAINER_NODE",
                            "NODE_TYPE_REMOTE_NODE",
                            "NODE_TYPE_REMOTE_RDS_NODE",
                            "NODE_TYPE_REMOTE_AZURE_DATABASE_NODE"
                          ],
                          "x-order": 0
                        },
                        "region": {
                          "description": "Node region.",
                          "type": "string",
                          "x-order": 7
                        }
                      },
                      "x-order": 2
                    },
                    "address": {
                      "description": "Node and Service access address (DNS name or IP).\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 4
                    },
                    "agent_password": {
                      "description": "Custom password for exporter endpoint /metrics.",
                      "type": "string",
                      "x-order": 19
                    },
                    "cluster": {
                      "description": "Cluster name.",
                      "type": "string",
                      "x-order": 9
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Service.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 13
                    },
                    "disable_collectors": {
                      "description": "List of collector names to disable in this exporter.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-order": 18
                    },
                    "environment": {
                      "description": "Environment name.",
                      "type": "string",
                      "x-order": 8
                    },
                    "expose_exporter": {
                      "type": "boolean",
                      "title": "Optionally expose the exporter process on all public interfaces",
                      "x-order": 21
                    },
                    "log_level": {
                      "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                      "type": "string",
                      "title": "Log level for exporters",
                      "default": "LOG_LEVEL_UNSPECIFIED",
                      "enum": [
                        "LOG_LEVEL_UNSPECIFIED",
                        "LOG_LEVEL_FATAL",
                        "LOG_LEVEL_ERROR",
                        "LOG_LEVEL_WARN",
                        "LOG_LEVEL_INFO",
                        "LOG_LEVEL_DEBUG"
                      ],
                      "x-order": 20
                    },
                    "metrics_mode": {
                      "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.\n\n - METRICS_MODE_UNSPECIFIED: Auto",
                      "type": "string",
                      "default": "METRICS_MODE_UNSPECIFIED",
                      "enum": [
                        "METRICS_MODE_UNSPECIFIED",
                        "METRICS_MODE_PULL",
                        "METRICS_MODE_PUSH"
                      ],
                      "x-order": 17
                    },
                    "node_id": {
                      "description": "Node identifier on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                      "type": "string",
                      "x-order": 0
                    },
                    "node_name": {
                      "description": "Node name on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                      "type": "string",
                      "x-order": 1
                    },
                    "password": {
                      "description": "ProxySQL password for scraping metrics.",
                      "type": "string",
                      "x-order": 12
                    },
                    "pmm_agent_id": {
                      "description": "The \"pmm-agent\" identifier which should run agents. Required.",
                      "type": "string",
                      "x-order": 7
                    },
                    "port": {
                      "description": "Service Access port.\nPort is required when the address present.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 5
                    },
                    "replication_set": {
                      "description": "Replication set name.",
                      "type": "string",
                      "x-order": 10
                    },
                    "service_name": {
                      "description": "Unique across all Services user-defined name. Required.",
                      "type": "string",
                      "x-order": 3
                    },
                    "skip_connection_check": {
                      "description": "Skip connection check.",
                      "type": "boolean",
                      "x-order": 14
                    },
                    "socket": {
                      "description": "Service Access socket.\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 6
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 15
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation.",
                      "type": "boolean",
                      "x-order": 16
                    },
                    "username": {
                      "description": "ProxySQL username for scraping metrics.",
                      "type": "string",
                      "x-order": 11
                    }
                  },
                  "x-order": 3
                },
                "rds": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "Address used to connect to it.",
                      "type": "string",
                      "x-order": 4
                    },
                    "agent_password": {
                      "description": "Custom password for exporter endpoint /metrics.",
                      "type": "string",
                      "x-order": 28
                    },
                    "auto_discovery_limit": {
                      "description": "Limit of databases for auto-discovery.",
                      "type": "integer",
                      "format": "int32",
                      "x-order": 30
                    },
                    "aws_access_key": {
                      "description": "AWS Access key.",
                      "type": "string",
                      "x-order": 14
                    },
                    "aws_secret_key": {
                      "description": "AWS Secret key.",
                      "type": "string",
                      "x-order": 15
                    },
                    "az": {
                      "description": "AWS availability zone.",
                      "type": "string",
                      "x-order": 1
                    },
                    "cluster": {
                      "description": "Cluster name.",
                      "type": "string",
                      "x-order": 10
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Node and Service.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 18
                    },
                    "database": {
                      "description": "Database name.",
                      "type": "string",
                      "x-order": 29
                    },
                    "disable_basic_metrics": {
                      "description": "Disable basic metrics.",
                      "type": "boolean",
                      "x-order": 24
                    },
                    "disable_comments_parsing": {
                      "description": "Disable parsing comments from queries and showing them in QAN.",
                      "type": "boolean",
                      "x-order": 31
                    },
                    "disable_enhanced_metrics": {
                      "description": "Disable enhanced metrics.",
                      "type": "boolean",
                      "x-order": 25
                    },
                    "disable_query_examples": {
                      "description": "Disable query examples.",
                      "type": "boolean",
                      "x-order": 22
                    },
                    "engine": {
                      "description": "DiscoverRDSEngine describes supported RDS instance engines.",
                      "type": "string",
                      "default": "DISCOVER_RDS_ENGINE_UNSPECIFIED",
                      "enum": [
                        "DISCOVER_RDS_ENGINE_UNSPECIFIED",
                        "DISCOVER_RDS_ENGINE_MYSQL",
                        "DISCOVER_RDS_ENGINE_POSTGRESQL"
                      ],
                      "x-order": 6
                    },
                    "environment": {
                      "description": "Environment name.",
                      "type": "string",
                      "x-order": 9
                    },
                    "instance_id": {
                      "description": "AWS instance ID.",
                      "type": "string",
                      "x-order": 2
                    },
                    "max_postgresql_exporter_connections": {
                      "description": "Maximum number of exporter connections to PostgreSQL instance.",
                      "type": "integer",
                      "format": "int32",
                      "x-order": 32
                    },
                    "metrics_mode": {
                      "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.\n\n - METRICS_MODE_UNSPECIFIED: Auto",
                      "type": "string",
                      "default": "METRICS_MODE_UNSPECIFIED",
                      "enum": [
                        "METRICS_MODE_UNSPECIFIED",
                        "METRICS_MODE_PULL",
                        "METRICS_MODE_PUSH"
                      ],
                      "x-order": 26
                    },
                    "node_model": {
                      "description": "AWS instance class.",
                      "type": "string",
                      "x-order": 3
                    },
                    "node_name": {
                      "description": "Unique across all Nodes user-defined name. Defaults to AWS instance ID.",
                      "type": "string",
                      "x-order": 7
                    },
                    "password": {
                      "description": "Password for scraping metrics.",
                      "type": "string",
                      "x-order": 13
                    },
                    "port": {
                      "description": "Access port.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 5
                    },
                    "qan_mysql_perfschema": {
                      "description": "If true, adds qan-mysql-perfschema-agent.",
                      "type": "boolean",
                      "x-order": 17
                    },
                    "qan_postgresql_pgstatements": {
                      "type": "boolean",
                      "title": "If true, add qan-pgstatements",
                      "x-order": 27
                    },
                    "rds_exporter": {
                      "description": "If true, adds rds_exporter.",
                      "type": "boolean",
                      "x-order": 16
                    },
                    "region": {
                      "description": "AWS region.",
                      "type": "string",
                      "x-order": 0
                    },
                    "replication_set": {
                      "description": "Replication set name.",
                      "type": "string",
                      "x-order": 11
                    },
                    "service_name": {
                      "description": "Unique across all Services user-defined name. Defaults to AWS instance ID.",
                      "type": "string",
                      "x-order": 8
                    },
                    "skip_connection_check": {
                      "description": "Skip connection check.",
                      "type": "boolean",
                      "x-order": 19
                    },
                    "tablestats_group_table_limit": {
                      "description": "Tablestats group collectors will be disabled if there are more than that number of tables.\nIf zero, server's default value is used.\nUse negative value to disable them.",
                      "type": "integer",
                      "format": "int32",
                      "x-order": 23
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 20
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation.",
                      "type": "boolean",
                      "x-order": 21
                    },
                    "username": {
                      "description": "Username for scraping metrics.",
                      "type": "string",
                      "x-order": 12
                    }
                  },
                  "x-order": 6
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "external": {
                  "type": "object",
                  "properties": {
                    "external_exporter": {
                      "description": "ExternalExporter runs on any Node type, including Remote Node.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 7
                        },
                        "disabled": {
                          "description": "If disabled, metrics from this exporter will not be collected.",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "listen_port": {
                          "description": "Listen port for scraping metrics.",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 8
                        },
                        "metrics_path": {
                          "description": "Path under which metrics are exposed, used to generate URI.",
                          "type": "string",
                          "x-order": 6
                        },
                        "metrics_resolutions": {
                          "description": "MetricsResolutions represents Prometheus exporters metrics resolutions.",
                          "type": "object",
                          "properties": {
                            "hr": {
                              "description": "High resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 0
                            },
                            "lr": {
                              "description": "Low resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 2
                            },
                            "mr": {
                              "description": "Medium resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 1
                            }
                          },
                          "x-order": 11
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 10
                        },
                        "push_metrics_enabled": {
                          "description": "True if exporter uses push metrics mode.",
                          "type": "boolean",
                          "x-order": 9
                        },
                        "runs_on_node_id": {
                          "description": "Node identifier where this instance runs.",
                          "type": "string",
                          "x-order": 1
                        },
                        "scheme": {
                          "description": "Scheme to generate URI to exporter metrics endpoints.",
                          "type": "string",
                          "x-order": 5
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "username": {
                          "description": "HTTP basic auth username for collecting metrics.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 1
                    },
                    "service": {
                      "description": "ExternalService represents a generic External service instance.",
                      "type": "object",
                      "properties": {
                        "cluster": {
                          "description": "Cluster name.",
                          "type": "string",
                          "x-order": 4
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 6
                        },
                        "environment": {
                          "description": "Environment name.",
                          "type": "string",
                          "x-order": 3
                        },
                        "group": {
                          "description": "Group name of external service.",
                          "type": "string",
                          "x-order": 7
                        },
                        "node_id": {
                          "description": "Node identifier where this service instance runs.",
                          "type": "string",
                          "x-order": 2
                        },
                        "replication_set": {
                          "description": "Replication set name.",
                          "type": "string",
                          "x-order": 5
                        },
                        "service_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "service_name": {
                          "description": "Unique across all Services user-defined name.",
                          "type": "string",
                          "x-order": 1
                        }
                      },
                      "x-order": 0
                    }
                  },
                  "x-order": 5
                },
                "haproxy": {
                  "type": "object",
                  "properties": {
                    "external_exporter": {
                      "description": "ExternalExporter runs on any Node type, including Remote Node.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 7
                        },
                        "disabled": {
                          "description": "If disabled, metrics from this exporter will not be collected.",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "listen_port": {
                          "description": "Listen port for scraping metrics.",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 8
                        },
                        "metrics_path": {
                          "description": "Path under which metrics are exposed, used to generate URI.",
                          "type": "string",
                          "x-order": 6
                        },
                        "metrics_resolutions": {
                          "description": "MetricsResolutions represents Prometheus exporters metrics resolutions.",
                          "type": "object",
                          "properties": {
                            "hr": {
                              "description": "High resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 0
                            },
                            "lr": {
                              "description": "Low resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 2
                            },
                            "mr": {
                              "description": "Medium resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 1
                            }
                          },
                          "x-order": 11
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 10
                        },
                        "push_metrics_enabled": {
                          "description": "True if exporter uses push metrics mode.",
                          "type": "boolean",
                          "x-order": 9
                        },
                        "runs_on_node_id": {
                          "description": "Node identifier where this instance runs.",
                          "type": "string",
                          "x-order": 1
                        },
                        "scheme": {
                          "description": "Scheme to generate URI to exporter metrics endpoints.",
                          "type": "string",
                          "x-order": 5
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "username": {
                          "description": "HTTP basic auth username for collecting metrics.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 1
                    },
                    "service": {
                      "description": "HAProxyService represents a generic HAProxy service instance.",
                      "type": "object",
                      "properties": {
                        "cluster": {
                          "description": "Cluster name.",
                          "type": "string",
                          "x-order": 4
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 6
                        },
                        "environment": {
                          "description": "Environment name.",
                          "type": "string",
                          "x-order": 3
                        },
                        "node_id": {
                          "description": "Node identifier where this service instance runs.",
                          "type": "string",
                          "x-order": 2
                        },
                        "replication_set": {
                          "description": "Replication set name.",
                          "type": "string",
                          "x-order": 5
                        },
                        "service_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "service_name": {
                          "description": "Unique across all Services user-defined name.",
                          "type": "string",
                          "x-order": 1
                        }
                      },
                      "x-order": 0
                    }
                  },
                  "x-order": 4
                },
                "mongodb": {
                  "type": "object",
                  "properties": {
                    "mongodb_exporter": {
                      "description": "MongoDBExporter runs on Generic or Container Node and exposes MongoDB Service metrics.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "collections_limit": {
                          "type": "integer",
                          "format": "int32",
                          "title": "Collections limit. Only get Databases and collection stats if the total number of collections in the server\nis less than this value. 0: no limit",
                          "x-order": 13
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 7
                        },
                        "disabled": {
                          "description": "Desired Agent status: enabled (false) or disabled (true).",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "disabled_collectors": {
                          "description": "List of disabled collector names.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "enable_all_collectors": {
                          "description": "Enable All collectors.",
                          "type": "boolean",
                          "x-order": 14
                        },
                        "expose_exporter": {
                          "type": "boolean",
                          "title": "Optionally expose the exporter process on all public interfaces",
                          "x-order": 17
                        },
                        "listen_port": {
                          "description": "Listen port for scraping metrics.",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 11
                        },
                        "log_level": {
                          "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                          "type": "string",
                          "title": "Log level for exporters",
                          "default": "LOG_LEVEL_UNSPECIFIED",
                          "enum": [
                            "LOG_LEVEL_UNSPECIFIED",
                            "LOG_LEVEL_FATAL",
                            "LOG_LEVEL_ERROR",
                            "LOG_LEVEL_WARN",
                            "LOG_LEVEL_INFO",
                            "LOG_LEVEL_DEBUG"
                          ],
                          "x-order": 16
                        },
                        "metrics_resolutions": {
                          "description": "MetricsResolutions represents Prometheus exporters metrics resolutions.",
                          "type": "object",
                          "properties": {
                            "hr": {
                              "description": "High resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 0
                            },
                            "lr": {
                              "description": "Low resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 2
                            },
                            "mr": {
                              "description": "Medium resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 1
                            }
                          },
                          "x-order": 18
                        },
                        "pmm_agent_id": {
                          "description": "The pmm-agent identifier which runs this instance.",
                          "type": "string",
                          "x-order": 1
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 15
                        },
                        "push_metrics_enabled": {
                          "description": "True if exporter uses push metrics mode.",
                          "type": "boolean",
                          "x-order": 8
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "stats_collections": {
                          "type": "array",
                          "title": "List of colletions to get stats from. Can use *",
                          "items": {
                            "type": "string"
                          },
                          "x-order": 12
                        },
                        "status": {
                          "description": "AgentStatus represents actual Agent status.\n\n - AGENT_STATUS_STARTING: Agent is starting.\n - AGENT_STATUS_RUNNING: Agent is running.\n - AGENT_STATUS_WAITING: Agent encountered error and will be restarted automatically soon.\n - AGENT_STATUS_STOPPING: Agent is stopping.\n - AGENT_STATUS_DONE: Agent finished.\n - AGENT_STATUS_UNKNOWN: Agent is not connected, we don't know anything about it's state.",
                          "type": "string",
                          "default": "AGENT_STATUS_UNSPECIFIED",
                          "enum": [
                            "AGENT_STATUS_UNSPECIFIED",
                            "AGENT_STATUS_STARTING",
                            "AGENT_STATUS_RUNNING",
                            "AGENT_STATUS_WAITING",
                            "AGENT_STATUS_STOPPING",
                            "AGENT_STATUS_DONE",
                            "AGENT_STATUS_UNKNOWN"
                          ],
                          "x-order": 10
                        },
                        "tls": {
                          "description": "Use TLS for database connections.",
                          "type": "boolean",
                          "x-order": 5
                        },
                        "tls_skip_verify": {
                          "description": "Skip TLS certificate and hostname validation.",
                          "type": "boolean",
                          "x-order": 6
                        },
                        "username": {
                          "description": "MongoDB username for scraping metrics.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 1
                    },
                    "qan_mongodb_profiler": {
                      "description": "QANMongoDBProfilerAgent runs within pmm-agent and sends MongoDB Query Analytics data to the PMM Server.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 8
                        },
                        "disabled": {
                          "description": "Desired Agent status: enabled (false) or disabled (true).",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "log_level": {
                          "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                          "type": "string",
                          "title": "Log level for exporters",
                          "default": "LOG_LEVEL_UNSPECIFIED",
                          "enum": [
                            "LOG_LEVEL_UNSPECIFIED",
                            "LOG_LEVEL_FATAL",
                            "LOG_LEVEL_ERROR",
                            "LOG_LEVEL_WARN",
                            "LOG_LEVEL_INFO",
                            "LOG_LEVEL_DEBUG"
                          ],
                          "x-order": 11
                        },
                        "max_query_length": {
                          "description": "Limit query length in QAN (default: server-defined; -1: no limit).",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 7
                        },
                        "pmm_agent_id": {
                          "description": "The pmm-agent identifier which runs this instance.",
                          "type": "string",
                          "x-order": 1
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 10
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "status": {
                          "description": "AgentStatus represents actual Agent status.\n\n - AGENT_STATUS_STARTING: Agent is starting.\n - AGENT_STATUS_RUNNING: Agent is running.\n - AGENT_STATUS_WAITING: Agent encountered error and will be restarted automatically soon.\n - AGENT_STATUS_STOPPING: Agent is stopping.\n - AGENT_STATUS_DONE: Agent finished.\n - AGENT_STATUS_UNKNOWN: Agent is not connected, we don't know anything about it's state.",
                          "type": "string",
                          "default": "AGENT_STATUS_UNSPECIFIED",
                          "enum": [
                            "AGENT_STATUS_UNSPECIFIED",
                            "AGENT_STATUS_STARTING",
                            "AGENT_STATUS_RUNNING",
                            "AGENT_STATUS_WAITING",
                            "AGENT_STATUS_STOPPING",
                            "AGENT_STATUS_DONE",
                            "AGENT_STATUS_UNKNOWN"
                          ],
                          "x-order": 9
                        },
                        "tls": {
                          "description": "Use TLS for database connections.",
                          "type": "boolean",
                          "x-order": 5
                        },
                        "tls_skip_verify": {
                          "description": "Skip TLS certificate and hostname validation.",
                          "type": "boolean",
                          "x-order": 6
                        },
                        "username": {
                          "description": "MongoDB username for getting profiler data.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 2
                    },
                    "service": {
                      "description": "MongoDBService represents a generic MongoDB instance.",
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required.",
                          "type": "string",
                          "x-order": 3
                        },
                        "cluster": {
                          "description": "Cluster name.",
                          "type": "string",
                          "x-order": 7
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "environment": {
                          "description": "Environment name.",
                          "type": "string",
                          "x-order": 6
                        },
                        "node_id": {
                          "description": "Node identifier where this instance runs.",
                          "type": "string",
                          "x-order": 2
                        },
                        "port": {
                          "description": "Access port.\nPort is required when the address present.",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 4
                        },
                        "replication_set": {
                          "description": "Replication set name.",
                          "type": "string",
                          "x-order": 8
                        },
                        "service_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "service_name": {
                          "description": "Unique across all Services user-defined name.",
                          "type": "string",
                          "x-order": 1
                        },
                        "socket": {
                          "description": "Access unix socket.\nAddress (and port) or socket is required.",
                          "type": "string",
                          "x-order": 5
                        },
                        "version": {
                          "description": "MongoDB version.",
                          "type": "string",
                          "x-order": 10
                        }
                      },
                      "x-order": 0
                    }
                  },
                  "x-order": 1
                },
                "mysql": {
                  "type": "object",
                  "properties": {
                    "mysqld_exporter": {
                      "description": "MySQLdExporter runs on Generic or Container Node and exposes MySQL Service metrics.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 11
                        },
                        "disabled": {
                          "description": "Desired Agent status: enabled (false) or disabled (true).",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "disabled_collectors": {
                          "description": "List of disabled collector names.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-order": 13
                        },
                        "expose_exporter": {
                          "type": "boolean",
                          "title": "Optionally expose the exporter process on all public interfaces",
                          "x-order": 20
                        },
                        "listen_port": {
                          "description": "Listen port for scraping metrics.",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 16
                        },
                        "log_level": {
                          "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                          "type": "string",
                          "title": "Log level for exporters",
                          "default": "LOG_LEVEL_UNSPECIFIED",
                          "enum": [
                            "LOG_LEVEL_UNSPECIFIED",
                            "LOG_LEVEL_FATAL",
                            "LOG_LEVEL_ERROR",
                            "LOG_LEVEL_WARN",
                            "LOG_LEVEL_INFO",
                            "LOG_LEVEL_DEBUG"
                          ],
                          "x-order": 19
                        },
                        "metrics_resolutions": {
                          "description": "MetricsResolutions represents Prometheus exporters metrics resolutions.",
                          "type": "object",
                          "properties": {
                            "hr": {
                              "description": "High resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 0
                            },
                            "lr": {
                              "description": "Low resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 2
                            },
                            "mr": {
                              "description": "Medium resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 1
                            }
                          },
                          "x-order": 21
                        },
                        "pmm_agent_id": {
                          "description": "The pmm-agent identifier which runs this instance.",
                          "type": "string",
                          "x-order": 1
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 18
                        },
                        "push_metrics_enabled": {
                          "description": "True if exporter uses push metrics mode.",
                          "type": "boolean",
                          "x-order": 12
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "status": {
                          "description": "AgentStatus represents actual Agent status.\n\n - AGENT_STATUS_STARTING: Agent is starting.\n - AGENT_STATUS_RUNNING: Agent is running.\n - AGENT_STATUS_WAITING: Agent encountered error and will be restarted automatically soon.\n - AGENT_STATUS_STOPPING: Agent is stopping.\n - AGENT_STATUS_DONE: Agent finished.\n - AGENT_STATUS_UNKNOWN: Agent is not connected, we don't know anything about it's state.",
                          "type": "string",
                          "default": "AGENT_STATUS_UNSPECIFIED",
                          "enum": [
                            "AGENT_STATUS_UNSPECIFIED",
                            "AGENT_STATUS_STARTING",
                            "AGENT_STATUS_RUNNING",
                            "AGENT_STATUS_WAITING",
                            "AGENT_STATUS_STOPPING",
                            "AGENT_STATUS_DONE",
                            "AGENT_STATUS_UNKNOWN"
                          ],
                          "x-order": 15
                        },
                        "table_count": {
                          "description": "Actual table count at the moment of adding.",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 14
                        },
                        "tablestats_group_disabled": {
                          "description": "True if tablestats group collectors are currently disabled.",
                          "type": "boolean",
                          "x-order": 17
                        },
                        "tablestats_group_table_limit": {
                          "description": "Tablestats group collectors are disabled if there are more than that number of tables.\n0 means tablestats group collectors are always enabled (no limit).\nNegative value means tablestats group collectors are always disabled.",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 10
                        },
                        "tls": {
                          "description": "Use TLS for database connections.",
                          "type": "boolean",
                          "x-order": 5
                        },
                        "tls_ca": {
                          "description": "Certificate Authority certificate chain.",
                          "type": "string",
                          "x-order": 7
                        },
                        "tls_cert": {
                          "description": "Client certificate.",
                          "type": "string",
                          "x-order": 8
                        },
                        "tls_key": {
                          "description": "Password for decrypting tls_cert.",
                          "type": "string",
                          "x-order": 9
                        },
                        "tls_skip_verify": {
                          "description": "Skip TLS certificate and hostname validation.",
                          "type": "boolean",
                          "x-order": 6
                        },
                        "username": {
                          "description": "MySQL username for scraping metrics.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 1
                    },
                    "qan_mysql_perfschema": {
                      "description": "QANMySQLPerfSchemaAgent runs within pmm-agent and sends MySQL Query Analytics data to the PMM Server.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 13
                        },
                        "disable_comments_parsing": {
                          "description": "Disable parsing comments from queries and showing them in QAN.",
                          "type": "boolean",
                          "x-order": 10
                        },
                        "disabled": {
                          "description": "Desired Agent status: enabled (false) or disabled (true).",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "log_level": {
                          "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                          "type": "string",
                          "title": "Log level for exporters",
                          "default": "LOG_LEVEL_UNSPECIFIED",
                          "enum": [
                            "LOG_LEVEL_UNSPECIFIED",
                            "LOG_LEVEL_FATAL",
                            "LOG_LEVEL_ERROR",
                            "LOG_LEVEL_WARN",
                            "LOG_LEVEL_INFO",
                            "LOG_LEVEL_DEBUG"
                          ],
                          "x-order": 16
                        },
                        "max_query_length": {
                          "description": "Limit query length in QAN (default: server-defined; -1: no limit).",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 11
                        },
                        "pmm_agent_id": {
                          "description": "The pmm-agent identifier which runs this instance.",
                          "type": "string",
                          "x-order": 1
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 15
                        },
                        "query_examples_disabled": {
                          "description": "True if query examples are disabled.",
                          "type": "boolean",
                          "x-order": 12
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "status": {
                          "description": "AgentStatus represents actual Agent status.\n\n - AGENT_STATUS_STARTING: Agent is starting.\n - AGENT_STATUS_RUNNING: Agent is running.\n - AGENT_STATUS_WAITING: Agent encountered error and will be restarted automatically soon.\n - AGENT_STATUS_STOPPING: Agent is stopping.\n - AGENT_STATUS_DONE: Agent finished.\n - AGENT_STATUS_UNKNOWN: Agent is not connected, we don't know anything about it's state.",
                          "type": "string",
                          "default": "AGENT_STATUS_UNSPECIFIED",
                          "enum": [
                            "AGENT_STATUS_UNSPECIFIED",
                            "AGENT_STATUS_STARTING",
                            "AGENT_STATUS_RUNNING",
                            "AGENT_STATUS_WAITING",
                            "AGENT_STATUS_STOPPING",
                            "AGENT_STATUS_DONE",
                            "AGENT_STATUS_UNKNOWN"
                          ],
                          "x-order": 14
                        },
                        "tls": {
                          "description": "Use TLS for database connections.",
                          "type": "boolean",
                          "x-order": 5
                        },
                        "tls_ca": {
                          "description": "Certificate Authority certificate chain.",
                          "type": "string",
                          "x-order": 7
                        },
                        "tls_cert": {
                          "description": "Client certificate.",
                          "type": "string",
                          "x-order": 8
                        },
                        "tls_key": {
                          "description": "Password for decrypting tls_cert.",
                          "type": "string",
                          "x-order": 9
                        },
                        "tls_skip_verify": {
                          "description": "Skip TLS certificate and hostname validation.",
                          "type": "boolean",
                          "x-order": 6
                        },
                        "username": {
                          "description": "MySQL username for getting performance data.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 2
                    },
                    "qan_mysql_slowlog": {
                      "description": "QANMySQLSlowlogAgent runs within pmm-agent and sends MySQL Query Analytics data to the PMM Server.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 14
                        },
                        "disable_comments_parsing": {
                          "description": "Disable parsing comments from queries and showing them in QAN.",
                          "type": "boolean",
                          "x-order": 10
                        },
                        "disabled": {
                          "description": "Desired Agent status: enabled (false) or disabled (true).",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "log_level": {
                          "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                          "type": "string",
                          "title": "Log level for exporters",
                          "default": "LOG_LEVEL_UNSPECIFIED",
                          "enum": [
                            "LOG_LEVEL_UNSPECIFIED",
                            "LOG_LEVEL_FATAL",
                            "LOG_LEVEL_ERROR",
                            "LOG_LEVEL_WARN",
                            "LOG_LEVEL_INFO",
                            "LOG_LEVEL_DEBUG"
                          ],
                          "x-order": 17
                        },
                        "max_query_length": {
                          "type": "integer",
                          "format": "int32",
                          "title": "Limit query length in QAN (default: server-defined; -1: no limit)",
                          "x-order": 11
                        },
                        "max_slowlog_file_size": {
                          "description": "Slowlog file is rotated at this size if \u003e 0.",
                          "type": "string",
                          "format": "int64",
                          "x-order": 13
                        },
                        "pmm_agent_id": {
                          "description": "The pmm-agent identifier which runs this instance.",
                          "type": "string",
                          "x-order": 1
                        },
                        "process_exec_path": {
                          "type": "string",
                          "title": "mod tidy",
                          "x-order": 16
                        },
                        "query_examples_disabled": {
                          "description": "True if query examples are disabled.",
                          "type": "boolean",
                          "x-order": 12
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "status": {
                          "description": "AgentStatus represents actual Agent status.\n\n - AGENT_STATUS_STARTING: Agent is starting.\n - AGENT_STATUS_RUNNING: Agent is running.\n - AGENT_STATUS_WAITING: Agent encountered error and will be restarted automatically soon.\n - AGENT_STATUS_STOPPING: Agent is stopping.\n - AGENT_STATUS_DONE: Agent finished.\n - AGENT_STATUS_UNKNOWN: Agent is not connected, we don't know anything about it's state.",
                          "type": "string",
                          "default": "AGENT_STATUS_UNSPECIFIED",
                          "enum": [
                            "AGENT_STATUS_UNSPECIFIED",
                            "AGENT_STATUS_STARTING",
                            "AGENT_STATUS_RUNNING",
                            "AGENT_STATUS_WAITING",
                            "AGENT_STATUS_STOPPING",
                            "AGENT_STATUS_DONE",
                            "AGENT_STATUS_UNKNOWN"
                          ],
                          "x-order": 15
                        },
                        "tls": {
                          "description": "Use TLS for database connections.",
                          "type": "boolean",
                          "x-order": 5
                        },
                        "tls_ca": {
                          "description": "Certificate Authority certificate chain.",
                          "type": "string",
                          "x-order": 7
                        },
                        "tls_cert": {
                          "description": "Client certificate.",
                          "type": "string",
                          "x-order": 8
                        },
                        "tls_key": {
                          "description": "Password for decrypting tls_cert.",
                          "type": "string",
                          "x-order": 9
                        },
                        "tls_skip_verify": {
                          "description": "Skip TLS certificate and hostname validation.",
                          "type": "boolean",
                          "x-order": 6
                        },
                        "username": {
                          "description": "MySQL username for getting performance data.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 3
                    },
                    "service": {
                      "description": "MySQLService represents a generic MySQL instance.",
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required.",
                          "type": "string",
                          "x-order": 3
                        },
                        "cluster": {
                          "description": "Cluster name.",
                          "type": "string",
                          "x-order": 7
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "environment": {
                          "description": "Environment name.",
                          "type": "string",
                          "x-order": 6
                        },
                        "node_id": {
                          "description": "Node identifier where this instance runs.",
                          "type": "string",
                          "x-order": 2
                        },
                        "port": {
                          "description": "Access port.\nPort is required when the address present.",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 4
                        },
                        "replication_set": {
                          "description": "Replication set name.",
                          "type": "string",
                          "x-order": 8
                        },
                        "service_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "service_name": {
                          "description": "Unique across all Services user-defined name.",
                          "type": "string",
                          "x-order": 1
                        },
                        "socket": {
                          "description": "Access unix socket.\nAddress (and port) or socket is required.",
                          "type": "string",
                          "x-order": 5
                        },
                        "version": {
                          "description": "MySQL version.",
                          "type": "string",
                          "x-order": 10
                        }
                      },
                      "x-order": 0
                    },
                    "table_count": {
                      "description": "Actual table count at the moment of adding.",
                      "type": "integer",
                      "format": "int32",
                      "x-order": 4
                    }
                  },
                  "x-order": 0
                },
                "postgresql": {
                  "type": "object",
                  "properties": {
                    "postgres_exporter": {
                      "description": "PostgresExporter runs on Generic or Container Node and exposes PostgreSQL Service metrics.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "auto_discovery_limit": {
                          "description": "Limit of databases for auto-discovery.",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 14
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 7
                        },
                        "disabled": {
                          "description": "Desired Agent status: enabled (false) or disabled (true).",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "disabled_collectors": {
                          "description": "List of disabled collector names.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "expose_exporter": {
                          "type": "boolean",
                          "title": "Optionally expose the exporter process on all public interfaces",
                          "x-order": 15
                        },
                        "listen_port": {
                          "description": "Listen port for scraping metrics.",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 11
                        },
                        "log_level": {
                          "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                          "type": "string",
                          "title": "Log level for exporters",
                          "default": "LOG_LEVEL_UNSPECIFIED",
                          "enum": [
                            "LOG_LEVEL_UNSPECIFIED",
                            "LOG_LEVEL_FATAL",
                            "LOG_LEVEL_ERROR",
                            "LOG_LEVEL_WARN",
                            "LOG_LEVEL_INFO",
                            "LOG_LEVEL_DEBUG"
                          ],
                          "x-order": 13
                        },
                        "max_exporter_connections": {
                          "description": "Maximum number of connections that exporter can open to the database instance.",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 16
                        },
                        "metrics_resolutions": {
                          "description": "MetricsResolutions represents Prometheus exporters metrics resolutions.",
                          "type": "object",
                          "properties": {
                            "hr": {
                              "description": "High resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 0
                            },
                            "lr": {
                              "description": "Low resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 2
                            },
                            "mr": {
                              "description": "Medium resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 1
                            }
                          },
                          "x-order": 17
                        },
                        "pmm_agent_id": {
                          "description": "The pmm-agent identifier which runs this instance.",
                          "type": "string",
                          "x-order": 1
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 12
                        },
                        "push_metrics_enabled": {
                          "description": "True if exporter uses push metrics mode.",
                          "type": "boolean",
                          "x-order": 8
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "status": {
                          "description": "AgentStatus represents actual Agent status.\n\n - AGENT_STATUS_STARTING: Agent is starting.\n - AGENT_STATUS_RUNNING: Agent is running.\n - AGENT_STATUS_WAITING: Agent encountered error and will be restarted automatically soon.\n - AGENT_STATUS_STOPPING: Agent is stopping.\n - AGENT_STATUS_DONE: Agent finished.\n - AGENT_STATUS_UNKNOWN: Agent is not connected, we don't know anything about it's state.",
                          "type": "string",
                          "default": "AGENT_STATUS_UNSPECIFIED",
                          "enum": [
                            "AGENT_STATUS_UNSPECIFIED",
                            "AGENT_STATUS_STARTING",
                            "AGENT_STATUS_RUNNING",
                            "AGENT_STATUS_WAITING",
                            "AGENT_STATUS_STOPPING",
                            "AGENT_STATUS_DONE",
                            "AGENT_STATUS_UNKNOWN"
                          ],
                          "x-order": 10
                        },
                        "tls": {
                          "description": "Use TLS for database connections.",
                          "type": "boolean",
                          "x-order": 5
                        },
                        "tls_skip_verify": {
                          "description": "Skip TLS certificate and hostname validation. Uses sslmode=required instead of verify-full.",
                          "type": "boolean",
                          "x-order": 6
                        },
                        "username": {
                          "description": "PostgreSQL username for scraping metrics.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 1
                    },
                    "qan_postgresql_pgstatements_agent": {
                      "description": "QANPostgreSQLPgStatementsAgent runs within pmm-agent and sends PostgreSQL Query Analytics data to the PMM Server.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "disable_comments_parsing": {
                          "description": "Disable parsing comments from queries and showing them in QAN.",
                          "type": "boolean",
                          "x-order": 5
                        },
                        "disabled": {
                          "description": "Desired Agent status: enabled (false) or disabled (true).",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "log_level": {
                          "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                          "type": "string",
                          "title": "Log level for exporters",
                          "default": "LOG_LEVEL_UNSPECIFIED",
                          "enum": [
                            "LOG_LEVEL_UNSPECIFIED",
                            "LOG_LEVEL_FATAL",
                            "LOG_LEVEL_ERROR",
                            "LOG_LEVEL_WARN",
                            "LOG_LEVEL_INFO",
                            "LOG_LEVEL_DEBUG"
                          ],
                          "x-order": 12
                        },
                        "max_query_length": {
                          "description": "Limit query length in QAN (default: server-defined; -1: no limit).",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 6
                        },
                        "pmm_agent_id": {
                          "description": "The pmm-agent identifier which runs this instance.",
                          "type": "string",
                          "x-order": 1
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 11
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "status": {
                          "description": "AgentStatus represents actual Agent status.\n\n - AGENT_STATUS_STARTING: Agent is starting.\n - AGENT_STATUS_RUNNING: Agent is running.\n - AGENT_STATUS_WAITING: Agent encountered error and will be restarted automatically soon.\n - AGENT_STATUS_STOPPING: Agent is stopping.\n - AGENT_STATUS_DONE: Agent finished.\n - AGENT_STATUS_UNKNOWN: Agent is not connected, we don't know anything about it's state.",
                          "type": "string",
                          "default": "AGENT_STATUS_UNSPECIFIED",
                          "enum": [
                            "AGENT_STATUS_UNSPECIFIED",
                            "AGENT_STATUS_STARTING",
                            "AGENT_STATUS_RUNNING",
                            "AGENT_STATUS_WAITING",
                            "AGENT_STATUS_STOPPING",
                            "AGENT_STATUS_DONE",
                            "AGENT_STATUS_UNKNOWN"
                          ],
                          "x-order": 10
                        },
                        "tls": {
                          "description": "Use TLS for database connections.",
                          "type": "boolean",
                          "x-order": 7
                        },
                        "tls_skip_verify": {
                          "description": "Skip TLS certificate and hostname validation.",
                          "type": "boolean",
                          "x-order": 8
                        },
                        "username": {
                          "description": "PostgreSQL username for getting pg stat statements data.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 2
                    },
                    "qan_postgresql_pgstatmonitor_agent": {
                      "description": "QANPostgreSQLPgStatMonitorAgent runs within pmm-agent and sends PostgreSQL Query Analytics data to the PMM Server.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 10
                        },
                        "disable_comments_parsing": {
                          "description": "Disable parsing comments from queries and showing them in QAN.",
                          "type": "boolean",
                          "x-order": 7
                        },
                        "disabled": {
                          "description": "Desired Agent status: enabled (false) or disabled (true).",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "log_level": {
                          "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                          "type": "string",
                          "title": "Log level for exporters",
                          "default": "LOG_LEVEL_UNSPECIFIED",
                          "enum": [
                            "LOG_LEVEL_UNSPECIFIED",
                            "LOG_LEVEL_FATAL",
                            "LOG_LEVEL_ERROR",
                            "LOG_LEVEL_WARN",
                            "LOG_LEVEL_INFO",
                            "LOG_LEVEL_DEBUG"
                          ],
                          "x-order": 13
                        },
                        "max_query_length": {
                          "description": "Limit query length in QAN (default: server-defined; -1: no limit).",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 8
                        },
                        "pmm_agent_id": {
                          "description": "The pmm-agent identifier which runs this instance.",
                          "type": "string",
                          "x-order": 1
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 12
                        },
                        "query_examples_disabled": {
                          "description": "True if query examples are disabled.",
                          "type": "boolean",
                          "x-order": 9
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "status": {
                          "description": "AgentStatus represents actual Agent status.\n\n - AGENT_STATUS_STARTING: Agent is starting.\n - AGENT_STATUS_RUNNING: Agent is running.\n - AGENT_STATUS_WAITING: Agent encountered error and will be restarted automatically soon.\n - AGENT_STATUS_STOPPING: Agent is stopping.\n - AGENT_STATUS_DONE: Agent finished.\n - AGENT_STATUS_UNKNOWN: Agent is not connected, we don't know anything about it's state.",
                          "type": "string",
                          "default": "AGENT_STATUS_UNSPECIFIED",
                          "enum": [
                            "AGENT_STATUS_UNSPECIFIED",
                            "AGENT_STATUS_STARTING",
                            "AGENT_STATUS_RUNNING",
                            "AGENT_STATUS_WAITING",
                            "AGENT_STATUS_STOPPING",
                            "AGENT_STATUS_DONE",
                            "AGENT_STATUS_UNKNOWN"
                          ],
                          "x-order": 11
                        },
                        "tls": {
                          "description": "Use TLS for database connections.",
                          "type": "boolean",
                          "x-order": 5
                        },
                        "tls_skip_verify": {
                          "description": "Skip TLS certificate and hostname validation.",
                          "type": "boolean",
                          "x-order": 6
                        },
                        "username": {
                          "description": "PostgreSQL username for getting pg stat monitor data.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 3
                    },
                    "service": {
                      "description": "PostgreSQLService represents a generic PostgreSQL instance.",
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required.",
                          "type": "string",
                          "x-order": 4
                        },
                        "auto_discovery_limit": {
                          "description": "Limit of databases for auto-discovery.",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 12
                        },
                        "cluster": {
                          "description": "Cluster name.",
                          "type": "string",
                          "x-order": 8
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 10
                        },
                        "database_name": {
                          "description": "Database name.",
                          "type": "string",
                          "x-order": 2
                        },
                        "environment": {
                          "description": "Environment name.",
                          "type": "string",
                          "x-order": 7
                        },
                        "node_id": {
                          "description": "Node identifier where this instance runs.",
                          "type": "string",
                          "x-order": 3
                        },
                        "port": {
                          "description": "Access port.\nPort is required when the address present.",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 5
                        },
                        "replication_set": {
                          "description": "Replication set name.",
                          "type": "string",
                          "x-order": 9
                        },
                        "service_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "service_name": {
                          "description": "Unique across all Services user-defined name.",
                          "type": "string",
                          "x-order": 1
                        },
                        "socket": {
                          "description": "Access unix socket.\nAddress (and port) or socket is required.",
                          "type": "string",
                          "x-order": 6
                        },
                        "version": {
                          "description": "PostgreSQL version.",
                          "type": "string",
                          "x-order": 11
                        }
                      },
                      "x-order": 0
                    },
                    "warning": {
                      "description": "Warning message.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 2
                },
                "proxysql": {
                  "type": "object",
                  "properties": {
                    "proxysql_exporter": {
                      "description": "ProxySQLExporter runs on Generic or Container Node and exposes ProxySQL Service metrics.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 7
                        },
                        "disabled": {
                          "description": "Desired Agent status: enabled (false) or disabled (true).",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "disabled_collectors": {
                          "description": "List of disabled collector names.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "expose_exporter": {
                          "type": "boolean",
                          "title": "Optionally expose the exporter process on all public interfaces",
                          "x-order": 14
                        },
                        "listen_port": {
                          "description": "Listen port for scraping metrics.",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 11
                        },
                        "log_level": {
                          "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                          "type": "string",
                          "title": "Log level for exporters",
                          "default": "LOG_LEVEL_UNSPECIFIED",
                          "enum": [
                            "LOG_LEVEL_UNSPECIFIED",
                            "LOG_LEVEL_FATAL",
                            "LOG_LEVEL_ERROR",
                            "LOG_LEVEL_WARN",
                            "LOG_LEVEL_INFO",
                            "LOG_LEVEL_DEBUG"
                          ],
                          "x-order": 13
                        },
                        "metrics_resolutions": {
                          "description": "MetricsResolutions represents Prometheus exporters metrics resolutions.",
                          "type": "object",
                          "properties": {
                            "hr": {
                              "description": "High resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 0
                            },
                            "lr": {
                              "description": "Low resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 2
                            },
                            "mr": {
                              "description": "Medium resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 1
                            }
                          },
                          "x-order": 15
                        },
                        "pmm_agent_id": {
                          "description": "The pmm-agent identifier which runs this instance.",
                          "type": "string",
                          "x-order": 1
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 12
                        },
                        "push_metrics_enabled": {
                          "description": "True if exporter uses push metrics mode.",
                          "type": "boolean",
                          "x-order": 8
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "status": {
                          "description": "AgentStatus represents actual Agent status.\n\n - AGENT_STATUS_STARTING: Agent is starting.\n - AGENT_STATUS_RUNNING: Agent is running.\n - AGENT_STATUS_WAITING: Agent encountered error and will be restarted automatically soon.\n - AGENT_STATUS_STOPPING: Agent is stopping.\n - AGENT_STATUS_DONE: Agent finished.\n - AGENT_STATUS_UNKNOWN: Agent is not connected, we don't know anything about it's state.",
                          "type": "string",
                          "default": "AGENT_STATUS_UNSPECIFIED",
                          "enum": [
                            "AGENT_STATUS_UNSPECIFIED",
                            "AGENT_STATUS_STARTING",
                            "AGENT_STATUS_RUNNING",
                            "AGENT_STATUS_WAITING",
                            "AGENT_STATUS_STOPPING",
                            "AGENT_STATUS_DONE",
                            "AGENT_STATUS_UNKNOWN"
                          ],
                          "x-order": 10
                        },
                        "tls": {
                          "description": "Use TLS for database connections.",
                          "type": "boolean",
                          "x-order": 5
                        },
                        "tls_skip_verify": {
                          "description": "Skip TLS certificate and hostname validation.",
                          "type": "boolean",
                          "x-order": 6
                        },
                        "username": {
                          "description": "ProxySQL username for scraping metrics.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 1
                    },
                    "service": {
                      "description": "ProxySQLService represents a generic ProxySQL instance.",
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required.",
                          "type": "string",
                          "x-order": 3
                        },
                        "cluster": {
                          "description": "Cluster name.",
                          "type": "string",
                          "x-order": 7
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "environment": {
                          "description": "Environment name.",
                          "type": "string",
                          "x-order": 6
                        },
                        "node_id": {
                          "description": "Node identifier where this instance runs.",
                          "type": "string",
                          "x-order": 2
                        },
                        "port": {
                          "description": "Access port.\nPort is required when the address present.",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 4
                        },
                        "replication_set": {
                          "description": "Replication set name.",
                          "type": "string",
                          "x-order": 8
                        },
                        "service_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "service_name": {
                          "description": "Unique across all Services user-defined name.",
                          "type": "string",
                          "x-order": 1
                        },
                        "socket": {
                          "description": "Access unix socket.\nAddress (and port) or socket is required.",
                          "type": "string",
                          "x-order": 5
                        },
                        "version": {
                          "description": "ProxySQL version.",
                          "type": "string",
                          "x-order": 10
                        }
                      },
                      "x-order": 0
                    }
                  },
                  "x-order": 3
                },
                "rds": {
                  "type": "object",
                  "properties": {
                    "mysql": {
                      "description": "MySQLService represents a generic MySQL instance.",
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required.",
                          "type": "string",
                          "x-order": 3
                        },
                        "cluster": {
                          "description": "Cluster name.",
                          "type": "string",
                          "x-order": 7
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "environment": {
                          "description": "Environment name.",
                          "type": "string",
                          "x-order": 6
                        },
                        "node_id": {
                          "description": "Node identifier where this instance runs.",
                          "type": "string",
                          "x-order": 2
                        },
                        "port": {
                          "description": "Access port.\nPort is required when the address present.",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 4
                        },
                        "replication_set": {
                          "description": "Replication set name.",
                          "type": "string",
                          "x-order": 8
                        },
                        "service_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "service_name": {
                          "description": "Unique across all Services user-defined name.",
                          "type": "string",
                          "x-order": 1
                        },
                        "socket": {
                          "description": "Access unix socket.\nAddress (and port) or socket is required.",
                          "type": "string",
                          "x-order": 5
                        },
                        "version": {
                          "description": "MySQL version.",
                          "type": "string",
                          "x-order": 10
                        }
                      },
                      "x-order": 2
                    },
                    "mysqld_exporter": {
                      "description": "MySQLdExporter runs on Generic or Container Node and exposes MySQL Service metrics.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 11
                        },
                        "disabled": {
                          "description": "Desired Agent status: enabled (false) or disabled (true).",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "disabled_collectors": {
                          "description": "List of disabled collector names.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-order": 13
                        },
                        "expose_exporter": {
                          "type": "boolean",
                          "title": "Optionally expose the exporter process on all public interfaces",
                          "x-order": 20
                        },
                        "listen_port": {
                          "description": "Listen port for scraping metrics.",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 16
                        },
                        "log_level": {
                          "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                          "type": "string",
                          "title": "Log level for exporters",
                          "default": "LOG_LEVEL_UNSPECIFIED",
                          "enum": [
                            "LOG_LEVEL_UNSPECIFIED",
                            "LOG_LEVEL_FATAL",
                            "LOG_LEVEL_ERROR",
                            "LOG_LEVEL_WARN",
                            "LOG_LEVEL_INFO",
                            "LOG_LEVEL_DEBUG"
                          ],
                          "x-order": 19
                        },
                        "metrics_resolutions": {
                          "description": "MetricsResolutions represents Prometheus exporters metrics resolutions.",
                          "type": "object",
                          "properties": {
                            "hr": {
                              "description": "High resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 0
                            },
                            "lr": {
                              "description": "Low resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 2
                            },
                            "mr": {
                              "description": "Medium resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 1
                            }
                          },
                          "x-order": 21
                        },
                        "pmm_agent_id": {
                          "description": "The pmm-agent identifier which runs this instance.",
                          "type": "string",
                          "x-order": 1
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 18
                        },
                        "push_metrics_enabled": {
                          "description": "True if exporter uses push metrics mode.",
                          "type": "boolean",
                          "x-order": 12
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "status": {
                          "description": "AgentStatus represents actual Agent status.\n\n - AGENT_STATUS_STARTING: Agent is starting.\n - AGENT_STATUS_RUNNING: Agent is running.\n - AGENT_STATUS_WAITING: Agent encountered error and will be restarted automatically soon.\n - AGENT_STATUS_STOPPING: Agent is stopping.\n - AGENT_STATUS_DONE: Agent finished.\n - AGENT_STATUS_UNKNOWN: Agent is not connected, we don't know anything about it's state.",
                          "type": "string",
                          "default": "AGENT_STATUS_UNSPECIFIED",
                          "enum": [
                            "AGENT_STATUS_UNSPECIFIED",
                            "AGENT_STATUS_STARTING",
                            "AGENT_STATUS_RUNNING",
                            "AGENT_STATUS_WAITING",
                            "AGENT_STATUS_STOPPING",
                            "AGENT_STATUS_DONE",
                            "AGENT_STATUS_UNKNOWN"
                          ],
                          "x-order": 15
                        },
                        "table_count": {
                          "description": "Actual table count at the moment of adding.",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 14
                        },
                        "tablestats_group_disabled": {
                          "description": "True if tablestats group collectors are currently disabled.",
                          "type": "boolean",
                          "x-order": 17
                        },
                        "tablestats_group_table_limit": {
                          "description": "Tablestats group collectors are disabled if there are more than that number of tables.\n0 means tablestats group collectors are always enabled (no limit).\nNegative value means tablestats group collectors are always disabled.",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 10
                        },
                        "tls": {
                          "description": "Use TLS for database connections.",
                          "type": "boolean",
                          "x-order": 5
                        },
                        "tls_ca": {
                          "description": "Certificate Authority certificate chain.",
                          "type": "string",
                          "x-order": 7
                        },
                        "tls_cert": {
                          "description": "Client certificate.",
                          "type": "string",
                          "x-order": 8
                        },
                        "tls_key": {
                          "description": "Password for decrypting tls_cert.",
                          "type": "string",
                          "x-order": 9
                        },
                        "tls_skip_verify": {
                          "description": "Skip TLS certificate and hostname validation.",
                          "type": "boolean",
                          "x-order": 6
                        },
                        "username": {
                          "description": "MySQL username for scraping metrics.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 3
                    },
                    "node": {
                      "description": "RemoteRDSNode represents remote RDS Node. Agents can't run on Remote RDS Nodes.",
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "DB instance identifier.",
                          "type": "string",
                          "x-order": 2
                        },
                        "az": {
                          "description": "Node availability zone.",
                          "type": "string",
                          "x-order": 5
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 6
                        },
                        "node_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "node_model": {
                          "description": "Node model.",
                          "type": "string",
                          "x-order": 3
                        },
                        "node_name": {
                          "description": "Unique across all Nodes user-defined name.",
                          "type": "string",
                          "x-order": 1
                        },
                        "region": {
                          "description": "Node region.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 0
                    },
                    "postgresql": {
                      "description": "PostgreSQLService represents a generic PostgreSQL instance.",
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required.",
                          "type": "string",
                          "x-order": 4
                        },
                        "auto_discovery_limit": {
                          "description": "Limit of databases for auto-discovery.",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 12
                        },
                        "cluster": {
                          "description": "Cluster name.",
                          "type": "string",
                          "x-order": 8
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 10
                        },
                        "database_name": {
                          "description": "Database name.",
                          "type": "string",
                          "x-order": 2
                        },
                        "environment": {
                          "description": "Environment name.",
                          "type": "string",
                          "x-order": 7
                        },
                        "node_id": {
                          "description": "Node identifier where this instance runs.",
                          "type": "string",
                          "x-order": 3
                        },
                        "port": {
                          "description": "Access port.\nPort is required when the address present.",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 5
                        },
                        "replication_set": {
                          "description": "Replication set name.",
                          "type": "string",
                          "x-order": 9
                        },
                        "service_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "service_name": {
                          "description": "Unique across all Services user-defined name.",
                          "type": "string",
                          "x-order": 1
                        },
                        "socket": {
                          "description": "Access unix socket.\nAddress (and port) or socket is required.",
                          "type": "string",
                          "x-order": 6
                        },
                        "version": {
                          "description": "PostgreSQL version.",
                          "type": "string",
                          "x-order": 11
                        }
                      },
                      "x-order": 5
                    },
                    "postgresql_exporter": {
                      "description": "PostgresExporter runs on Generic or Container Node and exposes PostgreSQL Service metrics.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "auto_discovery_limit": {
                          "description": "Limit of databases for auto-discovery.",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 14
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 7
                        },
                        "disabled": {
                          "description": "Desired Agent status: enabled (false) or disabled (true).",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "disabled_collectors": {
                          "description": "List of disabled collector names.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "expose_exporter": {
                          "type": "boolean",
                          "title": "Optionally expose the exporter process on all public interfaces",
                          "x-order": 15
                        },
                        "listen_port": {
                          "description": "Listen port for scraping metrics.",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 11
                        },
                        "log_level": {
                          "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                          "type": "string",
                          "title": "Log level for exporters",
                          "default": "LOG_LEVEL_UNSPECIFIED",
                          "enum": [
                            "LOG_LEVEL_UNSPECIFIED",
                            "LOG_LEVEL_FATAL",
                            "LOG_LEVEL_ERROR",
                            "LOG_LEVEL_WARN",
                            "LOG_LEVEL_INFO",
                            "LOG_LEVEL_DEBUG"
                          ],
                          "x-order": 13
                        },
                        "max_exporter_connections": {
                          "description": "Maximum number of connections that exporter can open to the database instance.",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 16
                        },
                        "metrics_resolutions": {
                          "description": "MetricsResolutions represents Prometheus exporters metrics resolutions.",
                          "type": "object",
                          "properties": {
                            "hr": {
                              "description": "High resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 0
                            },
                            "lr": {
                              "description": "Low resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 2
                            },
                            "mr": {
                              "description": "Medium resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 1
                            }
                          },
                          "x-order": 17
                        },
                        "pmm_agent_id": {
                          "description": "The pmm-agent identifier which runs this instance.",
                          "type": "string",
                          "x-order": 1
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 12
                        },
                        "push_metrics_enabled": {
                          "description": "True if exporter uses push metrics mode.",
                          "type": "boolean",
                          "x-order": 8
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "status": {
                          "description": "AgentStatus represents actual Agent status.\n\n - AGENT_STATUS_STARTING: Agent is starting.\n - AGENT_STATUS_RUNNING: Agent is running.\n - AGENT_STATUS_WAITING: Agent encountered error and will be restarted automatically soon.\n - AGENT_STATUS_STOPPING: Agent is stopping.\n - AGENT_STATUS_DONE: Agent finished.\n - AGENT_STATUS_UNKNOWN: Agent is not connected, we don't know anything about it's state.",
                          "type": "string",
                          "default": "AGENT_STATUS_UNSPECIFIED",
                          "enum": [
                            "AGENT_STATUS_UNSPECIFIED",
                            "AGENT_STATUS_STARTING",
                            "AGENT_STATUS_RUNNING",
                            "AGENT_STATUS_WAITING",
                            "AGENT_STATUS_STOPPING",
                            "AGENT_STATUS_DONE",
                            "AGENT_STATUS_UNKNOWN"
                          ],
                          "x-order": 10
                        },
                        "tls": {
                          "description": "Use TLS for database connections.",
                          "type": "boolean",
                          "x-order": 5
                        },
                        "tls_skip_verify": {
                          "description": "Skip TLS certificate and hostname validation. Uses sslmode=required instead of verify-full.",
                          "type": "boolean",
                          "x-order": 6
                        },
                        "username": {
                          "description": "PostgreSQL username for scraping metrics.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 6
                    },
                    "qan_mysql_perfschema": {
                      "description": "QANMySQLPerfSchemaAgent runs within pmm-agent and sends MySQL Query Analytics data to the PMM Server.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 13
                        },
                        "disable_comments_parsing": {
                          "description": "Disable parsing comments from queries and showing them in QAN.",
                          "type": "boolean",
                          "x-order": 10
                        },
                        "disabled": {
                          "description": "Desired Agent status: enabled (false) or disabled (true).",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "log_level": {
                          "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                          "type": "string",
                          "title": "Log level for exporters",
                          "default": "LOG_LEVEL_UNSPECIFIED",
                          "enum": [
                            "LOG_LEVEL_UNSPECIFIED",
                            "LOG_LEVEL_FATAL",
                            "LOG_LEVEL_ERROR",
                            "LOG_LEVEL_WARN",
                            "LOG_LEVEL_INFO",
                            "LOG_LEVEL_DEBUG"
                          ],
                          "x-order": 16
                        },
                        "max_query_length": {
                          "description": "Limit query length in QAN (default: server-defined; -1: no limit).",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 11
                        },
                        "pmm_agent_id": {
                          "description": "The pmm-agent identifier which runs this instance.",
                          "type": "string",
                          "x-order": 1
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 15
                        },
                        "query_examples_disabled": {
                          "description": "True if query examples are disabled.",
                          "type": "boolean",
                          "x-order": 12
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "status": {
                          "description": "AgentStatus represents actual Agent status.\n\n - AGENT_STATUS_STARTING: Agent is starting.\n - AGENT_STATUS_RUNNING: Agent is running.\n - AGENT_STATUS_WAITING: Agent encountered error and will be restarted automatically soon.\n - AGENT_STATUS_STOPPING: Agent is stopping.\n - AGENT_STATUS_DONE: Agent finished.\n - AGENT_STATUS_UNKNOWN: Agent is not connected, we don't know anything about it's state.",
                          "type": "string",
                          "default": "AGENT_STATUS_UNSPECIFIED",
                          "enum": [
                            "AGENT_STATUS_UNSPECIFIED",
                            "AGENT_STATUS_STARTING",
                            "AGENT_STATUS_RUNNING",
                            "AGENT_STATUS_WAITING",
                            "AGENT_STATUS_STOPPING",
                            "AGENT_STATUS_DONE",
                            "AGENT_STATUS_UNKNOWN"
                          ],
                          "x-order": 14
                        },
                        "tls": {
                          "description": "Use TLS for database connections.",
                          "type": "boolean",
                          "x-order": 5
                        },
                        "tls_ca": {
                          "description": "Certificate Authority certificate chain.",
                          "type": "string",
                          "x-order": 7
                        },
                        "tls_cert": {
                          "description": "Client certificate.",
                          "type": "string",
                          "x-order": 8
                        },
                        "tls_key": {
                          "description": "Password for decrypting tls_cert.",
                          "type": "string",
                          "x-order": 9
                        },
                        "tls_skip_verify": {
                          "description": "Skip TLS certificate and hostname validation.",
                          "type": "boolean",
                          "x-order": 6
                        },
                        "username": {
                          "description": "MySQL username for getting performance data.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 4
                    },
                    "qan_postgresql_pgstatements": {
                      "description": "QANPostgreSQLPgStatementsAgent runs within pmm-agent and sends PostgreSQL Query Analytics data to the PMM Server.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 9
                        },
                        "disable_comments_parsing": {
                          "description": "Disable parsing comments from queries and showing them in QAN.",
                          "type": "boolean",
                          "x-order": 5
                        },
                        "disabled": {
                          "description": "Desired Agent status: enabled (false) or disabled (true).",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "log_level": {
                          "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                          "type": "string",
                          "title": "Log level for exporters",
                          "default": "LOG_LEVEL_UNSPECIFIED",
                          "enum": [
                            "LOG_LEVEL_UNSPECIFIED",
                            "LOG_LEVEL_FATAL",
                            "LOG_LEVEL_ERROR",
                            "LOG_LEVEL_WARN",
                            "LOG_LEVEL_INFO",
                            "LOG_LEVEL_DEBUG"
                          ],
                          "x-order": 12
                        },
                        "max_query_length": {
                          "description": "Limit query length in QAN (default: server-defined; -1: no limit).",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 6
                        },
                        "pmm_agent_id": {
                          "description": "The pmm-agent identifier which runs this instance.",
                          "type": "string",
                          "x-order": 1
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 11
                        },
                        "service_id": {
                          "description": "Service identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "status": {
                          "description": "AgentStatus represents actual Agent status.\n\n - AGENT_STATUS_STARTING: Agent is starting.\n - AGENT_STATUS_RUNNING: Agent is running.\n - AGENT_STATUS_WAITING: Agent encountered error and will be restarted automatically soon.\n - AGENT_STATUS_STOPPING: Agent is stopping.\n - AGENT_STATUS_DONE: Agent finished.\n - AGENT_STATUS_UNKNOWN: Agent is not connected, we don't know anything about it's state.",
                          "type": "string",
                          "default": "AGENT_STATUS_UNSPECIFIED",
                          "enum": [
                            "AGENT_STATUS_UNSPECIFIED",
                            "AGENT_STATUS_STARTING",
                            "AGENT_STATUS_RUNNING",
                            "AGENT_STATUS_WAITING",
                            "AGENT_STATUS_STOPPING",
                            "AGENT_STATUS_DONE",
                            "AGENT_STATUS_UNKNOWN"
                          ],
                          "x-order": 10
                        },
                        "tls": {
                          "description": "Use TLS for database connections.",
                          "type": "boolean",
                          "x-order": 7
                        },
                        "tls_skip_verify": {
                          "description": "Skip TLS certificate and hostname validation.",
                          "type": "boolean",
                          "x-order": 8
                        },
                        "username": {
                          "description": "PostgreSQL username for getting pg stat statements data.",
                          "type": "string",
                          "x-order": 4
                        }
                      },
                      "x-order": 7
                    },
                    "rds_exporter": {
                      "description": "RDSExporter runs on Generic or Container Node and exposes RemoteRDS Node metrics.",
                      "type": "object",
                      "properties": {
                        "agent_id": {
                          "description": "Unique randomly generated instance identifier.",
                          "type": "string",
                          "x-order": 0
                        },
                        "auto_discovery_limit": {
                          "description": "Limit of databases for auto-discovery.",
                          "type": "integer",
                          "format": "int32",
                          "x-order": 13
                        },
                        "aws_access_key": {
                          "description": "AWS Access Key.",
                          "type": "string",
                          "x-order": 4
                        },
                        "basic_metrics_disabled": {
                          "description": "Basic metrics are disabled.",
                          "type": "boolean",
                          "x-order": 8
                        },
                        "custom_labels": {
                          "description": "Custom user-assigned labels.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-order": 5
                        },
                        "disabled": {
                          "description": "Desired Agent status: enabled (false) or disabled (true).",
                          "type": "boolean",
                          "x-order": 2
                        },
                        "enhanced_metrics_disabled": {
                          "description": "Enhanced metrics are disabled.",
                          "type": "boolean",
                          "x-order": 9
                        },
                        "listen_port": {
                          "description": "Listen port for scraping metrics (the same for several configurations).",
                          "type": "integer",
                          "format": "int64",
                          "x-order": 7
                        },
                        "log_level": {
                          "description": "- LOG_LEVEL_UNSPECIFIED: Auto",
                          "type": "string",
                          "title": "Log level for exporters",
                          "default": "LOG_LEVEL_UNSPECIFIED",
                          "enum": [
                            "LOG_LEVEL_UNSPECIFIED",
                            "LOG_LEVEL_FATAL",
                            "LOG_LEVEL_ERROR",
                            "LOG_LEVEL_WARN",
                            "LOG_LEVEL_INFO",
                            "LOG_LEVEL_DEBUG"
                          ],
                          "x-order": 12
                        },
                        "metrics_resolutions": {
                          "description": "MetricsResolutions represents Prometheus exporters metrics resolutions.",
                          "type": "object",
                          "properties": {
                            "hr": {
                              "description": "High resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 0
                            },
                            "lr": {
                              "description": "Low resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 2
                            },
                            "mr": {
                              "description": "Medium resolution. In JSON should be represented as a string with number of seconds with `s` suffix.",
                              "type": "string",
                              "x-order": 1
                            }
                          },
                          "x-order": 14
                        },
                        "node_id": {
                          "description": "Node identifier.",
                          "type": "string",
                          "x-order": 3
                        },
                        "pmm_agent_id": {
                          "description": "The pmm-agent identifier which runs this instance.",
                          "type": "string",
                          "x-order": 1
                        },
                        "process_exec_path": {
                          "description": "Path to exec process.",
                          "type": "string",
                          "x-order": 11
                        },
                        "push_metrics_enabled": {
                          "description": "True if exporter uses push metrics mode.",
                          "type": "boolean",
                          "x-order": 10
                        },
                        "status": {
                          "description": "AgentStatus represents actual Agent status.\n\n - AGENT_STATUS_STARTING: Agent is starting.\n - AGENT_STATUS_RUNNING: Agent is running.\n - AGENT_STATUS_WAITING: Agent encountered error and will be restarted automatically soon.\n - AGENT_STATUS_STOPPING: Agent is stopping.\n - AGENT_STATUS_DONE: Agent finished.\n - AGENT_STATUS_UNKNOWN: Agent is not connected, we don't know anything about it's state.",
                          "type": "string",
                          "default": "AGENT_STATUS_UNSPECIFIED",
                          "enum": [
                            "AGENT_STATUS_UNSPECIFIED",
                            "AGENT_STATUS_STARTING",
                            "AGENT_STATUS_RUNNING",
                            "AGENT_STATUS_WAITING",
                            "AGENT_STATUS_STOPPING",
                            "AGENT_STATUS_DONE",
                            "AGENT_STATUS_UNKNOWN"
                          ],
                          "x-order": 6
                        }
                      },
                      "x-order": 1
                    }
                  },
                  "x-order": 6
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/services/azure": {
      "post": {
        "description": "Adds an Azure Database instance.",
        "tags": [
          "ManagementService"
        ],
        "summary": "Add Azure Database",
        "operationId": "AddAzureDatabase",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "description": "Address used to connect to it.",
                  "type": "string",
                  "x-order": 4
                },
                "az": {
                  "description": "Azure database availability zone.",
                  "type": "string",
                  "x-order": 1
                },
                "azure_client_id": {
                  "description": "Azure client ID.",
                  "type": "string",
                  "x-order": 11
                },
                "azure_client_secret": {
                  "description": "Azure client secret.",
                  "type": "string",
                  "x-order": 12
                },
                "azure_database_exporter": {
                  "description": "If true, adds azure_database_exporter.",
                  "type": "boolean",
                  "x-order": 16
                },
                "azure_resource_group": {
                  "description": "Azure resource group.",
                  "type": "string",
                  "x-order": 15
                },
                "azure_subscription_id": {
                  "description": "Azure subscription ID.",
                  "type": "string",
                  "x-order": 14
                },
                "azure_tenant_id": {
                  "description": "Azure tanant ID.",
                  "type": "string",
                  "x-order": 13
                },
                "custom_labels": {
                  "description": "Custom user-assigned labels for Node and Service.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-order": 18
                },
                "disable_query_examples": {
                  "description": "Disable query examples.",
                  "type": "boolean",
                  "x-order": 22
                },
                "environment": {
                  "description": "Environment name.",
                  "type": "string",
                  "x-order": 8
                },
                "instance_id": {
                  "description": "Azure database instance ID.",
                  "type": "string",
                  "x-order": 2
                },
                "node_model": {
                  "description": "Represents a purchasable Stock Keeping Unit (SKU) under a product.\nhttps://docs.microsoft.com/en-us/partner-center/develop/product-resources#sku.",
                  "type": "string",
                  "x-order": 3
                },
                "node_name": {
                  "description": "Unique across all Nodes user-defined name. Defaults to Azure Database instance ID.",
                  "type": "string",
                  "x-order": 6
                },
                "password": {
                  "description": "Password for scraping metrics.",
                  "type": "string",
                  "x-order": 10
                },
                "port": {
                  "description": "Access port.",
                  "type": "integer",
                  "format": "int64",
                  "x-order": 5
                },
                "qan": {
                  "description": "If true, adds qan-mysql-perfschema-agent or qan-postgresql-pgstatements-agent.",
                  "type": "boolean",
                  "x-order": 17
                },
                "region": {
                  "description": "Azure database location.",
                  "type": "string",
                  "x-order": 0
                },
                "service_name": {
                  "description": "Unique across all Services user-defined name. Defaults to Azure Database instance ID.",
                  "type": "string",
                  "x-order": 7
                },
                "skip_connection_check": {
                  "description": "Skip connection check.",
                  "type": "boolean",
                  "x-order": 19
                },
                "tablestats_group_table_limit": {
                  "description": "Tablestats group collectors will be disabled if there are more than that number of tables.\nIf zero, server's default value is used.\nUse negative value to disable them.",
                  "type": "integer",
                  "format": "int32",
                  "x-order": 23
                },
                "tls": {
                  "description": "Use TLS for database connections.",
                  "type": "boolean",
                  "x-order": 20
                },
                "tls_skip_verify": {
                  "description": "Skip TLS certificate and hostname validation.",
                  "type": "boolean",
                  "x-order": 21
                },
                "type": {
                  "description": "DiscoverAzureDatabaseType describes supported Azure Database instance engines.\n\n - DISCOVER_AZURE_DATABASE_TYPE_MYSQL: MySQL type: microsoft.dbformysql or MariaDB type: microsoft.dbformariadb\n - DISCOVER_AZURE_DATABASE_TYPE_POSTGRESQL: PostgreSQL type: microsoft.dbformysql",
                  "type": "string",
                  "default": "DISCOVER_AZURE_DATABASE_TYPE_UNSPECIFIED",
                  "enum": [
                    "DISCOVER_AZURE_DATABASE_TYPE_UNSPECIFIED",
                    "DISCOVER_AZURE_DATABASE_TYPE_MYSQL",
                    "DISCOVER_AZURE_DATABASE_TYPE_POSTGRESQL"
                  ],
                  "x-order": 24
                },
                "username": {
                  "description": "Username for scraping metrics.",
                  "type": "string",
                  "x-order": 9
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/services/{service_id}": {
      "delete": {
        "description": "Removes a Service along with its Agents.",
        "tags": [
          "ManagementService"
        ],
        "summary": "Remove a Service",
        "operationId": "RemoveService",
        "parameters": [
          {
            "type": "string",
            "description": "Either a Service ID or a Service Name.",
            "name": "service_id",
            "in": "path",
            "required": true
          },
          {
            "enum": [
              "SERVICE_TYPE_UNSPECIFIED",
              "SERVICE_TYPE_MYSQL_SERVICE",
              "SERVICE_TYPE_MONGODB_SERVICE",
              "SERVICE_TYPE_POSTGRESQL_SERVICE",
              "SERVICE_TYPE_PROXYSQL_SERVICE",
              "SERVICE_TYPE_HAPROXY_SERVICE",
              "SERVICE_TYPE_EXTERNAL_SERVICE"
            ],
            "type": "string",
            "default": "SERVICE_TYPE_UNSPECIFIED",
            "description": "Service type.",
            "name": "service_type",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/services:discoverAzure": {
      "post": {
        "description": "Discovers Azure Database for MySQL, MariaDB and PostgreSQL Server instances.",
        "tags": [
          "ManagementService"
        ],
        "summary": "Discover Azure Database",
        "operationId": "DiscoverAzureDatabase",
        "parameters": [
          {
            "description": "DiscoverAzureDatabaseRequest discover azure databases request.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "DiscoverAzureDatabaseRequest discover azure databases request.",
              "type": "object",
              "properties": {
                "azure_client_id": {
                  "description": "Azure client ID.",
                  "type": "string",
                  "x-order": 0
                },
                "azure_client_secret": {
                  "description": "Azure client secret.",
                  "type": "string",
                  "x-order": 1
                },
                "azure_subscription_id": {
                  "description": "Azure subscription ID.",
                  "type": "string",
                  "x-order": 3
                },
                "azure_tenant_id": {
                  "description": "Azure tanant ID.",
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "DiscoverAzureDatabaseResponse discover azure databases response.",
              "type": "object",
              "properties": {
                "azure_database_instance": {
                  "type": "array",
                  "items": {
                    "description": "DiscoverAzureDatabaseInstance models an unique Azure Database instance for the list of instances returned by Discovery.",
                    "type": "object",
                    "properties": {
                      "address": {
                        "description": "Address used to connect to it.",
                        "type": "string",
                        "x-order": 4
                      },
                      "az": {
                        "description": "Azure database availability zone.",
                        "type": "string",
                        "x-order": 8
                      },
                      "azure_resource_group": {
                        "description": "Azure Resource group.",
                        "type": "string",
                        "x-order": 5
                      },
                      "environment": {
                        "description": "Environment tag.",
                        "type": "string",
                        "x-order": 6
                      },
                      "instance_id": {
                        "description": "Azure database instance ID.",
                        "type": "string",
                        "x-order": 0
                      },
                      "node_model": {
                        "description": "Represents a purchasable Stock Keeping Unit (SKU) under a product.\nhttps://docs.microsoft.com/en-us/partner-center/develop/product-resources#sku.",
                        "type": "string",
                        "x-order": 9
                      },
                      "region": {
                        "description": "Azure database location.",
                        "type": "string",
                        "x-order": 1
                      },
                      "service_name": {
                        "description": "Azure database server name.",
                        "type": "string",
                        "x-order": 2
                      },
                      "type": {
                        "description": "DiscoverAzureDatabaseType describes supported Azure Database instance engines.\n\n - DISCOVER_AZURE_DATABASE_TYPE_MYSQL: MySQL type: microsoft.dbformysql or MariaDB type: microsoft.dbformariadb\n - DISCOVER_AZURE_DATABASE_TYPE_POSTGRESQL: PostgreSQL type: microsoft.dbformysql",
                        "type": "string",
                        "default": "DISCOVER_AZURE_DATABASE_TYPE_UNSPECIFIED",
                        "enum": [
                          "DISCOVER_AZURE_DATABASE_TYPE_UNSPECIFIED",
                          "DISCOVER_AZURE_DATABASE_TYPE_MYSQL",
                          "DISCOVER_AZURE_DATABASE_TYPE_POSTGRESQL"
                        ],
                        "x-order": 7
                      },
                      "username": {
                        "description": "Database username.",
                        "type": "string",
                        "x-order": 3
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/services:discoverRDS": {
      "post": {
        "description": "Discovers RDS instances.",
        "tags": [
          "ManagementService"
        ],
        "summary": "Discover RDS",
        "operationId": "DiscoverRDS",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "aws_access_key": {
                  "description": "AWS Access key. Optional.",
                  "type": "string",
                  "x-order": 0
                },
                "aws_secret_key": {
                  "description": "AWS Secret key. Optional.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "rds_instances": {
                  "type": "array",
                  "items": {
                    "description": "DiscoverRDSInstance models an unique RDS instance for the list of instances returned by Discovery.",
                    "type": "object",
                    "properties": {
                      "address": {
                        "description": "Address used to connect to it.",
                        "type": "string",
                        "x-order": 4
                      },
                      "az": {
                        "description": "AWS availability zone.",
                        "type": "string",
                        "x-order": 1
                      },
                      "engine": {
                        "description": "DiscoverRDSEngine describes supported RDS instance engines.",
                        "type": "string",
                        "default": "DISCOVER_RDS_ENGINE_UNSPECIFIED",
                        "enum": [
                          "DISCOVER_RDS_ENGINE_UNSPECIFIED",
                          "DISCOVER_RDS_ENGINE_MYSQL",
                          "DISCOVER_RDS_ENGINE_POSTGRESQL"
                        ],
                        "x-order": 6
                      },
                      "engine_version": {
                        "description": "Engine version.",
                        "type": "string",
                        "x-order": 7
                      },
                      "instance_id": {
                        "description": "AWS instance ID.",
                        "type": "string",
                        "x-order": 2
                      },
                      "node_model": {
                        "description": "AWS instance class.",
                        "type": "string",
                        "x-order": 3
                      },
                      "port": {
                        "description": "Access port.",
                        "type": "integer",
                        "format": "int64",
                        "x-order": 5
                      },
                      "region": {
                        "description": "AWS region.",
                        "type": "string",
                        "x-order": 0
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "ManagementService"
    }
  ]
}