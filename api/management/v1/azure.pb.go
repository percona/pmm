// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: management/v1/azure.proto

package managementv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DiscoverAzureDatabaseType describes supported Azure Database instance engines.
type DiscoverAzureDatabaseType int32

const (
	DiscoverAzureDatabaseType_DISCOVER_AZURE_DATABASE_TYPE_UNSPECIFIED DiscoverAzureDatabaseType = 0
	// MySQL type: microsoft.dbformysql or MariaDB type: microsoft.dbformariadb
	DiscoverAzureDatabaseType_DISCOVER_AZURE_DATABASE_TYPE_MYSQL DiscoverAzureDatabaseType = 1
	// PostgreSQL type: microsoft.dbformysql
	DiscoverAzureDatabaseType_DISCOVER_AZURE_DATABASE_TYPE_POSTGRESQL DiscoverAzureDatabaseType = 2
)

// Enum value maps for DiscoverAzureDatabaseType.
var (
	DiscoverAzureDatabaseType_name = map[int32]string{
		0: "DISCOVER_AZURE_DATABASE_TYPE_UNSPECIFIED",
		1: "DISCOVER_AZURE_DATABASE_TYPE_MYSQL",
		2: "DISCOVER_AZURE_DATABASE_TYPE_POSTGRESQL",
	}
	DiscoverAzureDatabaseType_value = map[string]int32{
		"DISCOVER_AZURE_DATABASE_TYPE_UNSPECIFIED": 0,
		"DISCOVER_AZURE_DATABASE_TYPE_MYSQL":       1,
		"DISCOVER_AZURE_DATABASE_TYPE_POSTGRESQL":  2,
	}
)

func (x DiscoverAzureDatabaseType) Enum() *DiscoverAzureDatabaseType {
	p := new(DiscoverAzureDatabaseType)
	*p = x
	return p
}

func (x DiscoverAzureDatabaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscoverAzureDatabaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_management_v1_azure_proto_enumTypes[0].Descriptor()
}

func (DiscoverAzureDatabaseType) Type() protoreflect.EnumType {
	return &file_management_v1_azure_proto_enumTypes[0]
}

func (x DiscoverAzureDatabaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscoverAzureDatabaseType.Descriptor instead.
func (DiscoverAzureDatabaseType) EnumDescriptor() ([]byte, []int) {
	return file_management_v1_azure_proto_rawDescGZIP(), []int{0}
}

// DiscoverAzureDatabaseRequest discover azure databases request.
type DiscoverAzureDatabaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Azure client ID.
	AzureClientId string `protobuf:"bytes,1,opt,name=azure_client_id,json=azureClientId,proto3" json:"azure_client_id,omitempty"`
	// Azure client secret.
	AzureClientSecret string `protobuf:"bytes,2,opt,name=azure_client_secret,json=azureClientSecret,proto3" json:"azure_client_secret,omitempty"`
	// Azure tanant ID.
	AzureTenantId string `protobuf:"bytes,3,opt,name=azure_tenant_id,json=azureTenantId,proto3" json:"azure_tenant_id,omitempty"`
	// Azure subscription ID.
	AzureSubscriptionId string `protobuf:"bytes,4,opt,name=azure_subscription_id,json=azureSubscriptionId,proto3" json:"azure_subscription_id,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *DiscoverAzureDatabaseRequest) Reset() {
	*x = DiscoverAzureDatabaseRequest{}
	mi := &file_management_v1_azure_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverAzureDatabaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverAzureDatabaseRequest) ProtoMessage() {}

func (x *DiscoverAzureDatabaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_azure_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverAzureDatabaseRequest.ProtoReflect.Descriptor instead.
func (*DiscoverAzureDatabaseRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_azure_proto_rawDescGZIP(), []int{0}
}

func (x *DiscoverAzureDatabaseRequest) GetAzureClientId() string {
	if x != nil {
		return x.AzureClientId
	}
	return ""
}

func (x *DiscoverAzureDatabaseRequest) GetAzureClientSecret() string {
	if x != nil {
		return x.AzureClientSecret
	}
	return ""
}

func (x *DiscoverAzureDatabaseRequest) GetAzureTenantId() string {
	if x != nil {
		return x.AzureTenantId
	}
	return ""
}

func (x *DiscoverAzureDatabaseRequest) GetAzureSubscriptionId() string {
	if x != nil {
		return x.AzureSubscriptionId
	}
	return ""
}

// DiscoverAzureDatabaseInstance models an unique Azure Database instance for the list of instances returned by Discovery.
type DiscoverAzureDatabaseInstance struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Azure database instance ID.
	InstanceId string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// Azure database location.
	Region string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	// Azure database server name.
	ServiceName string `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Database username.
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	// Address used to connect to it.
	Address string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	// Azure Resource group.
	AzureResourceGroup string `protobuf:"bytes,6,opt,name=azure_resource_group,json=azureResourceGroup,proto3" json:"azure_resource_group,omitempty"`
	// Environment tag.
	Environment string `protobuf:"bytes,7,opt,name=environment,proto3" json:"environment,omitempty"`
	// Database type.
	Type DiscoverAzureDatabaseType `protobuf:"varint,8,opt,name=type,proto3,enum=management.v1.DiscoverAzureDatabaseType" json:"type,omitempty"`
	// Azure database availability zone.
	Az string `protobuf:"bytes,9,opt,name=az,proto3" json:"az,omitempty"`
	// Represents a purchasable Stock Keeping Unit (SKU) under a product.
	// https://docs.microsoft.com/en-us/partner-center/develop/product-resources#sku.
	NodeModel     string `protobuf:"bytes,10,opt,name=node_model,json=nodeModel,proto3" json:"node_model,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoverAzureDatabaseInstance) Reset() {
	*x = DiscoverAzureDatabaseInstance{}
	mi := &file_management_v1_azure_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverAzureDatabaseInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverAzureDatabaseInstance) ProtoMessage() {}

func (x *DiscoverAzureDatabaseInstance) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_azure_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverAzureDatabaseInstance.ProtoReflect.Descriptor instead.
func (*DiscoverAzureDatabaseInstance) Descriptor() ([]byte, []int) {
	return file_management_v1_azure_proto_rawDescGZIP(), []int{1}
}

func (x *DiscoverAzureDatabaseInstance) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *DiscoverAzureDatabaseInstance) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *DiscoverAzureDatabaseInstance) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *DiscoverAzureDatabaseInstance) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *DiscoverAzureDatabaseInstance) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DiscoverAzureDatabaseInstance) GetAzureResourceGroup() string {
	if x != nil {
		return x.AzureResourceGroup
	}
	return ""
}

func (x *DiscoverAzureDatabaseInstance) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *DiscoverAzureDatabaseInstance) GetType() DiscoverAzureDatabaseType {
	if x != nil {
		return x.Type
	}
	return DiscoverAzureDatabaseType_DISCOVER_AZURE_DATABASE_TYPE_UNSPECIFIED
}

func (x *DiscoverAzureDatabaseInstance) GetAz() string {
	if x != nil {
		return x.Az
	}
	return ""
}

func (x *DiscoverAzureDatabaseInstance) GetNodeModel() string {
	if x != nil {
		return x.NodeModel
	}
	return ""
}

// DiscoverAzureDatabaseResponse discover azure databases response.
type DiscoverAzureDatabaseResponse struct {
	state                 protoimpl.MessageState           `protogen:"open.v1"`
	AzureDatabaseInstance []*DiscoverAzureDatabaseInstance `protobuf:"bytes,1,rep,name=azure_database_instance,json=azureDatabaseInstance,proto3" json:"azure_database_instance,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *DiscoverAzureDatabaseResponse) Reset() {
	*x = DiscoverAzureDatabaseResponse{}
	mi := &file_management_v1_azure_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoverAzureDatabaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoverAzureDatabaseResponse) ProtoMessage() {}

func (x *DiscoverAzureDatabaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_azure_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoverAzureDatabaseResponse.ProtoReflect.Descriptor instead.
func (*DiscoverAzureDatabaseResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_azure_proto_rawDescGZIP(), []int{2}
}

func (x *DiscoverAzureDatabaseResponse) GetAzureDatabaseInstance() []*DiscoverAzureDatabaseInstance {
	if x != nil {
		return x.AzureDatabaseInstance
	}
	return nil
}

type AddAzureDatabaseRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Azure database location.
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// Azure database availability zone.
	Az string `protobuf:"bytes,2,opt,name=az,proto3" json:"az,omitempty"`
	// Azure database instance ID.
	InstanceId string `protobuf:"bytes,3,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// Represents a purchasable Stock Keeping Unit (SKU) under a product.
	// https://docs.microsoft.com/en-us/partner-center/develop/product-resources#sku.
	NodeModel string `protobuf:"bytes,4,opt,name=node_model,json=nodeModel,proto3" json:"node_model,omitempty"`
	// Address used to connect to it.
	Address string `protobuf:"bytes,5,opt,name=address,proto3" json:"address,omitempty"`
	// Access port.
	Port uint32 `protobuf:"varint,6,opt,name=port,proto3" json:"port,omitempty"`
	// Unique across all Nodes user-defined name. Defaults to Azure Database instance ID.
	NodeName string `protobuf:"bytes,7,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Unique across all Services user-defined name. Defaults to Azure Database instance ID.
	ServiceName string `protobuf:"bytes,8,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Environment name.
	Environment string `protobuf:"bytes,9,opt,name=environment,proto3" json:"environment,omitempty"`
	// Username for scraping metrics.
	Username string `protobuf:"bytes,10,opt,name=username,proto3" json:"username,omitempty"`
	// Password for scraping metrics.
	Password string `protobuf:"bytes,11,opt,name=password,proto3" json:"password,omitempty"`
	// Azure client ID.
	AzureClientId string `protobuf:"bytes,12,opt,name=azure_client_id,json=azureClientId,proto3" json:"azure_client_id,omitempty"`
	// Azure client secret.
	AzureClientSecret string `protobuf:"bytes,13,opt,name=azure_client_secret,json=azureClientSecret,proto3" json:"azure_client_secret,omitempty"`
	// Azure tanant ID.
	AzureTenantId string `protobuf:"bytes,14,opt,name=azure_tenant_id,json=azureTenantId,proto3" json:"azure_tenant_id,omitempty"`
	// Azure subscription ID.
	AzureSubscriptionId string `protobuf:"bytes,15,opt,name=azure_subscription_id,json=azureSubscriptionId,proto3" json:"azure_subscription_id,omitempty"`
	// Azure resource group.
	AzureResourceGroup string `protobuf:"bytes,16,opt,name=azure_resource_group,json=azureResourceGroup,proto3" json:"azure_resource_group,omitempty"`
	// If true, adds azure_database_exporter.
	AzureDatabaseExporter bool `protobuf:"varint,17,opt,name=azure_database_exporter,json=azureDatabaseExporter,proto3" json:"azure_database_exporter,omitempty"`
	// If true, adds qan-mysql-perfschema-agent or qan-postgresql-pgstatements-agent.
	Qan bool `protobuf:"varint,18,opt,name=qan,proto3" json:"qan,omitempty"`
	// Custom user-assigned labels for Node and Service.
	CustomLabels map[string]string `protobuf:"bytes,19,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Skip connection check.
	SkipConnectionCheck bool `protobuf:"varint,20,opt,name=skip_connection_check,json=skipConnectionCheck,proto3" json:"skip_connection_check,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,21,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,22,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Disable query examples.
	DisableQueryExamples bool `protobuf:"varint,23,opt,name=disable_query_examples,json=disableQueryExamples,proto3" json:"disable_query_examples,omitempty"`
	// Tablestats group collectors will be disabled if there are more than that number of tables.
	// If zero, server's default value is used.
	// Use negative value to disable them.
	TablestatsGroupTableLimit int32 `protobuf:"varint,24,opt,name=tablestats_group_table_limit,json=tablestatsGroupTableLimit,proto3" json:"tablestats_group_table_limit,omitempty"`
	// Azure database resource type (mysql, maria, postgres)
	Type          DiscoverAzureDatabaseType `protobuf:"varint,25,opt,name=type,proto3,enum=management.v1.DiscoverAzureDatabaseType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAzureDatabaseRequest) Reset() {
	*x = AddAzureDatabaseRequest{}
	mi := &file_management_v1_azure_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAzureDatabaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAzureDatabaseRequest) ProtoMessage() {}

func (x *AddAzureDatabaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_azure_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAzureDatabaseRequest.ProtoReflect.Descriptor instead.
func (*AddAzureDatabaseRequest) Descriptor() ([]byte, []int) {
	return file_management_v1_azure_proto_rawDescGZIP(), []int{3}
}

func (x *AddAzureDatabaseRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetAz() string {
	if x != nil {
		return x.Az
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetNodeModel() string {
	if x != nil {
		return x.NodeModel
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *AddAzureDatabaseRequest) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetAzureClientId() string {
	if x != nil {
		return x.AzureClientId
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetAzureClientSecret() string {
	if x != nil {
		return x.AzureClientSecret
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetAzureTenantId() string {
	if x != nil {
		return x.AzureTenantId
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetAzureSubscriptionId() string {
	if x != nil {
		return x.AzureSubscriptionId
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetAzureResourceGroup() string {
	if x != nil {
		return x.AzureResourceGroup
	}
	return ""
}

func (x *AddAzureDatabaseRequest) GetAzureDatabaseExporter() bool {
	if x != nil {
		return x.AzureDatabaseExporter
	}
	return false
}

func (x *AddAzureDatabaseRequest) GetQan() bool {
	if x != nil {
		return x.Qan
	}
	return false
}

func (x *AddAzureDatabaseRequest) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddAzureDatabaseRequest) GetSkipConnectionCheck() bool {
	if x != nil {
		return x.SkipConnectionCheck
	}
	return false
}

func (x *AddAzureDatabaseRequest) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *AddAzureDatabaseRequest) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *AddAzureDatabaseRequest) GetDisableQueryExamples() bool {
	if x != nil {
		return x.DisableQueryExamples
	}
	return false
}

func (x *AddAzureDatabaseRequest) GetTablestatsGroupTableLimit() int32 {
	if x != nil {
		return x.TablestatsGroupTableLimit
	}
	return 0
}

func (x *AddAzureDatabaseRequest) GetType() DiscoverAzureDatabaseType {
	if x != nil {
		return x.Type
	}
	return DiscoverAzureDatabaseType_DISCOVER_AZURE_DATABASE_TYPE_UNSPECIFIED
}

type AddAzureDatabaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAzureDatabaseResponse) Reset() {
	*x = AddAzureDatabaseResponse{}
	mi := &file_management_v1_azure_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAzureDatabaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAzureDatabaseResponse) ProtoMessage() {}

func (x *AddAzureDatabaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_management_v1_azure_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAzureDatabaseResponse.ProtoReflect.Descriptor instead.
func (*AddAzureDatabaseResponse) Descriptor() ([]byte, []int) {
	return file_management_v1_azure_proto_rawDescGZIP(), []int{4}
}

var File_management_v1_azure_proto protoreflect.FileDescriptor

const file_management_v1_azure_proto_rawDesc = "" +
	"\n" +
	"\x19management/v1/azure.proto\x12\rmanagement.v1\x1a\x17validate/validate.proto\"\xf6\x01\n" +
	"\x1cDiscoverAzureDatabaseRequest\x12/\n" +
	"\x0fazure_client_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\razureClientId\x127\n" +
	"\x13azure_client_secret\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x11azureClientSecret\x12/\n" +
	"\x0fazure_tenant_id\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\razureTenantId\x12;\n" +
	"\x15azure_subscription_id\x18\x04 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x13azureSubscriptionId\"\xf2\x02\n" +
	"\x1dDiscoverAzureDatabaseInstance\x12\x1f\n" +
	"\vinstance_id\x18\x01 \x01(\tR\n" +
	"instanceId\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12!\n" +
	"\fservice_name\x18\x03 \x01(\tR\vserviceName\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12\x18\n" +
	"\aaddress\x18\x05 \x01(\tR\aaddress\x120\n" +
	"\x14azure_resource_group\x18\x06 \x01(\tR\x12azureResourceGroup\x12 \n" +
	"\venvironment\x18\a \x01(\tR\venvironment\x12<\n" +
	"\x04type\x18\b \x01(\x0e2(.management.v1.DiscoverAzureDatabaseTypeR\x04type\x12\x0e\n" +
	"\x02az\x18\t \x01(\tR\x02az\x12\x1d\n" +
	"\n" +
	"node_model\x18\n" +
	" \x01(\tR\tnodeModel\"\x85\x01\n" +
	"\x1dDiscoverAzureDatabaseResponse\x12d\n" +
	"\x17azure_database_instance\x18\x01 \x03(\v2,.management.v1.DiscoverAzureDatabaseInstanceR\x15azureDatabaseInstance\"\x96\t\n" +
	"\x17AddAzureDatabaseRequest\x12\x1f\n" +
	"\x06region\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x06region\x12\x0e\n" +
	"\x02az\x18\x02 \x01(\tR\x02az\x12(\n" +
	"\vinstance_id\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"instanceId\x12\x1d\n" +
	"\n" +
	"node_model\x18\x04 \x01(\tR\tnodeModel\x12!\n" +
	"\aaddress\x18\x05 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\aaddress\x12\x1b\n" +
	"\x04port\x18\x06 \x01(\rB\a\xfaB\x04*\x02 \x00R\x04port\x12\x1b\n" +
	"\tnode_name\x18\a \x01(\tR\bnodeName\x12!\n" +
	"\fservice_name\x18\b \x01(\tR\vserviceName\x12 \n" +
	"\venvironment\x18\t \x01(\tR\venvironment\x12#\n" +
	"\busername\x18\n" +
	" \x01(\tB\a\xfaB\x04r\x02\x10\x01R\busername\x12\x1a\n" +
	"\bpassword\x18\v \x01(\tR\bpassword\x12/\n" +
	"\x0fazure_client_id\x18\f \x01(\tB\a\xfaB\x04r\x02\x10\x01R\razureClientId\x127\n" +
	"\x13azure_client_secret\x18\r \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x11azureClientSecret\x12/\n" +
	"\x0fazure_tenant_id\x18\x0e \x01(\tB\a\xfaB\x04r\x02\x10\x01R\razureTenantId\x12;\n" +
	"\x15azure_subscription_id\x18\x0f \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x13azureSubscriptionId\x129\n" +
	"\x14azure_resource_group\x18\x10 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x12azureResourceGroup\x126\n" +
	"\x17azure_database_exporter\x18\x11 \x01(\bR\x15azureDatabaseExporter\x12\x10\n" +
	"\x03qan\x18\x12 \x01(\bR\x03qan\x12]\n" +
	"\rcustom_labels\x18\x13 \x03(\v28.management.v1.AddAzureDatabaseRequest.CustomLabelsEntryR\fcustomLabels\x122\n" +
	"\x15skip_connection_check\x18\x14 \x01(\bR\x13skipConnectionCheck\x12\x10\n" +
	"\x03tls\x18\x15 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\x16 \x01(\bR\rtlsSkipVerify\x124\n" +
	"\x16disable_query_examples\x18\x17 \x01(\bR\x14disableQueryExamples\x12?\n" +
	"\x1ctablestats_group_table_limit\x18\x18 \x01(\x05R\x19tablestatsGroupTableLimit\x12<\n" +
	"\x04type\x18\x19 \x01(\x0e2(.management.v1.DiscoverAzureDatabaseTypeR\x04type\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x1a\n" +
	"\x18AddAzureDatabaseResponse*\x9e\x01\n" +
	"\x19DiscoverAzureDatabaseType\x12,\n" +
	"(DISCOVER_AZURE_DATABASE_TYPE_UNSPECIFIED\x10\x00\x12&\n" +
	"\"DISCOVER_AZURE_DATABASE_TYPE_MYSQL\x10\x01\x12+\n" +
	"'DISCOVER_AZURE_DATABASE_TYPE_POSTGRESQL\x10\x02B\xab\x01\n" +
	"\x11com.management.v1B\n" +
	"AzureProtoP\x01Z5github.com/percona/pmm/api/management/v1;managementv1\xa2\x02\x03MXX\xaa\x02\rManagement.V1\xca\x02\rManagement\\V1\xe2\x02\x19Management\\V1\\GPBMetadata\xea\x02\x0eManagement::V1b\x06proto3"

var (
	file_management_v1_azure_proto_rawDescOnce sync.Once
	file_management_v1_azure_proto_rawDescData []byte
)

func file_management_v1_azure_proto_rawDescGZIP() []byte {
	file_management_v1_azure_proto_rawDescOnce.Do(func() {
		file_management_v1_azure_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_management_v1_azure_proto_rawDesc), len(file_management_v1_azure_proto_rawDesc)))
	})
	return file_management_v1_azure_proto_rawDescData
}

var (
	file_management_v1_azure_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_management_v1_azure_proto_msgTypes  = make([]protoimpl.MessageInfo, 6)
	file_management_v1_azure_proto_goTypes   = []any{
		(DiscoverAzureDatabaseType)(0),        // 0: management.v1.DiscoverAzureDatabaseType
		(*DiscoverAzureDatabaseRequest)(nil),  // 1: management.v1.DiscoverAzureDatabaseRequest
		(*DiscoverAzureDatabaseInstance)(nil), // 2: management.v1.DiscoverAzureDatabaseInstance
		(*DiscoverAzureDatabaseResponse)(nil), // 3: management.v1.DiscoverAzureDatabaseResponse
		(*AddAzureDatabaseRequest)(nil),       // 4: management.v1.AddAzureDatabaseRequest
		(*AddAzureDatabaseResponse)(nil),      // 5: management.v1.AddAzureDatabaseResponse
		nil,                                   // 6: management.v1.AddAzureDatabaseRequest.CustomLabelsEntry
	}
)

var file_management_v1_azure_proto_depIdxs = []int32{
	0, // 0: management.v1.DiscoverAzureDatabaseInstance.type:type_name -> management.v1.DiscoverAzureDatabaseType
	2, // 1: management.v1.DiscoverAzureDatabaseResponse.azure_database_instance:type_name -> management.v1.DiscoverAzureDatabaseInstance
	6, // 2: management.v1.AddAzureDatabaseRequest.custom_labels:type_name -> management.v1.AddAzureDatabaseRequest.CustomLabelsEntry
	0, // 3: management.v1.AddAzureDatabaseRequest.type:type_name -> management.v1.DiscoverAzureDatabaseType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_management_v1_azure_proto_init() }
func file_management_v1_azure_proto_init() {
	if File_management_v1_azure_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_management_v1_azure_proto_rawDesc), len(file_management_v1_azure_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_management_v1_azure_proto_goTypes,
		DependencyIndexes: file_management_v1_azure_proto_depIdxs,
		EnumInfos:         file_management_v1_azure_proto_enumTypes,
		MessageInfos:      file_management_v1_azure_proto_msgTypes,
	}.Build()
	File_management_v1_azure_proto = out.File
	file_management_v1_azure_proto_goTypes = nil
	file_management_v1_azure_proto_depIdxs = nil
}
