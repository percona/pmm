{
  "swagger": "2.0",
  "info": {
    "title": "managementpb/node/node.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "MgmtNode"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/management/Node/Get": {
      "post": {
        "summary": "Get Node",
        "description": "Returns a single Node by ID.",
        "operationId": "GetNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/nodev1beta1GetNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/nodev1beta1GetNodeRequest"
            }
          }
        ],
        "tags": [
          "MgmtNode"
        ]
      }
    },
    "/v1/management/Node/List": {
      "post": {
        "summary": "List Nodes",
        "description": "Returns a filtered list of Nodes.",
        "operationId": "ListNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ListNodeRequest"
            }
          }
        ],
        "tags": [
          "MgmtNode"
        ]
      }
    }
  },
  "definitions": {
    "UniversalNodeAgent": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique Agent identifier."
        },
        "agent_type": {
          "type": "string",
          "description": "Agent type."
        },
        "status": {
          "type": "string",
          "description": "Actual Agent status."
        },
        "is_connected": {
          "type": "boolean",
          "description": "True if Agent is running and connected to pmm-managed."
        }
      }
    },
    "UniversalNodeService": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Unique Service identifier."
        },
        "service_type": {
          "type": "string",
          "description": "Service type."
        },
        "service_name": {
          "type": "string",
          "description": "Service name."
        }
      },
      "description": "Service represents a service running on a node."
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "inventoryNodeType": {
      "type": "string",
      "enum": [
        "NODE_TYPE_INVALID",
        "GENERIC_NODE",
        "CONTAINER_NODE",
        "REMOTE_NODE",
        "REMOTE_RDS_NODE",
        "REMOTE_AZURE_DATABASE_NODE"
      ],
      "default": "NODE_TYPE_INVALID",
      "description": "NodeType describes supported Node types."
    },
    "nodev1beta1GetNodeRequest": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "Unique Node identifier."
        }
      }
    },
    "nodev1beta1GetNodeResponse": {
      "type": "object",
      "properties": {
        "node": {
          "$ref": "#/definitions/v1beta1UniversalNode"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "v1beta1ListNodeRequest": {
      "type": "object",
      "properties": {
        "node_type": {
          "$ref": "#/definitions/inventoryNodeType",
          "description": "Node type to be filtered out."
        }
      }
    },
    "v1beta1ListNodeResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1UniversalNode"
          }
        }
      }
    },
    "v1beta1UniversalNode": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "Unique Node identifier."
        },
        "node_type": {
          "type": "string",
          "description": "Node type."
        },
        "node_name": {
          "type": "string",
          "description": "User-defined node name."
        },
        "machine_id": {
          "type": "string",
          "description": "Linux machine-id."
        },
        "distro": {
          "type": "string",
          "description": "Linux distribution name and version."
        },
        "node_model": {
          "type": "string",
          "description": "Node model."
        },
        "container_id": {
          "type": "string",
          "description": "A node's unique docker container identifier."
        },
        "container_name": {
          "type": "string",
          "description": "Container name."
        },
        "address": {
          "type": "string",
          "description": "Node address (DNS name or IP)."
        },
        "region": {
          "type": "string",
          "description": "Node region."
        },
        "az": {
          "type": "string",
          "description": "Node availability zone."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels for Node."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        },
        "status": {
          "$ref": "#/definitions/v1beta1UniversalNodeStatus",
          "description": "The health status of the node."
        },
        "agents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UniversalNodeAgent"
          },
          "description": "List of agents related to this node."
        },
        "services": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/UniversalNodeService"
          },
          "description": "List of services running on this node."
        }
      }
    },
    "v1beta1UniversalNodeStatus": {
      "type": "string",
      "enum": [
        "STATUS_INVALID",
        "UP",
        "DOWN",
        "UNKNOWN"
      ],
      "default": "STATUS_INVALID",
      "description": "Node status.\n\n - STATUS_INVALID: Invalid status.\n - UP: The node is up.\n - DOWN: The node is down.\n - UNKNOWN: The node's status cannot be known (e.g. there are no metrics yet)."
    }
  }
}
