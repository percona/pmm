// Code generated by protoc-gen-go. DO NOT EDIT.
// source: managementpb/service.proto

package managementpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	inventorypb "github.com/percona/pmm/api/inventorypb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// AddNodeParams is a params to add new node to inventory while adding new service.
type AddNodeParams struct {
	// Node type to be registered.
	NodeType inventorypb.NodeType `protobuf:"varint,1,opt,name=node_type,json=nodeType,proto3,enum=inventory.NodeType" json:"node_type,omitempty"`
	// Unique across all Nodes user-defined name. Can't be changed.
	NodeName string `protobuf:"bytes,2,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	// Linux machine-id.
	// Must be unique across all Generic Nodes if specified.
	MachineId string `protobuf:"bytes,3,opt,name=machine_id,json=machineId,proto3" json:"machine_id,omitempty"`
	// Linux distribution name and version.
	Distro string `protobuf:"bytes,4,opt,name=distro,proto3" json:"distro,omitempty"`
	// Container identifier. If specified, must be a unique Docker container identifier.
	ContainerId string `protobuf:"bytes,6,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// Container name.
	ContainerName string `protobuf:"bytes,7,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	// Node model.
	NodeModel string `protobuf:"bytes,8,opt,name=node_model,json=nodeModel,proto3" json:"node_model,omitempty"`
	// Node region.
	Region string `protobuf:"bytes,9,opt,name=region,proto3" json:"region,omitempty"`
	// Node availability zone.
	Az string `protobuf:"bytes,10,opt,name=az,proto3" json:"az,omitempty"`
	// Custom user-assigned labels.
	CustomLabels         map[string]string `protobuf:"bytes,11,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AddNodeParams) Reset()         { *m = AddNodeParams{} }
func (m *AddNodeParams) String() string { return proto.CompactTextString(m) }
func (*AddNodeParams) ProtoMessage()    {}
func (*AddNodeParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cb53daa1555e7e7, []int{0}
}

func (m *AddNodeParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNodeParams.Unmarshal(m, b)
}
func (m *AddNodeParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNodeParams.Marshal(b, m, deterministic)
}
func (m *AddNodeParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNodeParams.Merge(m, src)
}
func (m *AddNodeParams) XXX_Size() int {
	return xxx_messageInfo_AddNodeParams.Size(m)
}
func (m *AddNodeParams) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNodeParams.DiscardUnknown(m)
}

var xxx_messageInfo_AddNodeParams proto.InternalMessageInfo

func (m *AddNodeParams) GetNodeType() inventorypb.NodeType {
	if m != nil {
		return m.NodeType
	}
	return inventorypb.NodeType_NODE_TYPE_INVALID
}

func (m *AddNodeParams) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *AddNodeParams) GetMachineId() string {
	if m != nil {
		return m.MachineId
	}
	return ""
}

func (m *AddNodeParams) GetDistro() string {
	if m != nil {
		return m.Distro
	}
	return ""
}

func (m *AddNodeParams) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *AddNodeParams) GetContainerName() string {
	if m != nil {
		return m.ContainerName
	}
	return ""
}

func (m *AddNodeParams) GetNodeModel() string {
	if m != nil {
		return m.NodeModel
	}
	return ""
}

func (m *AddNodeParams) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *AddNodeParams) GetAz() string {
	if m != nil {
		return m.Az
	}
	return ""
}

func (m *AddNodeParams) GetCustomLabels() map[string]string {
	if m != nil {
		return m.CustomLabels
	}
	return nil
}

type RemoveServiceRequest struct {
	// Service type.
	ServiceType inventorypb.ServiceType `protobuf:"varint,1,opt,name=service_type,json=serviceType,proto3,enum=inventory.ServiceType" json:"service_type,omitempty"`
	// Service ID or Service Name is required.
	// Unique randomly generated instance identifier.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Unique across all Services user-defined name.
	ServiceName          string   `protobuf:"bytes,3,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveServiceRequest) Reset()         { *m = RemoveServiceRequest{} }
func (m *RemoveServiceRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveServiceRequest) ProtoMessage()    {}
func (*RemoveServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cb53daa1555e7e7, []int{1}
}

func (m *RemoveServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveServiceRequest.Unmarshal(m, b)
}
func (m *RemoveServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveServiceRequest.Marshal(b, m, deterministic)
}
func (m *RemoveServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveServiceRequest.Merge(m, src)
}
func (m *RemoveServiceRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveServiceRequest.Size(m)
}
func (m *RemoveServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveServiceRequest proto.InternalMessageInfo

func (m *RemoveServiceRequest) GetServiceType() inventorypb.ServiceType {
	if m != nil {
		return m.ServiceType
	}
	return inventorypb.ServiceType_SERVICE_TYPE_INVALID
}

func (m *RemoveServiceRequest) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *RemoveServiceRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

type RemoveServiceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveServiceResponse) Reset()         { *m = RemoveServiceResponse{} }
func (m *RemoveServiceResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveServiceResponse) ProtoMessage()    {}
func (*RemoveServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3cb53daa1555e7e7, []int{2}
}

func (m *RemoveServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveServiceResponse.Unmarshal(m, b)
}
func (m *RemoveServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveServiceResponse.Marshal(b, m, deterministic)
}
func (m *RemoveServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveServiceResponse.Merge(m, src)
}
func (m *RemoveServiceResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveServiceResponse.Size(m)
}
func (m *RemoveServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveServiceResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*AddNodeParams)(nil), "management.AddNodeParams")
	proto.RegisterMapType((map[string]string)(nil), "management.AddNodeParams.CustomLabelsEntry")
	proto.RegisterType((*RemoveServiceRequest)(nil), "management.RemoveServiceRequest")
	proto.RegisterType((*RemoveServiceResponse)(nil), "management.RemoveServiceResponse")
}

func init() { proto.RegisterFile("managementpb/service.proto", fileDescriptor_3cb53daa1555e7e7) }

var fileDescriptor_3cb53daa1555e7e7 = []byte{
	// 607 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0x41, 0x6f, 0xd3, 0x30,
	0x14, 0x56, 0x5a, 0xe8, 0x56, 0xb7, 0x9d, 0xc0, 0x8c, 0x2d, 0x8a, 0x98, 0xe8, 0x3a, 0x21, 0x0a,
	0xa3, 0x31, 0x0c, 0x09, 0xc1, 0x2e, 0xa8, 0x43, 0x3b, 0x4c, 0x1a, 0xd3, 0x14, 0x38, 0x20, 0x2e,
	0x95, 0x1b, 0xbf, 0x65, 0xd6, 0x12, 0x3b, 0x38, 0x6e, 0xa7, 0xee, 0xc0, 0x81, 0x1b, 0x57, 0xf6,
	0x8b, 0xf8, 0x0d, 0xfc, 0x00, 0x24, 0xc4, 0x0f, 0x41, 0x71, 0x9c, 0x36, 0x63, 0x88, 0x53, 0xfd,
	0xbe, 0xef, 0x7b, 0xef, 0x7d, 0x7d, 0xcf, 0x0e, 0xf2, 0x12, 0x2a, 0x68, 0x04, 0x09, 0x08, 0x9d,
	0x8e, 0x49, 0x06, 0x6a, 0xca, 0x43, 0xf0, 0x53, 0x25, 0xb5, 0xc4, 0x68, 0xc1, 0x79, 0x2f, 0x22,
	0xae, 0x4f, 0x27, 0x63, 0x3f, 0x94, 0x09, 0x49, 0xce, 0xb9, 0x3e, 0x93, 0xe7, 0x24, 0x92, 0x03,
	0x23, 0x1c, 0x4c, 0x69, 0xcc, 0x19, 0xd5, 0x52, 0x65, 0x64, 0x7e, 0x2c, 0x6a, 0x78, 0xf7, 0x22,
	0x29, 0xa3, 0x18, 0x08, 0x4d, 0x39, 0xa1, 0x42, 0x48, 0x4d, 0x35, 0x97, 0x22, 0xb3, 0xec, 0x3a,
	0x17, 0x53, 0x10, 0x5a, 0xaa, 0x59, 0x3a, 0x26, 0x42, 0x32, 0x28, 0x09, 0xaf, 0x4a, 0x58, 0x57,
	0x25, 0xf7, 0xc4, 0xfc, 0x84, 0x83, 0x08, 0xc4, 0x20, 0x3b, 0xa7, 0x51, 0x04, 0x8a, 0xc8, 0xd4,
	0x94, 0xbd, 0xde, 0xa2, 0xf7, 0xbd, 0x8e, 0x3a, 0x43, 0xc6, 0x8e, 0x24, 0x83, 0x63, 0xaa, 0x68,
	0x92, 0xe1, 0xa7, 0xa8, 0x99, 0xb7, 0x1a, 0xe9, 0x59, 0x0a, 0xae, 0xd3, 0x75, 0xfa, 0x2b, 0x3b,
	0x77, 0xfc, 0x79, 0x3f, 0x3f, 0x57, 0xbe, 0x9f, 0xa5, 0x10, 0x2c, 0x0b, 0x7b, 0xc2, 0x5b, 0x36,
	0x43, 0xd0, 0x04, 0xdc, 0x5a, 0xd7, 0xe9, 0x37, 0xf7, 0x1a, 0xbf, 0x7e, 0xde, 0xaf, 0x7d, 0x70,
	0x0a, 0xd1, 0x11, 0x4d, 0x00, 0x6f, 0x20, 0x94, 0xd0, 0xf0, 0x94, 0x0b, 0x18, 0x71, 0xe6, 0xd6,
	0x73, 0x55, 0xd0, 0xb4, 0xc8, 0x01, 0xc3, 0x6b, 0xa8, 0xc1, 0x78, 0xa6, 0x95, 0x74, 0x6f, 0x18,
	0xca, 0x46, 0x78, 0x13, 0xb5, 0x43, 0x29, 0x34, 0xe5, 0x02, 0x54, 0x9e, 0xd8, 0x30, 0x6c, 0x6b,
	0x8e, 0x1d, 0x30, 0xfc, 0x00, 0xad, 0x2c, 0x24, 0xc6, 0xc3, 0x92, 0x11, 0x75, 0xe6, 0x68, 0x69,
	0xc0, 0xb8, 0x4c, 0x24, 0x83, 0xd8, 0x5d, 0x2e, 0x0c, 0xe4, 0xc8, 0xdb, 0x1c, 0xc8, 0x0d, 0x28,
	0x88, 0xb8, 0x14, 0x6e, 0xb3, 0x30, 0x50, 0x44, 0x78, 0x05, 0xd5, 0xe8, 0x85, 0x8b, 0x0c, 0x56,
	0xa3, 0x17, 0xf8, 0x18, 0x75, 0xc2, 0x49, 0xa6, 0x65, 0x32, 0x8a, 0xe9, 0x18, 0xe2, 0xcc, 0x6d,
	0x75, 0xeb, 0xfd, 0xd6, 0xce, 0xb6, 0xbf, 0xb8, 0x0d, 0xfe, 0x95, 0x81, 0xfa, 0x6f, 0x8c, 0xfc,
	0xd0, 0xa8, 0xf7, 0x85, 0x56, 0xb3, 0xa0, 0x1d, 0x56, 0x20, 0xef, 0x35, 0xba, 0x7d, 0x4d, 0x82,
	0x6f, 0xa1, 0xfa, 0x19, 0xcc, 0xcc, 0xfc, 0x9b, 0x41, 0x7e, 0xc4, 0xab, 0xe8, 0xe6, 0x94, 0xc6,
	0x13, 0x3b, 0xe1, 0xa0, 0x08, 0x76, 0x6b, 0x2f, 0x9d, 0xde, 0xa5, 0x83, 0x56, 0x03, 0x48, 0xe4,
	0x14, 0xde, 0x15, 0x57, 0x21, 0x80, 0x4f, 0x13, 0xc8, 0x34, 0x7e, 0x85, 0xda, 0xf6, 0x72, 0x54,
	0xb7, 0xb9, 0x56, 0xd9, 0xa6, 0x4d, 0x30, 0x0b, 0x6d, 0x65, 0x8b, 0x20, 0x9f, 0x56, 0x99, 0xca,
	0x99, 0x6d, 0xd9, 0xb4, 0xc8, 0x01, 0xcb, 0xd7, 0x52, 0xd2, 0x66, 0xe2, 0xc5, 0x3e, 0xcb, 0x0a,
	0xf9, 0xbc, 0x7b, 0xeb, 0xe8, 0xee, 0x5f, 0xa6, 0xb2, 0x54, 0x8a, 0x0c, 0x76, 0xbe, 0x3a, 0x68,
	0xc9, 0x62, 0xf8, 0x33, 0xea, 0x5c, 0x11, 0xe1, 0x6e, 0x75, 0x8e, 0xff, 0xfa, 0x53, 0xde, 0xe6,
	0x7f, 0x14, 0x45, 0x87, 0x5e, 0xff, 0xcb, 0x8f, 0xdf, 0x97, 0xb5, 0x5e, 0x6f, 0x83, 0x4c, 0x9f,
	0x91, 0x85, 0x9a, 0x58, 0x1d, 0x29, 0xb2, 0x76, 0x9d, 0xc7, 0x7b, 0xa3, 0x6f, 0xc3, 0xa3, 0xe0,
	0x10, 0x2d, 0x31, 0x38, 0xa1, 0x93, 0x58, 0xe3, 0x21, 0xc2, 0x43, 0xd1, 0x05, 0xa5, 0xa4, 0xea,
	0x2a, 0x5b, 0xce, 0xc7, 0xdb, 0xe8, 0x91, 0xf7, 0x70, 0x8b, 0x30, 0x38, 0xe1, 0x82, 0x17, 0x2f,
	0xa9, 0xfa, 0x5d, 0xd8, 0xcf, 0xe5, 0x65, 0xf3, 0x8f, 0xed, 0x2a, 0x35, 0x6e, 0x98, 0x67, 0xf6,
	0xfc, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x40, 0x1b, 0xec, 0x26, 0x49, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceClient is the client API for Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClient interface {
	// RemoveService removes Service with Agents.
	RemoveService(ctx context.Context, in *RemoveServiceRequest, opts ...grpc.CallOption) (*RemoveServiceResponse, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) RemoveService(ctx context.Context, in *RemoveServiceRequest, opts ...grpc.CallOption) (*RemoveServiceResponse, error) {
	out := new(RemoveServiceResponse)
	err := c.cc.Invoke(ctx, "/management.Service/RemoveService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServer is the server API for Service service.
type ServiceServer interface {
	// RemoveService removes Service with Agents.
	RemoveService(context.Context, *RemoveServiceRequest) (*RemoveServiceResponse, error)
}

// UnimplementedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServiceServer struct {
}

func (*UnimplementedServiceServer) RemoveService(ctx context.Context, req *RemoveServiceRequest) (*RemoveServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveService not implemented")
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_RemoveService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).RemoveService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/management.Service/RemoveService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).RemoveService(ctx, req.(*RemoveServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "management.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RemoveService",
			Handler:    _Service_RemoveService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "managementpb/service.proto",
}
