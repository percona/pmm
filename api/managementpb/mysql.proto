syntax = "proto3";

package management;

option go_package = "managementpb";

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "inventorypb/agents.proto";
import "inventorypb/services.proto";
import "managementpb/service.proto";

// Add MySQL

message AddMySQLRequest {
  // Node identifier on which a service is been running.
  // Exactly one of these parameters should be present: node_id, node_name, add_node.
  string node_id = 1;
  // Node name on which a service is been running.
  // Exactly one of these parameters should be present: node_id, node_name, add_node.
  string node_name = 2;
  // Create a new Node with those parameters.
  // Exactly one of these parameters should be present: node_id, node_name, add_node.
  AddNodeParams add_node = 3;
  // Unique across all Services user-defined name. Required.
  string service_name = 4 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Node and Service access address (DNS name or IP).
  // Address (and port) or socket is required.
  string address = 5;
  // Service Access port.
  // Port is required when the address present.
  uint32 port = 6;
  // Service Access socket.
  // Address (and port) or socket is required.
  string socket = 22;
  // The "pmm-agent" identifier which should run agents. Required.
  string pmm_agent_id = 7 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Environment name.
  string environment = 8;
  // Cluster name.
  string cluster = 9;
  // Replication set name.
  string replication_set = 10;
  // MySQL username for scraping metrics.
  string username = 11 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // MySQL password for scraping metrics.
  string password = 12;
  // If true, adds qan-mysql-perfschema-agent for provided service.
  bool qan_mysql_perfschema = 13;
  // If true, adds qan-mysql-slowlog-agent for provided service.
  bool qan_mysql_slowlog = 14;
  // Custom user-assigned labels for Service.
  map<string, string> custom_labels = 15;
  // Skip connection check.
  bool skip_connection_check = 16;
  // Disable query examples.
  bool disable_query_examples = 17;
  // If qan-mysql-slowlog-agent is added, slowlog file is rotated at this size if > 0.
  // If zero, server's default value is used.
  // Use negative value to disable rotation.
  int64 max_slowlog_file_size = 18;
  // Use TLS for database connections.
  bool tls = 19;
  // Skip TLS certificate and hostname validation.
  bool tls_skip_verify = 20;
  // Tablestats group collectors will be disabled if there are more than that number of tables.
  // If zero, server's default value is used.
  // Use negative value to disable them.
  int32 tablestats_group_table_limit = 21;
}

message AddMySQLResponse {
  inventory.MySQLService service = 1;
  inventory.MySQLdExporter mysqld_exporter = 2;
  inventory.QANMySQLPerfSchemaAgent qan_mysql_perfschema = 3;
  inventory.QANMySQLSlowlogAgent qan_mysql_slowlog = 4;
  // Actual table count at the moment of adding.
  int32 table_count = 5;
}

// MySQL service provides public Management API methods for MySQL Service.
service MySQL {
  // AddMySQL adds MySQL Service and starts several Agents.
  // It automatically adds a service to inventory, which is running on provided "node_id",
  // then adds "mysqld_exporter", and "qan_mysql_perfschema" agents
  // with provided "pmm_agent_id" and other parameters.
  rpc AddMySQL(AddMySQLRequest) returns (AddMySQLResponse) {
    option (google.api.http) = {
      post: "/v1/management/MySQL/Add"
      body: "*"
    };
  }
}
