// Code generated by protoc-gen-go. DO NOT EDIT.
// source: managementpb/mysql.proto

package managementpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	inventorypb "github.com/percona/pmm/api/inventorypb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddMySQLRequest struct {
	// Node identifier on which a service is been running. Required.
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Unique across all Services user-defined name. Required.
	ServiceName string `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Node and Service access address (DNS name or IP). Required.
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Service Access port. Required.
	Port uint32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// The "pmm-agent" identifier which should run agents. Required.
	PmmAgentId string `protobuf:"bytes,5,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Environment name.
	Environment string `protobuf:"bytes,6,opt,name=environment,proto3" json:"environment,omitempty"`
	// Cluster name.
	Cluster string `protobuf:"bytes,7,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Replication set name.
	ReplicationSet string `protobuf:"bytes,8,opt,name=replication_set,json=replicationSet,proto3" json:"replication_set,omitempty"`
	// MySQL username for scraping metrics.
	Username string `protobuf:"bytes,9,opt,name=username,proto3" json:"username,omitempty"`
	// MySQL password for scraping metrics.
	Password string `protobuf:"bytes,10,opt,name=password,proto3" json:"password,omitempty"`
	// If true, adds qan-mysql-perfschema-agent for provided service.
	QanMysqlPerfschema bool `protobuf:"varint,14,opt,name=qan_mysql_perfschema,json=qanMysqlPerfschema,proto3" json:"qan_mysql_perfschema,omitempty"`
	// If true, adds qan-mysql-slowlog-agent for provided service.
	QanMysqlSlowlog bool `protobuf:"varint,15,opt,name=qan_mysql_slowlog,json=qanMysqlSlowlog,proto3" json:"qan_mysql_slowlog,omitempty"`
	// Custom user-assigned labels.
	CustomLabels         map[string]string `protobuf:"bytes,20,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AddMySQLRequest) Reset()         { *m = AddMySQLRequest{} }
func (m *AddMySQLRequest) String() string { return proto.CompactTextString(m) }
func (*AddMySQLRequest) ProtoMessage()    {}
func (*AddMySQLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab81470951176953, []int{0}
}

func (m *AddMySQLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddMySQLRequest.Unmarshal(m, b)
}
func (m *AddMySQLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddMySQLRequest.Marshal(b, m, deterministic)
}
func (m *AddMySQLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddMySQLRequest.Merge(m, src)
}
func (m *AddMySQLRequest) XXX_Size() int {
	return xxx_messageInfo_AddMySQLRequest.Size(m)
}
func (m *AddMySQLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddMySQLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddMySQLRequest proto.InternalMessageInfo

func (m *AddMySQLRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *AddMySQLRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *AddMySQLRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddMySQLRequest) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *AddMySQLRequest) GetPmmAgentId() string {
	if m != nil {
		return m.PmmAgentId
	}
	return ""
}

func (m *AddMySQLRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *AddMySQLRequest) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *AddMySQLRequest) GetReplicationSet() string {
	if m != nil {
		return m.ReplicationSet
	}
	return ""
}

func (m *AddMySQLRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AddMySQLRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AddMySQLRequest) GetQanMysqlPerfschema() bool {
	if m != nil {
		return m.QanMysqlPerfschema
	}
	return false
}

func (m *AddMySQLRequest) GetQanMysqlSlowlog() bool {
	if m != nil {
		return m.QanMysqlSlowlog
	}
	return false
}

func (m *AddMySQLRequest) GetCustomLabels() map[string]string {
	if m != nil {
		return m.CustomLabels
	}
	return nil
}

type AddMySQLResponse struct {
	Service              *inventorypb.MySQLService            `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	MysqldExporter       *inventorypb.MySQLdExporter          `protobuf:"bytes,2,opt,name=mysqld_exporter,json=mysqldExporter,proto3" json:"mysqld_exporter,omitempty"`
	QanMysqlPerfschema   *inventorypb.QANMySQLPerfSchemaAgent `protobuf:"bytes,3,opt,name=qan_mysql_perfschema,json=qanMysqlPerfschema,proto3" json:"qan_mysql_perfschema,omitempty"`
	QanMysqlSlowlog      *inventorypb.QANMySQLSlowlogAgent    `protobuf:"bytes,4,opt,name=qan_mysql_slowlog,json=qanMysqlSlowlog,proto3" json:"qan_mysql_slowlog,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *AddMySQLResponse) Reset()         { *m = AddMySQLResponse{} }
func (m *AddMySQLResponse) String() string { return proto.CompactTextString(m) }
func (*AddMySQLResponse) ProtoMessage()    {}
func (*AddMySQLResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab81470951176953, []int{1}
}

func (m *AddMySQLResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddMySQLResponse.Unmarshal(m, b)
}
func (m *AddMySQLResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddMySQLResponse.Marshal(b, m, deterministic)
}
func (m *AddMySQLResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddMySQLResponse.Merge(m, src)
}
func (m *AddMySQLResponse) XXX_Size() int {
	return xxx_messageInfo_AddMySQLResponse.Size(m)
}
func (m *AddMySQLResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddMySQLResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddMySQLResponse proto.InternalMessageInfo

func (m *AddMySQLResponse) GetService() *inventorypb.MySQLService {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *AddMySQLResponse) GetMysqldExporter() *inventorypb.MySQLdExporter {
	if m != nil {
		return m.MysqldExporter
	}
	return nil
}

func (m *AddMySQLResponse) GetQanMysqlPerfschema() *inventorypb.QANMySQLPerfSchemaAgent {
	if m != nil {
		return m.QanMysqlPerfschema
	}
	return nil
}

func (m *AddMySQLResponse) GetQanMysqlSlowlog() *inventorypb.QANMySQLSlowlogAgent {
	if m != nil {
		return m.QanMysqlSlowlog
	}
	return nil
}

func init() {
	proto.RegisterType((*AddMySQLRequest)(nil), "management.AddMySQLRequest")
	proto.RegisterMapType((map[string]string)(nil), "management.AddMySQLRequest.CustomLabelsEntry")
	proto.RegisterType((*AddMySQLResponse)(nil), "management.AddMySQLResponse")
}

func init() { proto.RegisterFile("managementpb/mysql.proto", fileDescriptor_ab81470951176953) }

var fileDescriptor_ab81470951176953 = []byte{
	// 710 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0xdd, 0x4e, 0xe3, 0x46,
	0x14, 0xc7, 0x9b, 0x0f, 0x92, 0x30, 0x09, 0x04, 0x46, 0x48, 0x75, 0x5d, 0x2a, 0xac, 0x70, 0x41,
	0xa0, 0x8d, 0x4d, 0x53, 0xa9, 0xaa, 0xb8, 0xa9, 0x42, 0xc5, 0x05, 0x2a, 0xa0, 0xe2, 0xf4, 0xa2,
	0xea, 0x8d, 0x35, 0xf1, 0x1c, 0x8c, 0x8b, 0x3d, 0xe3, 0xcc, 0x4c, 0x92, 0xe6, 0x76, 0x1f, 0x61,
	0xf7, 0x35, 0xf6, 0x6d, 0xf6, 0x7a, 0xb5, 0xd2, 0x6a, 0x1f, 0x64, 0xe5, 0xb1, 0x9d, 0x0f, 0xc8,
	0xee, 0x95, 0x3d, 0xe7, 0xff, 0x3b, 0xff, 0x63, 0x9f, 0x73, 0x34, 0xc8, 0x88, 0x09, 0x23, 0x01,
	0xc4, 0xc0, 0x54, 0x32, 0x72, 0xe2, 0xb9, 0x1c, 0x47, 0x76, 0x22, 0xb8, 0xe2, 0x18, 0x2d, 0x15,
	0xf3, 0xd7, 0x20, 0x54, 0x8f, 0x93, 0x91, 0xed, 0xf3, 0xd8, 0x89, 0x67, 0xa1, 0x7a, 0xe2, 0x33,
	0x27, 0xe0, 0x3d, 0x0d, 0xf6, 0xa6, 0x24, 0x0a, 0x29, 0x51, 0x5c, 0x48, 0x67, 0xf1, 0x9a, 0x79,
	0x98, 0x87, 0x01, 0xe7, 0x41, 0x04, 0x0e, 0x49, 0x42, 0x87, 0x30, 0xc6, 0x15, 0x51, 0x21, 0x67,
	0x32, 0x57, 0x8d, 0x90, 0x4d, 0x81, 0x29, 0x2e, 0xe6, 0xc9, 0xc8, 0x21, 0x01, 0x30, 0x55, 0x28,
	0xe6, 0xaa, 0x22, 0x41, 0x4c, 0x43, 0x1f, 0x0a, 0xed, 0x27, 0xfd, 0xf0, 0x7b, 0x01, 0xb0, 0x9e,
	0x9c, 0x91, 0x20, 0x00, 0xe1, 0xf0, 0x44, 0xfb, 0xbe, 0xac, 0xd1, 0x79, 0x5f, 0x45, 0xed, 0x01,
	0xa5, 0xb7, 0xf3, 0xe1, 0xfd, 0x8d, 0x0b, 0xe3, 0x09, 0x48, 0x85, 0x8f, 0x50, 0x9d, 0x71, 0x0a,
	0x5e, 0x48, 0x8d, 0x92, 0x55, 0xea, 0x6e, 0x5f, 0xd6, 0x3e, 0x7e, 0x38, 0x2a, 0xff, 0x53, 0x72,
	0x6b, 0x69, 0xf8, 0x9a, 0xe2, 0x53, 0xd4, 0xca, 0x8b, 0x7a, 0x8c, 0xc4, 0x60, 0x94, 0xd7, 0xa8,
	0x66, 0xae, 0xdd, 0x91, 0x18, 0xb0, 0x85, 0xea, 0x84, 0x52, 0x01, 0x52, 0x1a, 0x95, 0x35, 0xaa,
	0x08, 0x63, 0x13, 0x55, 0x13, 0x2e, 0x94, 0x51, 0xb5, 0x4a, 0xdd, 0x9d, 0x4c, 0xde, 0xfb, 0xc6,
	0xd5, 0x31, 0xdc, 0x45, 0xad, 0x24, 0x8e, 0x3d, 0xfd, 0xef, 0xe9, 0xe7, 0x6c, 0xad, 0x59, 0xa0,
	0x24, 0x8e, 0x07, 0xa9, 0x74, 0x4d, 0xb1, 0x85, 0x9a, 0xc0, 0xa6, 0xa1, 0xe0, 0x2c, 0x1d, 0x88,
	0x51, 0x4b, 0x41, 0x77, 0x35, 0x84, 0x0d, 0x54, 0xf7, 0xa3, 0x89, 0x54, 0x20, 0x8c, 0xba, 0x56,
	0x8b, 0x23, 0x3e, 0x41, 0x6d, 0x01, 0x49, 0x14, 0xfa, 0xba, 0x33, 0x9e, 0x04, 0x65, 0x34, 0x34,
	0xb1, 0xbb, 0x12, 0x1e, 0x82, 0xc2, 0x1d, 0xd4, 0x98, 0x48, 0x10, 0xfa, 0x9f, 0xb7, 0xd7, 0x3e,
	0x65, 0x11, 0xc7, 0x26, 0x6a, 0x24, 0x44, 0xca, 0x19, 0x17, 0xd4, 0x40, 0xda, 0x65, 0x71, 0xc6,
	0xe7, 0xe8, 0x60, 0x4c, 0x98, 0xa7, 0xb7, 0xc8, 0x4b, 0x40, 0x3c, 0x48, 0xff, 0x11, 0x62, 0x62,
	0xec, 0x5a, 0xa5, 0x6e, 0xc3, 0xc5, 0x63, 0xc2, 0x6e, 0x53, 0xe9, 0xaf, 0x85, 0x82, 0xcf, 0xd0,
	0xfe, 0x32, 0x43, 0x46, 0x7c, 0x16, 0xf1, 0xc0, 0x68, 0x6b, 0xbc, 0x5d, 0xe0, 0xc3, 0x2c, 0x8c,
	0x5d, 0xb4, 0xe3, 0x4f, 0xa4, 0xe2, 0xb1, 0x17, 0x91, 0x11, 0x44, 0xd2, 0x38, 0xb0, 0x2a, 0xdd,
	0x66, 0xbf, 0x67, 0x2f, 0x17, 0xd5, 0x7e, 0x36, 0x6a, 0xfb, 0x0f, 0x9d, 0x70, 0xa3, 0xf9, 0x2b,
	0xa6, 0xc4, 0xdc, 0x6d, 0xf9, 0x2b, 0x21, 0xf3, 0x77, 0xb4, 0xff, 0x02, 0xc1, 0x7b, 0xa8, 0xf2,
	0x04, 0xf3, 0x6c, 0x37, 0xdc, 0xf4, 0x15, 0x1f, 0xa0, 0xad, 0x29, 0x89, 0x26, 0xf9, 0x26, 0xb8,
	0xd9, 0xe1, 0xa2, 0xfc, 0x5b, 0xa9, 0xf3, 0xb6, 0x8c, 0xf6, 0x96, 0x45, 0x65, 0xc2, 0x99, 0x04,
	0xfc, 0x33, 0xaa, 0xe7, 0x3b, 0xa2, 0x4d, 0x9a, 0xfd, 0x6f, 0xed, 0xc5, 0x42, 0xdb, 0x1a, 0x1d,
	0x66, 0xb2, 0x5b, 0x70, 0xf8, 0x12, 0xb5, 0x75, 0x13, 0xa8, 0x07, 0xff, 0xa7, 0xab, 0x01, 0x42,
	0xd7, 0x6a, 0xf6, 0xbf, 0x7b, 0x9e, 0x4a, 0xaf, 0x72, 0xc0, 0xdd, 0xcd, 0x32, 0x8a, 0x33, 0xfe,
	0xfb, 0x0b, 0xed, 0xaf, 0x68, 0xa3, 0xce, 0x8a, 0xd1, 0xfd, 0xe0, 0x4e, 0x7b, 0xa5, 0x93, 0x18,
	0x6a, 0x48, 0xef, 0xd9, 0xc6, 0x11, 0xfd, 0xb9, 0x69, 0x44, 0x55, 0x6d, 0x79, 0xb4, 0xc1, 0x32,
	0x9f, 0x56, 0xe6, 0xf7, 0x7c, 0x86, 0x7d, 0x89, 0xb6, 0x34, 0x85, 0xff, 0x43, 0x8d, 0xa2, 0x6d,
	0xf8, 0xfb, 0xaf, 0x4c, 0xd0, 0x3c, 0xdc, 0x2c, 0x66, 0x9d, 0xee, 0x1c, 0xbf, 0x7a, 0xf7, 0xe9,
	0x4d, 0xf9, 0x87, 0x8e, 0xe1, 0x4c, 0xcf, 0x9d, 0x25, 0xe8, 0x68, 0xca, 0x19, 0x50, 0x7a, 0x51,
	0x3a, 0xbb, 0xf4, 0x5e, 0x0f, 0xee, 0xdc, 0x1b, 0x54, 0xa7, 0xf0, 0x40, 0x26, 0x91, 0xc2, 0x03,
	0x84, 0x07, 0xcc, 0x02, 0x21, 0xb8, 0xb0, 0x44, 0xee, 0x64, 0xe3, 0x1f, 0xd1, 0xa9, 0x79, 0x72,
	0xec, 0x50, 0x78, 0x08, 0x59, 0x98, 0x5d, 0x27, 0xab, 0x77, 0xe3, 0x55, 0x8a, 0x17, 0x75, 0xff,
	0x6d, 0xad, 0x4a, 0xa3, 0x9a, 0xbe, 0x6b, 0x7e, 0xf9, 0x1c, 0x00, 0x00, 0xff, 0xff, 0x5b, 0xb9,
	0x23, 0x2e, 0x4d, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MySQLClient is the client API for MySQL service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MySQLClient interface {
	// AddMySQL adds MySQL Service and starts several Agents.
	// It automatically adds a service to inventory, which is running on provided "node_id",
	// then adds "mysqld_exporter", and "qan_mysql_perfschema" agents
	// with provided "pmm_agent_id" and other parameters.
	AddMySQL(ctx context.Context, in *AddMySQLRequest, opts ...grpc.CallOption) (*AddMySQLResponse, error)
}

type mySQLClient struct {
	cc *grpc.ClientConn
}

func NewMySQLClient(cc *grpc.ClientConn) MySQLClient {
	return &mySQLClient{cc}
}

func (c *mySQLClient) AddMySQL(ctx context.Context, in *AddMySQLRequest, opts ...grpc.CallOption) (*AddMySQLResponse, error) {
	out := new(AddMySQLResponse)
	err := c.cc.Invoke(ctx, "/management.MySQL/AddMySQL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MySQLServer is the server API for MySQL service.
type MySQLServer interface {
	// AddMySQL adds MySQL Service and starts several Agents.
	// It automatically adds a service to inventory, which is running on provided "node_id",
	// then adds "mysqld_exporter", and "qan_mysql_perfschema" agents
	// with provided "pmm_agent_id" and other parameters.
	AddMySQL(context.Context, *AddMySQLRequest) (*AddMySQLResponse, error)
}

func RegisterMySQLServer(s *grpc.Server, srv MySQLServer) {
	s.RegisterService(&_MySQL_serviceDesc, srv)
}

func _MySQL_AddMySQL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddMySQLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MySQLServer).AddMySQL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/management.MySQL/AddMySQL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MySQLServer).AddMySQL(ctx, req.(*AddMySQLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MySQL_serviceDesc = grpc.ServiceDesc{
	ServiceName: "management.MySQL",
	HandlerType: (*MySQLServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddMySQL",
			Handler:    _MySQL_AddMySQL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "managementpb/mysql.proto",
}
