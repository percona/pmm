syntax = "proto3";

package ia.v1beta1;

option go_package = "api/managementpb/ia;iav1beta1";

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "managementpb/checks.proto";
import "managementpb/ia/boolean_flag.proto";
import "managementpb/ia/status.proto";

// TODO move it to parent directory / package once API is v1-stable

// Alert TODO.
message Alert {
  string alert_id = 1;
  string summary = 2;
  management.Severity severity = 3;
  Status status = 4;
  map<string, string> labels = 5;
  google.protobuf.Timestamp active_since = 6;
  google.protobuf.Timestamp last_notified_at = 7;
}

message ListAlertsRequest {}

message ListAlertsResponse {
  repeated Alert alerts = 1;
}

message ToggleAlertRequest {
  string alert_id = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  BooleanFlag silence = 2;
}

message ToggleAlertResponse {}

message DeleteAlertRequest {
  string alert_id = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message DeleteAlertResponse {}

// Alerts TODO.
service Alerts {
  // ListAlerts TODO.
  rpc ListAlerts(ListAlertsRequest) returns (ListAlertsResponse) {
    option (google.api.http) = {
      post: "/v1/management/ia/Alerts/List"
      body: "*"
    };
  }
  // ToggleAlert TODO.
  rpc ToggleAlert(ToggleAlertRequest) returns (ToggleAlertResponse) {
    option (google.api.http) = {
      post: "/v1/management/ia/Alerts/Toggle"
      body: "*"
    };
  }
  // DeleteAlert TODO.
  rpc DeleteAlert(DeleteAlertRequest) returns (DeleteAlertResponse) {
    option (google.api.http) = {
      post: "/v1/management/ia/Alerts/Delete"
      body: "*"
    };
  }
}
