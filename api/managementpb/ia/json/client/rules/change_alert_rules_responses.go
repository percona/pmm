// Code generated by go-swagger; DO NOT EDIT.

package rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ChangeAlertRulesReader is a Reader for the ChangeAlertRules structure.
type ChangeAlertRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeAlertRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewChangeAlertRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewChangeAlertRulesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewChangeAlertRulesOK creates a ChangeAlertRulesOK with default headers values
func NewChangeAlertRulesOK() *ChangeAlertRulesOK {
	return &ChangeAlertRulesOK{}
}

/*ChangeAlertRulesOK handles this case with default header values.

A successful response.
*/
type ChangeAlertRulesOK struct {
	Payload *ChangeAlertRulesOKBody
}

func (o *ChangeAlertRulesOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/ia/Rules/Change][%d] changeAlertRulesOk  %+v", 200, o.Payload)
}

func (o *ChangeAlertRulesOK) GetPayload() *ChangeAlertRulesOKBody {
	return o.Payload
}

func (o *ChangeAlertRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ChangeAlertRulesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeAlertRulesDefault creates a ChangeAlertRulesDefault with default headers values
func NewChangeAlertRulesDefault(code int) *ChangeAlertRulesDefault {
	return &ChangeAlertRulesDefault{
		_statusCode: code,
	}
}

/*ChangeAlertRulesDefault handles this case with default header values.

An unexpected error response.
*/
type ChangeAlertRulesDefault struct {
	_statusCode int

	Payload *ChangeAlertRulesDefaultBody
}

// Code gets the status code for the change alert rules default response
func (o *ChangeAlertRulesDefault) Code() int {
	return o._statusCode
}

func (o *ChangeAlertRulesDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/ia/Rules/Change][%d] ChangeAlertRules default  %+v", o._statusCode, o.Payload)
}

func (o *ChangeAlertRulesDefault) GetPayload() *ChangeAlertRulesDefaultBody {
	return o.Payload
}

func (o *ChangeAlertRulesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ChangeAlertRulesDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ChangeAlertRulesBody change alert rules body
swagger:model ChangeAlertRulesBody
*/
type ChangeAlertRulesBody struct {

	// Rule name.
	Name string `json:"name,omitempty"`

	// BooleanFlag represent a command to enable some boolean property (set to true),
	// disable some boolean property (set to false), or avoid changing that property.
	//
	//  - DO_NOT_CHANGE: Do not change boolean property. Default value.
	//  - ENABLE: Enable boolean property.
	//  - DISABLE: Disable boolean property.
	// Enum: [DO_NOT_CHANGE ENABLE DISABLE]
	Enabled *string `json:"enabled,omitempty"`

	// New rule status.
	// Go Swagger code generates bool :(
	// FIXME Remove.
	EnabledDoesNotWork bool `json:"enabled_does_not_work,omitempty"`

	// Parameters to change. Missing parameters will not be changed.
	Params []*ParamsItems0 `json:"params"`

	// Rule set duration. Zero value will not change it.
	// FIXME ?
	For string `json:"for,omitempty"`

	// Remove set duration (reset to default).
	RemoveFor bool `json:"remove_for,omitempty"`
}

// Validate validates this change alert rules body
func (o *ChangeAlertRulesBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var changeAlertRulesBodyTypeEnabledPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DO_NOT_CHANGE","ENABLE","DISABLE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		changeAlertRulesBodyTypeEnabledPropEnum = append(changeAlertRulesBodyTypeEnabledPropEnum, v)
	}
}

const (

	// ChangeAlertRulesBodyEnabledDONOTCHANGE captures enum value "DO_NOT_CHANGE"
	ChangeAlertRulesBodyEnabledDONOTCHANGE string = "DO_NOT_CHANGE"

	// ChangeAlertRulesBodyEnabledENABLE captures enum value "ENABLE"
	ChangeAlertRulesBodyEnabledENABLE string = "ENABLE"

	// ChangeAlertRulesBodyEnabledDISABLE captures enum value "DISABLE"
	ChangeAlertRulesBodyEnabledDISABLE string = "DISABLE"
)

// prop value enum
func (o *ChangeAlertRulesBody) validateEnabledEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, changeAlertRulesBodyTypeEnabledPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *ChangeAlertRulesBody) validateEnabled(formats strfmt.Registry) error {

	if swag.IsZero(o.Enabled) { // not required
		return nil
	}

	// value enum
	if err := o.validateEnabledEnum("body"+"."+"enabled", "body", *o.Enabled); err != nil {
		return err
	}

	return nil
}

func (o *ChangeAlertRulesBody) validateParams(formats strfmt.Registry) error {

	if swag.IsZero(o.Params) { // not required
		return nil
	}

	for i := 0; i < len(o.Params); i++ {
		if swag.IsZero(o.Params[i]) { // not required
			continue
		}

		if o.Params[i] != nil {
			if err := o.Params[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "params" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ChangeAlertRulesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ChangeAlertRulesBody) UnmarshalBinary(b []byte) error {
	var res ChangeAlertRulesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ChangeAlertRulesDefaultBody change alert rules default body
swagger:model ChangeAlertRulesDefaultBody
*/
type ChangeAlertRulesDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this change alert rules default body
func (o *ChangeAlertRulesDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ChangeAlertRulesDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ChangeAlertRules default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ChangeAlertRulesDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ChangeAlertRulesDefaultBody) UnmarshalBinary(b []byte) error {
	var res ChangeAlertRulesDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ChangeAlertRulesOKBody change alert rules OK body
swagger:model ChangeAlertRulesOKBody
*/
type ChangeAlertRulesOKBody struct {

	// rules
	Rules *ChangeAlertRulesOKBodyRules `json:"rules,omitempty"`
}

// Validate validates this change alert rules OK body
func (o *ChangeAlertRulesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRules(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ChangeAlertRulesOKBody) validateRules(formats strfmt.Registry) error {

	if swag.IsZero(o.Rules) { // not required
		return nil
	}

	if o.Rules != nil {
		if err := o.Rules.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("changeAlertRulesOk" + "." + "rules")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ChangeAlertRulesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ChangeAlertRulesOKBody) UnmarshalBinary(b []byte) error {
	var res ChangeAlertRulesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ChangeAlertRulesOKBodyRules Rule represents Integrated Alerting rule.
swagger:model ChangeAlertRulesOKBodyRules
*/
type ChangeAlertRulesOKBodyRules struct {

	// Rule name.
	Name string `json:"name,omitempty"`

	// Rules status: enabled or disabled.
	Enabled bool `json:"enabled,omitempty"`

	// Rule description.
	Help string `json:"help,omitempty"`

	// Rule parameters.
	Params []*ChangeAlertRulesOKBodyRulesParamsItems0 `json:"params"`

	// Rule default duration.
	DefaultFor string `json:"default_for,omitempty"`

	// Rule set duration.
	For string `json:"for,omitempty"`
}

// Validate validates this change alert rules OK body rules
func (o *ChangeAlertRulesOKBodyRules) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ChangeAlertRulesOKBodyRules) validateParams(formats strfmt.Registry) error {

	if swag.IsZero(o.Params) { // not required
		return nil
	}

	for i := 0; i < len(o.Params); i++ {
		if swag.IsZero(o.Params[i]) { // not required
			continue
		}

		if o.Params[i] != nil {
			if err := o.Params[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("changeAlertRulesOk" + "." + "rules" + "." + "params" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ChangeAlertRulesOKBodyRules) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ChangeAlertRulesOKBodyRules) UnmarshalBinary(b []byte) error {
	var res ChangeAlertRulesOKBodyRules
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ChangeAlertRulesOKBodyRulesParamsItems0 Param repsesents a single template parameter.
swagger:model ChangeAlertRulesOKBodyRulesParamsItems0
*/
type ChangeAlertRulesOKBodyRulesParamsItems0 struct {

	// Machine-readable name (ID) that is used in expression.
	Name string `json:"name,omitempty"`

	// Human-readable parameter description.
	Help string `json:"help,omitempty"`

	// ParamUnit represents template parameter unit.
	// Enum: [PARAM_UNIT_INVALID PERCENTAGE]
	Unit *string `json:"unit,omitempty"`

	// ParamType represents template parameter type.
	// Enum: [PARAM_TYPE_INVALID FLOAT]
	Type *string `json:"type,omitempty"`

	// float
	Float *ChangeAlertRulesOKBodyRulesParamsItems0Float `json:"float,omitempty"`
}

// Validate validates this change alert rules OK body rules params items0
func (o *ChangeAlertRulesOKBodyRulesParamsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFloat(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var changeAlertRulesOkBodyRulesParamsItems0TypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PARAM_UNIT_INVALID","PERCENTAGE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		changeAlertRulesOkBodyRulesParamsItems0TypeUnitPropEnum = append(changeAlertRulesOkBodyRulesParamsItems0TypeUnitPropEnum, v)
	}
}

const (

	// ChangeAlertRulesOKBodyRulesParamsItems0UnitPARAMUNITINVALID captures enum value "PARAM_UNIT_INVALID"
	ChangeAlertRulesOKBodyRulesParamsItems0UnitPARAMUNITINVALID string = "PARAM_UNIT_INVALID"

	// ChangeAlertRulesOKBodyRulesParamsItems0UnitPERCENTAGE captures enum value "PERCENTAGE"
	ChangeAlertRulesOKBodyRulesParamsItems0UnitPERCENTAGE string = "PERCENTAGE"
)

// prop value enum
func (o *ChangeAlertRulesOKBodyRulesParamsItems0) validateUnitEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, changeAlertRulesOkBodyRulesParamsItems0TypeUnitPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *ChangeAlertRulesOKBodyRulesParamsItems0) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(o.Unit) { // not required
		return nil
	}

	// value enum
	if err := o.validateUnitEnum("unit", "body", *o.Unit); err != nil {
		return err
	}

	return nil
}

var changeAlertRulesOkBodyRulesParamsItems0TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PARAM_TYPE_INVALID","FLOAT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		changeAlertRulesOkBodyRulesParamsItems0TypeTypePropEnum = append(changeAlertRulesOkBodyRulesParamsItems0TypeTypePropEnum, v)
	}
}

const (

	// ChangeAlertRulesOKBodyRulesParamsItems0TypePARAMTYPEINVALID captures enum value "PARAM_TYPE_INVALID"
	ChangeAlertRulesOKBodyRulesParamsItems0TypePARAMTYPEINVALID string = "PARAM_TYPE_INVALID"

	// ChangeAlertRulesOKBodyRulesParamsItems0TypeFLOAT captures enum value "FLOAT"
	ChangeAlertRulesOKBodyRulesParamsItems0TypeFLOAT string = "FLOAT"
)

// prop value enum
func (o *ChangeAlertRulesOKBodyRulesParamsItems0) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, changeAlertRulesOkBodyRulesParamsItems0TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *ChangeAlertRulesOKBodyRulesParamsItems0) validateType(formats strfmt.Registry) error {

	if swag.IsZero(o.Type) { // not required
		return nil
	}

	// value enum
	if err := o.validateTypeEnum("type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

func (o *ChangeAlertRulesOKBodyRulesParamsItems0) validateFloat(formats strfmt.Registry) error {

	if swag.IsZero(o.Float) { // not required
		return nil
	}

	if o.Float != nil {
		if err := o.Float.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("float")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ChangeAlertRulesOKBodyRulesParamsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ChangeAlertRulesOKBodyRulesParamsItems0) UnmarshalBinary(b []byte) error {
	var res ChangeAlertRulesOKBodyRulesParamsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ChangeAlertRulesOKBodyRulesParamsItems0Float FloatParam represents float parameter's default value and valid range.
swagger:model ChangeAlertRulesOKBodyRulesParamsItems0Float
*/
type ChangeAlertRulesOKBodyRulesParamsItems0Float struct {

	// True if default value is set.
	HasDefault bool `json:"has_default,omitempty"`

	// Default value if has_default is true.
	Default float32 `json:"default,omitempty"`

	// True if minimal valid value is set.
	HasMin bool `json:"has_min,omitempty"`

	// Minimal valid value (inclusive) if has_min is true.
	Min float32 `json:"min,omitempty"`

	// True if maximal valid value is set.
	HasMax bool `json:"has_max,omitempty"`

	// Maximal valid value (inclusive) if has_max is true.
	Max float32 `json:"max,omitempty"`
}

// Validate validates this change alert rules OK body rules params items0 float
func (o *ChangeAlertRulesOKBodyRulesParamsItems0Float) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ChangeAlertRulesOKBodyRulesParamsItems0Float) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ChangeAlertRulesOKBodyRulesParamsItems0Float) UnmarshalBinary(b []byte) error {
	var res ChangeAlertRulesOKBodyRulesParamsItems0Float
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DetailsItems0 details items0
swagger:model DetailsItems0
*/
type DetailsItems0 struct {

	// type url
	TypeURL string `json:"type_url,omitempty"`

	// value
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this details items0
func (o *DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DetailsItems0) UnmarshalBinary(b []byte) error {
	var res DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ParamsItems0 Param repsesents a single Integrated Alerting rule parameter change.
swagger:model ParamsItems0
*/
type ParamsItems0 struct {

	// Parameter name.
	Name string `json:"name,omitempty"`

	// Parameter set value (float).
	Value float32 `json:"value,omitempty"`

	// Remove set value (reset to default).
	RemoveValue bool `json:"remove_value,omitempty"`
}

// Validate validates this params items0
func (o *ParamsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ParamsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ParamsItems0) UnmarshalBinary(b []byte) error {
	var res ParamsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
