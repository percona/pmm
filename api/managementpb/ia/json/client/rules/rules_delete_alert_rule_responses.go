// Code generated by go-swagger; DO NOT EDIT.

package rules

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// RulesDeleteAlertRuleReader is a Reader for the RulesDeleteAlertRule structure.
type RulesDeleteAlertRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RulesDeleteAlertRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRulesDeleteAlertRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewRulesDeleteAlertRuleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRulesDeleteAlertRuleOK creates a RulesDeleteAlertRuleOK with default headers values
func NewRulesDeleteAlertRuleOK() *RulesDeleteAlertRuleOK {
	return &RulesDeleteAlertRuleOK{}
}

/*RulesDeleteAlertRuleOK handles this case with default header values.

A successful response.
*/
type RulesDeleteAlertRuleOK struct {
	Payload interface{}
}

func (o *RulesDeleteAlertRuleOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/ia/Rules/Delete][%d] rulesDeleteAlertRuleOk  %+v", 200, o.Payload)
}

func (o *RulesDeleteAlertRuleOK) GetPayload() interface{} {
	return o.Payload
}

func (o *RulesDeleteAlertRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRulesDeleteAlertRuleDefault creates a RulesDeleteAlertRuleDefault with default headers values
func NewRulesDeleteAlertRuleDefault(code int) *RulesDeleteAlertRuleDefault {
	return &RulesDeleteAlertRuleDefault{
		_statusCode: code,
	}
}

/*RulesDeleteAlertRuleDefault handles this case with default header values.

An unexpected error response.
*/
type RulesDeleteAlertRuleDefault struct {
	_statusCode int

	Payload *RulesDeleteAlertRuleDefaultBody
}

// Code gets the status code for the rules delete alert rule default response
func (o *RulesDeleteAlertRuleDefault) Code() int {
	return o._statusCode
}

func (o *RulesDeleteAlertRuleDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/ia/Rules/Delete][%d] Rules_DeleteAlertRule default  %+v", o._statusCode, o.Payload)
}

func (o *RulesDeleteAlertRuleDefault) GetPayload() *RulesDeleteAlertRuleDefaultBody {
	return o.Payload
}

func (o *RulesDeleteAlertRuleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RulesDeleteAlertRuleDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*RulesDeleteAlertRuleBody rules delete alert rule body
swagger:model RulesDeleteAlertRuleBody
*/
type RulesDeleteAlertRuleBody struct {

	// Rule ID.
	RuleID string `json:"rule_id,omitempty"`
}

// Validate validates this rules delete alert rule body
func (o *RulesDeleteAlertRuleBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RulesDeleteAlertRuleBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RulesDeleteAlertRuleBody) UnmarshalBinary(b []byte) error {
	var res RulesDeleteAlertRuleBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RulesDeleteAlertRuleDefaultBody rules delete alert rule default body
swagger:model RulesDeleteAlertRuleDefaultBody
*/
type RulesDeleteAlertRuleDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this rules delete alert rule default body
func (o *RulesDeleteAlertRuleDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RulesDeleteAlertRuleDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Rules_DeleteAlertRule default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *RulesDeleteAlertRuleDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RulesDeleteAlertRuleDefaultBody) UnmarshalBinary(b []byte) error {
	var res RulesDeleteAlertRuleDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
