// Code generated by go-swagger; DO NOT EDIT.

package alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AlertsToggleAlertsReader is a Reader for the AlertsToggleAlerts structure.
type AlertsToggleAlertsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AlertsToggleAlertsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAlertsToggleAlertsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAlertsToggleAlertsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAlertsToggleAlertsOK creates a AlertsToggleAlertsOK with default headers values
func NewAlertsToggleAlertsOK() *AlertsToggleAlertsOK {
	return &AlertsToggleAlertsOK{}
}

/*AlertsToggleAlertsOK handles this case with default header values.

A successful response.
*/
type AlertsToggleAlertsOK struct {
	Payload interface{}
}

func (o *AlertsToggleAlertsOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/ia/Alerts/Toggle][%d] alertsToggleAlertsOk  %+v", 200, o.Payload)
}

func (o *AlertsToggleAlertsOK) GetPayload() interface{} {
	return o.Payload
}

func (o *AlertsToggleAlertsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAlertsToggleAlertsDefault creates a AlertsToggleAlertsDefault with default headers values
func NewAlertsToggleAlertsDefault(code int) *AlertsToggleAlertsDefault {
	return &AlertsToggleAlertsDefault{
		_statusCode: code,
	}
}

/*AlertsToggleAlertsDefault handles this case with default header values.

An unexpected error response.
*/
type AlertsToggleAlertsDefault struct {
	_statusCode int

	Payload *AlertsToggleAlertsDefaultBody
}

// Code gets the status code for the alerts toggle alerts default response
func (o *AlertsToggleAlertsDefault) Code() int {
	return o._statusCode
}

func (o *AlertsToggleAlertsDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/ia/Alerts/Toggle][%d] Alerts_ToggleAlerts default  %+v", o._statusCode, o.Payload)
}

func (o *AlertsToggleAlertsDefault) GetPayload() *AlertsToggleAlertsDefaultBody {
	return o.Payload
}

func (o *AlertsToggleAlertsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AlertsToggleAlertsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*AlertsToggleAlertsBody alerts toggle alerts body
swagger:model AlertsToggleAlertsBody
*/
type AlertsToggleAlertsBody struct {

	// List of alerts that silence state should be switched. If provided array is empty than all
	// existing alerts are switched.
	AlertIds []string `json:"alert_ids"`

	// BooleanFlag represent a command to set some boolean property to true,
	// to false, or avoid changing that property.
	//
	//  - DO_NOT_CHANGE: Do not change boolean property. Default value.
	//  - TRUE: True.
	//  - FALSE: False.
	// Enum: [DO_NOT_CHANGE TRUE FALSE]
	Silenced *string `json:"silenced,omitempty"`
}

// Validate validates this alerts toggle alerts body
func (o *AlertsToggleAlertsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSilenced(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var alertsToggleAlertsBodyTypeSilencedPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DO_NOT_CHANGE","TRUE","FALSE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertsToggleAlertsBodyTypeSilencedPropEnum = append(alertsToggleAlertsBodyTypeSilencedPropEnum, v)
	}
}

const (

	// AlertsToggleAlertsBodySilencedDONOTCHANGE captures enum value "DO_NOT_CHANGE"
	AlertsToggleAlertsBodySilencedDONOTCHANGE string = "DO_NOT_CHANGE"

	// AlertsToggleAlertsBodySilencedTRUE captures enum value "TRUE"
	AlertsToggleAlertsBodySilencedTRUE string = "TRUE"

	// AlertsToggleAlertsBodySilencedFALSE captures enum value "FALSE"
	AlertsToggleAlertsBodySilencedFALSE string = "FALSE"
)

// prop value enum
func (o *AlertsToggleAlertsBody) validateSilencedEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, alertsToggleAlertsBodyTypeSilencedPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *AlertsToggleAlertsBody) validateSilenced(formats strfmt.Registry) error {

	if swag.IsZero(o.Silenced) { // not required
		return nil
	}

	// value enum
	if err := o.validateSilencedEnum("body"+"."+"silenced", "body", *o.Silenced); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AlertsToggleAlertsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsToggleAlertsBody) UnmarshalBinary(b []byte) error {
	var res AlertsToggleAlertsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsToggleAlertsDefaultBody alerts toggle alerts default body
swagger:model AlertsToggleAlertsDefaultBody
*/
type AlertsToggleAlertsDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this alerts toggle alerts default body
func (o *AlertsToggleAlertsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AlertsToggleAlertsDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Alerts_ToggleAlerts default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *AlertsToggleAlertsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsToggleAlertsDefaultBody) UnmarshalBinary(b []byte) error {
	var res AlertsToggleAlertsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
