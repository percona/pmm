// Code generated by go-swagger; DO NOT EDIT.

package alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ListAlertsReader is a Reader for the ListAlerts structure.
type ListAlertsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAlertsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListAlertsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListAlertsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListAlertsOK creates a ListAlertsOK with default headers values
func NewListAlertsOK() *ListAlertsOK {
	return &ListAlertsOK{}
}

/*ListAlertsOK handles this case with default header values.

A successful response.
*/
type ListAlertsOK struct {
	Payload *ListAlertsOKBody
}

func (o *ListAlertsOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/ia/Alerts/List][%d] listAlertsOk  %+v", 200, o.Payload)
}

func (o *ListAlertsOK) GetPayload() *ListAlertsOKBody {
	return o.Payload
}

func (o *ListAlertsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListAlertsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAlertsDefault creates a ListAlertsDefault with default headers values
func NewListAlertsDefault(code int) *ListAlertsDefault {
	return &ListAlertsDefault{
		_statusCode: code,
	}
}

/*ListAlertsDefault handles this case with default header values.

An unexpected error response.
*/
type ListAlertsDefault struct {
	_statusCode int

	Payload *ListAlertsDefaultBody
}

// Code gets the status code for the list alerts default response
func (o *ListAlertsDefault) Code() int {
	return o._statusCode
}

func (o *ListAlertsDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/ia/Alerts/List][%d] ListAlerts default  %+v", o._statusCode, o.Payload)
}

func (o *ListAlertsDefault) GetPayload() *ListAlertsDefaultBody {
	return o.Payload
}

func (o *ListAlertsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ListAlertsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*AlertsItems0 Alert represents Alert.
swagger:model AlertsItems0
*/
type AlertsItems0 struct {

	// ID.
	AlertID string `json:"alert_id,omitempty"`

	// Human-readable summary.
	Summary string `json:"summary,omitempty"`

	// Severity represents severity level of the check result or alert.
	// Enum: [SEVERITY_INVALID SEVERITY_EMERGENCY SEVERITY_ALERT SEVERITY_CRITICAL SEVERITY_ERROR SEVERITY_WARNING SEVERITY_NOTICE SEVERITY_INFO SEVERITY_DEBUG]
	Severity *string `json:"severity,omitempty"`

	// Status represents Alert Rule's and Alert's combined status.
	//
	//  - CLEAR: No alert.
	//  - PENDING: Pending, but not triggering alert.
	//  - TRIGGERING: Triggering (firing) alert.
	//  - SILENCED: Silenced alert.
	// Enum: [STATUS_INVALID CLEAR PENDING TRIGGERING SILENCED]
	Status *string `json:"status,omitempty"`

	// Combined labels.
	Labels map[string]string `json:"labels,omitempty"`

	// Alert creation time.
	// Format: date-time
	CreatedAt strfmt.DateTime `json:"created_at,omitempty"`

	// Alert last update time.
	// Format: date-time
	UpdatedAt strfmt.DateTime `json:"updated_at,omitempty"`

	// rule
	Rule *AlertsItems0Rule `json:"rule,omitempty"`
}

// Validate validates this alerts items0
func (o *AlertsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSeverity(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateUpdatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRule(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var alertsItems0TypeSeverityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SEVERITY_INVALID","SEVERITY_EMERGENCY","SEVERITY_ALERT","SEVERITY_CRITICAL","SEVERITY_ERROR","SEVERITY_WARNING","SEVERITY_NOTICE","SEVERITY_INFO","SEVERITY_DEBUG"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertsItems0TypeSeverityPropEnum = append(alertsItems0TypeSeverityPropEnum, v)
	}
}

const (

	// AlertsItems0SeveritySEVERITYINVALID captures enum value "SEVERITY_INVALID"
	AlertsItems0SeveritySEVERITYINVALID string = "SEVERITY_INVALID"

	// AlertsItems0SeveritySEVERITYEMERGENCY captures enum value "SEVERITY_EMERGENCY"
	AlertsItems0SeveritySEVERITYEMERGENCY string = "SEVERITY_EMERGENCY"

	// AlertsItems0SeveritySEVERITYALERT captures enum value "SEVERITY_ALERT"
	AlertsItems0SeveritySEVERITYALERT string = "SEVERITY_ALERT"

	// AlertsItems0SeveritySEVERITYCRITICAL captures enum value "SEVERITY_CRITICAL"
	AlertsItems0SeveritySEVERITYCRITICAL string = "SEVERITY_CRITICAL"

	// AlertsItems0SeveritySEVERITYERROR captures enum value "SEVERITY_ERROR"
	AlertsItems0SeveritySEVERITYERROR string = "SEVERITY_ERROR"

	// AlertsItems0SeveritySEVERITYWARNING captures enum value "SEVERITY_WARNING"
	AlertsItems0SeveritySEVERITYWARNING string = "SEVERITY_WARNING"

	// AlertsItems0SeveritySEVERITYNOTICE captures enum value "SEVERITY_NOTICE"
	AlertsItems0SeveritySEVERITYNOTICE string = "SEVERITY_NOTICE"

	// AlertsItems0SeveritySEVERITYINFO captures enum value "SEVERITY_INFO"
	AlertsItems0SeveritySEVERITYINFO string = "SEVERITY_INFO"

	// AlertsItems0SeveritySEVERITYDEBUG captures enum value "SEVERITY_DEBUG"
	AlertsItems0SeveritySEVERITYDEBUG string = "SEVERITY_DEBUG"
)

// prop value enum
func (o *AlertsItems0) validateSeverityEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, alertsItems0TypeSeverityPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *AlertsItems0) validateSeverity(formats strfmt.Registry) error {

	if swag.IsZero(o.Severity) { // not required
		return nil
	}

	// value enum
	if err := o.validateSeverityEnum("severity", "body", *o.Severity); err != nil {
		return err
	}

	return nil
}

var alertsItems0TypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["STATUS_INVALID","CLEAR","PENDING","TRIGGERING","SILENCED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertsItems0TypeStatusPropEnum = append(alertsItems0TypeStatusPropEnum, v)
	}
}

const (

	// AlertsItems0StatusSTATUSINVALID captures enum value "STATUS_INVALID"
	AlertsItems0StatusSTATUSINVALID string = "STATUS_INVALID"

	// AlertsItems0StatusCLEAR captures enum value "CLEAR"
	AlertsItems0StatusCLEAR string = "CLEAR"

	// AlertsItems0StatusPENDING captures enum value "PENDING"
	AlertsItems0StatusPENDING string = "PENDING"

	// AlertsItems0StatusTRIGGERING captures enum value "TRIGGERING"
	AlertsItems0StatusTRIGGERING string = "TRIGGERING"

	// AlertsItems0StatusSILENCED captures enum value "SILENCED"
	AlertsItems0StatusSILENCED string = "SILENCED"
)

// prop value enum
func (o *AlertsItems0) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, alertsItems0TypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *AlertsItems0) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("status", "body", *o.Status); err != nil {
		return err
	}

	return nil
}

func (o *AlertsItems0) validateCreatedAt(formats strfmt.Registry) error {

	if swag.IsZero(o.CreatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("created_at", "body", "date-time", o.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *AlertsItems0) validateUpdatedAt(formats strfmt.Registry) error {

	if swag.IsZero(o.UpdatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("updated_at", "body", "date-time", o.UpdatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *AlertsItems0) validateRule(formats strfmt.Registry) error {

	if swag.IsZero(o.Rule) { // not required
		return nil
	}

	if o.Rule != nil {
		if err := o.Rule.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("rule")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0) UnmarshalBinary(b []byte) error {
	var res AlertsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0Rule Rule represents Alert Rule.
swagger:model AlertsItems0Rule
*/
type AlertsItems0Rule struct {

	// Rule ID.
	RuleID string `json:"rule_id,omitempty"`

	// True if that rule is disabled.
	Disabled bool `json:"disabled,omitempty"`

	// Rule human-readable summary.
	Summary string `json:"summary,omitempty"`

	// Rule parameters.
	Params []*AlertsItems0RuleParamsItems0 `json:"params"`

	// Rule duration.
	For string `json:"for,omitempty"`

	// Severity represents severity level of the check result or alert.
	// Enum: [SEVERITY_INVALID SEVERITY_EMERGENCY SEVERITY_ALERT SEVERITY_CRITICAL SEVERITY_ERROR SEVERITY_WARNING SEVERITY_NOTICE SEVERITY_INFO SEVERITY_DEBUG]
	Severity *string `json:"severity,omitempty"`

	// Custom labels.
	CustomLabels map[string]string `json:"custom_labels,omitempty"`

	// Filters.
	Filters []*AlertsItems0RuleFiltersItems0 `json:"filters"`

	// Channels.
	Channels []*AlertsItems0RuleChannelsItems0 `json:"channels"`

	// Rule creation time.
	// Format: date-time
	CreatedAt strfmt.DateTime `json:"created_at,omitempty"`

	// Template expression with rule parameters.
	Expr string `json:"expr,omitempty"`

	// template
	Template *AlertsItems0RuleTemplate `json:"template,omitempty"`
}

// Validate validates this alerts items0 rule
func (o *AlertsItems0Rule) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParams(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSeverity(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFilters(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateChannels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTemplate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AlertsItems0Rule) validateParams(formats strfmt.Registry) error {

	if swag.IsZero(o.Params) { // not required
		return nil
	}

	for i := 0; i < len(o.Params); i++ {
		if swag.IsZero(o.Params[i]) { // not required
			continue
		}

		if o.Params[i] != nil {
			if err := o.Params[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rule" + "." + "params" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var alertsItems0RuleTypeSeverityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SEVERITY_INVALID","SEVERITY_EMERGENCY","SEVERITY_ALERT","SEVERITY_CRITICAL","SEVERITY_ERROR","SEVERITY_WARNING","SEVERITY_NOTICE","SEVERITY_INFO","SEVERITY_DEBUG"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertsItems0RuleTypeSeverityPropEnum = append(alertsItems0RuleTypeSeverityPropEnum, v)
	}
}

const (

	// AlertsItems0RuleSeveritySEVERITYINVALID captures enum value "SEVERITY_INVALID"
	AlertsItems0RuleSeveritySEVERITYINVALID string = "SEVERITY_INVALID"

	// AlertsItems0RuleSeveritySEVERITYEMERGENCY captures enum value "SEVERITY_EMERGENCY"
	AlertsItems0RuleSeveritySEVERITYEMERGENCY string = "SEVERITY_EMERGENCY"

	// AlertsItems0RuleSeveritySEVERITYALERT captures enum value "SEVERITY_ALERT"
	AlertsItems0RuleSeveritySEVERITYALERT string = "SEVERITY_ALERT"

	// AlertsItems0RuleSeveritySEVERITYCRITICAL captures enum value "SEVERITY_CRITICAL"
	AlertsItems0RuleSeveritySEVERITYCRITICAL string = "SEVERITY_CRITICAL"

	// AlertsItems0RuleSeveritySEVERITYERROR captures enum value "SEVERITY_ERROR"
	AlertsItems0RuleSeveritySEVERITYERROR string = "SEVERITY_ERROR"

	// AlertsItems0RuleSeveritySEVERITYWARNING captures enum value "SEVERITY_WARNING"
	AlertsItems0RuleSeveritySEVERITYWARNING string = "SEVERITY_WARNING"

	// AlertsItems0RuleSeveritySEVERITYNOTICE captures enum value "SEVERITY_NOTICE"
	AlertsItems0RuleSeveritySEVERITYNOTICE string = "SEVERITY_NOTICE"

	// AlertsItems0RuleSeveritySEVERITYINFO captures enum value "SEVERITY_INFO"
	AlertsItems0RuleSeveritySEVERITYINFO string = "SEVERITY_INFO"

	// AlertsItems0RuleSeveritySEVERITYDEBUG captures enum value "SEVERITY_DEBUG"
	AlertsItems0RuleSeveritySEVERITYDEBUG string = "SEVERITY_DEBUG"
)

// prop value enum
func (o *AlertsItems0Rule) validateSeverityEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, alertsItems0RuleTypeSeverityPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *AlertsItems0Rule) validateSeverity(formats strfmt.Registry) error {

	if swag.IsZero(o.Severity) { // not required
		return nil
	}

	// value enum
	if err := o.validateSeverityEnum("rule"+"."+"severity", "body", *o.Severity); err != nil {
		return err
	}

	return nil
}

func (o *AlertsItems0Rule) validateFilters(formats strfmt.Registry) error {

	if swag.IsZero(o.Filters) { // not required
		return nil
	}

	for i := 0; i < len(o.Filters); i++ {
		if swag.IsZero(o.Filters[i]) { // not required
			continue
		}

		if o.Filters[i] != nil {
			if err := o.Filters[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rule" + "." + "filters" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *AlertsItems0Rule) validateChannels(formats strfmt.Registry) error {

	if swag.IsZero(o.Channels) { // not required
		return nil
	}

	for i := 0; i < len(o.Channels); i++ {
		if swag.IsZero(o.Channels[i]) { // not required
			continue
		}

		if o.Channels[i] != nil {
			if err := o.Channels[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rule" + "." + "channels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *AlertsItems0Rule) validateCreatedAt(formats strfmt.Registry) error {

	if swag.IsZero(o.CreatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("rule"+"."+"created_at", "body", "date-time", o.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *AlertsItems0Rule) validateTemplate(formats strfmt.Registry) error {

	if swag.IsZero(o.Template) { // not required
		return nil
	}

	if o.Template != nil {
		if err := o.Template.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("rule" + "." + "template")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0Rule) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0Rule) UnmarshalBinary(b []byte) error {
	var res AlertsItems0Rule
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleChannelsItems0 Channel represents a single Notification Channel.
swagger:model AlertsItems0RuleChannelsItems0
*/
type AlertsItems0RuleChannelsItems0 struct {

	// Machine-readable ID.
	ChannelID string `json:"channel_id,omitempty"`

	// Short human-readable summary.
	Summary string `json:"summary,omitempty"`

	// True if that channel is disabled.
	Disabled bool `json:"disabled,omitempty"`

	// email config
	EmailConfig *AlertsItems0RuleChannelsItems0EmailConfig `json:"email_config,omitempty"`

	// pagerduty config
	PagerdutyConfig *AlertsItems0RuleChannelsItems0PagerdutyConfig `json:"pagerduty_config,omitempty"`

	// slack config
	SlackConfig *AlertsItems0RuleChannelsItems0SlackConfig `json:"slack_config,omitempty"`

	// webhook config
	WebhookConfig *AlertsItems0RuleChannelsItems0WebhookConfig `json:"webhook_config,omitempty"`
}

// Validate validates this alerts items0 rule channels items0
func (o *AlertsItems0RuleChannelsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateEmailConfig(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePagerdutyConfig(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSlackConfig(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateWebhookConfig(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AlertsItems0RuleChannelsItems0) validateEmailConfig(formats strfmt.Registry) error {

	if swag.IsZero(o.EmailConfig) { // not required
		return nil
	}

	if o.EmailConfig != nil {
		if err := o.EmailConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("email_config")
			}
			return err
		}
	}

	return nil
}

func (o *AlertsItems0RuleChannelsItems0) validatePagerdutyConfig(formats strfmt.Registry) error {

	if swag.IsZero(o.PagerdutyConfig) { // not required
		return nil
	}

	if o.PagerdutyConfig != nil {
		if err := o.PagerdutyConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pagerduty_config")
			}
			return err
		}
	}

	return nil
}

func (o *AlertsItems0RuleChannelsItems0) validateSlackConfig(formats strfmt.Registry) error {

	if swag.IsZero(o.SlackConfig) { // not required
		return nil
	}

	if o.SlackConfig != nil {
		if err := o.SlackConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("slack_config")
			}
			return err
		}
	}

	return nil
}

func (o *AlertsItems0RuleChannelsItems0) validateWebhookConfig(formats strfmt.Registry) error {

	if swag.IsZero(o.WebhookConfig) { // not required
		return nil
	}

	if o.WebhookConfig != nil {
		if err := o.WebhookConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("webhook_config")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleChannelsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleChannelsItems0EmailConfig EmailConfig represents email configuration.
swagger:model AlertsItems0RuleChannelsItems0EmailConfig
*/
type AlertsItems0RuleChannelsItems0EmailConfig struct {

	// send resolved
	SendResolved bool `json:"send_resolved,omitempty"`

	// to
	To []string `json:"to"`
}

// Validate validates this alerts items0 rule channels items0 email config
func (o *AlertsItems0RuleChannelsItems0EmailConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0EmailConfig) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0EmailConfig) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleChannelsItems0EmailConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleChannelsItems0PagerdutyConfig PagerDutyConfig represents PagerDuty configuration.
swagger:model AlertsItems0RuleChannelsItems0PagerdutyConfig
*/
type AlertsItems0RuleChannelsItems0PagerdutyConfig struct {

	// send resolved
	SendResolved bool `json:"send_resolved,omitempty"`

	// The PagerDuty key for "Events API v2" integration type. Exactly one key should be set.
	RoutingKey string `json:"routing_key,omitempty"`

	// The PagerDuty key for "Prometheus" integration type. Exactly one key should be set.
	ServiceKey string `json:"service_key,omitempty"`
}

// Validate validates this alerts items0 rule channels items0 pagerduty config
func (o *AlertsItems0RuleChannelsItems0PagerdutyConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0PagerdutyConfig) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0PagerdutyConfig) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleChannelsItems0PagerdutyConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleChannelsItems0SlackConfig SlackConfig represents Slack configuration.
swagger:model AlertsItems0RuleChannelsItems0SlackConfig
*/
type AlertsItems0RuleChannelsItems0SlackConfig struct {

	// send resolved
	SendResolved bool `json:"send_resolved,omitempty"`

	// channel
	Channel string `json:"channel,omitempty"`
}

// Validate validates this alerts items0 rule channels items0 slack config
func (o *AlertsItems0RuleChannelsItems0SlackConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0SlackConfig) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0SlackConfig) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleChannelsItems0SlackConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleChannelsItems0WebhookConfig WebhookConfig represents webhook configuration.
swagger:model AlertsItems0RuleChannelsItems0WebhookConfig
*/
type AlertsItems0RuleChannelsItems0WebhookConfig struct {

	// send resolved
	SendResolved bool `json:"send_resolved,omitempty"`

	// url
	URL string `json:"url,omitempty"`

	// max alerts
	MaxAlerts int32 `json:"max_alerts,omitempty"`

	// http config
	HTTPConfig *AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfig `json:"http_config,omitempty"`
}

// Validate validates this alerts items0 rule channels items0 webhook config
func (o *AlertsItems0RuleChannelsItems0WebhookConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHTTPConfig(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AlertsItems0RuleChannelsItems0WebhookConfig) validateHTTPConfig(formats strfmt.Registry) error {

	if swag.IsZero(o.HTTPConfig) { // not required
		return nil
	}

	if o.HTTPConfig != nil {
		if err := o.HTTPConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("webhook_config" + "." + "http_config")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0WebhookConfig) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0WebhookConfig) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleChannelsItems0WebhookConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfig HTTPConfig represents HTTP client configuration.
swagger:model AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfig
*/
type AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfig struct {

	// bearer token
	BearerToken string `json:"bearer_token,omitempty"`

	// bearer token file
	BearerTokenFile string `json:"bearer_token_file,omitempty"`

	// proxy url
	ProxyURL string `json:"proxy_url,omitempty"`

	// basic auth
	BasicAuth *AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigBasicAuth `json:"basic_auth,omitempty"`

	// tls config
	TLSConfig *AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigTLSConfig `json:"tls_config,omitempty"`
}

// Validate validates this alerts items0 rule channels items0 webhook config HTTP config
func (o *AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfig) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBasicAuth(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateTLSConfig(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfig) validateBasicAuth(formats strfmt.Registry) error {

	if swag.IsZero(o.BasicAuth) { // not required
		return nil
	}

	if o.BasicAuth != nil {
		if err := o.BasicAuth.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("webhook_config" + "." + "http_config" + "." + "basic_auth")
			}
			return err
		}
	}

	return nil
}

func (o *AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfig) validateTLSConfig(formats strfmt.Registry) error {

	if swag.IsZero(o.TLSConfig) { // not required
		return nil
	}

	if o.TLSConfig != nil {
		if err := o.TLSConfig.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("webhook_config" + "." + "http_config" + "." + "tls_config")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfig) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfig) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigBasicAuth BasicAuth represents basic HTTP auth configuration.
swagger:model AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigBasicAuth
*/
type AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigBasicAuth struct {

	// username
	Username string `json:"username,omitempty"`

	// password
	Password string `json:"password,omitempty"`

	// password file
	PasswordFile string `json:"password_file,omitempty"`
}

// Validate validates this alerts items0 rule channels items0 webhook config HTTP config basic auth
func (o *AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigBasicAuth) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigBasicAuth) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigBasicAuth) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigBasicAuth
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigTLSConfig TLSConfig represents TLS configuration.
swagger:model AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigTLSConfig
*/
type AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigTLSConfig struct {

	// ca file
	CaFile string `json:"ca_file,omitempty"`

	// cert file
	CertFile string `json:"cert_file,omitempty"`

	// key file
	KeyFile string `json:"key_file,omitempty"`

	// server name
	ServerName string `json:"server_name,omitempty"`

	// insecure skip verify
	InsecureSkipVerify bool `json:"insecure_skip_verify,omitempty"`
}

// Validate validates this alerts items0 rule channels items0 webhook config HTTP config TLS config
func (o *AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigTLSConfig) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigTLSConfig) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigTLSConfig) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleChannelsItems0WebhookConfigHTTPConfigTLSConfig
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleFiltersItems0 Filter repsents a single filter condition.
swagger:model AlertsItems0RuleFiltersItems0
*/
type AlertsItems0RuleFiltersItems0 struct {

	// FilterType represents filter matching type.
	//
	//  - EQUAL: =
	//  - REGEX: =~
	// Enum: [FILTER_TYPE_INVALID EQUAL REGEX]
	Type *string `json:"type,omitempty"`

	// key
	Key string `json:"key,omitempty"`

	// value
	Value string `json:"value,omitempty"`
}

// Validate validates this alerts items0 rule filters items0
func (o *AlertsItems0RuleFiltersItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var alertsItems0RuleFiltersItems0TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["FILTER_TYPE_INVALID","EQUAL","REGEX"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertsItems0RuleFiltersItems0TypeTypePropEnum = append(alertsItems0RuleFiltersItems0TypeTypePropEnum, v)
	}
}

const (

	// AlertsItems0RuleFiltersItems0TypeFILTERTYPEINVALID captures enum value "FILTER_TYPE_INVALID"
	AlertsItems0RuleFiltersItems0TypeFILTERTYPEINVALID string = "FILTER_TYPE_INVALID"

	// AlertsItems0RuleFiltersItems0TypeEQUAL captures enum value "EQUAL"
	AlertsItems0RuleFiltersItems0TypeEQUAL string = "EQUAL"

	// AlertsItems0RuleFiltersItems0TypeREGEX captures enum value "REGEX"
	AlertsItems0RuleFiltersItems0TypeREGEX string = "REGEX"
)

// prop value enum
func (o *AlertsItems0RuleFiltersItems0) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, alertsItems0RuleFiltersItems0TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *AlertsItems0RuleFiltersItems0) validateType(formats strfmt.Registry) error {

	if swag.IsZero(o.Type) { // not required
		return nil
	}

	// value enum
	if err := o.validateTypeEnum("type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleFiltersItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleFiltersItems0) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleFiltersItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleParamsItems0 RuleParam represents a single rule parameter for List, Change and Update APIs.
swagger:model AlertsItems0RuleParamsItems0
*/
type AlertsItems0RuleParamsItems0 struct {

	// Machine-readable name (ID) that is used in expression.
	Name string `json:"name,omitempty"`

	// ParamType represents template parameter type.
	// Enum: [PARAM_TYPE_INVALID BOOL FLOAT STRING]
	Type *string `json:"type,omitempty"`

	// Bool value.
	Bool bool `json:"bool,omitempty"`

	// Float value.
	Float float32 `json:"float,omitempty"`

	// String value.
	String string `json:"string,omitempty"`
}

// Validate validates this alerts items0 rule params items0
func (o *AlertsItems0RuleParamsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var alertsItems0RuleParamsItems0TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PARAM_TYPE_INVALID","BOOL","FLOAT","STRING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertsItems0RuleParamsItems0TypeTypePropEnum = append(alertsItems0RuleParamsItems0TypeTypePropEnum, v)
	}
}

const (

	// AlertsItems0RuleParamsItems0TypePARAMTYPEINVALID captures enum value "PARAM_TYPE_INVALID"
	AlertsItems0RuleParamsItems0TypePARAMTYPEINVALID string = "PARAM_TYPE_INVALID"

	// AlertsItems0RuleParamsItems0TypeBOOL captures enum value "BOOL"
	AlertsItems0RuleParamsItems0TypeBOOL string = "BOOL"

	// AlertsItems0RuleParamsItems0TypeFLOAT captures enum value "FLOAT"
	AlertsItems0RuleParamsItems0TypeFLOAT string = "FLOAT"

	// AlertsItems0RuleParamsItems0TypeSTRING captures enum value "STRING"
	AlertsItems0RuleParamsItems0TypeSTRING string = "STRING"
)

// prop value enum
func (o *AlertsItems0RuleParamsItems0) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, alertsItems0RuleParamsItems0TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *AlertsItems0RuleParamsItems0) validateType(formats strfmt.Registry) error {

	if swag.IsZero(o.Type) { // not required
		return nil
	}

	// value enum
	if err := o.validateTypeEnum("type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleParamsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleParamsItems0) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleParamsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleTemplate Template represents Alert Template that is used to create Alert Rule.
swagger:model AlertsItems0RuleTemplate
*/
type AlertsItems0RuleTemplate struct {

	// Machine-readable name (ID).
	Name string `json:"name,omitempty"`

	// Short human-readable summary.
	Summary string `json:"summary,omitempty"`

	// PromQL query expression with templating parameters.
	Expr string `json:"expr,omitempty"`

	// Query templating parameters.
	Params []*AlertsItems0RuleTemplateParamsItems0 `json:"params"`

	// Default duration value.
	For string `json:"for,omitempty"`

	// Severity represents severity level of the check result or alert.
	// Enum: [SEVERITY_INVALID SEVERITY_EMERGENCY SEVERITY_ALERT SEVERITY_CRITICAL SEVERITY_ERROR SEVERITY_WARNING SEVERITY_NOTICE SEVERITY_INFO SEVERITY_DEBUG]
	Severity *string `json:"severity,omitempty"`

	// Labels.
	Labels map[string]string `json:"labels,omitempty"`

	// Annotations.
	Annotations map[string]string `json:"annotations,omitempty"`

	// TemplateSource defines template source.
	//
	//  - BUILT_IN: Template that is shipped with PMM Server releases.
	//  - SAAS: Template that is downloaded from check.percona.com.
	//  - USER_FILE: Templated loaded from user-suplied file.
	//  - USER_API: Templated created via API.
	// Enum: [TEMPLATE_SOURCE_INVALID BUILT_IN SAAS USER_FILE USER_API]
	Source *string `json:"source,omitempty"`

	// Template creation time. Empty for built-in and SaaS templates.
	// Format: date-time
	CreatedAt strfmt.DateTime `json:"created_at,omitempty"`

	// YAML (or JSON) template file content. Empty for built-in and SaaS templates.
	Yaml string `json:"yaml,omitempty"`
}

// Validate validates this alerts items0 rule template
func (o *AlertsItems0RuleTemplate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParams(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSeverity(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSource(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AlertsItems0RuleTemplate) validateParams(formats strfmt.Registry) error {

	if swag.IsZero(o.Params) { // not required
		return nil
	}

	for i := 0; i < len(o.Params); i++ {
		if swag.IsZero(o.Params[i]) { // not required
			continue
		}

		if o.Params[i] != nil {
			if err := o.Params[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("rule" + "." + "template" + "." + "params" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

var alertsItems0RuleTemplateTypeSeverityPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SEVERITY_INVALID","SEVERITY_EMERGENCY","SEVERITY_ALERT","SEVERITY_CRITICAL","SEVERITY_ERROR","SEVERITY_WARNING","SEVERITY_NOTICE","SEVERITY_INFO","SEVERITY_DEBUG"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertsItems0RuleTemplateTypeSeverityPropEnum = append(alertsItems0RuleTemplateTypeSeverityPropEnum, v)
	}
}

const (

	// AlertsItems0RuleTemplateSeveritySEVERITYINVALID captures enum value "SEVERITY_INVALID"
	AlertsItems0RuleTemplateSeveritySEVERITYINVALID string = "SEVERITY_INVALID"

	// AlertsItems0RuleTemplateSeveritySEVERITYEMERGENCY captures enum value "SEVERITY_EMERGENCY"
	AlertsItems0RuleTemplateSeveritySEVERITYEMERGENCY string = "SEVERITY_EMERGENCY"

	// AlertsItems0RuleTemplateSeveritySEVERITYALERT captures enum value "SEVERITY_ALERT"
	AlertsItems0RuleTemplateSeveritySEVERITYALERT string = "SEVERITY_ALERT"

	// AlertsItems0RuleTemplateSeveritySEVERITYCRITICAL captures enum value "SEVERITY_CRITICAL"
	AlertsItems0RuleTemplateSeveritySEVERITYCRITICAL string = "SEVERITY_CRITICAL"

	// AlertsItems0RuleTemplateSeveritySEVERITYERROR captures enum value "SEVERITY_ERROR"
	AlertsItems0RuleTemplateSeveritySEVERITYERROR string = "SEVERITY_ERROR"

	// AlertsItems0RuleTemplateSeveritySEVERITYWARNING captures enum value "SEVERITY_WARNING"
	AlertsItems0RuleTemplateSeveritySEVERITYWARNING string = "SEVERITY_WARNING"

	// AlertsItems0RuleTemplateSeveritySEVERITYNOTICE captures enum value "SEVERITY_NOTICE"
	AlertsItems0RuleTemplateSeveritySEVERITYNOTICE string = "SEVERITY_NOTICE"

	// AlertsItems0RuleTemplateSeveritySEVERITYINFO captures enum value "SEVERITY_INFO"
	AlertsItems0RuleTemplateSeveritySEVERITYINFO string = "SEVERITY_INFO"

	// AlertsItems0RuleTemplateSeveritySEVERITYDEBUG captures enum value "SEVERITY_DEBUG"
	AlertsItems0RuleTemplateSeveritySEVERITYDEBUG string = "SEVERITY_DEBUG"
)

// prop value enum
func (o *AlertsItems0RuleTemplate) validateSeverityEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, alertsItems0RuleTemplateTypeSeverityPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *AlertsItems0RuleTemplate) validateSeverity(formats strfmt.Registry) error {

	if swag.IsZero(o.Severity) { // not required
		return nil
	}

	// value enum
	if err := o.validateSeverityEnum("rule"+"."+"template"+"."+"severity", "body", *o.Severity); err != nil {
		return err
	}

	return nil
}

var alertsItems0RuleTemplateTypeSourcePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["TEMPLATE_SOURCE_INVALID","BUILT_IN","SAAS","USER_FILE","USER_API"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertsItems0RuleTemplateTypeSourcePropEnum = append(alertsItems0RuleTemplateTypeSourcePropEnum, v)
	}
}

const (

	// AlertsItems0RuleTemplateSourceTEMPLATESOURCEINVALID captures enum value "TEMPLATE_SOURCE_INVALID"
	AlertsItems0RuleTemplateSourceTEMPLATESOURCEINVALID string = "TEMPLATE_SOURCE_INVALID"

	// AlertsItems0RuleTemplateSourceBUILTIN captures enum value "BUILT_IN"
	AlertsItems0RuleTemplateSourceBUILTIN string = "BUILT_IN"

	// AlertsItems0RuleTemplateSourceSAAS captures enum value "SAAS"
	AlertsItems0RuleTemplateSourceSAAS string = "SAAS"

	// AlertsItems0RuleTemplateSourceUSERFILE captures enum value "USER_FILE"
	AlertsItems0RuleTemplateSourceUSERFILE string = "USER_FILE"

	// AlertsItems0RuleTemplateSourceUSERAPI captures enum value "USER_API"
	AlertsItems0RuleTemplateSourceUSERAPI string = "USER_API"
)

// prop value enum
func (o *AlertsItems0RuleTemplate) validateSourceEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, alertsItems0RuleTemplateTypeSourcePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *AlertsItems0RuleTemplate) validateSource(formats strfmt.Registry) error {

	if swag.IsZero(o.Source) { // not required
		return nil
	}

	// value enum
	if err := o.validateSourceEnum("rule"+"."+"template"+"."+"source", "body", *o.Source); err != nil {
		return err
	}

	return nil
}

func (o *AlertsItems0RuleTemplate) validateCreatedAt(formats strfmt.Registry) error {

	if swag.IsZero(o.CreatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("rule"+"."+"template"+"."+"created_at", "body", "date-time", o.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleTemplate) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleTemplate) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleTemplate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleTemplateParamsItems0 TemplateParam represents a single template parameter.
swagger:model AlertsItems0RuleTemplateParamsItems0
*/
type AlertsItems0RuleTemplateParamsItems0 struct {

	// Machine-readable name (ID) that is used in expression.
	Name string `json:"name,omitempty"`

	// Short human-readable parameter summary.
	Summary string `json:"summary,omitempty"`

	// ParamUnit represents template parameter unit.
	//
	//  - PARAM_UNIT_INVALID: Invalid, unknown or absent.
	//  - PERCENTAGE: %
	//  - SECONDS: s
	// Enum: [PARAM_UNIT_INVALID PERCENTAGE SECONDS]
	Unit *string `json:"unit,omitempty"`

	// ParamType represents template parameter type.
	// Enum: [PARAM_TYPE_INVALID BOOL FLOAT STRING]
	Type *string `json:"type,omitempty"`

	// bool
	Bool *AlertsItems0RuleTemplateParamsItems0Bool `json:"bool,omitempty"`

	// float
	Float *AlertsItems0RuleTemplateParamsItems0Float `json:"float,omitempty"`

	// string
	String *AlertsItems0RuleTemplateParamsItems0String `json:"string,omitempty"`
}

// Validate validates this alerts items0 rule template params items0
func (o *AlertsItems0RuleTemplateParamsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateUnit(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBool(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateFloat(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateString(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var alertsItems0RuleTemplateParamsItems0TypeUnitPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PARAM_UNIT_INVALID","PERCENTAGE","SECONDS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertsItems0RuleTemplateParamsItems0TypeUnitPropEnum = append(alertsItems0RuleTemplateParamsItems0TypeUnitPropEnum, v)
	}
}

const (

	// AlertsItems0RuleTemplateParamsItems0UnitPARAMUNITINVALID captures enum value "PARAM_UNIT_INVALID"
	AlertsItems0RuleTemplateParamsItems0UnitPARAMUNITINVALID string = "PARAM_UNIT_INVALID"

	// AlertsItems0RuleTemplateParamsItems0UnitPERCENTAGE captures enum value "PERCENTAGE"
	AlertsItems0RuleTemplateParamsItems0UnitPERCENTAGE string = "PERCENTAGE"

	// AlertsItems0RuleTemplateParamsItems0UnitSECONDS captures enum value "SECONDS"
	AlertsItems0RuleTemplateParamsItems0UnitSECONDS string = "SECONDS"
)

// prop value enum
func (o *AlertsItems0RuleTemplateParamsItems0) validateUnitEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, alertsItems0RuleTemplateParamsItems0TypeUnitPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *AlertsItems0RuleTemplateParamsItems0) validateUnit(formats strfmt.Registry) error {

	if swag.IsZero(o.Unit) { // not required
		return nil
	}

	// value enum
	if err := o.validateUnitEnum("unit", "body", *o.Unit); err != nil {
		return err
	}

	return nil
}

var alertsItems0RuleTemplateParamsItems0TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["PARAM_TYPE_INVALID","BOOL","FLOAT","STRING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertsItems0RuleTemplateParamsItems0TypeTypePropEnum = append(alertsItems0RuleTemplateParamsItems0TypeTypePropEnum, v)
	}
}

const (

	// AlertsItems0RuleTemplateParamsItems0TypePARAMTYPEINVALID captures enum value "PARAM_TYPE_INVALID"
	AlertsItems0RuleTemplateParamsItems0TypePARAMTYPEINVALID string = "PARAM_TYPE_INVALID"

	// AlertsItems0RuleTemplateParamsItems0TypeBOOL captures enum value "BOOL"
	AlertsItems0RuleTemplateParamsItems0TypeBOOL string = "BOOL"

	// AlertsItems0RuleTemplateParamsItems0TypeFLOAT captures enum value "FLOAT"
	AlertsItems0RuleTemplateParamsItems0TypeFLOAT string = "FLOAT"

	// AlertsItems0RuleTemplateParamsItems0TypeSTRING captures enum value "STRING"
	AlertsItems0RuleTemplateParamsItems0TypeSTRING string = "STRING"
)

// prop value enum
func (o *AlertsItems0RuleTemplateParamsItems0) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, alertsItems0RuleTemplateParamsItems0TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *AlertsItems0RuleTemplateParamsItems0) validateType(formats strfmt.Registry) error {

	if swag.IsZero(o.Type) { // not required
		return nil
	}

	// value enum
	if err := o.validateTypeEnum("type", "body", *o.Type); err != nil {
		return err
	}

	return nil
}

func (o *AlertsItems0RuleTemplateParamsItems0) validateBool(formats strfmt.Registry) error {

	if swag.IsZero(o.Bool) { // not required
		return nil
	}

	if o.Bool != nil {
		if err := o.Bool.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("bool")
			}
			return err
		}
	}

	return nil
}

func (o *AlertsItems0RuleTemplateParamsItems0) validateFloat(formats strfmt.Registry) error {

	if swag.IsZero(o.Float) { // not required
		return nil
	}

	if o.Float != nil {
		if err := o.Float.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("float")
			}
			return err
		}
	}

	return nil
}

func (o *AlertsItems0RuleTemplateParamsItems0) validateString(formats strfmt.Registry) error {

	if swag.IsZero(o.String) { // not required
		return nil
	}

	if o.String != nil {
		if err := o.String.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("string")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleTemplateParamsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleTemplateParamsItems0) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleTemplateParamsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleTemplateParamsItems0Bool TemplateBoolParam represents boolean parameter's default value.
swagger:model AlertsItems0RuleTemplateParamsItems0Bool
*/
type AlertsItems0RuleTemplateParamsItems0Bool struct {

	// BooleanFlag represent a command to set some boolean property to true,
	// to false, or avoid changing that property.
	//
	//  - DO_NOT_CHANGE: Do not change boolean property. Default value.
	//  - TRUE: True.
	//  - FALSE: False.
	// Enum: [DO_NOT_CHANGE TRUE FALSE]
	Default *string `json:"default,omitempty"`
}

// Validate validates this alerts items0 rule template params items0 bool
func (o *AlertsItems0RuleTemplateParamsItems0Bool) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDefault(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var alertsItems0RuleTemplateParamsItems0BoolTypeDefaultPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DO_NOT_CHANGE","TRUE","FALSE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		alertsItems0RuleTemplateParamsItems0BoolTypeDefaultPropEnum = append(alertsItems0RuleTemplateParamsItems0BoolTypeDefaultPropEnum, v)
	}
}

const (

	// AlertsItems0RuleTemplateParamsItems0BoolDefaultDONOTCHANGE captures enum value "DO_NOT_CHANGE"
	AlertsItems0RuleTemplateParamsItems0BoolDefaultDONOTCHANGE string = "DO_NOT_CHANGE"

	// AlertsItems0RuleTemplateParamsItems0BoolDefaultTRUE captures enum value "TRUE"
	AlertsItems0RuleTemplateParamsItems0BoolDefaultTRUE string = "TRUE"

	// AlertsItems0RuleTemplateParamsItems0BoolDefaultFALSE captures enum value "FALSE"
	AlertsItems0RuleTemplateParamsItems0BoolDefaultFALSE string = "FALSE"
)

// prop value enum
func (o *AlertsItems0RuleTemplateParamsItems0Bool) validateDefaultEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, alertsItems0RuleTemplateParamsItems0BoolTypeDefaultPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *AlertsItems0RuleTemplateParamsItems0Bool) validateDefault(formats strfmt.Registry) error {

	if swag.IsZero(o.Default) { // not required
		return nil
	}

	// value enum
	if err := o.validateDefaultEnum("bool"+"."+"default", "body", *o.Default); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleTemplateParamsItems0Bool) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleTemplateParamsItems0Bool) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleTemplateParamsItems0Bool
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleTemplateParamsItems0Float TemplateFloatParam represents float parameter's default value and valid range.
swagger:model AlertsItems0RuleTemplateParamsItems0Float
*/
type AlertsItems0RuleTemplateParamsItems0Float struct {

	// True if default value is set.
	HasDefault bool `json:"has_default,omitempty"`

	// Default value if has_default is true.
	Default float32 `json:"default,omitempty"`

	// True if minimal valid value is set.
	HasMin bool `json:"has_min,omitempty"`

	// Minimal valid value (inclusive) if has_min is true.
	Min float32 `json:"min,omitempty"`

	// True if maximal valid value is set.
	HasMax bool `json:"has_max,omitempty"`

	// Maximal valid value (inclusive) if has_max is true.
	Max float32 `json:"max,omitempty"`
}

// Validate validates this alerts items0 rule template params items0 float
func (o *AlertsItems0RuleTemplateParamsItems0Float) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleTemplateParamsItems0Float) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleTemplateParamsItems0Float) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleTemplateParamsItems0Float
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AlertsItems0RuleTemplateParamsItems0String TemplateStringParam represents string parameter's default value.
swagger:model AlertsItems0RuleTemplateParamsItems0String
*/
type AlertsItems0RuleTemplateParamsItems0String struct {

	// True if default value is set.
	HasDefault bool `json:"has_default,omitempty"`

	// Default value if has_default is true.
	Default string `json:"default,omitempty"`
}

// Validate validates this alerts items0 rule template params items0 string
func (o *AlertsItems0RuleTemplateParamsItems0String) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AlertsItems0RuleTemplateParamsItems0String) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AlertsItems0RuleTemplateParamsItems0String) UnmarshalBinary(b []byte) error {
	var res AlertsItems0RuleTemplateParamsItems0String
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DetailsItems0 details items0
swagger:model DetailsItems0
*/
type DetailsItems0 struct {

	// type url
	TypeURL string `json:"type_url,omitempty"`

	// value
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this details items0
func (o *DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DetailsItems0) UnmarshalBinary(b []byte) error {
	var res DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ListAlertsDefaultBody list alerts default body
swagger:model ListAlertsDefaultBody
*/
type ListAlertsDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this list alerts default body
func (o *ListAlertsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAlertsDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ListAlerts default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListAlertsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAlertsDefaultBody) UnmarshalBinary(b []byte) error {
	var res ListAlertsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ListAlertsOKBody list alerts OK body
swagger:model ListAlertsOKBody
*/
type ListAlertsOKBody struct {

	// alerts
	Alerts []*AlertsItems0 `json:"alerts"`
}

// Validate validates this list alerts OK body
func (o *ListAlertsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAlerts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListAlertsOKBody) validateAlerts(formats strfmt.Registry) error {

	if swag.IsZero(o.Alerts) { // not required
		return nil
	}

	for i := 0; i < len(o.Alerts); i++ {
		if swag.IsZero(o.Alerts[i]) { // not required
			continue
		}

		if o.Alerts[i] != nil {
			if err := o.Alerts[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listAlertsOk" + "." + "alerts" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListAlertsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListAlertsOKBody) UnmarshalBinary(b []byte) error {
	var res ListAlertsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
