// Code generated by go-swagger; DO NOT EDIT.

package alerts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ToggleAlertReader is a Reader for the ToggleAlert structure.
type ToggleAlertReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ToggleAlertReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewToggleAlertOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewToggleAlertDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewToggleAlertOK creates a ToggleAlertOK with default headers values
func NewToggleAlertOK() *ToggleAlertOK {
	return &ToggleAlertOK{}
}

/*ToggleAlertOK handles this case with default header values.

A successful response.
*/
type ToggleAlertOK struct {
	Payload interface{}
}

func (o *ToggleAlertOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/ia/Alerts/Toggle][%d] toggleAlertOk  %+v", 200, o.Payload)
}

func (o *ToggleAlertOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ToggleAlertOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewToggleAlertDefault creates a ToggleAlertDefault with default headers values
func NewToggleAlertDefault(code int) *ToggleAlertDefault {
	return &ToggleAlertDefault{
		_statusCode: code,
	}
}

/*ToggleAlertDefault handles this case with default header values.

An unexpected error response.
*/
type ToggleAlertDefault struct {
	_statusCode int

	Payload *ToggleAlertDefaultBody
}

// Code gets the status code for the toggle alert default response
func (o *ToggleAlertDefault) Code() int {
	return o._statusCode
}

func (o *ToggleAlertDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/ia/Alerts/Toggle][%d] ToggleAlert default  %+v", o._statusCode, o.Payload)
}

func (o *ToggleAlertDefault) GetPayload() *ToggleAlertDefaultBody {
	return o.Payload
}

func (o *ToggleAlertDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ToggleAlertDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ToggleAlertBody toggle alert body
swagger:model ToggleAlertBody
*/
type ToggleAlertBody struct {

	// alert id
	AlertID string `json:"alert_id,omitempty"`

	// BooleanFlag represent a command to set some boolean property to true,
	// to false, or avoid changing that property.
	//
	//  - DO_NOT_CHANGE: Do not change boolean property. Default value.
	//  - TRUE: True.
	//  - FALSE: False.
	// Enum: [DO_NOT_CHANGE TRUE FALSE]
	Silenced *string `json:"silenced,omitempty"`
}

// Validate validates this toggle alert body
func (o *ToggleAlertBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateSilenced(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var toggleAlertBodyTypeSilencedPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DO_NOT_CHANGE","TRUE","FALSE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		toggleAlertBodyTypeSilencedPropEnum = append(toggleAlertBodyTypeSilencedPropEnum, v)
	}
}

const (

	// ToggleAlertBodySilencedDONOTCHANGE captures enum value "DO_NOT_CHANGE"
	ToggleAlertBodySilencedDONOTCHANGE string = "DO_NOT_CHANGE"

	// ToggleAlertBodySilencedTRUE captures enum value "TRUE"
	ToggleAlertBodySilencedTRUE string = "TRUE"

	// ToggleAlertBodySilencedFALSE captures enum value "FALSE"
	ToggleAlertBodySilencedFALSE string = "FALSE"
)

// prop value enum
func (o *ToggleAlertBody) validateSilencedEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, toggleAlertBodyTypeSilencedPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *ToggleAlertBody) validateSilenced(formats strfmt.Registry) error {

	if swag.IsZero(o.Silenced) { // not required
		return nil
	}

	// value enum
	if err := o.validateSilencedEnum("body"+"."+"silenced", "body", *o.Silenced); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ToggleAlertBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ToggleAlertBody) UnmarshalBinary(b []byte) error {
	var res ToggleAlertBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ToggleAlertDefaultBody toggle alert default body
swagger:model ToggleAlertDefaultBody
*/
type ToggleAlertDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this toggle alert default body
func (o *ToggleAlertDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ToggleAlertDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ToggleAlert default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ToggleAlertDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ToggleAlertDefaultBody) UnmarshalBinary(b []byte) error {
	var res ToggleAlertDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
