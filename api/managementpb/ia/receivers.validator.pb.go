// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: managementpb/ia/receivers.proto

package iav1beta1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *HTTPConfig) Validate() error {
	if this.BasicAuth != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.BasicAuth); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("BasicAuth", err)
		}
	}
	return nil
}
func (this *HTTPConfig_BasicAuth) Validate() error {
	return nil
}
func (this *EmailConfig) Validate() error {
	return nil
}
func (this *SlackConfig) Validate() error {
	return nil
}
func (this *WebhookConfig) Validate() error {
	if this.HttpConfig != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.HttpConfig); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("HttpConfig", err)
		}
	}
	return nil
}
func (this *Receiver) Validate() error {
	for _, item := range this.EmailConfig {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("EmailConfig", err)
			}
		}
	}
	for _, item := range this.SlackConfigs {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("SlackConfigs", err)
			}
		}
	}
	for _, item := range this.WebhookConfigs {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("WebhookConfigs", err)
			}
		}
	}
	return nil
}
