// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: managementpb/ia/channels.proto

package iav1beta1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *HTTPConfig) Validate() error {
	if this.BasicAuth != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.BasicAuth); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("BasicAuth", err)
		}
	}
	return nil
}
func (this *HTTPConfig_BasicAuth) Validate() error {
	return nil
}
func (this *EmailConfig) Validate() error {
	return nil
}
func (this *SlackConfig) Validate() error {
	return nil
}
func (this *WebhookConfig) Validate() error {
	if this.HttpConfig != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.HttpConfig); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("HttpConfig", err)
		}
	}
	return nil
}
func (this *NotificationChannel) Validate() error {
	if oneOfNester, ok := this.GetChannel().(*NotificationChannel_EmailConfig); ok {
		if oneOfNester.EmailConfig != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.EmailConfig); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("EmailConfig", err)
			}
		}
	}
	if oneOfNester, ok := this.GetChannel().(*NotificationChannel_SlackConfigs); ok {
		if oneOfNester.SlackConfigs != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.SlackConfigs); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("SlackConfigs", err)
			}
		}
	}
	if oneOfNester, ok := this.GetChannel().(*NotificationChannel_WebhookConfigs); ok {
		if oneOfNester.WebhookConfigs != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(oneOfNester.WebhookConfigs); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("WebhookConfigs", err)
			}
		}
	}
	return nil
}
func (this *ListNotificationChannelsRequest) Validate() error {
	return nil
}
func (this *ListNotificationChannelsResponse) Validate() error {
	for _, item := range this.Channels {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Channels", err)
			}
		}
	}
	return nil
}
func (this *AddNotificationChannelRequest) Validate() error {
	if this.EmailConfig != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EmailConfig); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EmailConfig", err)
		}
	}
	if this.SlackConfigs != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SlackConfigs); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SlackConfigs", err)
		}
	}
	if this.WebhookConfigs != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WebhookConfigs); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WebhookConfigs", err)
		}
	}
	return nil
}
func (this *AddNotificationChannelResponse) Validate() error {
	return nil
}
func (this *ChangeNotificationChannelRequest) Validate() error {
	if this.EmailConfig != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.EmailConfig); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("EmailConfig", err)
		}
	}
	if this.SlackConfigs != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.SlackConfigs); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("SlackConfigs", err)
		}
	}
	if this.WebhookConfigs != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.WebhookConfigs); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("WebhookConfigs", err)
		}
	}
	return nil
}
func (this *ChangeNotificationChannelResponse) Validate() error {
	return nil
}
func (this *RemoveNotificationChannelRequest) Validate() error {
	return nil
}
func (this *RemoveNotificationChannelResponse) Validate() error {
	return nil
}
