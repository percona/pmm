{
  "swagger": "2.0",
  "info": {
    "title": "managementpb/ia/alerts.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/management/ia/Alerts/List": {
      "post": {
        "summary": "ListAlerts returns a list of all Alerts.",
        "operationId": "ListAlerts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListAlertsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ListAlertsRequest"
            }
          }
        ],
        "tags": [
          "Alerts"
        ]
      }
    },
    "/v1/management/ia/Alerts/Toggle": {
      "post": {
        "summary": "ToggleAlerts allows to switch alerts state between silenced and unsilenced.",
        "description": "Pass empty list to apply toggle action to all existing alerts",
        "operationId": "ToggleAlerts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ToggleAlertsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ToggleAlertsRequest"
            }
          }
        ],
        "tags": [
          "Alerts"
        ]
      }
    }
  },
  "definitions": {
    "managementPageParams": {
      "type": "object",
      "properties": {
        "page_size": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of results per page."
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "description": "Index of the requested page, starts from 0."
        }
      },
      "description": "PageParams represents page request parameters for pagination."
    },
    "managementPageTotals": {
      "type": "object",
      "properties": {
        "total_items": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of results."
        },
        "total_pages": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of pages."
        }
      },
      "description": "PageTotals represents total values for pagination."
    },
    "managementSeverity": {
      "type": "string",
      "enum": [
        "SEVERITY_INVALID",
        "SEVERITY_EMERGENCY",
        "SEVERITY_ALERT",
        "SEVERITY_CRITICAL",
        "SEVERITY_ERROR",
        "SEVERITY_WARNING",
        "SEVERITY_NOTICE",
        "SEVERITY_INFO",
        "SEVERITY_DEBUG"
      ],
      "default": "SEVERITY_INVALID",
      "description": "Severity represents severity level of the check result or alert."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1beta1Alert": {
      "type": "object",
      "properties": {
        "alert_id": {
          "type": "string",
          "description": "ID."
        },
        "summary": {
          "type": "string",
          "description": "Human-readable summary."
        },
        "severity": {
          "$ref": "#/definitions/managementSeverity",
          "description": "Severity."
        },
        "status": {
          "$ref": "#/definitions/v1beta1Status",
          "description": "Status."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Combined labels."
        },
        "rule": {
          "$ref": "#/definitions/v1beta1Rule",
          "description": "The current Alert Rule."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Alert creation time."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Alert last update time."
        }
      },
      "description": "Alert represents Alert."
    },
    "v1beta1BasicAuth": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "password_file": {
          "type": "string"
        }
      },
      "description": "BasicAuth represents basic HTTP auth configuration."
    },
    "v1beta1BoolParamDefinition": {
      "type": "object",
      "properties": {
        "default": {
          "$ref": "#/definitions/v1beta1BooleanFlag"
        }
      },
      "description": "BoolParamDefinition represents boolean parameter's default value."
    },
    "v1beta1BooleanFlag": {
      "type": "string",
      "enum": [
        "DO_NOT_CHANGE",
        "TRUE",
        "FALSE"
      ],
      "default": "DO_NOT_CHANGE",
      "description": "BooleanFlag represent a command to set some boolean property to true,\nto false, or avoid changing that property.\n\n - DO_NOT_CHANGE: Do not change boolean property. Default value.\n - TRUE: True.\n - FALSE: False."
    },
    "v1beta1Channel": {
      "type": "object",
      "properties": {
        "channel_id": {
          "type": "string",
          "description": "Machine-readable ID."
        },
        "summary": {
          "type": "string",
          "description": "Short human-readable summary."
        },
        "email_config": {
          "$ref": "#/definitions/v1beta1EmailConfig"
        },
        "pagerduty_config": {
          "$ref": "#/definitions/v1beta1PagerDutyConfig"
        },
        "slack_config": {
          "$ref": "#/definitions/v1beta1SlackConfig"
        },
        "webhook_config": {
          "$ref": "#/definitions/v1beta1WebhookConfig"
        },
        "disabled": {
          "type": "boolean",
          "description": "True if that channel is disabled."
        }
      },
      "description": "Channel represents a single Notification Channel."
    },
    "v1beta1EmailConfig": {
      "type": "object",
      "properties": {
        "send_resolved": {
          "type": "boolean"
        },
        "to": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "EmailConfig represents email configuration."
    },
    "v1beta1Filter": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1beta1FilterType"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "description": "Filter repsents a single filter condition."
    },
    "v1beta1FilterType": {
      "type": "string",
      "enum": [
        "FILTER_TYPE_INVALID",
        "EQUAL",
        "REGEX"
      ],
      "default": "FILTER_TYPE_INVALID",
      "description": "FilterType represents filter matching type.\n\n - EQUAL: =\n - REGEX: =~"
    },
    "v1beta1FloatParamDefinition": {
      "type": "object",
      "properties": {
        "has_default": {
          "type": "boolean",
          "description": "True if default value is set."
        },
        "default": {
          "type": "number",
          "format": "double",
          "description": "Default value if has_default is true."
        },
        "has_min": {
          "type": "boolean",
          "description": "True if minimal valid value is set."
        },
        "min": {
          "type": "number",
          "format": "double",
          "description": "Minimal valid value (inclusive) if has_min is true."
        },
        "has_max": {
          "type": "boolean",
          "description": "True if maximal valid value is set."
        },
        "max": {
          "type": "number",
          "format": "double",
          "description": "Maximal valid value (inclusive) if has_max is true."
        }
      },
      "description": "FloatParamDefinition represents float parameter's default value and valid range."
    },
    "v1beta1HTTPConfig": {
      "type": "object",
      "properties": {
        "basic_auth": {
          "$ref": "#/definitions/v1beta1BasicAuth",
          "description": "Basic HTTP auth configuration. Zero value will remove it."
        },
        "bearer_token": {
          "type": "string"
        },
        "bearer_token_file": {
          "type": "string"
        },
        "tls_config": {
          "$ref": "#/definitions/v1beta1TLSConfig",
          "description": "TLS configuration. Zero value will remove it."
        },
        "proxy_url": {
          "type": "string"
        }
      },
      "description": "HTTPConfig represents HTTP client configuration."
    },
    "v1beta1ListAlertsRequest": {
      "type": "object",
      "properties": {
        "page_params": {
          "$ref": "#/definitions/managementPageParams",
          "description": "Page request."
        }
      }
    },
    "v1beta1ListAlertsResponse": {
      "type": "object",
      "properties": {
        "alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Alert"
          }
        },
        "totals": {
          "$ref": "#/definitions/managementPageTotals",
          "description": "Total items and pages."
        }
      }
    },
    "v1beta1PagerDutyConfig": {
      "type": "object",
      "properties": {
        "send_resolved": {
          "type": "boolean"
        },
        "routing_key": {
          "type": "string",
          "description": "The PagerDuty key for \"Events API v2\" integration type. Exactly one key should be set."
        },
        "service_key": {
          "type": "string",
          "description": "The PagerDuty key for \"Prometheus\" integration type. Exactly one key should be set."
        }
      },
      "description": "PagerDutyConfig represents PagerDuty configuration."
    },
    "v1beta1ParamDefinition": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Machine-readable name (ID) that is used in expression."
        },
        "summary": {
          "type": "string",
          "description": "Short human-readable parameter summary."
        },
        "unit": {
          "$ref": "#/definitions/v1beta1ParamUnit",
          "description": "Parameter unit."
        },
        "type": {
          "$ref": "#/definitions/v1beta1ParamType",
          "description": "Parameter type."
        },
        "bool": {
          "$ref": "#/definitions/v1beta1BoolParamDefinition",
          "description": "Bool value."
        },
        "float": {
          "$ref": "#/definitions/v1beta1FloatParamDefinition",
          "description": "Float value."
        },
        "string": {
          "$ref": "#/definitions/v1beta1StringParamDefinition",
          "description": "String value."
        }
      },
      "description": "ParamDefinition represents a single query parameter."
    },
    "v1beta1ParamType": {
      "type": "string",
      "enum": [
        "PARAM_TYPE_INVALID",
        "BOOL",
        "FLOAT",
        "STRING"
      ],
      "default": "PARAM_TYPE_INVALID",
      "description": "ParamType represents template parameter type."
    },
    "v1beta1ParamUnit": {
      "type": "string",
      "enum": [
        "PARAM_UNIT_INVALID",
        "PERCENTAGE",
        "SECONDS"
      ],
      "default": "PARAM_UNIT_INVALID",
      "description": "ParamUnit represents template parameter unit.\n\n - PARAM_UNIT_INVALID: Invalid, unknown or absent.\n - PERCENTAGE: %\n - SECONDS: s"
    },
    "v1beta1ParamValue": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Machine-readable name (ID) that is used in expression."
        },
        "type": {
          "$ref": "#/definitions/v1beta1ParamType",
          "description": "Parameter type."
        },
        "bool": {
          "type": "boolean",
          "description": "Bool value."
        },
        "float": {
          "type": "number",
          "format": "double",
          "description": "Float value."
        },
        "string": {
          "type": "string",
          "description": "String value."
        }
      },
      "description": "ParamValue represents a single rule parameter value for List, Change and Update APIs."
    },
    "v1beta1Rule": {
      "type": "object",
      "properties": {
        "rule_id": {
          "type": "string",
          "description": "Rule ID."
        },
        "name": {
          "type": "string",
          "description": "Rule name."
        },
        "summary": {
          "type": "string",
          "description": "Rule human-readable summary."
        },
        "template_name": {
          "type": "string",
          "description": "Template used for this rule."
        },
        "disabled": {
          "type": "boolean",
          "description": "True if that rule is disabled."
        },
        "expr_template": {
          "type": "string",
          "description": "Expression template."
        },
        "expr": {
          "type": "string",
          "description": "Expression filled with parameters."
        },
        "params_definitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1ParamDefinition"
          },
          "description": "Expression parameters definitions."
        },
        "params_values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1ParamValue"
          },
          "description": "Expression parameters values."
        },
        "default_for": {
          "type": "string",
          "description": "Default for duration."
        },
        "for": {
          "type": "string",
          "description": "For duration."
        },
        "default_severity": {
          "$ref": "#/definitions/managementSeverity",
          "description": "Default severity."
        },
        "severity": {
          "$ref": "#/definitions/managementSeverity",
          "description": "Severity."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom labels."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels."
        },
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Annotations."
        },
        "filters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Filter"
          },
          "description": "Filters."
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1Channel"
          },
          "description": "Channels."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Rule creation time."
        }
      },
      "description": "Rule represents Alert Rule."
    },
    "v1beta1SlackConfig": {
      "type": "object",
      "properties": {
        "send_resolved": {
          "type": "boolean"
        },
        "channel": {
          "type": "string"
        }
      },
      "description": "SlackConfig represents Slack configuration."
    },
    "v1beta1Status": {
      "type": "string",
      "enum": [
        "STATUS_INVALID",
        "CLEAR",
        "PENDING",
        "TRIGGERING",
        "SILENCED"
      ],
      "default": "STATUS_INVALID",
      "description": "Status represents Alert Rule's and Alert's combined status.\n\n - CLEAR: No alert.\n - PENDING: Pending, but not triggering alert.\n - TRIGGERING: Triggering (firing) alert.\n - SILENCED: Silenced alert."
    },
    "v1beta1StringParamDefinition": {
      "type": "object",
      "properties": {
        "has_default": {
          "type": "boolean",
          "description": "True if default value is set."
        },
        "default": {
          "type": "string",
          "description": "Default value if has_default is true."
        }
      },
      "description": "StringParamDefinition represents string parameter's default value."
    },
    "v1beta1TLSConfig": {
      "type": "object",
      "properties": {
        "ca_file": {
          "type": "string",
          "description": "A path to the CA certificate file to validate the server certificate with.\nca_file and ca_file_content should not be set at the same time."
        },
        "cert_file": {
          "type": "string",
          "description": "A path to the certificate file for client cert authentication to the server.\ncert_file and cert_file_content should not be set at the same time."
        },
        "key_file": {
          "type": "string",
          "description": "A path to the key file for client cert authentication to the server.\nkey_file and key_file_content should not be set at the same time."
        },
        "server_name": {
          "type": "string",
          "description": "Name of the server."
        },
        "insecure_skip_verify": {
          "type": "boolean",
          "description": "Disable validation of the server certificate."
        },
        "ca_file_content": {
          "type": "string",
          "description": "CA certificate to validate the server certificate with.\nca_file and ca_file_content should not be set at the same time."
        },
        "cert_file_content": {
          "type": "string",
          "description": "A certificate for client cert authentication to the server.\ncert_file and cert_file_content should not be set at the same time."
        },
        "key_file_content": {
          "type": "string",
          "description": "A key for client cert authentication to the server.\nkey_file and key_file_content should not be set at the same time."
        }
      },
      "title": "TLSConfig represents TLS configuration for alertmanager\nhttps://prometheus.io/docs/alerting/latest/configuration/#tls_config"
    },
    "v1beta1ToggleAlertsRequest": {
      "type": "object",
      "properties": {
        "alert_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of alerts that silence state should be switched. If provided array is empty than all\nexisting alerts are switched."
        },
        "silenced": {
          "$ref": "#/definitions/v1beta1BooleanFlag",
          "description": "Silences or unsilences alert if set."
        }
      }
    },
    "v1beta1ToggleAlertsResponse": {
      "type": "object"
    },
    "v1beta1WebhookConfig": {
      "type": "object",
      "properties": {
        "send_resolved": {
          "type": "boolean"
        },
        "url": {
          "type": "string"
        },
        "http_config": {
          "$ref": "#/definitions/v1beta1HTTPConfig"
        },
        "max_alerts": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "WebhookConfig represents webhook configuration."
    }
  }
}
