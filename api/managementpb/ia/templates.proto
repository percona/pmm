syntax = "proto3";

package ia.v1beta1;

option go_package = "api/managementpb/ia;iav1beta1";

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "managementpb/ia/boolean_flag.proto";
import "managementpb/ia/params.proto";
import "managementpb/pagination.proto";
import "managementpb/severity.proto";

// TODO move it to parent directory / package once API is v1-stable
// https://jira.percona.com/browse/PMM-7001

// BoolParamDefinition represents boolean parameter's default value.
message BoolParamDefinition {
  BooleanFlag default = 1;
}

// FloatParamDefinition represents float parameter's default value and valid range.
message FloatParamDefinition {
  // True if default value is set.
  bool has_default = 1;
  // Default value if has_default is true.
  double default = 2;
  // True if minimal valid value is set.
  bool has_min = 3;
  // Minimal valid value (inclusive) if has_min is true.
  double min = 4;
  // True if maximal valid value is set.
  bool has_max = 5;
  // Maximal valid value (inclusive) if has_max is true.
  double max = 6;
}

// StringParamDefinition represents string parameter's default value.
message StringParamDefinition {
  // True if default value is set.
  bool has_default = 1;
  // Default value if has_default is true.
  string default = 2;
}

// ParamDefinition represents a single query parameter.
message ParamDefinition {
  // Machine-readable name (ID) that is used in expression.
  string name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Short human-readable parameter summary.
  string summary = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Parameter unit.
  ParamUnit unit = 3;
  // Parameter type.
  ParamType type = 4;
  // Parameter value.
  oneof value {
    // Bool value.
    BoolParamDefinition bool = 5;
    // Float value.
    FloatParamDefinition float = 6;
    // String value.
    StringParamDefinition string = 7;
  }
}

// TemplateSource defines template source.
enum TemplateSource {
  TEMPLATE_SOURCE_INVALID = 0;
  // Template that is shipped with PMM Server releases.
  BUILT_IN = 1;
  // Template that is downloaded from check.percona.com.
  SAAS = 2;
  // Templated loaded from user-suplied file.
  USER_FILE = 3;
  // Templated created via API.
  USER_API = 4;
}

// Template represents Alert Template that is used to create Alert Rule.
message Template {
  // Machine-readable name (ID).
  string name = 1;
  // Short human-readable summary.
  string summary = 2;
  // PromQL query expression with templating parameters.
  string expr = 3;
  // Query parameters definitions.
  repeated ParamDefinition params = 4;
  // Default duration value.
  google.protobuf.Duration for = 5;
  // Severity.
  management.Severity severity = 6;
  // Labels.
  map<string, string> labels = 7;
  // Annotations.
  map<string, string> annotations = 8;
  // Template source. Only templates created via API can be updated or deleted via API.
  TemplateSource source = 9;
  // Template creation time. Empty for built-in and SaaS templates.
  google.protobuf.Timestamp created_at = 10;
  // YAML (or JSON) template file content. Empty for built-in and SaaS templates.
  string yaml = 11;
}

message ListTemplatesRequest {
  // If true, template files will be re-read from disk.
  bool reload = 1;
  // Page request.
  management.PageParams page_params = 2;
}

message ListTemplatesResponse {
  repeated Template templates = 1;
  // Total items and pages.
  management.PageTotals totals = 2;
}

message CreateTemplateRequest {
  // YAML (or JSON) template file content.
  string yaml = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message CreateTemplateResponse {}

message UpdateTemplateRequest {
  // Machine-readable name (ID).
  string name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // YAML (or JSON) template file content.
  string yaml = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message UpdateTemplateResponse {}

message DeleteTemplateRequest {
  string name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message DeleteTemplateResponse {}

// Templates service provides access to Alert Rule Templates.
service Templates {
  // ListTemplates returns a list of all collected Alert Rule Templates.
  rpc ListTemplates(ListTemplatesRequest) returns (ListTemplatesResponse) {
    option (google.api.http) = {
      post: "/v1/management/ia/Templates/List"
      body: "*"
    };
  }
  // CreateTemplate creates a new template.
  rpc CreateTemplate(CreateTemplateRequest) returns (CreateTemplateResponse) {
    option (google.api.http) = {
      post: "/v1/management/ia/Templates/Create"
      body: "*"
    };
  }
  // UpdateTemplate updates existing template, previously created via API.
  rpc UpdateTemplate(UpdateTemplateRequest) returns (UpdateTemplateResponse) {
    option (google.api.http) = {
      post: "/v1/management/ia/Templates/Update"
      body: "*"
    };
  }
  // DeleteTemplate deletes existing, previously created via API.
  rpc DeleteTemplate(DeleteTemplateRequest) returns (DeleteTemplateResponse) {
    option (google.api.http) = {
      post: "/v1/management/ia/Templates/Delete"
      body: "*"
    };
  }
}
