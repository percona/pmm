// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: managementpb/ia/channels.proto

package iav1beta1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// HTTPConfig FIXME.
type HTTPConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasicAuth       *HTTPConfig_BasicAuth `protobuf:"bytes,1,opt,name=basic_auth,json=basicAuth,proto3" json:"basic_auth,omitempty"`
	BearerToken     string                `protobuf:"bytes,2,opt,name=bearer_token,json=bearerToken,proto3" json:"bearer_token,omitempty"`
	BearerTokenFile string                `protobuf:"bytes,3,opt,name=bearer_token_file,json=bearerTokenFile,proto3" json:"bearer_token_file,omitempty"`
	// TODO TLSConfig tls_config = 4;
	ProxyUrl string `protobuf:"bytes,5,opt,name=proxy_url,json=proxyUrl,proto3" json:"proxy_url,omitempty"`
}

func (x *HTTPConfig) Reset() {
	*x = HTTPConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_ia_channels_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPConfig) ProtoMessage() {}

func (x *HTTPConfig) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_ia_channels_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPConfig.ProtoReflect.Descriptor instead.
func (*HTTPConfig) Descriptor() ([]byte, []int) {
	return file_managementpb_ia_channels_proto_rawDescGZIP(), []int{0}
}

func (x *HTTPConfig) GetBasicAuth() *HTTPConfig_BasicAuth {
	if x != nil {
		return x.BasicAuth
	}
	return nil
}

func (x *HTTPConfig) GetBearerToken() string {
	if x != nil {
		return x.BearerToken
	}
	return ""
}

func (x *HTTPConfig) GetBearerTokenFile() string {
	if x != nil {
		return x.BearerTokenFile
	}
	return ""
}

func (x *HTTPConfig) GetProxyUrl() string {
	if x != nil {
		return x.ProxyUrl
	}
	return ""
}

// EmailConfig FIXME.
type EmailConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	To string `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"` // TODO
}

func (x *EmailConfig) Reset() {
	*x = EmailConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_ia_channels_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailConfig) ProtoMessage() {}

func (x *EmailConfig) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_ia_channels_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailConfig.ProtoReflect.Descriptor instead.
func (*EmailConfig) Descriptor() ([]byte, []int) {
	return file_managementpb_ia_channels_proto_rawDescGZIP(), []int{1}
}

func (x *EmailConfig) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

// SlackConfig FIXME.
type SlackConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channel string `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"` // TODO
}

func (x *SlackConfig) Reset() {
	*x = SlackConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_ia_channels_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlackConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlackConfig) ProtoMessage() {}

func (x *SlackConfig) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_ia_channels_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlackConfig.ProtoReflect.Descriptor instead.
func (*SlackConfig) Descriptor() ([]byte, []int) {
	return file_managementpb_ia_channels_proto_rawDescGZIP(), []int{2}
}

func (x *SlackConfig) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

// WebhookConfig FIXME.
type WebhookConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendResolved bool        `protobuf:"varint,1,opt,name=send_resolved,json=sendResolved,proto3" json:"send_resolved,omitempty"`
	Url          string      `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	HttpConfig   *HTTPConfig `protobuf:"bytes,3,opt,name=http_config,json=httpConfig,proto3" json:"http_config,omitempty"`
	MaxAlerts    int32       `protobuf:"varint,4,opt,name=max_alerts,json=maxAlerts,proto3" json:"max_alerts,omitempty"`
}

func (x *WebhookConfig) Reset() {
	*x = WebhookConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_ia_channels_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebhookConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebhookConfig) ProtoMessage() {}

func (x *WebhookConfig) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_ia_channels_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebhookConfig.ProtoReflect.Descriptor instead.
func (*WebhookConfig) Descriptor() ([]byte, []int) {
	return file_managementpb_ia_channels_proto_rawDescGZIP(), []int{3}
}

func (x *WebhookConfig) GetSendResolved() bool {
	if x != nil {
		return x.SendResolved
	}
	return false
}

func (x *WebhookConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *WebhookConfig) GetHttpConfig() *HTTPConfig {
	if x != nil {
		return x.HttpConfig
	}
	return nil
}

func (x *WebhookConfig) GetMaxAlerts() int32 {
	if x != nil {
		return x.MaxAlerts
	}
	return 0
}

// NotificationChannel represents a single Notification Channel.
type NotificationChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are assignable to Channel:
	//	*NotificationChannel_EmailConfig
	//	*NotificationChannel_SlackConfigs
	//	*NotificationChannel_WebhookConfigs
	Channel isNotificationChannel_Channel `protobuf_oneof:"channel"`
}

func (x *NotificationChannel) Reset() {
	*x = NotificationChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_ia_channels_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationChannel) ProtoMessage() {}

func (x *NotificationChannel) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_ia_channels_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationChannel.ProtoReflect.Descriptor instead.
func (*NotificationChannel) Descriptor() ([]byte, []int) {
	return file_managementpb_ia_channels_proto_rawDescGZIP(), []int{4}
}

func (x *NotificationChannel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *NotificationChannel) GetChannel() isNotificationChannel_Channel {
	if m != nil {
		return m.Channel
	}
	return nil
}

func (x *NotificationChannel) GetEmailConfig() *EmailConfig {
	if x, ok := x.GetChannel().(*NotificationChannel_EmailConfig); ok {
		return x.EmailConfig
	}
	return nil
}

func (x *NotificationChannel) GetSlackConfigs() *SlackConfig {
	if x, ok := x.GetChannel().(*NotificationChannel_SlackConfigs); ok {
		return x.SlackConfigs
	}
	return nil
}

func (x *NotificationChannel) GetWebhookConfigs() *WebhookConfig {
	if x, ok := x.GetChannel().(*NotificationChannel_WebhookConfigs); ok {
		return x.WebhookConfigs
	}
	return nil
}

type isNotificationChannel_Channel interface {
	isNotificationChannel_Channel()
}

type NotificationChannel_EmailConfig struct {
	EmailConfig *EmailConfig `protobuf:"bytes,2,opt,name=email_config,json=emailConfig,proto3,oneof"`
}

type NotificationChannel_SlackConfigs struct {
	SlackConfigs *SlackConfig `protobuf:"bytes,5,opt,name=slack_configs,json=slackConfigs,proto3,oneof"`
}

type NotificationChannel_WebhookConfigs struct {
	WebhookConfigs *WebhookConfig `protobuf:"bytes,7,opt,name=webhook_configs,json=webhookConfigs,proto3,oneof"`
}

func (*NotificationChannel_EmailConfig) isNotificationChannel_Channel() {}

func (*NotificationChannel_SlackConfigs) isNotificationChannel_Channel() {}

func (*NotificationChannel_WebhookConfigs) isNotificationChannel_Channel() {}

type ListNotificationChannelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListNotificationChannelsRequest) Reset() {
	*x = ListNotificationChannelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_ia_channels_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotificationChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationChannelsRequest) ProtoMessage() {}

func (x *ListNotificationChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_ia_channels_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationChannelsRequest.ProtoReflect.Descriptor instead.
func (*ListNotificationChannelsRequest) Descriptor() ([]byte, []int) {
	return file_managementpb_ia_channels_proto_rawDescGZIP(), []int{5}
}

type ListNotificationChannelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Channels []*NotificationChannel `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *ListNotificationChannelsResponse) Reset() {
	*x = ListNotificationChannelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_ia_channels_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNotificationChannelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNotificationChannelsResponse) ProtoMessage() {}

func (x *ListNotificationChannelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_ia_channels_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNotificationChannelsResponse.ProtoReflect.Descriptor instead.
func (*ListNotificationChannelsResponse) Descriptor() ([]byte, []int) {
	return file_managementpb_ia_channels_proto_rawDescGZIP(), []int{6}
}

func (x *ListNotificationChannelsResponse) GetChannels() []*NotificationChannel {
	if x != nil {
		return x.Channels
	}
	return nil
}

type AddNotificationChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	EmailConfig    *EmailConfig   `protobuf:"bytes,2,opt,name=email_config,json=emailConfig,proto3" json:"email_config,omitempty"`
	SlackConfigs   *SlackConfig   `protobuf:"bytes,5,opt,name=slack_configs,json=slackConfigs,proto3" json:"slack_configs,omitempty"`
	WebhookConfigs *WebhookConfig `protobuf:"bytes,7,opt,name=webhook_configs,json=webhookConfigs,proto3" json:"webhook_configs,omitempty"`
}

func (x *AddNotificationChannelRequest) Reset() {
	*x = AddNotificationChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_ia_channels_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNotificationChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNotificationChannelRequest) ProtoMessage() {}

func (x *AddNotificationChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_ia_channels_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNotificationChannelRequest.ProtoReflect.Descriptor instead.
func (*AddNotificationChannelRequest) Descriptor() ([]byte, []int) {
	return file_managementpb_ia_channels_proto_rawDescGZIP(), []int{7}
}

func (x *AddNotificationChannelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddNotificationChannelRequest) GetEmailConfig() *EmailConfig {
	if x != nil {
		return x.EmailConfig
	}
	return nil
}

func (x *AddNotificationChannelRequest) GetSlackConfigs() *SlackConfig {
	if x != nil {
		return x.SlackConfigs
	}
	return nil
}

func (x *AddNotificationChannelRequest) GetWebhookConfigs() *WebhookConfig {
	if x != nil {
		return x.WebhookConfigs
	}
	return nil
}

type AddNotificationChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddNotificationChannelResponse) Reset() {
	*x = AddNotificationChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_ia_channels_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddNotificationChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNotificationChannelResponse) ProtoMessage() {}

func (x *AddNotificationChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_ia_channels_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNotificationChannelResponse.ProtoReflect.Descriptor instead.
func (*AddNotificationChannelResponse) Descriptor() ([]byte, []int) {
	return file_managementpb_ia_channels_proto_rawDescGZIP(), []int{8}
}

type ChangeNotificationChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	EmailConfig    *EmailConfig   `protobuf:"bytes,2,opt,name=email_config,json=emailConfig,proto3" json:"email_config,omitempty"`
	SlackConfigs   *SlackConfig   `protobuf:"bytes,5,opt,name=slack_configs,json=slackConfigs,proto3" json:"slack_configs,omitempty"`
	WebhookConfigs *WebhookConfig `protobuf:"bytes,7,opt,name=webhook_configs,json=webhookConfigs,proto3" json:"webhook_configs,omitempty"` // TODO enable / disable
}

func (x *ChangeNotificationChannelRequest) Reset() {
	*x = ChangeNotificationChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_ia_channels_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeNotificationChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNotificationChannelRequest) ProtoMessage() {}

func (x *ChangeNotificationChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_ia_channels_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNotificationChannelRequest.ProtoReflect.Descriptor instead.
func (*ChangeNotificationChannelRequest) Descriptor() ([]byte, []int) {
	return file_managementpb_ia_channels_proto_rawDescGZIP(), []int{9}
}

func (x *ChangeNotificationChannelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChangeNotificationChannelRequest) GetEmailConfig() *EmailConfig {
	if x != nil {
		return x.EmailConfig
	}
	return nil
}

func (x *ChangeNotificationChannelRequest) GetSlackConfigs() *SlackConfig {
	if x != nil {
		return x.SlackConfigs
	}
	return nil
}

func (x *ChangeNotificationChannelRequest) GetWebhookConfigs() *WebhookConfig {
	if x != nil {
		return x.WebhookConfigs
	}
	return nil
}

type ChangeNotificationChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangeNotificationChannelResponse) Reset() {
	*x = ChangeNotificationChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_ia_channels_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeNotificationChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNotificationChannelResponse) ProtoMessage() {}

func (x *ChangeNotificationChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_ia_channels_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNotificationChannelResponse.ProtoReflect.Descriptor instead.
func (*ChangeNotificationChannelResponse) Descriptor() ([]byte, []int) {
	return file_managementpb_ia_channels_proto_rawDescGZIP(), []int{10}
}

type RemoveNotificationChannelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RemoveNotificationChannelRequest) Reset() {
	*x = RemoveNotificationChannelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_ia_channels_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNotificationChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNotificationChannelRequest) ProtoMessage() {}

func (x *RemoveNotificationChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_ia_channels_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNotificationChannelRequest.ProtoReflect.Descriptor instead.
func (*RemoveNotificationChannelRequest) Descriptor() ([]byte, []int) {
	return file_managementpb_ia_channels_proto_rawDescGZIP(), []int{11}
}

func (x *RemoveNotificationChannelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type RemoveNotificationChannelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveNotificationChannelResponse) Reset() {
	*x = RemoveNotificationChannelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_ia_channels_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveNotificationChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveNotificationChannelResponse) ProtoMessage() {}

func (x *RemoveNotificationChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_ia_channels_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveNotificationChannelResponse.ProtoReflect.Descriptor instead.
func (*RemoveNotificationChannelResponse) Descriptor() ([]byte, []int) {
	return file_managementpb_ia_channels_proto_rawDescGZIP(), []int{12}
}

// BasicAuth FIXME.
type HTTPConfig_BasicAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username     string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password     string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	PasswordFile string `protobuf:"bytes,3,opt,name=password_file,json=passwordFile,proto3" json:"password_file,omitempty"`
}

func (x *HTTPConfig_BasicAuth) Reset() {
	*x = HTTPConfig_BasicAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_ia_channels_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HTTPConfig_BasicAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HTTPConfig_BasicAuth) ProtoMessage() {}

func (x *HTTPConfig_BasicAuth) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_ia_channels_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HTTPConfig_BasicAuth.ProtoReflect.Descriptor instead.
func (*HTTPConfig_BasicAuth) Descriptor() ([]byte, []int) {
	return file_managementpb_ia_channels_proto_rawDescGZIP(), []int{0, 0}
}

func (x *HTTPConfig_BasicAuth) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *HTTPConfig_BasicAuth) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *HTTPConfig_BasicAuth) GetPasswordFile() string {
	if x != nil {
		return x.PasswordFile
	}
	return ""
}

var File_managementpb_ia_channels_proto protoreflect.FileDescriptor

var file_managementpb_ia_channels_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x69,
	0x61, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa3, 0x02, 0x0a, 0x0a, 0x48,
	0x54, 0x54, 0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3f, 0x0a, 0x0a, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x09, 0x62, 0x61, 0x73, 0x69, 0x63, 0x41, 0x75, 0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x65,
	0x61, 0x72, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2a, 0x0a,
	0x11, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x6f,
	0x78, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x55, 0x72, 0x6c, 0x1a, 0x68, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x69, 0x63, 0x41,
	0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x65,
	0x22, 0x1d, 0x0a, 0x0b, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x22,
	0x27, 0x0a, 0x0b, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x9e, 0x01, 0x0a, 0x0d, 0x57, 0x65, 0x62,
	0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65,
	0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x37, 0x0a, 0x0b, 0x68, 0x74, 0x74, 0x70, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x48, 0x54, 0x54, 0x50, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a,
	0x68, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61,
	0x78, 0x5f, 0x61, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x6d, 0x61, 0x78, 0x41, 0x6c, 0x65, 0x72, 0x74, 0x73, 0x22, 0xf8, 0x01, 0x0a, 0x13, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x12, 0x44, 0x0a, 0x0f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x0e, 0x77, 0x65, 0x62, 0x68, 0x6f,
	0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x21, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5f, 0x0a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x08,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0xf1, 0x01, 0x0a, 0x1d, 0x41, 0x64, 0x64,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a,
	0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x6c,
	0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53,
	0x6c, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x73, 0x6c, 0x61, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x42, 0x0a, 0x0f, 0x77, 0x65, 0x62, 0x68,
	0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x57,
	0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x77, 0x65,
	0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x20, 0x0a, 0x1e,
	0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf4,
	0x01, 0x0a, 0x20, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0c, 0x73, 0x6c, 0x61, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x12, 0x42, 0x0a, 0x0f, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x57, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x77, 0x65, 0x62, 0x68, 0x6f, 0x6f, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x23, 0x0a, 0x21, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x20, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x23, 0x0a, 0x21, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd9, 0x05, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x12, 0xad, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x2b, 0x2e,
	0x69, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30,
	0x22, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x2f, 0x69, 0x61, 0x2f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x2f, 0x4c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0xa6, 0x01, 0x0a, 0x16, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x29, 0x2e, 0x69, 0x61,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x35, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2f, 0x22, 0x2a, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x69, 0x61, 0x2f, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x73, 0x2f, 0x41, 0x64, 0x64, 0x3a, 0x01, 0x2a, 0x12, 0xb2, 0x01, 0x0a, 0x19, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2c, 0x2e, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x69, 0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x22, 0x2d, 0x2f, 0x76,
	0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x69, 0x61, 0x2f,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x2f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0xb2,
	0x01, 0x0a, 0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x2c, 0x2e, 0x69,
	0x61, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x69, 0x61, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x32, 0x22, 0x2d, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x2f, 0x69, 0x61, 0x2f, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x2f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x3a, 0x01, 0x2a, 0x42, 0x1f, 0x5a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x69, 0x61, 0x3b, 0x69, 0x61, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_managementpb_ia_channels_proto_rawDescOnce sync.Once
	file_managementpb_ia_channels_proto_rawDescData = file_managementpb_ia_channels_proto_rawDesc
)

func file_managementpb_ia_channels_proto_rawDescGZIP() []byte {
	file_managementpb_ia_channels_proto_rawDescOnce.Do(func() {
		file_managementpb_ia_channels_proto_rawDescData = protoimpl.X.CompressGZIP(file_managementpb_ia_channels_proto_rawDescData)
	})
	return file_managementpb_ia_channels_proto_rawDescData
}

var file_managementpb_ia_channels_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_managementpb_ia_channels_proto_goTypes = []interface{}{
	(*HTTPConfig)(nil),                        // 0: ia.v1beta1.HTTPConfig
	(*EmailConfig)(nil),                       // 1: ia.v1beta1.EmailConfig
	(*SlackConfig)(nil),                       // 2: ia.v1beta1.SlackConfig
	(*WebhookConfig)(nil),                     // 3: ia.v1beta1.WebhookConfig
	(*NotificationChannel)(nil),               // 4: ia.v1beta1.NotificationChannel
	(*ListNotificationChannelsRequest)(nil),   // 5: ia.v1beta1.ListNotificationChannelsRequest
	(*ListNotificationChannelsResponse)(nil),  // 6: ia.v1beta1.ListNotificationChannelsResponse
	(*AddNotificationChannelRequest)(nil),     // 7: ia.v1beta1.AddNotificationChannelRequest
	(*AddNotificationChannelResponse)(nil),    // 8: ia.v1beta1.AddNotificationChannelResponse
	(*ChangeNotificationChannelRequest)(nil),  // 9: ia.v1beta1.ChangeNotificationChannelRequest
	(*ChangeNotificationChannelResponse)(nil), // 10: ia.v1beta1.ChangeNotificationChannelResponse
	(*RemoveNotificationChannelRequest)(nil),  // 11: ia.v1beta1.RemoveNotificationChannelRequest
	(*RemoveNotificationChannelResponse)(nil), // 12: ia.v1beta1.RemoveNotificationChannelResponse
	(*HTTPConfig_BasicAuth)(nil),              // 13: ia.v1beta1.HTTPConfig.BasicAuth
}
var file_managementpb_ia_channels_proto_depIdxs = []int32{
	13, // 0: ia.v1beta1.HTTPConfig.basic_auth:type_name -> ia.v1beta1.HTTPConfig.BasicAuth
	0,  // 1: ia.v1beta1.WebhookConfig.http_config:type_name -> ia.v1beta1.HTTPConfig
	1,  // 2: ia.v1beta1.NotificationChannel.email_config:type_name -> ia.v1beta1.EmailConfig
	2,  // 3: ia.v1beta1.NotificationChannel.slack_configs:type_name -> ia.v1beta1.SlackConfig
	3,  // 4: ia.v1beta1.NotificationChannel.webhook_configs:type_name -> ia.v1beta1.WebhookConfig
	4,  // 5: ia.v1beta1.ListNotificationChannelsResponse.channels:type_name -> ia.v1beta1.NotificationChannel
	1,  // 6: ia.v1beta1.AddNotificationChannelRequest.email_config:type_name -> ia.v1beta1.EmailConfig
	2,  // 7: ia.v1beta1.AddNotificationChannelRequest.slack_configs:type_name -> ia.v1beta1.SlackConfig
	3,  // 8: ia.v1beta1.AddNotificationChannelRequest.webhook_configs:type_name -> ia.v1beta1.WebhookConfig
	1,  // 9: ia.v1beta1.ChangeNotificationChannelRequest.email_config:type_name -> ia.v1beta1.EmailConfig
	2,  // 10: ia.v1beta1.ChangeNotificationChannelRequest.slack_configs:type_name -> ia.v1beta1.SlackConfig
	3,  // 11: ia.v1beta1.ChangeNotificationChannelRequest.webhook_configs:type_name -> ia.v1beta1.WebhookConfig
	5,  // 12: ia.v1beta1.NotificationChannels.ListNotificationChannels:input_type -> ia.v1beta1.ListNotificationChannelsRequest
	7,  // 13: ia.v1beta1.NotificationChannels.AddNotificationChannel:input_type -> ia.v1beta1.AddNotificationChannelRequest
	9,  // 14: ia.v1beta1.NotificationChannels.ChangeNotificationChannel:input_type -> ia.v1beta1.ChangeNotificationChannelRequest
	11, // 15: ia.v1beta1.NotificationChannels.RemoveNotificationChannel:input_type -> ia.v1beta1.RemoveNotificationChannelRequest
	6,  // 16: ia.v1beta1.NotificationChannels.ListNotificationChannels:output_type -> ia.v1beta1.ListNotificationChannelsResponse
	8,  // 17: ia.v1beta1.NotificationChannels.AddNotificationChannel:output_type -> ia.v1beta1.AddNotificationChannelResponse
	10, // 18: ia.v1beta1.NotificationChannels.ChangeNotificationChannel:output_type -> ia.v1beta1.ChangeNotificationChannelResponse
	12, // 19: ia.v1beta1.NotificationChannels.RemoveNotificationChannel:output_type -> ia.v1beta1.RemoveNotificationChannelResponse
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_managementpb_ia_channels_proto_init() }
func file_managementpb_ia_channels_proto_init() {
	if File_managementpb_ia_channels_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_managementpb_ia_channels_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_ia_channels_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_ia_channels_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlackConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_ia_channels_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebhookConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_ia_channels_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_ia_channels_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotificationChannelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_ia_channels_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNotificationChannelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_ia_channels_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNotificationChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_ia_channels_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddNotificationChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_ia_channels_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeNotificationChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_ia_channels_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeNotificationChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_ia_channels_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNotificationChannelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_ia_channels_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveNotificationChannelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_ia_channels_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HTTPConfig_BasicAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_managementpb_ia_channels_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*NotificationChannel_EmailConfig)(nil),
		(*NotificationChannel_SlackConfigs)(nil),
		(*NotificationChannel_WebhookConfigs)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_managementpb_ia_channels_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_managementpb_ia_channels_proto_goTypes,
		DependencyIndexes: file_managementpb_ia_channels_proto_depIdxs,
		MessageInfos:      file_managementpb_ia_channels_proto_msgTypes,
	}.Build()
	File_managementpb_ia_channels_proto = out.File
	file_managementpb_ia_channels_proto_rawDesc = nil
	file_managementpb_ia_channels_proto_goTypes = nil
	file_managementpb_ia_channels_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NotificationChannelsClient is the client API for NotificationChannels service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotificationChannelsClient interface {
	// ListNotificationChannels TODO.
	ListNotificationChannels(ctx context.Context, in *ListNotificationChannelsRequest, opts ...grpc.CallOption) (*ListNotificationChannelsResponse, error)
	// AddNotificationChannel TODO.
	AddNotificationChannel(ctx context.Context, in *AddNotificationChannelRequest, opts ...grpc.CallOption) (*AddNotificationChannelResponse, error)
	// ChangeNotificationChannel TODO.
	ChangeNotificationChannel(ctx context.Context, in *ChangeNotificationChannelRequest, opts ...grpc.CallOption) (*ChangeNotificationChannelResponse, error)
	// RemoveNotificationChannel TODO.
	RemoveNotificationChannel(ctx context.Context, in *RemoveNotificationChannelRequest, opts ...grpc.CallOption) (*RemoveNotificationChannelResponse, error)
}

type notificationChannelsClient struct {
	cc grpc.ClientConnInterface
}

func NewNotificationChannelsClient(cc grpc.ClientConnInterface) NotificationChannelsClient {
	return &notificationChannelsClient{cc}
}

func (c *notificationChannelsClient) ListNotificationChannels(ctx context.Context, in *ListNotificationChannelsRequest, opts ...grpc.CallOption) (*ListNotificationChannelsResponse, error) {
	out := new(ListNotificationChannelsResponse)
	err := c.cc.Invoke(ctx, "/ia.v1beta1.NotificationChannels/ListNotificationChannels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationChannelsClient) AddNotificationChannel(ctx context.Context, in *AddNotificationChannelRequest, opts ...grpc.CallOption) (*AddNotificationChannelResponse, error) {
	out := new(AddNotificationChannelResponse)
	err := c.cc.Invoke(ctx, "/ia.v1beta1.NotificationChannels/AddNotificationChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationChannelsClient) ChangeNotificationChannel(ctx context.Context, in *ChangeNotificationChannelRequest, opts ...grpc.CallOption) (*ChangeNotificationChannelResponse, error) {
	out := new(ChangeNotificationChannelResponse)
	err := c.cc.Invoke(ctx, "/ia.v1beta1.NotificationChannels/ChangeNotificationChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationChannelsClient) RemoveNotificationChannel(ctx context.Context, in *RemoveNotificationChannelRequest, opts ...grpc.CallOption) (*RemoveNotificationChannelResponse, error) {
	out := new(RemoveNotificationChannelResponse)
	err := c.cc.Invoke(ctx, "/ia.v1beta1.NotificationChannels/RemoveNotificationChannel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotificationChannelsServer is the server API for NotificationChannels service.
type NotificationChannelsServer interface {
	// ListNotificationChannels TODO.
	ListNotificationChannels(context.Context, *ListNotificationChannelsRequest) (*ListNotificationChannelsResponse, error)
	// AddNotificationChannel TODO.
	AddNotificationChannel(context.Context, *AddNotificationChannelRequest) (*AddNotificationChannelResponse, error)
	// ChangeNotificationChannel TODO.
	ChangeNotificationChannel(context.Context, *ChangeNotificationChannelRequest) (*ChangeNotificationChannelResponse, error)
	// RemoveNotificationChannel TODO.
	RemoveNotificationChannel(context.Context, *RemoveNotificationChannelRequest) (*RemoveNotificationChannelResponse, error)
}

// UnimplementedNotificationChannelsServer can be embedded to have forward compatible implementations.
type UnimplementedNotificationChannelsServer struct {
}

func (*UnimplementedNotificationChannelsServer) ListNotificationChannels(context.Context, *ListNotificationChannelsRequest) (*ListNotificationChannelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListNotificationChannels not implemented")
}
func (*UnimplementedNotificationChannelsServer) AddNotificationChannel(context.Context, *AddNotificationChannelRequest) (*AddNotificationChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddNotificationChannel not implemented")
}
func (*UnimplementedNotificationChannelsServer) ChangeNotificationChannel(context.Context, *ChangeNotificationChannelRequest) (*ChangeNotificationChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeNotificationChannel not implemented")
}
func (*UnimplementedNotificationChannelsServer) RemoveNotificationChannel(context.Context, *RemoveNotificationChannelRequest) (*RemoveNotificationChannelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveNotificationChannel not implemented")
}

func RegisterNotificationChannelsServer(s *grpc.Server, srv NotificationChannelsServer) {
	s.RegisterService(&_NotificationChannels_serviceDesc, srv)
}

func _NotificationChannels_ListNotificationChannels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListNotificationChannelsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationChannelsServer).ListNotificationChannels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ia.v1beta1.NotificationChannels/ListNotificationChannels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationChannelsServer).ListNotificationChannels(ctx, req.(*ListNotificationChannelsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationChannels_AddNotificationChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNotificationChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationChannelsServer).AddNotificationChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ia.v1beta1.NotificationChannels/AddNotificationChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationChannelsServer).AddNotificationChannel(ctx, req.(*AddNotificationChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationChannels_ChangeNotificationChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeNotificationChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationChannelsServer).ChangeNotificationChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ia.v1beta1.NotificationChannels/ChangeNotificationChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationChannelsServer).ChangeNotificationChannel(ctx, req.(*ChangeNotificationChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationChannels_RemoveNotificationChannel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveNotificationChannelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationChannelsServer).RemoveNotificationChannel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ia.v1beta1.NotificationChannels/RemoveNotificationChannel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationChannelsServer).RemoveNotificationChannel(ctx, req.(*RemoveNotificationChannelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NotificationChannels_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ia.v1beta1.NotificationChannels",
	HandlerType: (*NotificationChannelsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListNotificationChannels",
			Handler:    _NotificationChannels_ListNotificationChannels_Handler,
		},
		{
			MethodName: "AddNotificationChannel",
			Handler:    _NotificationChannels_AddNotificationChannel_Handler,
		},
		{
			MethodName: "ChangeNotificationChannel",
			Handler:    _NotificationChannels_ChangeNotificationChannel_Handler,
		},
		{
			MethodName: "RemoveNotificationChannel",
			Handler:    _NotificationChannels_RemoveNotificationChannel_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "managementpb/ia/channels.proto",
}
