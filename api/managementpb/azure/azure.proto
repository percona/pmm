syntax = "proto3";

package azure.v1beta1;

option go_package = "api/managementpb/azure;azurev1beta1";

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";

// DiscoverAzureDatabaseRequest discover azure databases request.
message DiscoverAzureDatabaseRequest {
  // Azure client ID.
  string azure_client_id = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Azure client secret.
  string azure_client_secret = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Azure tanant ID.
  string azure_tenant_id = 3 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Azure subscription ID.
  string azure_subscription_id = 4 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

// DiscoverAzureDatabaseType describes supported Azure Database instance engines.
enum DiscoverAzureDatabaseType {
  DISCOVER_AZURE_DATABASE_TYPE_INVALID = 0;
  // MySQL type: microsoft.dbformysql or MariaDB type: microsoft.dbformariadb
  DISCOVER_AZURE_DATABASE_TYPE_MYSQL = 1;
  // PostgreSQL type: microsoft.dbformysql
  DISCOVER_AZURE_DATABASE_TYPE_POSTGRESQL = 2;
}

// DiscoverAzureDatabaseInstance models an unique Azure Database instance for the list of instances returned by Discovery.
message DiscoverAzureDatabaseInstance {
  // Azure database instance ID.
  string instance_id = 1;
  // Azure database location.
  string region = 2;
  // Azure database server name.
  string service_name = 3;
  // Database username.
  string username = 4;
  // Address used to connect to it.
  string address = 5;
  // Azure Resource group.
  string azure_resource_group = 6;
  // Environment tag.
  string environment = 7;
  // Database type.
  DiscoverAzureDatabaseType type = 8;
  // Azure database availability zone.
  string az = 9;
  // Represents a purchasable Stock Keeping Unit (SKU) under a product.
  // https://docs.microsoft.com/en-us/partner-center/develop/product-resources#sku.
  string node_model = 10;
}

// DiscoverAzureDatabaseResponse discover azure databases response.
message DiscoverAzureDatabaseResponse {
  repeated DiscoverAzureDatabaseInstance azure_database_instance = 1;
}

message AddAzureDatabaseRequest {
  // Azure database location.
  string region = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Azure database availability zone.
  string az = 2;
  // Azure database instance ID.
  string instance_id = 3 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Represents a purchasable Stock Keeping Unit (SKU) under a product.
  // https://docs.microsoft.com/en-us/partner-center/develop/product-resources#sku.
  string node_model = 4;
  // Address used to connect to it.
  string address = 5 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Access port.
  uint32 port = 6 [
    (validator.field) = {
      int_gt: 0
    }
  ];
  // Unique across all Nodes user-defined name. Defaults to Azure Database instance ID.
  string node_name = 7;
  // Unique across all Services user-defined name. Defaults to Azure Database instance ID.
  string service_name = 8;
  // Environment name.
  string environment = 9;
  // Username for scraping metrics.
  string username = 10 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Password for scraping metrics.
  string password = 11;
  // Azure client ID.
  string azure_client_id = 12 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Azure client secret.
  string azure_client_secret = 13 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Azure tanant ID.
  string azure_tenant_id = 14 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Azure subscription ID.
  string azure_subscription_id = 15 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Azure resource group.
  string azure_resource_group = 16 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // If true, adds azure_database_exporter.
  bool azure_database_exporter = 17;
  // If true, adds qan-mysql-perfschema-agent or qan-postgresql-pgstatements-agent.
  bool qan = 18;
  // Custom user-assigned labels for Node and Service.
  map<string, string> custom_labels = 19;
  // Skip connection check.
  bool skip_connection_check = 20;
  // Use TLS for database connections.
  bool tls = 21;
  // Skip TLS certificate and hostname validation.
  bool tls_skip_verify = 22;
  // Disable query examples.
  bool disable_query_examples = 23;
  // Tablestats group collectors will be disabled if there are more than that number of tables.
  // If zero, server's default value is used.
  // Use negative value to disable them.
  int32 tablestats_group_table_limit = 24;
  // Azure database resource type (mysql, maria, postgres)
  DiscoverAzureDatabaseType type = 25;
}

message AddAzureDatabaseResponse {}

// AzureDatabase service provides Service Discovery APIs.
service AzureDatabase {
  // DiscoverAzureDatabase discovers Azure Database for MySQL, MariaDB and PostgreSQL Server instances.
  rpc DiscoverAzureDatabase(DiscoverAzureDatabaseRequest) returns (DiscoverAzureDatabaseResponse) {
    option (google.api.http) = {
      post: "/v1/management/azure/AzureDatabase/Discover"
      body: "*"
    };
  }
  // AddAzureDatabase adds Azure Database instance.
  rpc AddAzureDatabase(AddAzureDatabaseRequest) returns (AddAzureDatabaseResponse) {
    option (google.api.http) = {
      post: "/v1/management/azure/AzureDatabase/Add"
      body: "*"
    };
  }
}
