syntax = "proto3";

package management;

// This option is used to set the default error response for all Swagger APIs generated from this file.
// See also header.json.
// It has to be copy&pasted into each file.
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  responses: {
    key: "default"
    value: {
      description: "An error response."
      schema: {
        json_schema: {
          ref: "#/definitions/managementpbErrorResponse"
        }
      }
    }
  }
};
option go_package = "managementpb";

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "inventorypb/agents.proto";
import "inventorypb/nodes.proto";
import "protoc-gen-swagger/options/annotations.proto";

message RegisterNodeRequest {
  // Type of node which will be registered.
  inventory.NodeType node_type = 1;
  // Unique across all Nodes user-defined name, can be changed.
  string node_name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Linux machine-id. Can't be changed. Must be unique across all Generic Nodes if specified (optional).
  string machine_id = 3;
  // Linux distribution. For Generic nodes (optional).
  string distro = 4;
  // Сontainer identifier. Only for Container Nodes (optional).
  string container_id = 6;
  // Сontainer name. Only for Container Nodes (optional).
  string container_name = 7;
  // Custom user-assigned labels for node (optional).
  map<string, string> custom_labels = 10;
  // Address FIXME https://jira.percona.com/browse/PMM-3786
  string address = 42;
}

message RegisterNodeResponse {
  inventory.GenericNode generic_node = 1;
  inventory.ContainerNode container_node = 2;
  inventory.PMMAgent pmm_agent = 3;
}

// Node service provides public Management API methods for operating with nodes.
service Node {
  // Register do node registration.
  rpc Register(RegisterNodeRequest) returns (RegisterNodeResponse) {
    option (google.api.http) = {
      post: "/v1/management/Node/Register"
      body: "*"
    };
  }
}
