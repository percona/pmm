syntax = "proto3";

package management;

option go_package = "managementpb";

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "inventorypb/agents.proto";
import "inventorypb/nodes.proto";

message RegisterNodeRequest {
  // Node type to be registered.
  inventory.NodeType node_type = 1;
  // Unique across all Nodes user-defined name.
  string node_name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Node address (DNS name or IP).
  string address = 3;
  // Linux machine-id.
  string machine_id = 4;
  // Linux distribution name and version.
  string distro = 5;
  // Container identifier. If specified, must be a unique Docker container identifier.
  string container_id = 6;
  // Container name.
  string container_name = 7;
  // Node model.
  string node_model = 8;
  // Node region.
  string region = 9;
  // Node availability zone.
  string az = 10;
  // Custom user-assigned labels for Node.
  map<string, string> custom_labels = 11;
  // If true, and Node with that name already exist, it will be removed with all dependent Services and Agents.
  bool reregister = 12;
}

message RegisterNodeResponse {
  inventory.GenericNode generic_node = 1;
  inventory.ContainerNode container_node = 2;
  inventory.PMMAgent pmm_agent = 3;
}

// Node service provides public Management API methods for Nodes.
service Node {
  // RegisterNode registers a new Node and pmm-agent.
  rpc RegisterNode(RegisterNodeRequest) returns (RegisterNodeResponse) {
    option (google.api.http) = {
      post: "/v1/management/Node/Register"
      body: "*"
    };
  }
}
