syntax = "proto3";

package management;

option go_package = "api/managementpb;managementpb";

import "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-openapiv2/options/annotations.proto";
import "google/api/annotations.proto";
import "managementpb/severity.proto";

// SecurityCheckInterval represents possible execution interval values for checks.
enum SecurityCheckInterval {
  SECURITY_CHECK_INTERVAL_INVALID = 0;
  STANDARD = 1;
  FREQUENT = 2;
  RARE = 3;
}

// SecurityCheckResult represents the check result returned from pmm-managed after running the check.
message SecurityCheckResult {
  string summary = 1;
  string description = 2;
  Severity severity = 3;
  map<string, string> labels = 4;
  // URL containing information on how to resolve an issue detected by an STT check.
  string read_more_url = 5;
  // Name of the monitored service on which the check ran.
  string service_name = 6;
}

// SecurityCheck contains check name and status.
message SecurityCheck {
  // Machine-readable name (ID) that is used in expression.
  string name = 1;
  // True if that check is disabled.
  bool disabled = 2;
  // Long human-readable description.
  string description = 3;
  // Short human-readable summary.
  string summary = 4;
  // Check execution interval.
  SecurityCheckInterval interval = 5;
}

// ChangeSecurityCheckParams specifies a single check parameters.
message ChangeSecurityCheckParams {
  // The name of the check to change.
  string name = 1;
  bool enable = 2;
  bool disable = 3;
  // check execution interval.
  SecurityCheckInterval interval = 4;
}

message GetSecurityCheckResultsRequest {}

message GetSecurityCheckResultsResponse {
  repeated SecurityCheckResult results = 1;
}

message StartSecurityChecksRequest {
  // Names of the checks that should be started.
  repeated string names = 1;
}

message StartSecurityChecksResponse {}

message ListSecurityChecksRequest {}

message ListSecurityChecksResponse {
  repeated SecurityCheck checks = 1;
}

message ChangeSecurityChecksRequest {
  repeated ChangeSecurityCheckParams params = 1;
}

message ChangeSecurityChecksResponse {}

// SecurityChecks service provides public Management API methods for Security Checks Service.
service SecurityChecks {
  // GetSecurityCheckResults returns Security Thread Tool's latest checks results.
  rpc GetSecurityCheckResults(GetSecurityCheckResultsRequest) returns (GetSecurityCheckResultsResponse) {
    option (google.api.http) = {
      post: "/v1/management/SecurityChecks/GetCheckResults"
      body: "*"
    };
  }
  // StartSecurityChecks executes Security Thread Tool checks and returns when all checks are executed.
  rpc StartSecurityChecks(StartSecurityChecksRequest) returns (StartSecurityChecksResponse) {
    option (google.api.http) = {
      post: "/v1/management/SecurityChecks/Start"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "All the available checks will be started if check names aren't specified."
    };
  }
  // ListSecurityChecks returns a list of available Security Thread Tool checks.
  rpc ListSecurityChecks(ListSecurityChecksRequest) returns (ListSecurityChecksResponse) {
    option (google.api.http) = {
      post: "/v1/management/SecurityChecks/List"
      body: "*"
    };
  }
  // ChangeSecurityChecks enables/disables Security Thread Tool checks or changes their interval by names.
  rpc ChangeSecurityChecks(ChangeSecurityChecksRequest) returns (ChangeSecurityChecksResponse) {
    option (google.api.http) = {
      post: "/v1/management/SecurityChecks/Change"
      body: "*"
    };
  }
}
