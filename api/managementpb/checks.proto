syntax = "proto3";

package management;

option go_package = "api/managementpb;managementpb";

import "google/api/annotations.proto";

message StartSecurityChecksRequest {}

message StartSecurityChecksResponse {}

message GetSecurityCheckResultsRequest {}

// Severity represents severity level of the check result.
enum Severity {
  SEVERITY_INVALID = 0;
  SEVERITY_EMERGENCY = 1;
  SEVERITY_ALERT = 2;
  SEVERITY_CRITICAL = 3;
  SEVERITY_ERROR = 4;
  SEVERITY_WARNING = 5;
  SEVERITY_NOTICE = 6;
  SEVERITY_INFO = 7;
  SEVERITY_DEBUG = 8;
}

// SecurityCheckResult represents the check result returned from pmm-managed after running the check.
message SecurityCheckResult {
  string summary = 1;
  string description = 2;
  Severity severity = 3;
  map<string, string> labels = 4;
}

// SecurityCheckState contains check name and status.
message SecurityCheckState {
  string name = 1;
  bool disabled = 2;
}

// SecurityCheckParams specifies check parameters.
message SecurityCheckParams {
  string name = 1;
  bool enable = 2;
  bool disable = 3;
}

message GetSecurityCheckResultsResponse {
  repeated SecurityCheckResult results = 1;
}

message ListSecurityChecksRequest {}

message ListSecurityChecksResponse {
  repeated SecurityCheckState checks = 1;
}

message ToggleSecurityChecksRequest {
  repeated SecurityCheckParams checks = 1;
}

message ToggleSecurityChecksResponse {}

// SecurityChecks service provides public Management API methods for Security Checks Service.
service SecurityChecks {
  // GetSecurityCheckResults start Security Thread Tool checks.
  rpc GetSecurityCheckResults(GetSecurityCheckResultsRequest) returns (GetSecurityCheckResultsResponse) {
    option (google.api.http) = {
      post: "/v1/management/SecurityChecks/GetCheckResults"
      body: "*"
    };
  }
  // StartSecurityChecks start Security Thread Tool checks.
  rpc StartSecurityChecks(StartSecurityChecksRequest) returns (StartSecurityChecksResponse) {
    option (google.api.http) = {
      post: "/v1/management/SecurityChecks/Start"
      body: "*"
    };
  }
  // ListSecurityChecks returns list of available Security Checks and their status.
  rpc ListSecurityChecks(ListSecurityChecksRequest) returns (ListSecurityChecksResponse) {
    option (google.api.http) = {
      post: "/v1/management/SecurityChecks/List"
      body: "*"
    };
  }
  // ToggleSecurityChecks enables/disables Security Checks by name.
  rpc ToggleSecurityChecks(ToggleSecurityChecksRequest) returns (ToggleSecurityChecksResponse) {
    option (google.api.http) = {
      post: "/v1/management/SecurityChecks/Toggle"
      body: "*"
    };
  }
}
