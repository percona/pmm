{
  "swagger": "2.0",
  "info": {
    "title": "managementpb/service/service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "MgmtService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/management/Service/List": {
      "post": {
        "summary": "List Services",
        "description": "Returns a filtered list of Services.",
        "operationId": "ListServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListServiceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ListServiceRequest"
            }
          }
        ],
        "tags": [
          "MgmtService"
        ]
      }
    }
  },
  "definitions": {
    "UniversalAgentAzureOptions": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "Azure client ID."
        },
        "is_client_secret_set": {
          "type": "boolean",
          "description": "True if Azure client secret is set."
        },
        "resource_group": {
          "type": "string",
          "description": "Azure resource group."
        },
        "subscription_id": {
          "type": "string",
          "description": "Azure subscription ID."
        },
        "tenant_id": {
          "type": "string",
          "description": "Azure tenant ID."
        }
      }
    },
    "UniversalAgentMongoDBOptions": {
      "type": "object",
      "properties": {
        "is_tls_certificate_key_set": {
          "type": "boolean",
          "description": "True if TLS certificate is set."
        },
        "is_tls_certificate_key_file_password_set": {
          "type": "boolean",
          "description": "True if TLS certificate file password is set."
        },
        "tls_ca": {
          "type": "string",
          "description": "TLS CA certificate."
        },
        "authentication_mechanism": {
          "type": "string",
          "description": "MongoDB auth mechanism."
        },
        "authentication_database": {
          "type": "string",
          "description": "MongoDB auth database."
        },
        "stats_collections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "MongoDB stats collections."
        },
        "collections_limit": {
          "type": "integer",
          "format": "int32",
          "description": "MongoDB collections limit."
        },
        "enable_all_collectors": {
          "type": "boolean",
          "description": "True if all collectors are enabled."
        }
      }
    },
    "UniversalAgentMySQLOptions": {
      "type": "object",
      "properties": {
        "tls_ca": {
          "type": "string",
          "description": "TLS CA certificate."
        },
        "tls_cert": {
          "type": "string",
          "description": "TLS certificate."
        },
        "is_tls_key_set": {
          "type": "boolean",
          "description": "True if TLS key is set."
        }
      }
    },
    "UniversalAgentPostgreSQLOptions": {
      "type": "object",
      "properties": {
        "ssl_ca": {
          "type": "string",
          "description": "TLS CA certificate."
        },
        "ssl_cert": {
          "type": "string",
          "description": "TLS certificate."
        },
        "is_ssl_key_set": {
          "type": "boolean",
          "description": "True if TLS key is set."
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "inventoryServiceType": {
      "type": "string",
      "enum": [
        "SERVICE_TYPE_INVALID",
        "MYSQL_SERVICE",
        "MONGODB_SERVICE",
        "POSTGRESQL_SERVICE",
        "PROXYSQL_SERVICE",
        "HAPROXY_SERVICE",
        "EXTERNAL_SERVICE"
      ],
      "default": "SERVICE_TYPE_INVALID",
      "description": "ServiceType describes supported Service types."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "v1beta1ListServiceRequest": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "Return only Services running on that Node."
        },
        "service_type": {
          "$ref": "#/definitions/inventoryServiceType",
          "description": "Return only services filtered by service type."
        },
        "external_group": {
          "type": "string",
          "description": "Return only services in this external group."
        }
      }
    },
    "v1beta1ListServiceResponse": {
      "type": "object",
      "properties": {
        "services": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1UniversalService"
          },
          "description": "List of Services."
        }
      }
    },
    "v1beta1UniversalAgent": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique agent identifier."
        },
        "is_agent_password_set": {
          "type": "boolean",
          "description": "True if the agent password is set."
        },
        "agent_type": {
          "type": "string",
          "description": "Agent type."
        },
        "aws_access_key": {
          "type": "string",
          "description": "AWS Access Key."
        },
        "is_aws_secret_key_set": {
          "type": "boolean",
          "description": "True if AWS Secret Key is set."
        },
        "azure_options": {
          "$ref": "#/definitions/UniversalAgentAzureOptions",
          "description": "Options used for connecting to Azure."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "disabled": {
          "type": "boolean",
          "description": "Desired Agent status: enabled (false) or disabled (true)."
        },
        "disabled_collectors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of disabled collector names."
        },
        "listen_port": {
          "type": "integer",
          "format": "int64",
          "description": "Listen port for scraping metrics."
        },
        "log_level": {
          "type": "string",
          "description": "Log level for exporter."
        },
        "max_query_length": {
          "type": "integer",
          "format": "int32",
          "description": "Limit query length in QAN."
        },
        "max_query_log_size": {
          "type": "string",
          "format": "int64",
          "description": "Limit query log size in QAN."
        },
        "metrics_path": {
          "type": "string",
          "description": "Path under which metrics are exposed, used to generate URI."
        },
        "metrics_scheme": {
          "type": "string",
          "description": "Scheme to generate URI to exporter metrics endpoints."
        },
        "mongo_db_options": {
          "$ref": "#/definitions/UniversalAgentMongoDBOptions",
          "description": "TLS and other options for connecting to MongoDB."
        },
        "mysql_options": {
          "$ref": "#/definitions/UniversalAgentMySQLOptions",
          "description": "TLS options for connecting to MySQL."
        },
        "node_id": {
          "type": "string",
          "description": "A unique node identifier."
        },
        "is_password_set": {
          "type": "boolean",
          "description": "True if password for connecting the agent to the database is set."
        },
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier."
        },
        "postgresql_options": {
          "$ref": "#/definitions/UniversalAgentPostgreSQLOptions",
          "description": "TLS options for connecting to PostgreSQL."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        },
        "push_metrics": {
          "type": "boolean",
          "description": "True if exporter uses push metrics mode."
        },
        "query_examples_disabled": {
          "type": "boolean",
          "description": "True if query examples are disabled."
        },
        "comments_parsing_disabled": {
          "type": "boolean",
          "description": "True if query comments parsing is disabled."
        },
        "rds_basic_metrics_disabled": {
          "type": "boolean",
          "description": "True if RDS basic metrics are disdabled."
        },
        "rds_enhanced_metrics_disabled": {
          "type": "boolean",
          "description": "True if RDS enhanced metrics are disdabled."
        },
        "runs_on_node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "status": {
          "type": "string",
          "description": "Actual Agent status."
        },
        "table_count": {
          "type": "integer",
          "format": "int32",
          "description": "Last known table count."
        },
        "table_count_tablestats_group_limit": {
          "type": "integer",
          "format": "int32",
          "description": "Tablestats group collectors are disabled if there are more than that number of tables.\n0 means tablestats group collectors are always enabled (no limit).\nNegative value means tablestats group collectors are always disabled."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "username": {
          "type": "string",
          "description": "HTTP basic auth username for collecting metrics."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        },
        "version": {
          "type": "string",
          "description": "Agent version."
        },
        "is_connected": {
          "type": "boolean",
          "description": "True if Agent is running and connected to pmm-managed."
        }
      }
    },
    "v1beta1UniversalService": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Unique service identifier."
        },
        "service_type": {
          "type": "string",
          "description": "Service type."
        },
        "service_name": {
          "type": "string",
          "description": "User-defined name unique across all Services."
        },
        "database_name": {
          "type": "string",
          "description": "Database name."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs."
        },
        "node_name": {
          "type": "string",
          "description": "Node name where this instance runs."
        },
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster name."
        },
        "replication_set": {
          "type": "string",
          "description": "Replication set name."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels for Service."
        },
        "external_group": {
          "type": "string",
          "description": "External group name."
        },
        "address": {
          "type": "string",
          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "Access port.\nPort is required when the address present."
        },
        "socket": {
          "type": "string",
          "description": "Access unix socket.\nAddress (and port) or socket is required."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        },
        "agents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1UniversalAgent"
          },
          "description": "List of agents related to this service."
        },
        "status": {
          "$ref": "#/definitions/v1beta1UniversalServiceStatus",
          "description": "The health status of the service."
        }
      }
    },
    "v1beta1UniversalServiceStatus": {
      "type": "string",
      "enum": [
        "STATUS_INVALID",
        "UP",
        "DOWN",
        "UNKNOWN"
      ],
      "default": "STATUS_INVALID",
      "description": "Service status.\n\n - STATUS_INVALID: In case we don't support the db vendor yet.\n - UP: The service is up.\n - DOWN: The service is down.\n - UNKNOWN: The service's status cannot be known (e.g. there are no metrics yet)."
    }
  }
}
