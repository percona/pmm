syntax = "proto3";

package management;

// This option is used to set the default error response for all Swagger APIs generated from this file.
// See also header.json.
// It has to be copy&pasted into each file.
option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  responses: {
    key: "default"
    value: {
      description: "An error response."
      schema: {
        json_schema: {
          ref: "#/definitions/managementpbErrorResponse"
        }
      }
    }
  }
};
option go_package = "managementpb";

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

// ActionType represents Action type.
enum ActionType {
  ACTION_TYPE_INVALID = 0;
  PT_SUMMARY = 1;
  PT_MYSQL_SUMMARY = 2;
  MYSQL_EXPLAIN = 8;
  MYSQL_SHOW_CREATE_TABLE = 9;
  MYSQL_SHOW_TABLE_INFO = 10;
}

message GetActionRequest {
  // Unique Action ID.
  string action_id = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message GetActionResponse {
  // Unique Action ID.
  string action_id = 1;
  // pmm-agent ID where this Action is running / was run.
  string pmm_agent_id = 2;
  // Current Action output; may be partial if Action is still running.
  string output = 3;
  // True if Action is finished.
  bool done = 4;
  // Error message if Action failed.
  string error = 5;
}

message StartPTSummaryActionRequest {
  // pmm-agent ID where to run this Action.
  string pmm_agent_id = 1;
  // Node ID for this Action.
  string node_id = 2;
  //
  // TODO pt-summary-specific parameters if we need them.

}

message StartPTSummaryActionResponse {
  // Unique Action ID.
  string action_id = 1;
  // pmm-agent ID where to this Action was started.
  string pmm_agent_id = 2;
}

message StartPTMySQLSummaryActionRequest {
  // pmm-agent ID where to run this Action.
  string pmm_agent_id = 1;
  // Service ID for this Action.
  string service_id = 2;
  //
  // TODO pt-mysql-summary-specific parameters if we need them.

}

message StartPTMySQLSummaryActionResponse {
  // Unique Action ID.
  string action_id = 1;
  // pmm-agent ID where to this Action was started.
  string pmm_agent_id = 2;
}

message StartMySQLExplainActionRequest {
  // pmm-agent ID where to run this Action.
  string pmm_agent_id = 1;
  // Service ID for this Action.
  string service_id = 2;
  // query example.
  string query = 3;
  // The database name for EXPLAIN query.
  string database = 4;
}

message StartMySQLExplainActionResponse {
  // Unique Action ID.
  string action_id = 1;
  // pmm-agent ID where to this Action was started.
  string pmm_agent_id = 2;
}

message StartMySQLExplainJSONActionRequest {
  // pmm-agent ID where to run this Action.
  string pmm_agent_id = 1;
  // Service ID for this Action.
  string service_id = 2;
  // query example.
  string query = 3;
  // The database name for EXPLAIN query.
  string database = 4;
}

message StartMySQLExplainJSONActionResponse {
  // Unique Action ID.
  string action_id = 1;
  // pmm-agent ID where to this Action was started.
  string pmm_agent_id = 2;
}

message StartMySQLShowCreateTableActionRequest {
  // pmm-agent ID where to run this Action.
  string pmm_agent_id = 1;
  // Service ID for this Action.
  string service_id = 2;
  // Table name for SHOW CREATE TABLE query.
  string table_name = 3;
  // The database name for SHOW CREATE TABLE query.
  string database = 4;
}

message StartMySQLShowCreateTableActionResponse {
  // Unique Action ID.
  string action_id = 1;
  // pmm-agent ID where to this Action was started.
  string pmm_agent_id = 2;
}

message StartMySQLShowTableStatusActionRequest {
  // pmm-agent ID where to run this Action.
  string pmm_agent_id = 1;
  // Service ID for this Action.
  string service_id = 2;
  // Table name for SHOW TABLE STATUS query.
  string table_name = 3;
  // The database name for SHOW TABLE STATUS query.
  string database = 4;
}

message StartMySQLShowTableStatusActionResponse {
  // Unique Action ID.
  string action_id = 1;
  // pmm-agent ID where to this Action was started.
  string pmm_agent_id = 2;
}

message CancelActionRequest {
  // Unique Action ID.
  string action_id = 1;
}

message CancelActionResponse {}

// Actions service provides public Management API methods for Actions.
service Actions {
  // GetAction gets an result of given Action.
  rpc GetAction(GetActionRequest) returns (GetActionResponse) {
    option (google.api.http) = {
      post: "/v0/management/Actions/Get"
      body: "*"
    };
  }
  // StartPTSummaryAction starts pt-summary Action.
  rpc StartPTSummaryAction(StartPTSummaryActionRequest) returns (StartPTSummaryActionResponse) {
    option (google.api.http) = {
      post: "/v0/management/Actions/StartPTSummary"
      body: "*"
    };
  }
  // StartPTMySQLSummaryAction starts pt-mysql-summary Action.
  rpc StartPTMySQLSummaryAction(StartPTMySQLSummaryActionRequest) returns (StartPTMySQLSummaryActionResponse) {
    option (google.api.http) = {
      post: "/v0/management/Actions/StartPTMySQLSummary"
      body: "*"
    };
  }
  // StartMySQLExplainAction starts MySQL EXPLAIN Action.
  rpc StartMySQLExplainAction(StartMySQLExplainActionRequest) returns (StartMySQLExplainActionResponse) {
    option (google.api.http) = {
      post: "/v0/management/Actions/StartMySQLExplain"
      body: "*"
    };
  }
  // StartMySQLExplainJSONAction starts MySQL JSON EXPLAIN Action.
  rpc StartMySQLExplainJSONAction(StartMySQLExplainJSONActionRequest) returns (StartMySQLExplainJSONActionResponse) {
    option (google.api.http) = {
      post: "/v0/management/Actions/StartMySQLExplainJSON"
      body: "*"
    };
  }
  // StartMySQLShowCreateTableAction starts MySQL SHOW CREATE TABLE Action.
  rpc StartMySQLShowCreateTableAction(StartMySQLShowCreateTableActionRequest) returns (StartMySQLShowCreateTableActionResponse) {
    option (google.api.http) = {
      post: "/v0/management/Actions/StartMySQLShowCreateTable"
      body: "*"
    };
  }
  // StartMySQLShowTableStatusAction starts MySQL SHOW TABLE STATUS Action.
  rpc StartMySQLShowTableStatusAction(StartMySQLShowTableStatusActionRequest) returns (StartMySQLShowTableStatusActionResponse) {
    option (google.api.http) = {
      post: "/v0/management/Actions/StartMySQLShowTableStatus"
      body: "*"
    };
  }
  // CancelAction stops an Action.
  rpc CancelAction(CancelActionRequest) returns (CancelActionResponse) {
    option (google.api.http) = {
      post: "/v0/management/Actions/Cancel"
      body: "*"
    };
  }
}
