syntax = "proto3";

package dbaas.v1beta1;

option go_package = "api/managementpb/dbaas;dbaasv1beta1";

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "managementpb/dbaas/dbaas.proto";

// TODO move it to parent directory / package once API is v1-stable

// XtraDBClusterState represents XtraDB cluster CR state.
enum XtraDBClusterState {
  // XTRA_DB_CLUSTER_STATE_INVALID represents unknown state.
  XTRA_DB_CLUSTER_STATE_INVALID = 0;
  // XTRA_DB_CLUSTER_STATE_CHANGING represents a cluster being changed.
  XTRA_DB_CLUSTER_STATE_CHANGING = 1;
  // XTRA_DB_CLUSTER_STATE_READY represents a cluster without pending changes.
  XTRA_DB_CLUSTER_STATE_READY = 2;
  // XTRA_DB_CLUSTER_STATE_FAILED represents a failed cluster.
  XTRA_DB_CLUSTER_STATE_FAILED = 3;
  // XTRA_DB_CLUSTER_STATE_DELETING represents a cluster being deleting.
  XTRA_DB_CLUSTER_STATE_DELETING = 4;
  // XTRA_DB_CLUSTER_STATE_PAUSED represents a cluster is paused.
  XTRA_DB_CLUSTER_STATE_PAUSED = 5;
}

// XtraDBBackupState represents XtraDB backup CR state.
enum XtraDBBackupState {
  // XTRA_DB_BACKUP_STATE_INVALID represents unknown state.
  XTRA_DB_BACKUP_STATE_INVALID = 0;
  // XTRA_DB_BACKUP_STATE_RUNNING represents running backup.
  XTRA_DB_BACKUP_STATE_RUNNING = 1;
  // XTRA_DB_BACKUP_STATE_SUCCEEDED represents succeeded backup.
  XTRA_DB_BACKUP_STATE_SUCCEEDED = 2;
  // XTRA_DB_BACKUP_STATE_FAILED represents failed backup.
  XTRA_DB_BACKUP_STATE_FAILED = 3;
}

// XtraDBClusterParams represents XtraDB cluster parameters that can be updated.
message XtraDBClusterParams {
  // PXC container parameters.
  // TODO Do not use inner messages in all public APIs (for consistency).
  message PXC {
    // Requested compute resources.
    ComputeResources compute_resources = 1;
    // Disk size in bytes.
    int64 disk_size = 2 [
      (validator.field) = {
        int_gt: 0
      }
    ];
  }
  // ProxySQL container parameters.
  // TODO Do not use inner messages in all public APIs (for consistency).
  message ProxySQL {
    // Requested compute resources.
    ComputeResources compute_resources = 1;
    // Disk size in bytes.
    int64 disk_size = 2 [
      (validator.field) = {
        int_gt: 0
      }
    ];
  }
  // Cluster size.
  int32 cluster_size = 1 [
    (validator.field) = {
      int_gt: 0
    }
  ];
  // PXC container parameters.
  PXC pxc = 2 [
    (validator.field) = {
      msg_exists: true
    }
  ];
  // ProxySQL container parameters.
  ProxySQL proxysql = 3 [
    (validator.field) = {
      msg_exists: true
    }
  ];
}

message ListXtraDBClustersRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message ListXtraDBClustersResponse {
  // Cluster represents XtraDB cluster information.
  // TODO Do not use inner messages in all public APIs (for consistency).
  message Cluster {
    // Cluster name.
    string name = 1;
    // Cluster state.
    XtraDBClusterState state = 2;
    // Currently running operation, if any.
    RunningOperation operation = 3;
    // Cluster parameters.
    XtraDBClusterParams params = 4;
  }
  // XtraDB clusters information.
  repeated Cluster clusters = 1;
}

message GetXtraDBClusterCredentialsRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // XtraDB cluster name.
  string name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

// XtraDBClusterConnectionCredentials is cluster connection credentials.
message XtraDBClusterConnectionCredentials {
  // ProxySQL username.
  string username = 1;
  // ProxySQL password.
  string password = 2;
  // ProxySQL host.
  string host = 3;
  // ProxySQL port.
  int32 port = 4;
}

message GetXtraDBClusterCredentialsResponse {
  // Cluster connection credentials.
  XtraDBClusterConnectionCredentials connection_credentials = 1;
}

message CreateXtraDBClusterRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // XtraDB cluster name.
  // a DNS-1035 label must consist of lower case alphanumeric characters or '-',
  // start with an alphabetic character, and end with an alphanumeric character
  // (e.g. 'my-name',  or 'abc-123', regex used for validation is '[a-z]([-a-z0-9]*[a-z0-9])?')
  string name = 2 [
    (validator.field) = {
      regex: "^[a-z]([-a-z0-9]*[a-z0-9])?$"
    }
  ];
  // Cluster parameters.
  XtraDBClusterParams params = 3 [
    (validator.field) = {
      msg_exists: true
    }
  ];
}

message CreateXtraDBClusterResponse {}

message UpdateXtraDBClusterRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // XtraDB cluster name.
  string name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // UpdateXtraDBClusterParams represents XtraDB cluster parameters that can be updated.
  message UpdateXtraDBClusterParams {
    // PXC container parameters.
    message PXC {
      // Requested compute resources.
      ComputeResources compute_resources = 1;
    }
    // ProxySQL container parameters.
    message ProxySQL {
      // Requested compute resources.
      ComputeResources compute_resources = 1;
    }
    // Cluster size.
    int32 cluster_size = 1;
    // PXC container parameters.
    PXC pxc = 2;
    // ProxySQL container parameters.
    ProxySQL proxysql = 3;
    // Suspend cluster `pause: true`.
    bool suspend = 4;
    // Resume cluster `pause: false`.
    bool resume = 5;
  }
  // Cluster parameters.
  UpdateXtraDBClusterParams params = 3;
}

message UpdateXtraDBClusterResponse {}

message DeleteXtraDBClusterRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // XtraDB cluster name.
  string name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message DeleteXtraDBClusterResponse {}

message RestartXtraDBClusterRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // XtraDB cluster name.
  string name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message RestartXtraDBClusterResponse {}

// XtraDBCluster service provides public methods for managing XtraDB clusters.
service XtraDBCluster {
  // ListXtraDBClusters returns a list of XtraDB clusters.
  rpc ListXtraDBClusters(ListXtraDBClustersRequest) returns (ListXtraDBClustersResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/XtraDBClusters/List"
      body: "*"
    };
  }
  // GetXtraDBClusterCredentials returns a XtraDB cluster credentials by cluster name.
  rpc GetXtraDBClusterCredentials(GetXtraDBClusterCredentialsRequest) returns (GetXtraDBClusterCredentialsResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/XtraDBClusters/GetCredentials"
      body: "*"
    };
  }
  // CreateXtraDBCluster creates a new XtraDB cluster.
  rpc CreateXtraDBCluster(CreateXtraDBClusterRequest) returns (CreateXtraDBClusterResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/XtraDBCluster/Create"
      body: "*"
    };
  }
  // UpdateXtraDBCluster updates existing XtraDB cluster.
  rpc UpdateXtraDBCluster(UpdateXtraDBClusterRequest) returns (UpdateXtraDBClusterResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/XtraDBCluster/Update"
      body: "*"
    };
  }
  // DeleteXtraDBCluster deletes XtraDB cluster.
  rpc DeleteXtraDBCluster(DeleteXtraDBClusterRequest) returns (DeleteXtraDBClusterResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/XtraDBCluster/Delete"
      body: "*"
    };
  }
  // RestartXtraDBCluster restarts XtraDB cluster.
  rpc RestartXtraDBCluster(RestartXtraDBClusterRequest) returns (RestartXtraDBClusterResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/XtraDBCluster/Restart"
      body: "*"
    };
  }
}
