{
  "swagger": "2.0",
  "info": {
    "title": "managementpb/dbaas/pxc_clusters.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/management/DBaaS/PXCCluster/Create": {
      "post": {
        "summary": "CreatePXCCluster creates a new PXC cluster.",
        "operationId": "CreatePXCCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1CreatePXCClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1CreatePXCClusterRequest"
            }
          }
        ],
        "tags": [
          "PXCClusters"
        ]
      }
    },
    "/v1/management/DBaaS/PXCCluster/Resources/Get": {
      "post": {
        "summary": "GetPXCClusterResources returns expected resources to be consumed by the cluster.",
        "operationId": "GetPXCClusterResources",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetPXCClusterResourcesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1GetPXCClusterResourcesRequest"
            }
          }
        ],
        "tags": [
          "PXCClusters"
        ]
      }
    },
    "/v1/management/DBaaS/PXCCluster/Update": {
      "post": {
        "summary": "UpdatePXCCluster updates existing PXC cluster.",
        "operationId": "UpdatePXCCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1UpdatePXCClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1UpdatePXCClusterRequest"
            }
          }
        ],
        "tags": [
          "PXCClusters"
        ]
      }
    },
    "/v1/management/DBaaS/PXCClusters/GetCredentials": {
      "post": {
        "summary": "GetPXCClusterCredentials returns a PXC cluster credentials by cluster name.",
        "operationId": "GetPXCClusterCredentials",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1GetPXCClusterCredentialsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1GetPXCClusterCredentialsRequest"
            }
          }
        ],
        "tags": [
          "PXCClusters"
        ]
      }
    }
  },
  "definitions": {
    "UpdatePXCClusterRequestUpdatePXCClusterParams": {
      "type": "object",
      "properties": {
        "cluster_size": {
          "type": "integer",
          "format": "int32",
          "description": "Cluster size."
        },
        "pxc": {
          "$ref": "#/definitions/UpdatePXCClusterRequestUpdatePXCClusterParamsPXC",
          "description": "PXC container parameters."
        },
        "proxysql": {
          "$ref": "#/definitions/UpdatePXCClusterRequestUpdatePXCClusterParamsProxySQL",
          "description": "ProxySQL container parameters."
        },
        "suspend": {
          "type": "boolean",
          "description": "Suspend cluster `pause: true`."
        },
        "resume": {
          "type": "boolean",
          "description": "Resume cluster `pause: false`."
        },
        "haproxy": {
          "$ref": "#/definitions/UpdatePXCClusterRequestUpdatePXCClusterParamsHAProxy",
          "description": "HAProxy container parameters."
        }
      },
      "description": "UpdatePXCClusterParams represents PXC cluster parameters that can be updated."
    },
    "UpdatePXCClusterRequestUpdatePXCClusterParamsHAProxy": {
      "type": "object",
      "properties": {
        "compute_resources": {
          "$ref": "#/definitions/v1beta1ComputeResources",
          "description": "Requested compute resources."
        }
      },
      "description": "HAProxy container parameters."
    },
    "UpdatePXCClusterRequestUpdatePXCClusterParamsPXC": {
      "type": "object",
      "properties": {
        "compute_resources": {
          "$ref": "#/definitions/v1beta1ComputeResources",
          "description": "Requested compute resources."
        },
        "image": {
          "type": "string",
          "description": "Image to use. If it's the same image but with different version tag, upgrade of database cluster to version\nin given tag is triggered. If entirely different image is given, error is returned."
        }
      },
      "description": "PXC container parameters."
    },
    "UpdatePXCClusterRequestUpdatePXCClusterParamsProxySQL": {
      "type": "object",
      "properties": {
        "compute_resources": {
          "$ref": "#/definitions/v1beta1ComputeResources",
          "description": "Requested compute resources."
        }
      },
      "description": "ProxySQL container parameters."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1beta1ComputeResources": {
      "type": "object",
      "properties": {
        "cpu_m": {
          "type": "integer",
          "format": "int32",
          "description": "CPUs in milliCPUs; 1000m = 1 vCPU."
        },
        "memory_bytes": {
          "type": "string",
          "format": "int64",
          "description": "Memory in bytes."
        }
      },
      "description": "ComputeResources represents container computer resources requests or limits."
    },
    "v1beta1CreatePXCClusterRequest": {
      "type": "object",
      "properties": {
        "kubernetes_cluster_name": {
          "type": "string",
          "description": "Kubernetes cluster name."
        },
        "name": {
          "type": "string",
          "title": "PXC cluster name.\na DNS-1035 label must consist of lower case alphanumeric characters or '-',\nstart with an alphabetic character, and end with an alphanumeric character\n(e.g. 'my-name',  or 'abc-123', regex used for validation is '[a-z]([-a-z0-9]*[a-z0-9])?')"
        },
        "params": {
          "$ref": "#/definitions/v1beta1PXCClusterParams",
          "description": "Cluster parameters."
        },
        "expose": {
          "type": "boolean",
          "description": "Make DB cluster accessible outside of K8s cluster."
        }
      }
    },
    "v1beta1CreatePXCClusterResponse": {
      "type": "object"
    },
    "v1beta1GetPXCClusterCredentialsRequest": {
      "type": "object",
      "properties": {
        "kubernetes_cluster_name": {
          "type": "string",
          "description": "Kubernetes cluster name."
        },
        "name": {
          "type": "string",
          "description": "PXC cluster name."
        }
      }
    },
    "v1beta1GetPXCClusterCredentialsResponse": {
      "type": "object",
      "properties": {
        "connection_credentials": {
          "$ref": "#/definitions/v1beta1PXCClusterConnectionCredentials",
          "description": "Cluster connection credentials."
        }
      }
    },
    "v1beta1GetPXCClusterResourcesRequest": {
      "type": "object",
      "properties": {
        "params": {
          "$ref": "#/definitions/v1beta1PXCClusterParams",
          "description": "Cluster parameters."
        }
      }
    },
    "v1beta1GetPXCClusterResourcesResponse": {
      "type": "object",
      "properties": {
        "expected": {
          "$ref": "#/definitions/v1beta1Resources",
          "description": "Expected resources to be consumed by the cluster."
        }
      }
    },
    "v1beta1PXCClusterConnectionCredentials": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "PXC username."
        },
        "password": {
          "type": "string",
          "description": "PXC password."
        },
        "host": {
          "type": "string",
          "description": "PXC host."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "PXC port."
        }
      },
      "description": "PXCClusterConnectionCredentials is cluster connection credentials."
    },
    "v1beta1PXCClusterParams": {
      "type": "object",
      "properties": {
        "cluster_size": {
          "type": "integer",
          "format": "int32",
          "description": "Cluster size."
        },
        "pxc": {
          "$ref": "#/definitions/v1beta1PXCClusterParamsPXC",
          "description": "PXC container parameters."
        },
        "proxysql": {
          "$ref": "#/definitions/v1beta1PXCClusterParamsProxySQL",
          "description": "NOTE: Only one of fields proxysql or haproxy has to be set, we check this in the code.\nProxySQL container parameters."
        },
        "haproxy": {
          "$ref": "#/definitions/v1beta1PXCClusterParamsHAProxy",
          "description": "HAProxy container parameters."
        }
      },
      "description": "PXCClusterParams represents PXC cluster parameters that can be updated."
    },
    "v1beta1PXCClusterParamsHAProxy": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "description": "Docker image used for HAProxy."
        },
        "compute_resources": {
          "$ref": "#/definitions/v1beta1ComputeResources",
          "description": "Requested compute resources."
        }
      },
      "description": "HAProxy container parameters.\nNOTE: HAProxy does not need disk size as ProxySQL does because the container does not require it."
    },
    "v1beta1PXCClusterParamsPXC": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "description": "Docker image used for PXC."
        },
        "compute_resources": {
          "$ref": "#/definitions/v1beta1ComputeResources",
          "description": "Requested compute resources."
        },
        "disk_size": {
          "type": "string",
          "format": "int64",
          "description": "Disk size in bytes."
        }
      },
      "description": "PXC container parameters.\nTODO Do not use inner messages in all public APIs (for consistency)."
    },
    "v1beta1PXCClusterParamsProxySQL": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "description": "Docker image used for ProxySQL."
        },
        "compute_resources": {
          "$ref": "#/definitions/v1beta1ComputeResources",
          "description": "Requested compute resources."
        },
        "disk_size": {
          "type": "string",
          "format": "int64",
          "description": "Disk size in bytes."
        }
      },
      "description": "ProxySQL container parameters.\nTODO Do not use inner messages in all public APIs (for consistency)."
    },
    "v1beta1Resources": {
      "type": "object",
      "properties": {
        "memory_bytes": {
          "type": "string",
          "format": "uint64",
          "description": "Memory in bytes."
        },
        "cpu_m": {
          "type": "string",
          "format": "uint64",
          "description": "CPU in millicpus. For example 0.1 of CPU is equivalent to 100 millicpus.\nSee https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu."
        },
        "disk_size": {
          "type": "string",
          "format": "uint64",
          "description": "Disk size in bytes."
        }
      },
      "description": "Resources contains Kubernetes cluster resources."
    },
    "v1beta1UpdatePXCClusterRequest": {
      "type": "object",
      "properties": {
        "kubernetes_cluster_name": {
          "type": "string",
          "description": "Kubernetes cluster name."
        },
        "name": {
          "type": "string",
          "description": "PXC cluster name."
        },
        "params": {
          "$ref": "#/definitions/UpdatePXCClusterRequestUpdatePXCClusterParams",
          "description": "Cluster parameters."
        }
      }
    },
    "v1beta1UpdatePXCClusterResponse": {
      "type": "object"
    }
  }
}
