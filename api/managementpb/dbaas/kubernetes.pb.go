// Code generated by protoc-gen-go. DO NOT EDIT.
// source: managementpb/dbaas/kubernetes.proto

package dbaasv1beta1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListKubernetesClustersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListKubernetesClustersRequest) Reset()         { *m = ListKubernetesClustersRequest{} }
func (m *ListKubernetesClustersRequest) String() string { return proto.CompactTextString(m) }
func (*ListKubernetesClustersRequest) ProtoMessage()    {}
func (*ListKubernetesClustersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1118852c6b00fddc, []int{0}
}

func (m *ListKubernetesClustersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListKubernetesClustersRequest.Unmarshal(m, b)
}
func (m *ListKubernetesClustersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListKubernetesClustersRequest.Marshal(b, m, deterministic)
}
func (m *ListKubernetesClustersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListKubernetesClustersRequest.Merge(m, src)
}
func (m *ListKubernetesClustersRequest) XXX_Size() int {
	return xxx_messageInfo_ListKubernetesClustersRequest.Size(m)
}
func (m *ListKubernetesClustersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListKubernetesClustersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListKubernetesClustersRequest proto.InternalMessageInfo

type ListKubernetesClustersResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListKubernetesClustersResponse) Reset()         { *m = ListKubernetesClustersResponse{} }
func (m *ListKubernetesClustersResponse) String() string { return proto.CompactTextString(m) }
func (*ListKubernetesClustersResponse) ProtoMessage()    {}
func (*ListKubernetesClustersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1118852c6b00fddc, []int{1}
}

func (m *ListKubernetesClustersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListKubernetesClustersResponse.Unmarshal(m, b)
}
func (m *ListKubernetesClustersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListKubernetesClustersResponse.Marshal(b, m, deterministic)
}
func (m *ListKubernetesClustersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListKubernetesClustersResponse.Merge(m, src)
}
func (m *ListKubernetesClustersResponse) XXX_Size() int {
	return xxx_messageInfo_ListKubernetesClustersResponse.Size(m)
}
func (m *ListKubernetesClustersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListKubernetesClustersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListKubernetesClustersResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ListKubernetesClustersRequest)(nil), "dbaas.v1beta1.ListKubernetesClustersRequest")
	proto.RegisterType((*ListKubernetesClustersResponse)(nil), "dbaas.v1beta1.ListKubernetesClustersResponse")
}

func init() {
	proto.RegisterFile("managementpb/dbaas/kubernetes.proto", fileDescriptor_1118852c6b00fddc)
}

var fileDescriptor_1118852c6b00fddc = []byte{
	// 269 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x3d, 0x4e, 0xfc, 0x30,
	0x10, 0xc5, 0x95, 0x7f, 0xf1, 0x2f, 0x2c, 0xa0, 0x48, 0x41, 0x11, 0xf1, 0xa5, 0x40, 0x03, 0xda,
	0x64, 0x14, 0x90, 0x28, 0x28, 0xa1, 0x84, 0x8a, 0x92, 0x6e, 0xbc, 0x3b, 0x32, 0xd6, 0x26, 0x9e,
	0x60, 0x4f, 0x92, 0x9e, 0x2b, 0x70, 0x07, 0x6e, 0xc0, 0x49, 0xb8, 0x02, 0x07, 0x41, 0x78, 0xa3,
	0x8d, 0x10, 0x1f, 0xa2, 0xb2, 0x35, 0xf3, 0x9b, 0x37, 0xa3, 0xf7, 0xd4, 0x61, 0x83, 0x0e, 0x0d,
	0x35, 0xe4, 0xa4, 0xd5, 0xb0, 0xd0, 0x88, 0x01, 0x96, 0x9d, 0x26, 0xef, 0x48, 0x28, 0x94, 0xad,
	0x67, 0xe1, 0x74, 0x33, 0xd6, 0xcb, 0xbe, 0xd2, 0x24, 0x58, 0x65, 0xe7, 0xc6, 0xca, 0x7d, 0xa7,
	0xcb, 0x39, 0x37, 0xd0, 0x0c, 0x56, 0x96, 0x3c, 0x80, 0xe1, 0x22, 0xb2, 0x45, 0x8f, 0xb5, 0x5d,
	0xa0, 0xb0, 0x0f, 0xb0, 0xfe, 0xae, 0x64, 0xb2, 0x1d, 0xc3, 0x6c, 0x6a, 0x02, 0x6c, 0x2d, 0xa0,
	0x73, 0x2c, 0x28, 0x96, 0xdd, 0xb8, 0x24, 0x9b, 0xc5, 0x67, 0x5e, 0x18, 0x72, 0x45, 0x18, 0xd0,
	0x18, 0xf2, 0xc0, 0x6d, 0x24, 0xbe, 0xd2, 0xf9, 0xbe, 0xda, 0xbd, 0xb1, 0x41, 0xae, 0xd7, 0xa7,
	0x5e, 0xd5, 0x5d, 0x10, 0xf2, 0xe1, 0x96, 0x1e, 0x3a, 0x0a, 0x92, 0x1f, 0xa8, 0xbd, 0x9f, 0x80,
	0xd0, 0xb2, 0x0b, 0x74, 0xfa, 0x92, 0x28, 0x35, 0xb5, 0xd3, 0xe7, 0x44, 0x6d, 0x7f, 0x3f, 0x91,
	0xce, 0xca, 0x4f, 0x06, 0x94, 0xbf, 0x6e, 0xce, 0x8a, 0x3f, 0xd2, 0xab, 0x33, 0x72, 0x78, 0x7c,
	0x7d, 0x7b, 0xfa, 0x77, 0x9c, 0x1f, 0x41, 0x5f, 0xc1, 0x94, 0xc6, 0x98, 0xc5, 0x34, 0x08, 0x1f,
	0x3a, 0x17, 0xc9, 0xc9, 0xe5, 0xd6, 0xdd, 0x46, 0xec, 0x8d, 0xfa, 0xfa, 0x7f, 0x74, 0xe4, 0xec,
	0x3d, 0x00, 0x00, 0xff, 0xff, 0xf8, 0x36, 0x66, 0x5e, 0xcb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KubernetesClient is the client API for Kubernetes service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KubernetesClient interface {
	// ListKubernetesClusters returns a list of all registered Kubernetes clusters.
	ListKubernetesClusters(ctx context.Context, in *ListKubernetesClustersRequest, opts ...grpc.CallOption) (*ListKubernetesClustersResponse, error)
}

type kubernetesClient struct {
	cc grpc.ClientConnInterface
}

func NewKubernetesClient(cc grpc.ClientConnInterface) KubernetesClient {
	return &kubernetesClient{cc}
}

func (c *kubernetesClient) ListKubernetesClusters(ctx context.Context, in *ListKubernetesClustersRequest, opts ...grpc.CallOption) (*ListKubernetesClustersResponse, error) {
	out := new(ListKubernetesClustersResponse)
	err := c.cc.Invoke(ctx, "/dbaas.v1beta1.Kubernetes/ListKubernetesClusters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KubernetesServer is the server API for Kubernetes service.
type KubernetesServer interface {
	// ListKubernetesClusters returns a list of all registered Kubernetes clusters.
	ListKubernetesClusters(context.Context, *ListKubernetesClustersRequest) (*ListKubernetesClustersResponse, error)
}

// UnimplementedKubernetesServer can be embedded to have forward compatible implementations.
type UnimplementedKubernetesServer struct {
}

func (*UnimplementedKubernetesServer) ListKubernetesClusters(ctx context.Context, req *ListKubernetesClustersRequest) (*ListKubernetesClustersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListKubernetesClusters not implemented")
}

func RegisterKubernetesServer(s *grpc.Server, srv KubernetesServer) {
	s.RegisterService(&_Kubernetes_serviceDesc, srv)
}

func _Kubernetes_ListKubernetesClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListKubernetesClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KubernetesServer).ListKubernetesClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dbaas.v1beta1.Kubernetes/ListKubernetesClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KubernetesServer).ListKubernetesClusters(ctx, req.(*ListKubernetesClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Kubernetes_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dbaas.v1beta1.Kubernetes",
	HandlerType: (*KubernetesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListKubernetesClusters",
			Handler:    _Kubernetes_ListKubernetesClusters_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "managementpb/dbaas/kubernetes.proto",
}
