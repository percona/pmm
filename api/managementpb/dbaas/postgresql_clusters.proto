syntax = "proto3";

package dbaas.v1beta1;

import "google/api/annotations.proto";
import "managementpb/dbaas/dbaas.proto";
import "managementpb/dbaas/templates.proto";
import "validate/validate.proto";

option go_package = "api/managementpb/dbaas;dbaasv1beta1";

// PostgresqlClusterParams represents Postgresql cluster parameters that can be updated.
message PostgresqlClusterParams {
  // Instance container parameters.
  // TODO Do not use inner messages in all public APIs (for consistency).
  message Instance {
    // Docker image used for Instance.
    string image = 3;
    // Requested compute resources.
    ComputeResources compute_resources = 1;
    // Disk size in bytes.
    int64 disk_size = 2;
    // Configuration for Postgresql cluster
    string configuration = 4;
    // Storage Class for Postgresql cluster.
    string storage_class = 5;
  }
  // PGBouncer container parameters.
  // TODO Do not use inner messages in all public APIs (for consistency).
  message PGBouncer {
    // Docker image used for PGBouncer.
    string image = 3;
    // Requested compute resources.
    ComputeResources compute_resources = 1;
    // Disk size in bytes.
    int64 disk_size = 2;
  }
  // Cluster size.
  int32 cluster_size = 1;
  // Instance container parameters.
  Instance instance = 2;
  // PGBouncer container parameters.
  PGBouncer pgbouncer = 3;
  // Backup configuration parameters.
  Backup backup = 4;
  // Restore configuration parameters.
  Restore restore = 5;
}

message CreatePostgresqlClusterRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [(validate.rules).string.min_len = 1];
  // Postgresql cluster name.
  // a DNS-1035 label must consist of lower case alphanumeric characters or '-',
  // start with an alphabetic character, and end with an alphanumeric character
  // (e.g. 'my-name',  or 'abc-123', regex used for validation is '[a-z]([-a-z0-9]*[a-z0-9])?')
  string name = 2;
  // Cluster parameters.
  PostgresqlClusterParams params = 3;
  // Make DB cluster accessible outside of K8s cluster.
  bool expose = 4;
  // Make DB cluster accessible via public internet.
  bool internet_facing = 5;
  // Apply IP source ranges against the cluster.
  repeated string source_ranges = 6;
  // Configuration template.
  Template template = 7;
}

message CreatePostgresqlClusterResponse {}

// PostgresqlClusters service provides public methods for managing Postgresql clusters.
service PostgresqlClusters {
  // CreatePostgresqlCluster creates a new Postgresql cluster.
  rpc CreatePostgresqlCluster(CreatePostgresqlClusterRequest) returns (CreatePostgresqlClusterResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/PostgresqlCluster/Create"
      body: "*"
    };
  }
}
