// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: managementpb/dbaas/components.proto

package dbaasv1beta1

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Component contains information about component.
type Component struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImagePath string `protobuf:"bytes,1,opt,name=image_path,json=imagePath,proto3" json:"image_path,omitempty"`
	ImageHash string `protobuf:"bytes,2,opt,name=image_hash,json=imageHash,proto3" json:"image_hash,omitempty"`
	Status    string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Critical  bool   `protobuf:"varint,4,opt,name=critical,proto3" json:"critical,omitempty"`
	Default   bool   `protobuf:"varint,5,opt,name=default,proto3" json:"default,omitempty"`
	Disabled  bool   `protobuf:"varint,6,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *Component) Reset() {
	*x = Component{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Component) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Component) ProtoMessage() {}

func (x *Component) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Component.ProtoReflect.Descriptor instead.
func (*Component) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{0}
}

func (x *Component) GetImagePath() string {
	if x != nil {
		return x.ImagePath
	}
	return ""
}

func (x *Component) GetImageHash() string {
	if x != nil {
		return x.ImageHash
	}
	return ""
}

func (x *Component) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Component) GetCritical() bool {
	if x != nil {
		return x.Critical
	}
	return false
}

func (x *Component) GetDefault() bool {
	if x != nil {
		return x.Default
	}
	return false
}

func (x *Component) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

// Matrix contains all available components.
type Matrix struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mongod       map[string]*Component `protobuf:"bytes,1,rep,name=mongod,proto3" json:"mongod,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Pxc          map[string]*Component `protobuf:"bytes,2,rep,name=pxc,proto3" json:"pxc,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Pmm          map[string]*Component `protobuf:"bytes,3,rep,name=pmm,proto3" json:"pmm,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Proxysql     map[string]*Component `protobuf:"bytes,4,rep,name=proxysql,proto3" json:"proxysql,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Haproxy      map[string]*Component `protobuf:"bytes,5,rep,name=haproxy,proto3" json:"haproxy,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Backup       map[string]*Component `protobuf:"bytes,6,rep,name=backup,proto3" json:"backup,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Operator     map[string]*Component `protobuf:"bytes,7,rep,name=operator,proto3" json:"operator,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LogCollector map[string]*Component `protobuf:"bytes,8,rep,name=log_collector,json=logCollector,proto3" json:"log_collector,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Matrix) Reset() {
	*x = Matrix{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Matrix) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Matrix) ProtoMessage() {}

func (x *Matrix) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Matrix.ProtoReflect.Descriptor instead.
func (*Matrix) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{1}
}

func (x *Matrix) GetMongod() map[string]*Component {
	if x != nil {
		return x.Mongod
	}
	return nil
}

func (x *Matrix) GetPxc() map[string]*Component {
	if x != nil {
		return x.Pxc
	}
	return nil
}

func (x *Matrix) GetPmm() map[string]*Component {
	if x != nil {
		return x.Pmm
	}
	return nil
}

func (x *Matrix) GetProxysql() map[string]*Component {
	if x != nil {
		return x.Proxysql
	}
	return nil
}

func (x *Matrix) GetHaproxy() map[string]*Component {
	if x != nil {
		return x.Haproxy
	}
	return nil
}

func (x *Matrix) GetBackup() map[string]*Component {
	if x != nil {
		return x.Backup
	}
	return nil
}

func (x *Matrix) GetOperator() map[string]*Component {
	if x != nil {
		return x.Operator
	}
	return nil
}

func (x *Matrix) GetLogCollector() map[string]*Component {
	if x != nil {
		return x.LogCollector
	}
	return nil
}

// OperatorVersion contains information about operator and components matrix.
type OperatorVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Product  string  `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Operator string  `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Matrix   *Matrix `protobuf:"bytes,3,opt,name=matrix,proto3" json:"matrix,omitempty"`
}

func (x *OperatorVersion) Reset() {
	*x = OperatorVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperatorVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperatorVersion) ProtoMessage() {}

func (x *OperatorVersion) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperatorVersion.ProtoReflect.Descriptor instead.
func (*OperatorVersion) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{2}
}

func (x *OperatorVersion) GetProduct() string {
	if x != nil {
		return x.Product
	}
	return ""
}

func (x *OperatorVersion) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *OperatorVersion) GetMatrix() *Matrix {
	if x != nil {
		return x.Matrix
	}
	return nil
}

type GetPSMDBComponentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Kubernetes cluster name.
	KubernetesClusterName string `protobuf:"bytes,1,opt,name=kubernetes_cluster_name,json=kubernetesClusterName,proto3" json:"kubernetes_cluster_name,omitempty"`
	// Version of DB.
	DbVersion string `protobuf:"bytes,2,opt,name=db_version,json=dbVersion,proto3" json:"db_version,omitempty"`
}

func (x *GetPSMDBComponentsRequest) Reset() {
	*x = GetPSMDBComponentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPSMDBComponentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPSMDBComponentsRequest) ProtoMessage() {}

func (x *GetPSMDBComponentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPSMDBComponentsRequest.ProtoReflect.Descriptor instead.
func (*GetPSMDBComponentsRequest) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{3}
}

func (x *GetPSMDBComponentsRequest) GetKubernetesClusterName() string {
	if x != nil {
		return x.KubernetesClusterName
	}
	return ""
}

func (x *GetPSMDBComponentsRequest) GetDbVersion() string {
	if x != nil {
		return x.DbVersion
	}
	return ""
}

type GetPSMDBComponentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions []*OperatorVersion `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *GetPSMDBComponentsResponse) Reset() {
	*x = GetPSMDBComponentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPSMDBComponentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPSMDBComponentsResponse) ProtoMessage() {}

func (x *GetPSMDBComponentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPSMDBComponentsResponse.ProtoReflect.Descriptor instead.
func (*GetPSMDBComponentsResponse) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{4}
}

func (x *GetPSMDBComponentsResponse) GetVersions() []*OperatorVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

type GetPXCComponentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Kubernetes cluster name.
	KubernetesClusterName string `protobuf:"bytes,1,opt,name=kubernetes_cluster_name,json=kubernetesClusterName,proto3" json:"kubernetes_cluster_name,omitempty"`
	// Version of DB.
	DbVersion string `protobuf:"bytes,2,opt,name=db_version,json=dbVersion,proto3" json:"db_version,omitempty"`
}

func (x *GetPXCComponentsRequest) Reset() {
	*x = GetPXCComponentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPXCComponentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPXCComponentsRequest) ProtoMessage() {}

func (x *GetPXCComponentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPXCComponentsRequest.ProtoReflect.Descriptor instead.
func (*GetPXCComponentsRequest) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{5}
}

func (x *GetPXCComponentsRequest) GetKubernetesClusterName() string {
	if x != nil {
		return x.KubernetesClusterName
	}
	return ""
}

func (x *GetPXCComponentsRequest) GetDbVersion() string {
	if x != nil {
		return x.DbVersion
	}
	return ""
}

type GetPXCComponentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions []*OperatorVersion `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *GetPXCComponentsResponse) Reset() {
	*x = GetPXCComponentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPXCComponentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPXCComponentsResponse) ProtoMessage() {}

func (x *GetPXCComponentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPXCComponentsResponse.ProtoReflect.Descriptor instead.
func (*GetPXCComponentsResponse) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{6}
}

func (x *GetPXCComponentsResponse) GetVersions() []*OperatorVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

// ChangeComponent contains fields to manage components.
type ChangeComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DefaultVersion string                              `protobuf:"bytes,1,opt,name=default_version,json=defaultVersion,proto3" json:"default_version,omitempty"`
	Versions       []*ChangeComponent_ComponentVersion `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *ChangeComponent) Reset() {
	*x = ChangeComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeComponent) ProtoMessage() {}

func (x *ChangeComponent) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeComponent.ProtoReflect.Descriptor instead.
func (*ChangeComponent) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{7}
}

func (x *ChangeComponent) GetDefaultVersion() string {
	if x != nil {
		return x.DefaultVersion
	}
	return ""
}

func (x *ChangeComponent) GetVersions() []*ChangeComponent_ComponentVersion {
	if x != nil {
		return x.Versions
	}
	return nil
}

type ChangePSMDBComponentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Kubernetes cluster name.
	KubernetesClusterName string           `protobuf:"bytes,1,opt,name=kubernetes_cluster_name,json=kubernetesClusterName,proto3" json:"kubernetes_cluster_name,omitempty"`
	Mongod                *ChangeComponent `protobuf:"bytes,2,opt,name=mongod,proto3" json:"mongod,omitempty"`
}

func (x *ChangePSMDBComponentsRequest) Reset() {
	*x = ChangePSMDBComponentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePSMDBComponentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePSMDBComponentsRequest) ProtoMessage() {}

func (x *ChangePSMDBComponentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePSMDBComponentsRequest.ProtoReflect.Descriptor instead.
func (*ChangePSMDBComponentsRequest) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{8}
}

func (x *ChangePSMDBComponentsRequest) GetKubernetesClusterName() string {
	if x != nil {
		return x.KubernetesClusterName
	}
	return ""
}

func (x *ChangePSMDBComponentsRequest) GetMongod() *ChangeComponent {
	if x != nil {
		return x.Mongod
	}
	return nil
}

type ChangePSMDBComponentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangePSMDBComponentsResponse) Reset() {
	*x = ChangePSMDBComponentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePSMDBComponentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePSMDBComponentsResponse) ProtoMessage() {}

func (x *ChangePSMDBComponentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePSMDBComponentsResponse.ProtoReflect.Descriptor instead.
func (*ChangePSMDBComponentsResponse) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{9}
}

type ChangePXCComponentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Kubernetes cluster name.
	KubernetesClusterName string           `protobuf:"bytes,1,opt,name=kubernetes_cluster_name,json=kubernetesClusterName,proto3" json:"kubernetes_cluster_name,omitempty"`
	Pxc                   *ChangeComponent `protobuf:"bytes,2,opt,name=pxc,proto3" json:"pxc,omitempty"`
	Proxysql              *ChangeComponent `protobuf:"bytes,3,opt,name=proxysql,proto3" json:"proxysql,omitempty"`
	Haproxy               *ChangeComponent `protobuf:"bytes,4,opt,name=haproxy,proto3" json:"haproxy,omitempty"`
}

func (x *ChangePXCComponentsRequest) Reset() {
	*x = ChangePXCComponentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePXCComponentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePXCComponentsRequest) ProtoMessage() {}

func (x *ChangePXCComponentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePXCComponentsRequest.ProtoReflect.Descriptor instead.
func (*ChangePXCComponentsRequest) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{10}
}

func (x *ChangePXCComponentsRequest) GetKubernetesClusterName() string {
	if x != nil {
		return x.KubernetesClusterName
	}
	return ""
}

func (x *ChangePXCComponentsRequest) GetPxc() *ChangeComponent {
	if x != nil {
		return x.Pxc
	}
	return nil
}

func (x *ChangePXCComponentsRequest) GetProxysql() *ChangeComponent {
	if x != nil {
		return x.Proxysql
	}
	return nil
}

func (x *ChangePXCComponentsRequest) GetHaproxy() *ChangeComponent {
	if x != nil {
		return x.Haproxy
	}
	return nil
}

type ChangePXCComponentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangePXCComponentsResponse) Reset() {
	*x = ChangePXCComponentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangePXCComponentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePXCComponentsResponse) ProtoMessage() {}

func (x *ChangePXCComponentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePXCComponentsResponse.ProtoReflect.Descriptor instead.
func (*ChangePXCComponentsResponse) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{11}
}

type InstallOperatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Kubernetes cluster name.
	KubernetesClusterName string `protobuf:"bytes,1,opt,name=kubernetes_cluster_name,json=kubernetesClusterName,proto3" json:"kubernetes_cluster_name,omitempty"`
	// operator_type tells what operator we are interested in updating.
	OperatorType string `protobuf:"bytes,2,opt,name=operator_type,json=operatorType,proto3" json:"operator_type,omitempty"`
	// version tells what version of the operator we should update to.
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *InstallOperatorRequest) Reset() {
	*x = InstallOperatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallOperatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallOperatorRequest) ProtoMessage() {}

func (x *InstallOperatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallOperatorRequest.ProtoReflect.Descriptor instead.
func (*InstallOperatorRequest) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{12}
}

func (x *InstallOperatorRequest) GetKubernetesClusterName() string {
	if x != nil {
		return x.KubernetesClusterName
	}
	return ""
}

func (x *InstallOperatorRequest) GetOperatorType() string {
	if x != nil {
		return x.OperatorType
	}
	return ""
}

func (x *InstallOperatorRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type InstallOperatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Status tells if installation was successfull.
	Status OperatorsStatus `protobuf:"varint,1,opt,name=status,proto3,enum=dbaas.v1beta1.OperatorsStatus" json:"status,omitempty"`
}

func (x *InstallOperatorResponse) Reset() {
	*x = InstallOperatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallOperatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallOperatorResponse) ProtoMessage() {}

func (x *InstallOperatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallOperatorResponse.ProtoReflect.Descriptor instead.
func (*InstallOperatorResponse) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{13}
}

func (x *InstallOperatorResponse) GetStatus() OperatorsStatus {
	if x != nil {
		return x.Status
	}
	return OperatorsStatus_OPERATORS_STATUS_INVALID
}

type CheckForOperatorUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckForOperatorUpdateRequest) Reset() {
	*x = CheckForOperatorUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckForOperatorUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckForOperatorUpdateRequest) ProtoMessage() {}

func (x *CheckForOperatorUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckForOperatorUpdateRequest.ProtoReflect.Descriptor instead.
func (*CheckForOperatorUpdateRequest) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{14}
}

// ComponentUpdateInformation contains version we can update to for certain component.
type ComponentUpdateInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableVersion string `protobuf:"bytes,1,opt,name=available_version,json=availableVersion,proto3" json:"available_version,omitempty"`
}

func (x *ComponentUpdateInformation) Reset() {
	*x = ComponentUpdateInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentUpdateInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentUpdateInformation) ProtoMessage() {}

func (x *ComponentUpdateInformation) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentUpdateInformation.ProtoReflect.Descriptor instead.
func (*ComponentUpdateInformation) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{15}
}

func (x *ComponentUpdateInformation) GetAvailableVersion() string {
	if x != nil {
		return x.AvailableVersion
	}
	return ""
}

// ComponentsUpdateInformation contains info about components and their available latest versions.
type ComponentsUpdateInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// component_to_update_information stores, under the name of the component, information about the update.
	// "pxc-operator", "psmdb-operator" are names used by backend for our operators.
	ComponentToUpdateInformation map[string]*ComponentUpdateInformation `protobuf:"bytes,1,rep,name=component_to_update_information,json=componentToUpdateInformation,proto3" json:"component_to_update_information,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ComponentsUpdateInformation) Reset() {
	*x = ComponentsUpdateInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComponentsUpdateInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentsUpdateInformation) ProtoMessage() {}

func (x *ComponentsUpdateInformation) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentsUpdateInformation.ProtoReflect.Descriptor instead.
func (*ComponentsUpdateInformation) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{16}
}

func (x *ComponentsUpdateInformation) GetComponentToUpdateInformation() map[string]*ComponentUpdateInformation {
	if x != nil {
		return x.ComponentToUpdateInformation
	}
	return nil
}

type CheckForOperatorUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The cluster name is used as a key for this map, value contains components and their inforamtion about update.
	ClusterToComponents map[string]*ComponentsUpdateInformation `protobuf:"bytes,1,rep,name=cluster_to_components,json=clusterToComponents,proto3" json:"cluster_to_components,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CheckForOperatorUpdateResponse) Reset() {
	*x = CheckForOperatorUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckForOperatorUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckForOperatorUpdateResponse) ProtoMessage() {}

func (x *CheckForOperatorUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckForOperatorUpdateResponse.ProtoReflect.Descriptor instead.
func (*CheckForOperatorUpdateResponse) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{17}
}

func (x *CheckForOperatorUpdateResponse) GetClusterToComponents() map[string]*ComponentsUpdateInformation {
	if x != nil {
		return x.ClusterToComponents
	}
	return nil
}

// ComponentVersion contains operations which should be done with component version.
type ChangeComponent_ComponentVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Disable bool   `protobuf:"varint,2,opt,name=disable,proto3" json:"disable,omitempty"`
	Enable  bool   `protobuf:"varint,3,opt,name=enable,proto3" json:"enable,omitempty"`
}

func (x *ChangeComponent_ComponentVersion) Reset() {
	*x = ChangeComponent_ComponentVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_dbaas_components_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeComponent_ComponentVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeComponent_ComponentVersion) ProtoMessage() {}

func (x *ChangeComponent_ComponentVersion) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_dbaas_components_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeComponent_ComponentVersion.ProtoReflect.Descriptor instead.
func (*ChangeComponent_ComponentVersion) Descriptor() ([]byte, []int) {
	return file_managementpb_dbaas_components_proto_rawDescGZIP(), []int{7, 0}
}

func (x *ChangeComponent_ComponentVersion) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ChangeComponent_ComponentVersion) GetDisable() bool {
	if x != nil {
		return x.Disable
	}
	return false
}

func (x *ChangeComponent_ComponentVersion) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

var File_managementpb_dbaas_components_proto protoreflect.FileDescriptor

var file_managementpb_dbaas_components_proto_rawDesc = []byte{
	0x0a, 0x23, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x64,
	0x62, 0x61, 0x61, 0x73, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2f, 0x64,
	0x62, 0x61, 0x61, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x01, 0x0a, 0x09, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x22, 0x9d, 0x09, 0x0a, 0x06, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x12, 0x39, 0x0a, 0x06, 0x6d,
	0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x62,
	0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72,
	0x69, 0x78, 0x2e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06,
	0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x12, 0x30, 0x0a, 0x03, 0x70, 0x78, 0x63, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x50, 0x78, 0x63, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x03, 0x70, 0x78, 0x63, 0x12, 0x30, 0x0a, 0x03, 0x70, 0x6d, 0x6d, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x50, 0x6d, 0x6d,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x70, 0x6d, 0x6d, 0x12, 0x3f, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x73, 0x71, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64,
	0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x74,
	0x72, 0x69, 0x78, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x73, 0x71, 0x6c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x73, 0x71, 0x6c, 0x12, 0x3c, 0x0a, 0x07, 0x68,
	0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x64,
	0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x74,
	0x72, 0x69, 0x78, 0x2e, 0x48, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x68, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x39, 0x0a, 0x06, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x64, 0x62, 0x61, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78,
	0x2e, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x12, 0x3f, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x4c, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64,
	0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x74,
	0x72, 0x69, 0x78, 0x2e, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x1a, 0x53, 0x0a, 0x0b, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x50, 0x0a, 0x08, 0x50, 0x78, 0x63, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x50, 0x0a, 0x08, 0x50, 0x6d,
	0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x55, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x78, 0x79, 0x73, 0x71, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x54, 0x0a, 0x0c, 0x48, 0x61, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x53, 0x0a, 0x0b, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x62, 0x61, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x55,
	0x0a, 0x0d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x59, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x62,
	0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x76, 0x0a, 0x0f, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x06, 0x6d, 0x61, 0x74,
	0x72, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x62, 0x61, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78,
	0x52, 0x06, 0x6d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x22, 0x72, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50,
	0x53, 0x4d, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x65, 0x73, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x62, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x62, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x58, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x50, 0x53, 0x4d, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64,
	0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x70, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x58, 0x43,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x36, 0x0a, 0x17, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x62, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x62, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x56, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50,
	0x58, 0x43, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xef, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a,
	0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2f, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x66, 0x0a, 0x10, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x53, 0x4d,
	0x44, 0x42, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x17, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65,
	0x73, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x15, 0x6b, 0x75,
	0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x52, 0x06, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x53, 0x4d, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x84, 0x02, 0x0a,
	0x1a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x58, 0x43, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x17, 0x6b,
	0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf,
	0x1f, 0x02, 0x58, 0x01, 0x52, 0x15, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x03, 0x70,
	0x78, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x03, 0x70, 0x78, 0x63, 0x12, 0x3a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x73, 0x71, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x73, 0x71, 0x6c, 0x12, 0x38, 0x0a, 0x07, 0x68, 0x61, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64, 0x62, 0x61,
	0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x68, 0x61, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x58, 0x43,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x16, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a,
	0x17, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x63, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x15, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a,
	0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0c, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f,
	0x02, 0x58, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x51, 0x0a, 0x17,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x1f, 0x0a, 0x1d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x49, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b,
	0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xaf, 0x02, 0x0a, 0x1b,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x93, 0x01, 0x0a, 0x1f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x1c, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x7a, 0x0a, 0x21, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x6f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x90, 0x02,
	0x0a, 0x1e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7a, 0x0a, 0x15, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x46, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x72, 0x0a, 0x18,
	0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x40, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x64, 0x62, 0x61, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x32, 0xf2, 0x07, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x9e, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x53, 0x4d, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x28, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x53, 0x4d, 0x44, 0x42, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x29, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x53, 0x4d, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x33, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x2d, 0x22, 0x28, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x2f, 0x44, 0x42, 0x61, 0x61, 0x53, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x2f, 0x47, 0x65, 0x74, 0x50, 0x53, 0x4d, 0x44, 0x42, 0x3a, 0x01, 0x2a,
	0x12, 0x96, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x58, 0x43, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x58, 0x43, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x58, 0x43, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x22, 0x26,
	0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x44,
	0x42, 0x61, 0x61, 0x53, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x47, 0x65, 0x74, 0x50, 0x58, 0x43, 0x3a, 0x01, 0x2a, 0x12, 0xaa, 0x01, 0x0a, 0x15, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x50, 0x53, 0x4d, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x2b, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x53, 0x4d, 0x44, 0x42, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2c, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x53, 0x4d, 0x44, 0x42, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x22, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x44, 0x42, 0x61, 0x61, 0x53, 0x2f, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x53,
	0x4d, 0x44, 0x42, 0x3a, 0x01, 0x2a, 0x12, 0xa2, 0x01, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x50, 0x58, 0x43, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x29,
	0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x58, 0x43, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x62, 0x61, 0x61,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x50, 0x58, 0x43, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x22, 0x29, 0x2f,
	0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x44, 0x42,
	0x61, 0x61, 0x53, 0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x58, 0x43, 0x3a, 0x01, 0x2a, 0x12, 0x9c, 0x01, 0x0a, 0x0f,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12,
	0x25, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x34, 0x22, 0x2f, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x44, 0x42, 0x61, 0x61, 0x53, 0x2f, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0xb8, 0x01, 0x0a, 0x16, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x72, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x64, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x72, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x41, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x3b, 0x22, 0x36, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x44, 0x42, 0x61, 0x61, 0x53,
	0x2f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x46, 0x6f, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x3a, 0x01, 0x2a, 0x42, 0xb5, 0x01, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x62,
	0x61, 0x61, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x42, 0x0f, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3a,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x72, 0x63, 0x6f,
	0x6e, 0x61, 0x2f, 0x70, 0x6d, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x64, 0x62, 0x61, 0x61, 0x73, 0x3b, 0x64, 0x62,
	0x61, 0x61, 0x73, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x44, 0x58, 0x58,
	0xaa, 0x02, 0x0d, 0x44, 0x62, 0x61, 0x61, 0x73, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0xca, 0x02, 0x0d, 0x44, 0x62, 0x61, 0x61, 0x73, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0xe2, 0x02, 0x19, 0x44, 0x62, 0x61, 0x61, 0x73, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0e, 0x44,
	0x62, 0x61, 0x61, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_managementpb_dbaas_components_proto_rawDescOnce sync.Once
	file_managementpb_dbaas_components_proto_rawDescData = file_managementpb_dbaas_components_proto_rawDesc
)

func file_managementpb_dbaas_components_proto_rawDescGZIP() []byte {
	file_managementpb_dbaas_components_proto_rawDescOnce.Do(func() {
		file_managementpb_dbaas_components_proto_rawDescData = protoimpl.X.CompressGZIP(file_managementpb_dbaas_components_proto_rawDescData)
	})
	return file_managementpb_dbaas_components_proto_rawDescData
}

var (
	file_managementpb_dbaas_components_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
	file_managementpb_dbaas_components_proto_goTypes  = []interface{}{
		(*Component)(nil),                        // 0: dbaas.v1beta1.Component
		(*Matrix)(nil),                           // 1: dbaas.v1beta1.Matrix
		(*OperatorVersion)(nil),                  // 2: dbaas.v1beta1.OperatorVersion
		(*GetPSMDBComponentsRequest)(nil),        // 3: dbaas.v1beta1.GetPSMDBComponentsRequest
		(*GetPSMDBComponentsResponse)(nil),       // 4: dbaas.v1beta1.GetPSMDBComponentsResponse
		(*GetPXCComponentsRequest)(nil),          // 5: dbaas.v1beta1.GetPXCComponentsRequest
		(*GetPXCComponentsResponse)(nil),         // 6: dbaas.v1beta1.GetPXCComponentsResponse
		(*ChangeComponent)(nil),                  // 7: dbaas.v1beta1.ChangeComponent
		(*ChangePSMDBComponentsRequest)(nil),     // 8: dbaas.v1beta1.ChangePSMDBComponentsRequest
		(*ChangePSMDBComponentsResponse)(nil),    // 9: dbaas.v1beta1.ChangePSMDBComponentsResponse
		(*ChangePXCComponentsRequest)(nil),       // 10: dbaas.v1beta1.ChangePXCComponentsRequest
		(*ChangePXCComponentsResponse)(nil),      // 11: dbaas.v1beta1.ChangePXCComponentsResponse
		(*InstallOperatorRequest)(nil),           // 12: dbaas.v1beta1.InstallOperatorRequest
		(*InstallOperatorResponse)(nil),          // 13: dbaas.v1beta1.InstallOperatorResponse
		(*CheckForOperatorUpdateRequest)(nil),    // 14: dbaas.v1beta1.CheckForOperatorUpdateRequest
		(*ComponentUpdateInformation)(nil),       // 15: dbaas.v1beta1.ComponentUpdateInformation
		(*ComponentsUpdateInformation)(nil),      // 16: dbaas.v1beta1.ComponentsUpdateInformation
		(*CheckForOperatorUpdateResponse)(nil),   // 17: dbaas.v1beta1.CheckForOperatorUpdateResponse
		nil,                                      // 18: dbaas.v1beta1.Matrix.MongodEntry
		nil,                                      // 19: dbaas.v1beta1.Matrix.PxcEntry
		nil,                                      // 20: dbaas.v1beta1.Matrix.PmmEntry
		nil,                                      // 21: dbaas.v1beta1.Matrix.ProxysqlEntry
		nil,                                      // 22: dbaas.v1beta1.Matrix.HaproxyEntry
		nil,                                      // 23: dbaas.v1beta1.Matrix.BackupEntry
		nil,                                      // 24: dbaas.v1beta1.Matrix.OperatorEntry
		nil,                                      // 25: dbaas.v1beta1.Matrix.LogCollectorEntry
		(*ChangeComponent_ComponentVersion)(nil), // 26: dbaas.v1beta1.ChangeComponent.ComponentVersion
		nil,                                      // 27: dbaas.v1beta1.ComponentsUpdateInformation.ComponentToUpdateInformationEntry
		nil,                                      // 28: dbaas.v1beta1.CheckForOperatorUpdateResponse.ClusterToComponentsEntry
		(OperatorsStatus)(0),                     // 29: dbaas.v1beta1.OperatorsStatus
	}
)

var file_managementpb_dbaas_components_proto_depIdxs = []int32{
	18, // 0: dbaas.v1beta1.Matrix.mongod:type_name -> dbaas.v1beta1.Matrix.MongodEntry
	19, // 1: dbaas.v1beta1.Matrix.pxc:type_name -> dbaas.v1beta1.Matrix.PxcEntry
	20, // 2: dbaas.v1beta1.Matrix.pmm:type_name -> dbaas.v1beta1.Matrix.PmmEntry
	21, // 3: dbaas.v1beta1.Matrix.proxysql:type_name -> dbaas.v1beta1.Matrix.ProxysqlEntry
	22, // 4: dbaas.v1beta1.Matrix.haproxy:type_name -> dbaas.v1beta1.Matrix.HaproxyEntry
	23, // 5: dbaas.v1beta1.Matrix.backup:type_name -> dbaas.v1beta1.Matrix.BackupEntry
	24, // 6: dbaas.v1beta1.Matrix.operator:type_name -> dbaas.v1beta1.Matrix.OperatorEntry
	25, // 7: dbaas.v1beta1.Matrix.log_collector:type_name -> dbaas.v1beta1.Matrix.LogCollectorEntry
	1,  // 8: dbaas.v1beta1.OperatorVersion.matrix:type_name -> dbaas.v1beta1.Matrix
	2,  // 9: dbaas.v1beta1.GetPSMDBComponentsResponse.versions:type_name -> dbaas.v1beta1.OperatorVersion
	2,  // 10: dbaas.v1beta1.GetPXCComponentsResponse.versions:type_name -> dbaas.v1beta1.OperatorVersion
	26, // 11: dbaas.v1beta1.ChangeComponent.versions:type_name -> dbaas.v1beta1.ChangeComponent.ComponentVersion
	7,  // 12: dbaas.v1beta1.ChangePSMDBComponentsRequest.mongod:type_name -> dbaas.v1beta1.ChangeComponent
	7,  // 13: dbaas.v1beta1.ChangePXCComponentsRequest.pxc:type_name -> dbaas.v1beta1.ChangeComponent
	7,  // 14: dbaas.v1beta1.ChangePXCComponentsRequest.proxysql:type_name -> dbaas.v1beta1.ChangeComponent
	7,  // 15: dbaas.v1beta1.ChangePXCComponentsRequest.haproxy:type_name -> dbaas.v1beta1.ChangeComponent
	29, // 16: dbaas.v1beta1.InstallOperatorResponse.status:type_name -> dbaas.v1beta1.OperatorsStatus
	27, // 17: dbaas.v1beta1.ComponentsUpdateInformation.component_to_update_information:type_name -> dbaas.v1beta1.ComponentsUpdateInformation.ComponentToUpdateInformationEntry
	28, // 18: dbaas.v1beta1.CheckForOperatorUpdateResponse.cluster_to_components:type_name -> dbaas.v1beta1.CheckForOperatorUpdateResponse.ClusterToComponentsEntry
	0,  // 19: dbaas.v1beta1.Matrix.MongodEntry.value:type_name -> dbaas.v1beta1.Component
	0,  // 20: dbaas.v1beta1.Matrix.PxcEntry.value:type_name -> dbaas.v1beta1.Component
	0,  // 21: dbaas.v1beta1.Matrix.PmmEntry.value:type_name -> dbaas.v1beta1.Component
	0,  // 22: dbaas.v1beta1.Matrix.ProxysqlEntry.value:type_name -> dbaas.v1beta1.Component
	0,  // 23: dbaas.v1beta1.Matrix.HaproxyEntry.value:type_name -> dbaas.v1beta1.Component
	0,  // 24: dbaas.v1beta1.Matrix.BackupEntry.value:type_name -> dbaas.v1beta1.Component
	0,  // 25: dbaas.v1beta1.Matrix.OperatorEntry.value:type_name -> dbaas.v1beta1.Component
	0,  // 26: dbaas.v1beta1.Matrix.LogCollectorEntry.value:type_name -> dbaas.v1beta1.Component
	15, // 27: dbaas.v1beta1.ComponentsUpdateInformation.ComponentToUpdateInformationEntry.value:type_name -> dbaas.v1beta1.ComponentUpdateInformation
	16, // 28: dbaas.v1beta1.CheckForOperatorUpdateResponse.ClusterToComponentsEntry.value:type_name -> dbaas.v1beta1.ComponentsUpdateInformation
	3,  // 29: dbaas.v1beta1.Components.GetPSMDBComponents:input_type -> dbaas.v1beta1.GetPSMDBComponentsRequest
	5,  // 30: dbaas.v1beta1.Components.GetPXCComponents:input_type -> dbaas.v1beta1.GetPXCComponentsRequest
	8,  // 31: dbaas.v1beta1.Components.ChangePSMDBComponents:input_type -> dbaas.v1beta1.ChangePSMDBComponentsRequest
	10, // 32: dbaas.v1beta1.Components.ChangePXCComponents:input_type -> dbaas.v1beta1.ChangePXCComponentsRequest
	12, // 33: dbaas.v1beta1.Components.InstallOperator:input_type -> dbaas.v1beta1.InstallOperatorRequest
	14, // 34: dbaas.v1beta1.Components.CheckForOperatorUpdate:input_type -> dbaas.v1beta1.CheckForOperatorUpdateRequest
	4,  // 35: dbaas.v1beta1.Components.GetPSMDBComponents:output_type -> dbaas.v1beta1.GetPSMDBComponentsResponse
	6,  // 36: dbaas.v1beta1.Components.GetPXCComponents:output_type -> dbaas.v1beta1.GetPXCComponentsResponse
	9,  // 37: dbaas.v1beta1.Components.ChangePSMDBComponents:output_type -> dbaas.v1beta1.ChangePSMDBComponentsResponse
	11, // 38: dbaas.v1beta1.Components.ChangePXCComponents:output_type -> dbaas.v1beta1.ChangePXCComponentsResponse
	13, // 39: dbaas.v1beta1.Components.InstallOperator:output_type -> dbaas.v1beta1.InstallOperatorResponse
	17, // 40: dbaas.v1beta1.Components.CheckForOperatorUpdate:output_type -> dbaas.v1beta1.CheckForOperatorUpdateResponse
	35, // [35:41] is the sub-list for method output_type
	29, // [29:35] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_managementpb_dbaas_components_proto_init() }
func file_managementpb_dbaas_components_proto_init() {
	if File_managementpb_dbaas_components_proto != nil {
		return
	}
	file_managementpb_dbaas_dbaas_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_managementpb_dbaas_components_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Component); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Matrix); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperatorVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPSMDBComponentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPSMDBComponentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPXCComponentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPXCComponentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePSMDBComponentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePSMDBComponentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePXCComponentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangePXCComponentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallOperatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallOperatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckForOperatorUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentUpdateInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComponentsUpdateInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckForOperatorUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_dbaas_components_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeComponent_ComponentVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_managementpb_dbaas_components_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_managementpb_dbaas_components_proto_goTypes,
		DependencyIndexes: file_managementpb_dbaas_components_proto_depIdxs,
		MessageInfos:      file_managementpb_dbaas_components_proto_msgTypes,
	}.Build()
	File_managementpb_dbaas_components_proto = out.File
	file_managementpb_dbaas_components_proto_rawDesc = nil
	file_managementpb_dbaas_components_proto_goTypes = nil
	file_managementpb_dbaas_components_proto_depIdxs = nil
}
