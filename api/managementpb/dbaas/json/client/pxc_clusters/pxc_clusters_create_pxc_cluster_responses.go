// Code generated by go-swagger; DO NOT EDIT.

package pxc_clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PXCClustersCreatePXCClusterReader is a Reader for the PXCClustersCreatePXCCluster structure.
type PXCClustersCreatePXCClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PXCClustersCreatePXCClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPXCClustersCreatePXCClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPXCClustersCreatePXCClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPXCClustersCreatePXCClusterOK creates a PXCClustersCreatePXCClusterOK with default headers values
func NewPXCClustersCreatePXCClusterOK() *PXCClustersCreatePXCClusterOK {
	return &PXCClustersCreatePXCClusterOK{}
}

/*PXCClustersCreatePXCClusterOK handles this case with default header values.

A successful response.
*/
type PXCClustersCreatePXCClusterOK struct {
	Payload interface{}
}

func (o *PXCClustersCreatePXCClusterOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/PXCCluster/Create][%d] pxcClustersCreatePxcClusterOk  %+v", 200, o.Payload)
}

func (o *PXCClustersCreatePXCClusterOK) GetPayload() interface{} {
	return o.Payload
}

func (o *PXCClustersCreatePXCClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPXCClustersCreatePXCClusterDefault creates a PXCClustersCreatePXCClusterDefault with default headers values
func NewPXCClustersCreatePXCClusterDefault(code int) *PXCClustersCreatePXCClusterDefault {
	return &PXCClustersCreatePXCClusterDefault{
		_statusCode: code,
	}
}

/*PXCClustersCreatePXCClusterDefault handles this case with default header values.

An unexpected error response.
*/
type PXCClustersCreatePXCClusterDefault struct {
	_statusCode int

	Payload *PXCClustersCreatePXCClusterDefaultBody
}

// Code gets the status code for the PXC clusters create PXC cluster default response
func (o *PXCClustersCreatePXCClusterDefault) Code() int {
	return o._statusCode
}

func (o *PXCClustersCreatePXCClusterDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/PXCCluster/Create][%d] PXCClusters_CreatePXCCluster default  %+v", o._statusCode, o.Payload)
}

func (o *PXCClustersCreatePXCClusterDefault) GetPayload() *PXCClustersCreatePXCClusterDefaultBody {
	return o.Payload
}

func (o *PXCClustersCreatePXCClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PXCClustersCreatePXCClusterDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DetailsItems0 details items0
swagger:model DetailsItems0
*/
type DetailsItems0 struct {

	// type url
	TypeURL string `json:"type_url,omitempty"`

	// value
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this details items0
func (o *DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DetailsItems0) UnmarshalBinary(b []byte) error {
	var res DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersCreatePXCClusterBody PXC clusters create PXC cluster body
swagger:model PXCClustersCreatePXCClusterBody
*/
type PXCClustersCreatePXCClusterBody struct {

	// Kubernetes cluster name.
	KubernetesClusterName string `json:"kubernetes_cluster_name,omitempty"`

	// PXC cluster name.
	// a DNS-1035 label must consist of lower case alphanumeric characters or '-',
	// start with an alphabetic character, and end with an alphanumeric character
	// (e.g. 'my-name',  or 'abc-123', regex used for validation is '[a-z]([-a-z0-9]*[a-z0-9])?')
	Name string `json:"name,omitempty"`

	// Make DB cluster accessible outside of K8s cluster.
	Expose bool `json:"expose,omitempty"`

	// params
	Params *PXCClustersCreatePXCClusterParamsBodyParams `json:"params,omitempty"`
}

// Validate validates this PXC clusters create PXC cluster body
func (o *PXCClustersCreatePXCClusterBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersCreatePXCClusterBody) validateParams(formats strfmt.Registry) error {

	if swag.IsZero(o.Params) { // not required
		return nil
	}

	if o.Params != nil {
		if err := o.Params.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterBody) UnmarshalBinary(b []byte) error {
	var res PXCClustersCreatePXCClusterBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersCreatePXCClusterDefaultBody PXC clusters create PXC cluster default body
swagger:model PXCClustersCreatePXCClusterDefaultBody
*/
type PXCClustersCreatePXCClusterDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this PXC clusters create PXC cluster default body
func (o *PXCClustersCreatePXCClusterDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersCreatePXCClusterDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("PXCClusters_CreatePXCCluster default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterDefaultBody) UnmarshalBinary(b []byte) error {
	var res PXCClustersCreatePXCClusterDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersCreatePXCClusterParamsBodyParams PXCClusterParams represents PXC cluster parameters that can be updated.
swagger:model PXCClustersCreatePXCClusterParamsBodyParams
*/
type PXCClustersCreatePXCClusterParamsBodyParams struct {

	// Cluster size.
	ClusterSize int32 `json:"cluster_size,omitempty"`

	// haproxy
	Haproxy *PXCClustersCreatePXCClusterParamsBodyParamsHaproxy `json:"haproxy,omitempty"`

	// proxysql
	Proxysql *PXCClustersCreatePXCClusterParamsBodyParamsProxysql `json:"proxysql,omitempty"`

	// pxc
	PXC *PXCClustersCreatePXCClusterParamsBodyParamsPXC `json:"pxc,omitempty"`
}

// Validate validates this PXC clusters create PXC cluster params body params
func (o *PXCClustersCreatePXCClusterParamsBodyParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHaproxy(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProxysql(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePXC(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersCreatePXCClusterParamsBodyParams) validateHaproxy(formats strfmt.Registry) error {

	if swag.IsZero(o.Haproxy) { // not required
		return nil
	}

	if o.Haproxy != nil {
		if err := o.Haproxy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "haproxy")
			}
			return err
		}
	}

	return nil
}

func (o *PXCClustersCreatePXCClusterParamsBodyParams) validateProxysql(formats strfmt.Registry) error {

	if swag.IsZero(o.Proxysql) { // not required
		return nil
	}

	if o.Proxysql != nil {
		if err := o.Proxysql.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "proxysql")
			}
			return err
		}
	}

	return nil
}

func (o *PXCClustersCreatePXCClusterParamsBodyParams) validatePXC(formats strfmt.Registry) error {

	if swag.IsZero(o.PXC) { // not required
		return nil
	}

	if o.PXC != nil {
		if err := o.PXC.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "pxc")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterParamsBodyParams) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterParamsBodyParams) UnmarshalBinary(b []byte) error {
	var res PXCClustersCreatePXCClusterParamsBodyParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersCreatePXCClusterParamsBodyParamsHaproxy HAProxy container parameters.
// NOTE: HAProxy does not need disk size as ProxySQL does because the container does not require it.
swagger:model PXCClustersCreatePXCClusterParamsBodyParamsHaproxy
*/
type PXCClustersCreatePXCClusterParamsBodyParamsHaproxy struct {

	// Docker image used for HAProxy.
	Image string `json:"image,omitempty"`

	// compute resources
	ComputeResources *PXCClustersCreatePXCClusterParamsBodyParamsHaproxyComputeResources `json:"compute_resources,omitempty"`
}

// Validate validates this PXC clusters create PXC cluster params body params haproxy
func (o *PXCClustersCreatePXCClusterParamsBodyParamsHaproxy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateComputeResources(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersCreatePXCClusterParamsBodyParamsHaproxy) validateComputeResources(formats strfmt.Registry) error {

	if swag.IsZero(o.ComputeResources) { // not required
		return nil
	}

	if o.ComputeResources != nil {
		if err := o.ComputeResources.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "haproxy" + "." + "compute_resources")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterParamsBodyParamsHaproxy) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterParamsBodyParamsHaproxy) UnmarshalBinary(b []byte) error {
	var res PXCClustersCreatePXCClusterParamsBodyParamsHaproxy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersCreatePXCClusterParamsBodyParamsHaproxyComputeResources ComputeResources represents container computer resources requests or limits.
swagger:model PXCClustersCreatePXCClusterParamsBodyParamsHaproxyComputeResources
*/
type PXCClustersCreatePXCClusterParamsBodyParamsHaproxyComputeResources struct {

	// CPUs in milliCPUs; 1000m = 1 vCPU.
	CPUm int32 `json:"cpu_m,omitempty"`

	// Memory in bytes.
	MemoryBytes string `json:"memory_bytes,omitempty"`
}

// Validate validates this PXC clusters create PXC cluster params body params haproxy compute resources
func (o *PXCClustersCreatePXCClusterParamsBodyParamsHaproxyComputeResources) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterParamsBodyParamsHaproxyComputeResources) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterParamsBodyParamsHaproxyComputeResources) UnmarshalBinary(b []byte) error {
	var res PXCClustersCreatePXCClusterParamsBodyParamsHaproxyComputeResources
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersCreatePXCClusterParamsBodyParamsPXC PXC container parameters.
// TODO Do not use inner messages in all public APIs (for consistency).
swagger:model PXCClustersCreatePXCClusterParamsBodyParamsPXC
*/
type PXCClustersCreatePXCClusterParamsBodyParamsPXC struct {

	// Docker image used for PXC.
	Image string `json:"image,omitempty"`

	// Disk size in bytes.
	DiskSize string `json:"disk_size,omitempty"`

	// compute resources
	ComputeResources *PXCClustersCreatePXCClusterParamsBodyParamsPXCComputeResources `json:"compute_resources,omitempty"`
}

// Validate validates this PXC clusters create PXC cluster params body params PXC
func (o *PXCClustersCreatePXCClusterParamsBodyParamsPXC) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateComputeResources(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersCreatePXCClusterParamsBodyParamsPXC) validateComputeResources(formats strfmt.Registry) error {

	if swag.IsZero(o.ComputeResources) { // not required
		return nil
	}

	if o.ComputeResources != nil {
		if err := o.ComputeResources.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "pxc" + "." + "compute_resources")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterParamsBodyParamsPXC) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterParamsBodyParamsPXC) UnmarshalBinary(b []byte) error {
	var res PXCClustersCreatePXCClusterParamsBodyParamsPXC
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersCreatePXCClusterParamsBodyParamsPXCComputeResources ComputeResources represents container computer resources requests or limits.
swagger:model PXCClustersCreatePXCClusterParamsBodyParamsPXCComputeResources
*/
type PXCClustersCreatePXCClusterParamsBodyParamsPXCComputeResources struct {

	// CPUs in milliCPUs; 1000m = 1 vCPU.
	CPUm int32 `json:"cpu_m,omitempty"`

	// Memory in bytes.
	MemoryBytes string `json:"memory_bytes,omitempty"`
}

// Validate validates this PXC clusters create PXC cluster params body params PXC compute resources
func (o *PXCClustersCreatePXCClusterParamsBodyParamsPXCComputeResources) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterParamsBodyParamsPXCComputeResources) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterParamsBodyParamsPXCComputeResources) UnmarshalBinary(b []byte) error {
	var res PXCClustersCreatePXCClusterParamsBodyParamsPXCComputeResources
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersCreatePXCClusterParamsBodyParamsProxysql ProxySQL container parameters.
// TODO Do not use inner messages in all public APIs (for consistency).
swagger:model PXCClustersCreatePXCClusterParamsBodyParamsProxysql
*/
type PXCClustersCreatePXCClusterParamsBodyParamsProxysql struct {

	// Docker image used for ProxySQL.
	Image string `json:"image,omitempty"`

	// Disk size in bytes.
	DiskSize string `json:"disk_size,omitempty"`

	// compute resources
	ComputeResources *PXCClustersCreatePXCClusterParamsBodyParamsProxysqlComputeResources `json:"compute_resources,omitempty"`
}

// Validate validates this PXC clusters create PXC cluster params body params proxysql
func (o *PXCClustersCreatePXCClusterParamsBodyParamsProxysql) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateComputeResources(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersCreatePXCClusterParamsBodyParamsProxysql) validateComputeResources(formats strfmt.Registry) error {

	if swag.IsZero(o.ComputeResources) { // not required
		return nil
	}

	if o.ComputeResources != nil {
		if err := o.ComputeResources.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "proxysql" + "." + "compute_resources")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterParamsBodyParamsProxysql) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterParamsBodyParamsProxysql) UnmarshalBinary(b []byte) error {
	var res PXCClustersCreatePXCClusterParamsBodyParamsProxysql
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersCreatePXCClusterParamsBodyParamsProxysqlComputeResources ComputeResources represents container computer resources requests or limits.
swagger:model PXCClustersCreatePXCClusterParamsBodyParamsProxysqlComputeResources
*/
type PXCClustersCreatePXCClusterParamsBodyParamsProxysqlComputeResources struct {

	// CPUs in milliCPUs; 1000m = 1 vCPU.
	CPUm int32 `json:"cpu_m,omitempty"`

	// Memory in bytes.
	MemoryBytes string `json:"memory_bytes,omitempty"`
}

// Validate validates this PXC clusters create PXC cluster params body params proxysql compute resources
func (o *PXCClustersCreatePXCClusterParamsBodyParamsProxysqlComputeResources) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterParamsBodyParamsProxysqlComputeResources) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersCreatePXCClusterParamsBodyParamsProxysqlComputeResources) UnmarshalBinary(b []byte) error {
	var res PXCClustersCreatePXCClusterParamsBodyParamsProxysqlComputeResources
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
