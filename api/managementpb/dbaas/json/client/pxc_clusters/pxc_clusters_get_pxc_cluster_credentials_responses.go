// Code generated by go-swagger; DO NOT EDIT.

package pxc_clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PXCClustersGetPXCClusterCredentialsReader is a Reader for the PXCClustersGetPXCClusterCredentials structure.
type PXCClustersGetPXCClusterCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PXCClustersGetPXCClusterCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPXCClustersGetPXCClusterCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPXCClustersGetPXCClusterCredentialsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPXCClustersGetPXCClusterCredentialsOK creates a PXCClustersGetPXCClusterCredentialsOK with default headers values
func NewPXCClustersGetPXCClusterCredentialsOK() *PXCClustersGetPXCClusterCredentialsOK {
	return &PXCClustersGetPXCClusterCredentialsOK{}
}

/*PXCClustersGetPXCClusterCredentialsOK handles this case with default header values.

A successful response.
*/
type PXCClustersGetPXCClusterCredentialsOK struct {
	Payload *PXCClustersGetPXCClusterCredentialsOKBody
}

func (o *PXCClustersGetPXCClusterCredentialsOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/PXCClusters/GetCredentials][%d] pxcClustersGetPxcClusterCredentialsOk  %+v", 200, o.Payload)
}

func (o *PXCClustersGetPXCClusterCredentialsOK) GetPayload() *PXCClustersGetPXCClusterCredentialsOKBody {
	return o.Payload
}

func (o *PXCClustersGetPXCClusterCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PXCClustersGetPXCClusterCredentialsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPXCClustersGetPXCClusterCredentialsDefault creates a PXCClustersGetPXCClusterCredentialsDefault with default headers values
func NewPXCClustersGetPXCClusterCredentialsDefault(code int) *PXCClustersGetPXCClusterCredentialsDefault {
	return &PXCClustersGetPXCClusterCredentialsDefault{
		_statusCode: code,
	}
}

/*PXCClustersGetPXCClusterCredentialsDefault handles this case with default header values.

An unexpected error response.
*/
type PXCClustersGetPXCClusterCredentialsDefault struct {
	_statusCode int

	Payload *PXCClustersGetPXCClusterCredentialsDefaultBody
}

// Code gets the status code for the PXC clusters get PXC cluster credentials default response
func (o *PXCClustersGetPXCClusterCredentialsDefault) Code() int {
	return o._statusCode
}

func (o *PXCClustersGetPXCClusterCredentialsDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/PXCClusters/GetCredentials][%d] PXCClusters_GetPXCClusterCredentials default  %+v", o._statusCode, o.Payload)
}

func (o *PXCClustersGetPXCClusterCredentialsDefault) GetPayload() *PXCClustersGetPXCClusterCredentialsDefaultBody {
	return o.Payload
}

func (o *PXCClustersGetPXCClusterCredentialsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PXCClustersGetPXCClusterCredentialsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PXCClustersGetPXCClusterCredentialsBody PXC clusters get PXC cluster credentials body
swagger:model PXCClustersGetPXCClusterCredentialsBody
*/
type PXCClustersGetPXCClusterCredentialsBody struct {

	// Kubernetes cluster name.
	KubernetesClusterName string `json:"kubernetes_cluster_name,omitempty"`

	// PXC cluster name.
	Name string `json:"name,omitempty"`
}

// Validate validates this PXC clusters get PXC cluster credentials body
func (o *PXCClustersGetPXCClusterCredentialsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterCredentialsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterCredentialsBody) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterCredentialsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersGetPXCClusterCredentialsDefaultBody PXC clusters get PXC cluster credentials default body
swagger:model PXCClustersGetPXCClusterCredentialsDefaultBody
*/
type PXCClustersGetPXCClusterCredentialsDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this PXC clusters get PXC cluster credentials default body
func (o *PXCClustersGetPXCClusterCredentialsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersGetPXCClusterCredentialsDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("PXCClusters_GetPXCClusterCredentials default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterCredentialsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterCredentialsDefaultBody) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterCredentialsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersGetPXCClusterCredentialsOKBody PXC clusters get PXC cluster credentials OK body
swagger:model PXCClustersGetPXCClusterCredentialsOKBody
*/
type PXCClustersGetPXCClusterCredentialsOKBody struct {

	// connection credentials
	ConnectionCredentials *PXCClustersGetPXCClusterCredentialsOKBodyConnectionCredentials `json:"connection_credentials,omitempty"`
}

// Validate validates this PXC clusters get PXC cluster credentials OK body
func (o *PXCClustersGetPXCClusterCredentialsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateConnectionCredentials(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersGetPXCClusterCredentialsOKBody) validateConnectionCredentials(formats strfmt.Registry) error {

	if swag.IsZero(o.ConnectionCredentials) { // not required
		return nil
	}

	if o.ConnectionCredentials != nil {
		if err := o.ConnectionCredentials.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pxcClustersGetPxcClusterCredentialsOk" + "." + "connection_credentials")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterCredentialsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterCredentialsOKBody) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterCredentialsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersGetPXCClusterCredentialsOKBodyConnectionCredentials PXCClusterConnectionCredentials is cluster connection credentials.
swagger:model PXCClustersGetPXCClusterCredentialsOKBodyConnectionCredentials
*/
type PXCClustersGetPXCClusterCredentialsOKBodyConnectionCredentials struct {

	// PXC username.
	Username string `json:"username,omitempty"`

	// PXC password.
	Password string `json:"password,omitempty"`

	// PXC host.
	Host string `json:"host,omitempty"`

	// PXC port.
	Port int32 `json:"port,omitempty"`
}

// Validate validates this PXC clusters get PXC cluster credentials OK body connection credentials
func (o *PXCClustersGetPXCClusterCredentialsOKBodyConnectionCredentials) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterCredentialsOKBodyConnectionCredentials) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterCredentialsOKBodyConnectionCredentials) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterCredentialsOKBodyConnectionCredentials
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
