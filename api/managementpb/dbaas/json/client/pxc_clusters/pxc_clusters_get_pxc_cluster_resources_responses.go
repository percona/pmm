// Code generated by go-swagger; DO NOT EDIT.

package pxc_clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// PXCClustersGetPXCClusterResourcesReader is a Reader for the PXCClustersGetPXCClusterResources structure.
type PXCClustersGetPXCClusterResourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PXCClustersGetPXCClusterResourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPXCClustersGetPXCClusterResourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPXCClustersGetPXCClusterResourcesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPXCClustersGetPXCClusterResourcesOK creates a PXCClustersGetPXCClusterResourcesOK with default headers values
func NewPXCClustersGetPXCClusterResourcesOK() *PXCClustersGetPXCClusterResourcesOK {
	return &PXCClustersGetPXCClusterResourcesOK{}
}

/*PXCClustersGetPXCClusterResourcesOK handles this case with default header values.

A successful response.
*/
type PXCClustersGetPXCClusterResourcesOK struct {
	Payload *PXCClustersGetPXCClusterResourcesOKBody
}

func (o *PXCClustersGetPXCClusterResourcesOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/PXCCluster/Resources/Get][%d] pxcClustersGetPxcClusterResourcesOk  %+v", 200, o.Payload)
}

func (o *PXCClustersGetPXCClusterResourcesOK) GetPayload() *PXCClustersGetPXCClusterResourcesOKBody {
	return o.Payload
}

func (o *PXCClustersGetPXCClusterResourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PXCClustersGetPXCClusterResourcesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPXCClustersGetPXCClusterResourcesDefault creates a PXCClustersGetPXCClusterResourcesDefault with default headers values
func NewPXCClustersGetPXCClusterResourcesDefault(code int) *PXCClustersGetPXCClusterResourcesDefault {
	return &PXCClustersGetPXCClusterResourcesDefault{
		_statusCode: code,
	}
}

/*PXCClustersGetPXCClusterResourcesDefault handles this case with default header values.

An unexpected error response.
*/
type PXCClustersGetPXCClusterResourcesDefault struct {
	_statusCode int

	Payload *PXCClustersGetPXCClusterResourcesDefaultBody
}

// Code gets the status code for the PXC clusters get PXC cluster resources default response
func (o *PXCClustersGetPXCClusterResourcesDefault) Code() int {
	return o._statusCode
}

func (o *PXCClustersGetPXCClusterResourcesDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/PXCCluster/Resources/Get][%d] PXCClusters_GetPXCClusterResources default  %+v", o._statusCode, o.Payload)
}

func (o *PXCClustersGetPXCClusterResourcesDefault) GetPayload() *PXCClustersGetPXCClusterResourcesDefaultBody {
	return o.Payload
}

func (o *PXCClustersGetPXCClusterResourcesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PXCClustersGetPXCClusterResourcesDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PXCClustersGetPXCClusterResourcesBody PXC clusters get PXC cluster resources body
swagger:model PXCClustersGetPXCClusterResourcesBody
*/
type PXCClustersGetPXCClusterResourcesBody struct {

	// params
	Params *PXCClustersGetPXCClusterResourcesParamsBodyParams `json:"params,omitempty"`
}

// Validate validates this PXC clusters get PXC cluster resources body
func (o *PXCClustersGetPXCClusterResourcesBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersGetPXCClusterResourcesBody) validateParams(formats strfmt.Registry) error {

	if swag.IsZero(o.Params) { // not required
		return nil
	}

	if o.Params != nil {
		if err := o.Params.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesBody) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterResourcesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersGetPXCClusterResourcesDefaultBody PXC clusters get PXC cluster resources default body
swagger:model PXCClustersGetPXCClusterResourcesDefaultBody
*/
type PXCClustersGetPXCClusterResourcesDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this PXC clusters get PXC cluster resources default body
func (o *PXCClustersGetPXCClusterResourcesDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersGetPXCClusterResourcesDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("PXCClusters_GetPXCClusterResources default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesDefaultBody) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterResourcesDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersGetPXCClusterResourcesOKBody PXC clusters get PXC cluster resources OK body
swagger:model PXCClustersGetPXCClusterResourcesOKBody
*/
type PXCClustersGetPXCClusterResourcesOKBody struct {

	// expected
	Expected *PXCClustersGetPXCClusterResourcesOKBodyExpected `json:"expected,omitempty"`
}

// Validate validates this PXC clusters get PXC cluster resources OK body
func (o *PXCClustersGetPXCClusterResourcesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExpected(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersGetPXCClusterResourcesOKBody) validateExpected(formats strfmt.Registry) error {

	if swag.IsZero(o.Expected) { // not required
		return nil
	}

	if o.Expected != nil {
		if err := o.Expected.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pxcClustersGetPxcClusterResourcesOk" + "." + "expected")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesOKBody) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterResourcesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersGetPXCClusterResourcesOKBodyExpected Resources contains Kubernetes cluster resources.
swagger:model PXCClustersGetPXCClusterResourcesOKBodyExpected
*/
type PXCClustersGetPXCClusterResourcesOKBodyExpected struct {

	// Memory in bytes.
	MemoryBytes string `json:"memory_bytes,omitempty"`

	// CPU in millicpus. For example 0.1 of CPU is equivalent to 100 millicpus.
	// See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu.
	CPUm string `json:"cpu_m,omitempty"`

	// Disk size in bytes.
	DiskSize string `json:"disk_size,omitempty"`
}

// Validate validates this PXC clusters get PXC cluster resources OK body expected
func (o *PXCClustersGetPXCClusterResourcesOKBodyExpected) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesOKBodyExpected) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesOKBodyExpected) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterResourcesOKBodyExpected
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersGetPXCClusterResourcesParamsBodyParams PXCClusterParams represents PXC cluster parameters that can be updated.
swagger:model PXCClustersGetPXCClusterResourcesParamsBodyParams
*/
type PXCClustersGetPXCClusterResourcesParamsBodyParams struct {

	// Cluster size.
	ClusterSize int32 `json:"cluster_size,omitempty"`

	// haproxy
	Haproxy *PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxy `json:"haproxy,omitempty"`

	// proxysql
	Proxysql *PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysql `json:"proxysql,omitempty"`

	// pxc
	PXC *PXCClustersGetPXCClusterResourcesParamsBodyParamsPXC `json:"pxc,omitempty"`
}

// Validate validates this PXC clusters get PXC cluster resources params body params
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHaproxy(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProxysql(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePXC(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersGetPXCClusterResourcesParamsBodyParams) validateHaproxy(formats strfmt.Registry) error {

	if swag.IsZero(o.Haproxy) { // not required
		return nil
	}

	if o.Haproxy != nil {
		if err := o.Haproxy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "haproxy")
			}
			return err
		}
	}

	return nil
}

func (o *PXCClustersGetPXCClusterResourcesParamsBodyParams) validateProxysql(formats strfmt.Registry) error {

	if swag.IsZero(o.Proxysql) { // not required
		return nil
	}

	if o.Proxysql != nil {
		if err := o.Proxysql.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "proxysql")
			}
			return err
		}
	}

	return nil
}

func (o *PXCClustersGetPXCClusterResourcesParamsBodyParams) validatePXC(formats strfmt.Registry) error {

	if swag.IsZero(o.PXC) { // not required
		return nil
	}

	if o.PXC != nil {
		if err := o.PXC.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "pxc")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParams) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParams) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterResourcesParamsBodyParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxy HAProxy container parameters.
// NOTE: HAProxy does not need disk size as ProxySQL does because the container does not require it.
swagger:model PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxy
*/
type PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxy struct {

	// Docker image used for HAProxy.
	Image string `json:"image,omitempty"`

	// compute resources
	ComputeResources *PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxyComputeResources `json:"compute_resources,omitempty"`
}

// Validate validates this PXC clusters get PXC cluster resources params body params haproxy
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateComputeResources(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxy) validateComputeResources(formats strfmt.Registry) error {

	if swag.IsZero(o.ComputeResources) { // not required
		return nil
	}

	if o.ComputeResources != nil {
		if err := o.ComputeResources.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "haproxy" + "." + "compute_resources")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxy) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxy) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxyComputeResources ComputeResources represents container computer resources requests or limits.
swagger:model PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxyComputeResources
*/
type PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxyComputeResources struct {

	// CPUs in milliCPUs; 1000m = 1 vCPU.
	CPUm int32 `json:"cpu_m,omitempty"`

	// Memory in bytes.
	MemoryBytes string `json:"memory_bytes,omitempty"`
}

// Validate validates this PXC clusters get PXC cluster resources params body params haproxy compute resources
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxyComputeResources) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxyComputeResources) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxyComputeResources) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterResourcesParamsBodyParamsHaproxyComputeResources
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersGetPXCClusterResourcesParamsBodyParamsPXC PXC container parameters.
// TODO Do not use inner messages in all public APIs (for consistency).
swagger:model PXCClustersGetPXCClusterResourcesParamsBodyParamsPXC
*/
type PXCClustersGetPXCClusterResourcesParamsBodyParamsPXC struct {

	// Docker image used for PXC.
	Image string `json:"image,omitempty"`

	// Disk size in bytes.
	DiskSize string `json:"disk_size,omitempty"`

	// compute resources
	ComputeResources *PXCClustersGetPXCClusterResourcesParamsBodyParamsPXCComputeResources `json:"compute_resources,omitempty"`
}

// Validate validates this PXC clusters get PXC cluster resources params body params PXC
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsPXC) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateComputeResources(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsPXC) validateComputeResources(formats strfmt.Registry) error {

	if swag.IsZero(o.ComputeResources) { // not required
		return nil
	}

	if o.ComputeResources != nil {
		if err := o.ComputeResources.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "pxc" + "." + "compute_resources")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsPXC) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsPXC) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterResourcesParamsBodyParamsPXC
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersGetPXCClusterResourcesParamsBodyParamsPXCComputeResources ComputeResources represents container computer resources requests or limits.
swagger:model PXCClustersGetPXCClusterResourcesParamsBodyParamsPXCComputeResources
*/
type PXCClustersGetPXCClusterResourcesParamsBodyParamsPXCComputeResources struct {

	// CPUs in milliCPUs; 1000m = 1 vCPU.
	CPUm int32 `json:"cpu_m,omitempty"`

	// Memory in bytes.
	MemoryBytes string `json:"memory_bytes,omitempty"`
}

// Validate validates this PXC clusters get PXC cluster resources params body params PXC compute resources
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsPXCComputeResources) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsPXCComputeResources) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsPXCComputeResources) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterResourcesParamsBodyParamsPXCComputeResources
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysql ProxySQL container parameters.
// TODO Do not use inner messages in all public APIs (for consistency).
swagger:model PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysql
*/
type PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysql struct {

	// Docker image used for ProxySQL.
	Image string `json:"image,omitempty"`

	// Disk size in bytes.
	DiskSize string `json:"disk_size,omitempty"`

	// compute resources
	ComputeResources *PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysqlComputeResources `json:"compute_resources,omitempty"`
}

// Validate validates this PXC clusters get PXC cluster resources params body params proxysql
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysql) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateComputeResources(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysql) validateComputeResources(formats strfmt.Registry) error {

	if swag.IsZero(o.ComputeResources) { // not required
		return nil
	}

	if o.ComputeResources != nil {
		if err := o.ComputeResources.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "proxysql" + "." + "compute_resources")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysql) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysql) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysql
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysqlComputeResources ComputeResources represents container computer resources requests or limits.
swagger:model PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysqlComputeResources
*/
type PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysqlComputeResources struct {

	// CPUs in milliCPUs; 1000m = 1 vCPU.
	CPUm int32 `json:"cpu_m,omitempty"`

	// Memory in bytes.
	MemoryBytes string `json:"memory_bytes,omitempty"`
}

// Validate validates this PXC clusters get PXC cluster resources params body params proxysql compute resources
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysqlComputeResources) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysqlComputeResources) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysqlComputeResources) UnmarshalBinary(b []byte) error {
	var res PXCClustersGetPXCClusterResourcesParamsBodyParamsProxysqlComputeResources
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
