// Code generated by go-swagger; DO NOT EDIT.

package xtra_db_cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetXtraDBClusterCredentialsReader is a Reader for the GetXtraDBClusterCredentials structure.
type GetXtraDBClusterCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetXtraDBClusterCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetXtraDBClusterCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetXtraDBClusterCredentialsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetXtraDBClusterCredentialsOK creates a GetXtraDBClusterCredentialsOK with default headers values
func NewGetXtraDBClusterCredentialsOK() *GetXtraDBClusterCredentialsOK {
	return &GetXtraDBClusterCredentialsOK{}
}

/*GetXtraDBClusterCredentialsOK handles this case with default header values.

A successful response.
*/
type GetXtraDBClusterCredentialsOK struct {
	Payload *GetXtraDBClusterCredentialsOKBody
}

func (o *GetXtraDBClusterCredentialsOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/XtraDBClusters/GetCredentials][%d] getXtraDbClusterCredentialsOk  %+v", 200, o.Payload)
}

func (o *GetXtraDBClusterCredentialsOK) GetPayload() *GetXtraDBClusterCredentialsOKBody {
	return o.Payload
}

func (o *GetXtraDBClusterCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetXtraDBClusterCredentialsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetXtraDBClusterCredentialsDefault creates a GetXtraDBClusterCredentialsDefault with default headers values
func NewGetXtraDBClusterCredentialsDefault(code int) *GetXtraDBClusterCredentialsDefault {
	return &GetXtraDBClusterCredentialsDefault{
		_statusCode: code,
	}
}

/*GetXtraDBClusterCredentialsDefault handles this case with default header values.

An unexpected error response.
*/
type GetXtraDBClusterCredentialsDefault struct {
	_statusCode int

	Payload *GetXtraDBClusterCredentialsDefaultBody
}

// Code gets the status code for the get xtra DB cluster credentials default response
func (o *GetXtraDBClusterCredentialsDefault) Code() int {
	return o._statusCode
}

func (o *GetXtraDBClusterCredentialsDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/XtraDBClusters/GetCredentials][%d] GetXtraDBClusterCredentials default  %+v", o._statusCode, o.Payload)
}

func (o *GetXtraDBClusterCredentialsDefault) GetPayload() *GetXtraDBClusterCredentialsDefaultBody {
	return o.Payload
}

func (o *GetXtraDBClusterCredentialsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetXtraDBClusterCredentialsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetXtraDBClusterCredentialsBody get xtra DB cluster credentials body
swagger:model GetXtraDBClusterCredentialsBody
*/
type GetXtraDBClusterCredentialsBody struct {

	// Kubernetes cluster name.
	KubernetesClusterName string `json:"kubernetes_cluster_name,omitempty"`

	// XtraDB cluster name.
	Name string `json:"name,omitempty"`
}

// Validate validates this get xtra DB cluster credentials body
func (o *GetXtraDBClusterCredentialsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetXtraDBClusterCredentialsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetXtraDBClusterCredentialsBody) UnmarshalBinary(b []byte) error {
	var res GetXtraDBClusterCredentialsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetXtraDBClusterCredentialsDefaultBody get xtra DB cluster credentials default body
swagger:model GetXtraDBClusterCredentialsDefaultBody
*/
type GetXtraDBClusterCredentialsDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this get xtra DB cluster credentials default body
func (o *GetXtraDBClusterCredentialsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetXtraDBClusterCredentialsDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetXtraDBClusterCredentials default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetXtraDBClusterCredentialsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetXtraDBClusterCredentialsDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetXtraDBClusterCredentialsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetXtraDBClusterCredentialsOKBody get xtra DB cluster credentials OK body
swagger:model GetXtraDBClusterCredentialsOKBody
*/
type GetXtraDBClusterCredentialsOKBody struct {

	// connection credentials
	ConnectionCredentials *GetXtraDBClusterCredentialsOKBodyConnectionCredentials `json:"connection_credentials,omitempty"`
}

// Validate validates this get xtra DB cluster credentials OK body
func (o *GetXtraDBClusterCredentialsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateConnectionCredentials(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetXtraDBClusterCredentialsOKBody) validateConnectionCredentials(formats strfmt.Registry) error {

	if swag.IsZero(o.ConnectionCredentials) { // not required
		return nil
	}

	if o.ConnectionCredentials != nil {
		if err := o.ConnectionCredentials.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getXtraDbClusterCredentialsOk" + "." + "connection_credentials")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetXtraDBClusterCredentialsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetXtraDBClusterCredentialsOKBody) UnmarshalBinary(b []byte) error {
	var res GetXtraDBClusterCredentialsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetXtraDBClusterCredentialsOKBodyConnectionCredentials XtraDBClusterConnectionCredentials is cluster connection credentials.
swagger:model GetXtraDBClusterCredentialsOKBodyConnectionCredentials
*/
type GetXtraDBClusterCredentialsOKBodyConnectionCredentials struct {

	// ProxySQL username.
	Username string `json:"username,omitempty"`

	// ProxySQL password.
	Password string `json:"password,omitempty"`

	// ProxySQL host.
	Host string `json:"host,omitempty"`

	// ProxySQL port.
	Port int32 `json:"port,omitempty"`
}

// Validate validates this get xtra DB cluster credentials OK body connection credentials
func (o *GetXtraDBClusterCredentialsOKBodyConnectionCredentials) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetXtraDBClusterCredentialsOKBodyConnectionCredentials) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetXtraDBClusterCredentialsOKBodyConnectionCredentials) UnmarshalBinary(b []byte) error {
	var res GetXtraDBClusterCredentialsOKBodyConnectionCredentials
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
