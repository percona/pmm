// Code generated by go-swagger; DO NOT EDIT.

package xtra_db_cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetXtraDBClusterResourcesReader is a Reader for the GetXtraDBClusterResources structure.
type GetXtraDBClusterResourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetXtraDBClusterResourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetXtraDBClusterResourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetXtraDBClusterResourcesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetXtraDBClusterResourcesOK creates a GetXtraDBClusterResourcesOK with default headers values
func NewGetXtraDBClusterResourcesOK() *GetXtraDBClusterResourcesOK {
	return &GetXtraDBClusterResourcesOK{}
}

/*GetXtraDBClusterResourcesOK handles this case with default header values.

A successful response.
*/
type GetXtraDBClusterResourcesOK struct {
	Payload *GetXtraDBClusterResourcesOKBody
}

func (o *GetXtraDBClusterResourcesOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/XtraDBCluster/Resources/Get][%d] getXtraDbClusterResourcesOk  %+v", 200, o.Payload)
}

func (o *GetXtraDBClusterResourcesOK) GetPayload() *GetXtraDBClusterResourcesOKBody {
	return o.Payload
}

func (o *GetXtraDBClusterResourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetXtraDBClusterResourcesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetXtraDBClusterResourcesDefault creates a GetXtraDBClusterResourcesDefault with default headers values
func NewGetXtraDBClusterResourcesDefault(code int) *GetXtraDBClusterResourcesDefault {
	return &GetXtraDBClusterResourcesDefault{
		_statusCode: code,
	}
}

/*GetXtraDBClusterResourcesDefault handles this case with default header values.

An unexpected error response.
*/
type GetXtraDBClusterResourcesDefault struct {
	_statusCode int

	Payload *GetXtraDBClusterResourcesDefaultBody
}

// Code gets the status code for the get xtra DB cluster resources default response
func (o *GetXtraDBClusterResourcesDefault) Code() int {
	return o._statusCode
}

func (o *GetXtraDBClusterResourcesDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/XtraDBCluster/Resources/Get][%d] GetXtraDBClusterResources default  %+v", o._statusCode, o.Payload)
}

func (o *GetXtraDBClusterResourcesDefault) GetPayload() *GetXtraDBClusterResourcesDefaultBody {
	return o.Payload
}

func (o *GetXtraDBClusterResourcesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetXtraDBClusterResourcesDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetXtraDBClusterResourcesBody get xtra DB cluster resources body
swagger:model GetXtraDBClusterResourcesBody
*/
type GetXtraDBClusterResourcesBody struct {

	// params
	Params *GetXtraDBClusterResourcesParamsBodyParams `json:"params,omitempty"`
}

// Validate validates this get xtra DB cluster resources body
func (o *GetXtraDBClusterResourcesBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateParams(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetXtraDBClusterResourcesBody) validateParams(formats strfmt.Registry) error {

	if swag.IsZero(o.Params) { // not required
		return nil
	}

	if o.Params != nil {
		if err := o.Params.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesBody) UnmarshalBinary(b []byte) error {
	var res GetXtraDBClusterResourcesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetXtraDBClusterResourcesDefaultBody get xtra DB cluster resources default body
swagger:model GetXtraDBClusterResourcesDefaultBody
*/
type GetXtraDBClusterResourcesDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this get xtra DB cluster resources default body
func (o *GetXtraDBClusterResourcesDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetXtraDBClusterResourcesDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetXtraDBClusterResources default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetXtraDBClusterResourcesDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetXtraDBClusterResourcesOKBody get xtra DB cluster resources OK body
swagger:model GetXtraDBClusterResourcesOKBody
*/
type GetXtraDBClusterResourcesOKBody struct {

	// expected
	Expected *GetXtraDBClusterResourcesOKBodyExpected `json:"expected,omitempty"`
}

// Validate validates this get xtra DB cluster resources OK body
func (o *GetXtraDBClusterResourcesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExpected(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetXtraDBClusterResourcesOKBody) validateExpected(formats strfmt.Registry) error {

	if swag.IsZero(o.Expected) { // not required
		return nil
	}

	if o.Expected != nil {
		if err := o.Expected.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getXtraDbClusterResourcesOk" + "." + "expected")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesOKBody) UnmarshalBinary(b []byte) error {
	var res GetXtraDBClusterResourcesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetXtraDBClusterResourcesOKBodyExpected Resources contains Kubernetes cluster resources.
swagger:model GetXtraDBClusterResourcesOKBodyExpected
*/
type GetXtraDBClusterResourcesOKBodyExpected struct {

	// Memory in bytes.
	MemoryBytes string `json:"memory_bytes,omitempty"`

	// CPU in millicpus. For example 0.1 of CPU is equivalent to 100 millicpus.
	// See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu.
	CPUm string `json:"cpu_m,omitempty"`

	// Disk size in bytes.
	DiskSize string `json:"disk_size,omitempty"`
}

// Validate validates this get xtra DB cluster resources OK body expected
func (o *GetXtraDBClusterResourcesOKBodyExpected) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesOKBodyExpected) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesOKBodyExpected) UnmarshalBinary(b []byte) error {
	var res GetXtraDBClusterResourcesOKBodyExpected
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetXtraDBClusterResourcesParamsBodyParams XtraDBClusterParams represents XtraDB cluster parameters that can be updated.
swagger:model GetXtraDBClusterResourcesParamsBodyParams
*/
type GetXtraDBClusterResourcesParamsBodyParams struct {

	// Cluster size.
	ClusterSize int32 `json:"cluster_size,omitempty"`

	// proxysql
	Proxysql *GetXtraDBClusterResourcesParamsBodyParamsProxysql `json:"proxysql,omitempty"`

	// pxc
	Pxc *GetXtraDBClusterResourcesParamsBodyParamsPxc `json:"pxc,omitempty"`
}

// Validate validates this get xtra DB cluster resources params body params
func (o *GetXtraDBClusterResourcesParamsBodyParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateProxysql(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePxc(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetXtraDBClusterResourcesParamsBodyParams) validateProxysql(formats strfmt.Registry) error {

	if swag.IsZero(o.Proxysql) { // not required
		return nil
	}

	if o.Proxysql != nil {
		if err := o.Proxysql.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "proxysql")
			}
			return err
		}
	}

	return nil
}

func (o *GetXtraDBClusterResourcesParamsBodyParams) validatePxc(formats strfmt.Registry) error {

	if swag.IsZero(o.Pxc) { // not required
		return nil
	}

	if o.Pxc != nil {
		if err := o.Pxc.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "pxc")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesParamsBodyParams) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesParamsBodyParams) UnmarshalBinary(b []byte) error {
	var res GetXtraDBClusterResourcesParamsBodyParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetXtraDBClusterResourcesParamsBodyParamsProxysql ProxySQL container parameters.
// TODO Do not use inner messages in all public APIs (for consistency).
swagger:model GetXtraDBClusterResourcesParamsBodyParamsProxysql
*/
type GetXtraDBClusterResourcesParamsBodyParamsProxysql struct {

	// Disk size in bytes.
	DiskSize string `json:"disk_size,omitempty"`

	// compute resources
	ComputeResources *GetXtraDBClusterResourcesParamsBodyParamsProxysqlComputeResources `json:"compute_resources,omitempty"`
}

// Validate validates this get xtra DB cluster resources params body params proxysql
func (o *GetXtraDBClusterResourcesParamsBodyParamsProxysql) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateComputeResources(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetXtraDBClusterResourcesParamsBodyParamsProxysql) validateComputeResources(formats strfmt.Registry) error {

	if swag.IsZero(o.ComputeResources) { // not required
		return nil
	}

	if o.ComputeResources != nil {
		if err := o.ComputeResources.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "proxysql" + "." + "compute_resources")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesParamsBodyParamsProxysql) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesParamsBodyParamsProxysql) UnmarshalBinary(b []byte) error {
	var res GetXtraDBClusterResourcesParamsBodyParamsProxysql
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetXtraDBClusterResourcesParamsBodyParamsProxysqlComputeResources ComputeResources represents container computer resources requests or limits.
swagger:model GetXtraDBClusterResourcesParamsBodyParamsProxysqlComputeResources
*/
type GetXtraDBClusterResourcesParamsBodyParamsProxysqlComputeResources struct {

	// CPUs in milliCPUs; 1000m = 1 vCPU.
	CPUm int32 `json:"cpu_m,omitempty"`

	// Memory in bytes.
	MemoryBytes string `json:"memory_bytes,omitempty"`
}

// Validate validates this get xtra DB cluster resources params body params proxysql compute resources
func (o *GetXtraDBClusterResourcesParamsBodyParamsProxysqlComputeResources) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesParamsBodyParamsProxysqlComputeResources) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesParamsBodyParamsProxysqlComputeResources) UnmarshalBinary(b []byte) error {
	var res GetXtraDBClusterResourcesParamsBodyParamsProxysqlComputeResources
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetXtraDBClusterResourcesParamsBodyParamsPxc PXC container parameters.
// TODO Do not use inner messages in all public APIs (for consistency).
swagger:model GetXtraDBClusterResourcesParamsBodyParamsPxc
*/
type GetXtraDBClusterResourcesParamsBodyParamsPxc struct {

	// Disk size in bytes.
	DiskSize string `json:"disk_size,omitempty"`

	// compute resources
	ComputeResources *GetXtraDBClusterResourcesParamsBodyParamsPxcComputeResources `json:"compute_resources,omitempty"`
}

// Validate validates this get xtra DB cluster resources params body params pxc
func (o *GetXtraDBClusterResourcesParamsBodyParamsPxc) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateComputeResources(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetXtraDBClusterResourcesParamsBodyParamsPxc) validateComputeResources(formats strfmt.Registry) error {

	if swag.IsZero(o.ComputeResources) { // not required
		return nil
	}

	if o.ComputeResources != nil {
		if err := o.ComputeResources.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "params" + "." + "pxc" + "." + "compute_resources")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesParamsBodyParamsPxc) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesParamsBodyParamsPxc) UnmarshalBinary(b []byte) error {
	var res GetXtraDBClusterResourcesParamsBodyParamsPxc
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetXtraDBClusterResourcesParamsBodyParamsPxcComputeResources ComputeResources represents container computer resources requests or limits.
swagger:model GetXtraDBClusterResourcesParamsBodyParamsPxcComputeResources
*/
type GetXtraDBClusterResourcesParamsBodyParamsPxcComputeResources struct {

	// CPUs in milliCPUs; 1000m = 1 vCPU.
	CPUm int32 `json:"cpu_m,omitempty"`

	// Memory in bytes.
	MemoryBytes string `json:"memory_bytes,omitempty"`
}

// Validate validates this get xtra DB cluster resources params body params pxc compute resources
func (o *GetXtraDBClusterResourcesParamsBodyParamsPxcComputeResources) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesParamsBodyParamsPxcComputeResources) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetXtraDBClusterResourcesParamsBodyParamsPxcComputeResources) UnmarshalBinary(b []byte) error {
	var res GetXtraDBClusterResourcesParamsBodyParamsPxcComputeResources
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
