// Code generated by go-swagger; DO NOT EDIT.

package postgresql_clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetPostgresqlClusterCredentialsReader is a Reader for the GetPostgresqlClusterCredentials structure.
type GetPostgresqlClusterCredentialsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPostgresqlClusterCredentialsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPostgresqlClusterCredentialsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetPostgresqlClusterCredentialsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPostgresqlClusterCredentialsOK creates a GetPostgresqlClusterCredentialsOK with default headers values
func NewGetPostgresqlClusterCredentialsOK() *GetPostgresqlClusterCredentialsOK {
	return &GetPostgresqlClusterCredentialsOK{}
}

/*
GetPostgresqlClusterCredentialsOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetPostgresqlClusterCredentialsOK struct {
	Payload *GetPostgresqlClusterCredentialsOKBody
}

func (o *GetPostgresqlClusterCredentialsOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/PostgresqlCluster/GetCredentials][%d] getPostgresqlClusterCredentialsOk  %+v", 200, o.Payload)
}

func (o *GetPostgresqlClusterCredentialsOK) GetPayload() *GetPostgresqlClusterCredentialsOKBody {
	return o.Payload
}

func (o *GetPostgresqlClusterCredentialsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(GetPostgresqlClusterCredentialsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPostgresqlClusterCredentialsDefault creates a GetPostgresqlClusterCredentialsDefault with default headers values
func NewGetPostgresqlClusterCredentialsDefault(code int) *GetPostgresqlClusterCredentialsDefault {
	return &GetPostgresqlClusterCredentialsDefault{
		_statusCode: code,
	}
}

/*
GetPostgresqlClusterCredentialsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetPostgresqlClusterCredentialsDefault struct {
	_statusCode int

	Payload *GetPostgresqlClusterCredentialsDefaultBody
}

// Code gets the status code for the get postgresql cluster credentials default response
func (o *GetPostgresqlClusterCredentialsDefault) Code() int {
	return o._statusCode
}

func (o *GetPostgresqlClusterCredentialsDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/PostgresqlCluster/GetCredentials][%d] GetPostgresqlClusterCredentials default  %+v", o._statusCode, o.Payload)
}

func (o *GetPostgresqlClusterCredentialsDefault) GetPayload() *GetPostgresqlClusterCredentialsDefaultBody {
	return o.Payload
}

func (o *GetPostgresqlClusterCredentialsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(GetPostgresqlClusterCredentialsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetPostgresqlClusterCredentialsBody get postgresql cluster credentials body
swagger:model GetPostgresqlClusterCredentialsBody
*/
type GetPostgresqlClusterCredentialsBody struct {
	// Kubernetes cluster name.
	KubernetesClusterName string `json:"kubernetes_cluster_name,omitempty"`

	// Postgresql cluster name.
	Name string `json:"name,omitempty"`
}

// Validate validates this get postgresql cluster credentials body
func (o *GetPostgresqlClusterCredentialsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get postgresql cluster credentials body based on context it is used
func (o *GetPostgresqlClusterCredentialsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPostgresqlClusterCredentialsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPostgresqlClusterCredentialsBody) UnmarshalBinary(b []byte) error {
	var res GetPostgresqlClusterCredentialsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPostgresqlClusterCredentialsDefaultBody get postgresql cluster credentials default body
swagger:model GetPostgresqlClusterCredentialsDefaultBody
*/
type GetPostgresqlClusterCredentialsDefaultBody struct {
	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*GetPostgresqlClusterCredentialsDefaultBodyDetailsItems0 `json:"details"`
}

// Validate validates this get postgresql cluster credentials default body
func (o *GetPostgresqlClusterCredentialsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPostgresqlClusterCredentialsDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetPostgresqlClusterCredentials default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetPostgresqlClusterCredentials default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get postgresql cluster credentials default body based on the context it is used
func (o *GetPostgresqlClusterCredentialsDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPostgresqlClusterCredentialsDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Details); i++ {
		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetPostgresqlClusterCredentials default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetPostgresqlClusterCredentials default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPostgresqlClusterCredentialsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPostgresqlClusterCredentialsDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetPostgresqlClusterCredentialsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPostgresqlClusterCredentialsDefaultBodyDetailsItems0 get postgresql cluster credentials default body details items0
swagger:model GetPostgresqlClusterCredentialsDefaultBodyDetailsItems0
*/
type GetPostgresqlClusterCredentialsDefaultBodyDetailsItems0 struct {
	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this get postgresql cluster credentials default body details items0
func (o *GetPostgresqlClusterCredentialsDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get postgresql cluster credentials default body details items0 based on context it is used
func (o *GetPostgresqlClusterCredentialsDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPostgresqlClusterCredentialsDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPostgresqlClusterCredentialsDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res GetPostgresqlClusterCredentialsDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPostgresqlClusterCredentialsOKBody get postgresql cluster credentials OK body
swagger:model GetPostgresqlClusterCredentialsOKBody
*/
type GetPostgresqlClusterCredentialsOKBody struct {
	// connection credentials
	ConnectionCredentials *GetPostgresqlClusterCredentialsOKBodyConnectionCredentials `json:"connection_credentials,omitempty"`
}

// Validate validates this get postgresql cluster credentials OK body
func (o *GetPostgresqlClusterCredentialsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateConnectionCredentials(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPostgresqlClusterCredentialsOKBody) validateConnectionCredentials(formats strfmt.Registry) error {
	if swag.IsZero(o.ConnectionCredentials) { // not required
		return nil
	}

	if o.ConnectionCredentials != nil {
		if err := o.ConnectionCredentials.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPostgresqlClusterCredentialsOk" + "." + "connection_credentials")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getPostgresqlClusterCredentialsOk" + "." + "connection_credentials")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get postgresql cluster credentials OK body based on the context it is used
func (o *GetPostgresqlClusterCredentialsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateConnectionCredentials(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPostgresqlClusterCredentialsOKBody) contextValidateConnectionCredentials(ctx context.Context, formats strfmt.Registry) error {
	if o.ConnectionCredentials != nil {
		if err := o.ConnectionCredentials.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getPostgresqlClusterCredentialsOk" + "." + "connection_credentials")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("getPostgresqlClusterCredentialsOk" + "." + "connection_credentials")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPostgresqlClusterCredentialsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPostgresqlClusterCredentialsOKBody) UnmarshalBinary(b []byte) error {
	var res GetPostgresqlClusterCredentialsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPostgresqlClusterCredentialsOKBodyConnectionCredentials PostgresqlClusterConnectionCredentials is cluster connection credentials.
swagger:model GetPostgresqlClusterCredentialsOKBodyConnectionCredentials
*/
type GetPostgresqlClusterCredentialsOKBodyConnectionCredentials struct {
	// Postgresql username.
	Username string `json:"username,omitempty"`

	// Postgresql password.
	Password string `json:"password,omitempty"`

	// Postgresql host.
	Host string `json:"host,omitempty"`

	// Postgresql port.
	Port int32 `json:"port,omitempty"`
}

// Validate validates this get postgresql cluster credentials OK body connection credentials
func (o *GetPostgresqlClusterCredentialsOKBodyConnectionCredentials) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get postgresql cluster credentials OK body connection credentials based on context it is used
func (o *GetPostgresqlClusterCredentialsOKBodyConnectionCredentials) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPostgresqlClusterCredentialsOKBodyConnectionCredentials) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPostgresqlClusterCredentialsOKBodyConnectionCredentials) UnmarshalBinary(b []byte) error {
	var res GetPostgresqlClusterCredentialsOKBodyConnectionCredentials
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
