// Code generated by go-swagger; DO NOT EDIT.

package db_clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DBClustersDeleteDBClusterReader is a Reader for the DBClustersDeleteDBCluster structure.
type DBClustersDeleteDBClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DBClustersDeleteDBClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDBClustersDeleteDBClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDBClustersDeleteDBClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDBClustersDeleteDBClusterOK creates a DBClustersDeleteDBClusterOK with default headers values
func NewDBClustersDeleteDBClusterOK() *DBClustersDeleteDBClusterOK {
	return &DBClustersDeleteDBClusterOK{}
}

/*DBClustersDeleteDBClusterOK handles this case with default header values.

A successful response.
*/
type DBClustersDeleteDBClusterOK struct {
	Payload interface{}
}

func (o *DBClustersDeleteDBClusterOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/DBClusters/Delete][%d] dbClustersDeleteDbClusterOk  %+v", 200, o.Payload)
}

func (o *DBClustersDeleteDBClusterOK) GetPayload() interface{} {
	return o.Payload
}

func (o *DBClustersDeleteDBClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDBClustersDeleteDBClusterDefault creates a DBClustersDeleteDBClusterDefault with default headers values
func NewDBClustersDeleteDBClusterDefault(code int) *DBClustersDeleteDBClusterDefault {
	return &DBClustersDeleteDBClusterDefault{
		_statusCode: code,
	}
}

/*DBClustersDeleteDBClusterDefault handles this case with default header values.

An unexpected error response.
*/
type DBClustersDeleteDBClusterDefault struct {
	_statusCode int

	Payload *DBClustersDeleteDBClusterDefaultBody
}

// Code gets the status code for the DB clusters delete DB cluster default response
func (o *DBClustersDeleteDBClusterDefault) Code() int {
	return o._statusCode
}

func (o *DBClustersDeleteDBClusterDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/DBClusters/Delete][%d] DBClusters_DeleteDBCluster default  %+v", o._statusCode, o.Payload)
}

func (o *DBClustersDeleteDBClusterDefault) GetPayload() *DBClustersDeleteDBClusterDefaultBody {
	return o.Payload
}

func (o *DBClustersDeleteDBClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DBClustersDeleteDBClusterDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DBClustersDeleteDBClusterBody DB clusters delete DB cluster body
swagger:model DBClustersDeleteDBClusterBody
*/
type DBClustersDeleteDBClusterBody struct {

	// Kubernetes cluster name.
	KubernetesClusterName string `json:"kubernetes_cluster_name,omitempty"`

	// DB cluster name.
	Name string `json:"name,omitempty"`

	// DBClusterType represents database cluster type.
	//
	//  - DB_CLUSTER_TYPE_INVALID: DB_CLUSTER_TYPE_INVALID represents unknown cluster type.
	//  - DB_CLUSTER_TYPE_PXC: DB_CLUSTER_TYPE_PXC represents pxc cluster type.
	//  - DB_CLUSTER_TYPE_PSMDB: DB_CLUSTER_TYPE_PSMDB represents psmdb cluster type.
	// Enum: [DB_CLUSTER_TYPE_INVALID DB_CLUSTER_TYPE_PXC DB_CLUSTER_TYPE_PSMDB]
	ClusterType *string `json:"cluster_type,omitempty"`
}

// Validate validates this DB clusters delete DB cluster body
func (o *DBClustersDeleteDBClusterBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateClusterType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var dbClustersDeleteDbClusterBodyTypeClusterTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DB_CLUSTER_TYPE_INVALID","DB_CLUSTER_TYPE_PXC","DB_CLUSTER_TYPE_PSMDB"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		dbClustersDeleteDbClusterBodyTypeClusterTypePropEnum = append(dbClustersDeleteDbClusterBodyTypeClusterTypePropEnum, v)
	}
}

const (

	// DBClustersDeleteDBClusterBodyClusterTypeDBCLUSTERTYPEINVALID captures enum value "DB_CLUSTER_TYPE_INVALID"
	DBClustersDeleteDBClusterBodyClusterTypeDBCLUSTERTYPEINVALID string = "DB_CLUSTER_TYPE_INVALID"

	// DBClustersDeleteDBClusterBodyClusterTypeDBCLUSTERTYPEPXC captures enum value "DB_CLUSTER_TYPE_PXC"
	DBClustersDeleteDBClusterBodyClusterTypeDBCLUSTERTYPEPXC string = "DB_CLUSTER_TYPE_PXC"

	// DBClustersDeleteDBClusterBodyClusterTypeDBCLUSTERTYPEPSMDB captures enum value "DB_CLUSTER_TYPE_PSMDB"
	DBClustersDeleteDBClusterBodyClusterTypeDBCLUSTERTYPEPSMDB string = "DB_CLUSTER_TYPE_PSMDB"
)

// prop value enum
func (o *DBClustersDeleteDBClusterBody) validateClusterTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, dbClustersDeleteDbClusterBodyTypeClusterTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *DBClustersDeleteDBClusterBody) validateClusterType(formats strfmt.Registry) error {

	if swag.IsZero(o.ClusterType) { // not required
		return nil
	}

	// value enum
	if err := o.validateClusterTypeEnum("body"+"."+"cluster_type", "body", *o.ClusterType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DBClustersDeleteDBClusterBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DBClustersDeleteDBClusterBody) UnmarshalBinary(b []byte) error {
	var res DBClustersDeleteDBClusterBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DBClustersDeleteDBClusterDefaultBody DB clusters delete DB cluster default body
swagger:model DBClustersDeleteDBClusterDefaultBody
*/
type DBClustersDeleteDBClusterDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this DB clusters delete DB cluster default body
func (o *DBClustersDeleteDBClusterDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DBClustersDeleteDBClusterDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("DBClusters_DeleteDBCluster default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DBClustersDeleteDBClusterDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DBClustersDeleteDBClusterDefaultBody) UnmarshalBinary(b []byte) error {
	var res DBClustersDeleteDBClusterDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DetailsItems0 details items0
swagger:model DetailsItems0
*/
type DetailsItems0 struct {

	// type url
	TypeURL string `json:"type_url,omitempty"`

	// value
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this details items0
func (o *DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DetailsItems0) UnmarshalBinary(b []byte) error {
	var res DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
