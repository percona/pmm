// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RegisterKubernetesClusterReader is a Reader for the RegisterKubernetesCluster structure.
type RegisterKubernetesClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterKubernetesClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRegisterKubernetesClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewRegisterKubernetesClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRegisterKubernetesClusterOK creates a RegisterKubernetesClusterOK with default headers values
func NewRegisterKubernetesClusterOK() *RegisterKubernetesClusterOK {
	return &RegisterKubernetesClusterOK{}
}

/*RegisterKubernetesClusterOK handles this case with default header values.

A successful response.
*/
type RegisterKubernetesClusterOK struct {
	Payload *RegisterKubernetesClusterOKBody
}

func (o *RegisterKubernetesClusterOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/Kubernetes/Register][%d] registerKubernetesClusterOk  %+v", 200, o.Payload)
}

func (o *RegisterKubernetesClusterOK) GetPayload() *RegisterKubernetesClusterOKBody {
	return o.Payload
}

func (o *RegisterKubernetesClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RegisterKubernetesClusterOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterKubernetesClusterDefault creates a RegisterKubernetesClusterDefault with default headers values
func NewRegisterKubernetesClusterDefault(code int) *RegisterKubernetesClusterDefault {
	return &RegisterKubernetesClusterDefault{
		_statusCode: code,
	}
}

/*RegisterKubernetesClusterDefault handles this case with default header values.

An unexpected error response.
*/
type RegisterKubernetesClusterDefault struct {
	_statusCode int

	Payload *RegisterKubernetesClusterDefaultBody
}

// Code gets the status code for the register kubernetes cluster default response
func (o *RegisterKubernetesClusterDefault) Code() int {
	return o._statusCode
}

func (o *RegisterKubernetesClusterDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/Kubernetes/Register][%d] RegisterKubernetesCluster default  %+v", o._statusCode, o.Payload)
}

func (o *RegisterKubernetesClusterDefault) GetPayload() *RegisterKubernetesClusterDefaultBody {
	return o.Payload
}

func (o *RegisterKubernetesClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RegisterKubernetesClusterDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*RegisterKubernetesClusterBody register kubernetes cluster body
swagger:model RegisterKubernetesClusterBody
*/
type RegisterKubernetesClusterBody struct {

	// Kubernetes cluster name.
	KubernetesClusterName string `json:"kubernetes_cluster_name,omitempty"`

	// kube auth
	KubeAuth *RegisterKubernetesClusterParamsBodyKubeAuth `json:"kube_auth,omitempty"`
}

// Validate validates this register kubernetes cluster body
func (o *RegisterKubernetesClusterBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKubeAuth(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RegisterKubernetesClusterBody) validateKubeAuth(formats strfmt.Registry) error {

	if swag.IsZero(o.KubeAuth) { // not required
		return nil
	}

	if o.KubeAuth != nil {
		if err := o.KubeAuth.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "kube_auth")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RegisterKubernetesClusterBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RegisterKubernetesClusterBody) UnmarshalBinary(b []byte) error {
	var res RegisterKubernetesClusterBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RegisterKubernetesClusterDefaultBody register kubernetes cluster default body
swagger:model RegisterKubernetesClusterDefaultBody
*/
type RegisterKubernetesClusterDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this register kubernetes cluster default body
func (o *RegisterKubernetesClusterDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RegisterKubernetesClusterDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("RegisterKubernetesCluster default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *RegisterKubernetesClusterDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RegisterKubernetesClusterDefaultBody) UnmarshalBinary(b []byte) error {
	var res RegisterKubernetesClusterDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RegisterKubernetesClusterOKBody register kubernetes cluster OK body
swagger:model RegisterKubernetesClusterOKBody
*/
type RegisterKubernetesClusterOKBody struct {

	// operators
	Operators *RegisterKubernetesClusterOKBodyOperators `json:"operators,omitempty"`
}

// Validate validates this register kubernetes cluster OK body
func (o *RegisterKubernetesClusterOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateOperators(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RegisterKubernetesClusterOKBody) validateOperators(formats strfmt.Registry) error {

	if swag.IsZero(o.Operators) { // not required
		return nil
	}

	if o.Operators != nil {
		if err := o.Operators.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("registerKubernetesClusterOk" + "." + "operators")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RegisterKubernetesClusterOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RegisterKubernetesClusterOKBody) UnmarshalBinary(b []byte) error {
	var res RegisterKubernetesClusterOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RegisterKubernetesClusterOKBodyOperators Operators contains list of operators installed in kubernetes cluster.
swagger:model RegisterKubernetesClusterOKBodyOperators
*/
type RegisterKubernetesClusterOKBodyOperators struct {

	// psmdb
	PSMDB *RegisterKubernetesClusterOKBodyOperatorsPSMDB `json:"psmdb,omitempty"`

	// pxc
	Pxc *RegisterKubernetesClusterOKBodyOperatorsPxc `json:"pxc,omitempty"`
}

// Validate validates this register kubernetes cluster OK body operators
func (o *RegisterKubernetesClusterOKBodyOperators) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validatePSMDB(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePxc(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RegisterKubernetesClusterOKBodyOperators) validatePSMDB(formats strfmt.Registry) error {

	if swag.IsZero(o.PSMDB) { // not required
		return nil
	}

	if o.PSMDB != nil {
		if err := o.PSMDB.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("registerKubernetesClusterOk" + "." + "operators" + "." + "psmdb")
			}
			return err
		}
	}

	return nil
}

func (o *RegisterKubernetesClusterOKBodyOperators) validatePxc(formats strfmt.Registry) error {

	if swag.IsZero(o.Pxc) { // not required
		return nil
	}

	if o.Pxc != nil {
		if err := o.Pxc.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("registerKubernetesClusterOk" + "." + "operators" + "." + "pxc")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RegisterKubernetesClusterOKBodyOperators) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RegisterKubernetesClusterOKBodyOperators) UnmarshalBinary(b []byte) error {
	var res RegisterKubernetesClusterOKBodyOperators
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RegisterKubernetesClusterOKBodyOperatorsPSMDB Operator contains all information about operator installed in kubernetes cluster.
swagger:model RegisterKubernetesClusterOKBodyOperatorsPSMDB
*/
type RegisterKubernetesClusterOKBodyOperatorsPSMDB struct {

	// OperatorsStatus defines status of operators installed in kubernetes cluster.
	//
	//  - OPERATORS_STATUS_INVALID: OPERATORS_STATUS_INVALID represents unknown state.
	//  - OPERATORS_STATUS_OK: OPERATORS_STATUS_OK represents that operators are installed and have supported API version.
	//  - OPERATORS_STATUS_UNSUPPORTED: OPERATORS_STATUS_UNSUPPORTED represents that operators are installed, but doesn't have supported API version.
	//  - OPERATORS_STATUS_UNAVAILABLE: OPERATORS_STATUS_UNAVAILABLE represents that kubernetes cluster is unavailable.
	// Enum: [OPERATORS_STATUS_INVALID OPERATORS_STATUS_OK OPERATORS_STATUS_UNSUPPORTED OPERATORS_STATUS_UNAVAILABLE]
	Status *string `json:"status,omitempty"`
}

// Validate validates this register kubernetes cluster OK body operators PSMDB
func (o *RegisterKubernetesClusterOKBodyOperatorsPSMDB) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var registerKubernetesClusterOkBodyOperatorsPsmdbTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["OPERATORS_STATUS_INVALID","OPERATORS_STATUS_OK","OPERATORS_STATUS_UNSUPPORTED","OPERATORS_STATUS_UNAVAILABLE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		registerKubernetesClusterOkBodyOperatorsPsmdbTypeStatusPropEnum = append(registerKubernetesClusterOkBodyOperatorsPsmdbTypeStatusPropEnum, v)
	}
}

const (

	// RegisterKubernetesClusterOKBodyOperatorsPSMDBStatusOPERATORSSTATUSINVALID captures enum value "OPERATORS_STATUS_INVALID"
	RegisterKubernetesClusterOKBodyOperatorsPSMDBStatusOPERATORSSTATUSINVALID string = "OPERATORS_STATUS_INVALID"

	// RegisterKubernetesClusterOKBodyOperatorsPSMDBStatusOPERATORSSTATUSOK captures enum value "OPERATORS_STATUS_OK"
	RegisterKubernetesClusterOKBodyOperatorsPSMDBStatusOPERATORSSTATUSOK string = "OPERATORS_STATUS_OK"

	// RegisterKubernetesClusterOKBodyOperatorsPSMDBStatusOPERATORSSTATUSUNSUPPORTED captures enum value "OPERATORS_STATUS_UNSUPPORTED"
	RegisterKubernetesClusterOKBodyOperatorsPSMDBStatusOPERATORSSTATUSUNSUPPORTED string = "OPERATORS_STATUS_UNSUPPORTED"

	// RegisterKubernetesClusterOKBodyOperatorsPSMDBStatusOPERATORSSTATUSUNAVAILABLE captures enum value "OPERATORS_STATUS_UNAVAILABLE"
	RegisterKubernetesClusterOKBodyOperatorsPSMDBStatusOPERATORSSTATUSUNAVAILABLE string = "OPERATORS_STATUS_UNAVAILABLE"
)

// prop value enum
func (o *RegisterKubernetesClusterOKBodyOperatorsPSMDB) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, registerKubernetesClusterOkBodyOperatorsPsmdbTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *RegisterKubernetesClusterOKBodyOperatorsPSMDB) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("registerKubernetesClusterOk"+"."+"operators"+"."+"psmdb"+"."+"status", "body", *o.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RegisterKubernetesClusterOKBodyOperatorsPSMDB) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RegisterKubernetesClusterOKBodyOperatorsPSMDB) UnmarshalBinary(b []byte) error {
	var res RegisterKubernetesClusterOKBodyOperatorsPSMDB
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RegisterKubernetesClusterOKBodyOperatorsPxc Operator contains all information about operator installed in kubernetes cluster.
swagger:model RegisterKubernetesClusterOKBodyOperatorsPxc
*/
type RegisterKubernetesClusterOKBodyOperatorsPxc struct {

	// OperatorsStatus defines status of operators installed in kubernetes cluster.
	//
	//  - OPERATORS_STATUS_INVALID: OPERATORS_STATUS_INVALID represents unknown state.
	//  - OPERATORS_STATUS_OK: OPERATORS_STATUS_OK represents that operators are installed and have supported API version.
	//  - OPERATORS_STATUS_UNSUPPORTED: OPERATORS_STATUS_UNSUPPORTED represents that operators are installed, but doesn't have supported API version.
	//  - OPERATORS_STATUS_UNAVAILABLE: OPERATORS_STATUS_UNAVAILABLE represents that kubernetes cluster is unavailable.
	// Enum: [OPERATORS_STATUS_INVALID OPERATORS_STATUS_OK OPERATORS_STATUS_UNSUPPORTED OPERATORS_STATUS_UNAVAILABLE]
	Status *string `json:"status,omitempty"`
}

// Validate validates this register kubernetes cluster OK body operators pxc
func (o *RegisterKubernetesClusterOKBodyOperatorsPxc) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var registerKubernetesClusterOkBodyOperatorsPxcTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["OPERATORS_STATUS_INVALID","OPERATORS_STATUS_OK","OPERATORS_STATUS_UNSUPPORTED","OPERATORS_STATUS_UNAVAILABLE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		registerKubernetesClusterOkBodyOperatorsPxcTypeStatusPropEnum = append(registerKubernetesClusterOkBodyOperatorsPxcTypeStatusPropEnum, v)
	}
}

const (

	// RegisterKubernetesClusterOKBodyOperatorsPxcStatusOPERATORSSTATUSINVALID captures enum value "OPERATORS_STATUS_INVALID"
	RegisterKubernetesClusterOKBodyOperatorsPxcStatusOPERATORSSTATUSINVALID string = "OPERATORS_STATUS_INVALID"

	// RegisterKubernetesClusterOKBodyOperatorsPxcStatusOPERATORSSTATUSOK captures enum value "OPERATORS_STATUS_OK"
	RegisterKubernetesClusterOKBodyOperatorsPxcStatusOPERATORSSTATUSOK string = "OPERATORS_STATUS_OK"

	// RegisterKubernetesClusterOKBodyOperatorsPxcStatusOPERATORSSTATUSUNSUPPORTED captures enum value "OPERATORS_STATUS_UNSUPPORTED"
	RegisterKubernetesClusterOKBodyOperatorsPxcStatusOPERATORSSTATUSUNSUPPORTED string = "OPERATORS_STATUS_UNSUPPORTED"

	// RegisterKubernetesClusterOKBodyOperatorsPxcStatusOPERATORSSTATUSUNAVAILABLE captures enum value "OPERATORS_STATUS_UNAVAILABLE"
	RegisterKubernetesClusterOKBodyOperatorsPxcStatusOPERATORSSTATUSUNAVAILABLE string = "OPERATORS_STATUS_UNAVAILABLE"
)

// prop value enum
func (o *RegisterKubernetesClusterOKBodyOperatorsPxc) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, registerKubernetesClusterOkBodyOperatorsPxcTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *RegisterKubernetesClusterOKBodyOperatorsPxc) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("registerKubernetesClusterOk"+"."+"operators"+"."+"pxc"+"."+"status", "body", *o.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RegisterKubernetesClusterOKBodyOperatorsPxc) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RegisterKubernetesClusterOKBodyOperatorsPxc) UnmarshalBinary(b []byte) error {
	var res RegisterKubernetesClusterOKBodyOperatorsPxc
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RegisterKubernetesClusterParamsBodyKubeAuth KubeAuth represents Kubernetes / kubectl authentication and authorization information.
swagger:model RegisterKubernetesClusterParamsBodyKubeAuth
*/
type RegisterKubernetesClusterParamsBodyKubeAuth struct {

	// Kubeconfig file content.
	Kubeconfig string `json:"kubeconfig,omitempty"`
}

// Validate validates this register kubernetes cluster params body kube auth
func (o *RegisterKubernetesClusterParamsBodyKubeAuth) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RegisterKubernetesClusterParamsBodyKubeAuth) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RegisterKubernetesClusterParamsBodyKubeAuth) UnmarshalBinary(b []byte) error {
	var res RegisterKubernetesClusterParamsBodyKubeAuth
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
