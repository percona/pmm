// Code generated by go-swagger; DO NOT EDIT.

package kubernetes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// KubernetesRegisterKubernetesClusterReader is a Reader for the KubernetesRegisterKubernetesCluster structure.
type KubernetesRegisterKubernetesClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KubernetesRegisterKubernetesClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKubernetesRegisterKubernetesClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewKubernetesRegisterKubernetesClusterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewKubernetesRegisterKubernetesClusterOK creates a KubernetesRegisterKubernetesClusterOK with default headers values
func NewKubernetesRegisterKubernetesClusterOK() *KubernetesRegisterKubernetesClusterOK {
	return &KubernetesRegisterKubernetesClusterOK{}
}

/*KubernetesRegisterKubernetesClusterOK handles this case with default header values.

A successful response.
*/
type KubernetesRegisterKubernetesClusterOK struct {
	Payload interface{}
}

func (o *KubernetesRegisterKubernetesClusterOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/Kubernetes/Register][%d] kubernetesRegisterKubernetesClusterOk  %+v", 200, o.Payload)
}

func (o *KubernetesRegisterKubernetesClusterOK) GetPayload() interface{} {
	return o.Payload
}

func (o *KubernetesRegisterKubernetesClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKubernetesRegisterKubernetesClusterDefault creates a KubernetesRegisterKubernetesClusterDefault with default headers values
func NewKubernetesRegisterKubernetesClusterDefault(code int) *KubernetesRegisterKubernetesClusterDefault {
	return &KubernetesRegisterKubernetesClusterDefault{
		_statusCode: code,
	}
}

/*KubernetesRegisterKubernetesClusterDefault handles this case with default header values.

An unexpected error response.
*/
type KubernetesRegisterKubernetesClusterDefault struct {
	_statusCode int

	Payload *KubernetesRegisterKubernetesClusterDefaultBody
}

// Code gets the status code for the kubernetes register kubernetes cluster default response
func (o *KubernetesRegisterKubernetesClusterDefault) Code() int {
	return o._statusCode
}

func (o *KubernetesRegisterKubernetesClusterDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/Kubernetes/Register][%d] Kubernetes_RegisterKubernetesCluster default  %+v", o._statusCode, o.Payload)
}

func (o *KubernetesRegisterKubernetesClusterDefault) GetPayload() *KubernetesRegisterKubernetesClusterDefaultBody {
	return o.Payload
}

func (o *KubernetesRegisterKubernetesClusterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(KubernetesRegisterKubernetesClusterDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*KubernetesRegisterKubernetesClusterBody kubernetes register kubernetes cluster body
swagger:model KubernetesRegisterKubernetesClusterBody
*/
type KubernetesRegisterKubernetesClusterBody struct {

	// Kubernetes cluster name.
	KubernetesClusterName string `json:"kubernetes_cluster_name,omitempty"`

	// AWS access key id, only needed when registering EKS cluster and kubeconfig does not contain it.
	AWSAccessKeyID string `json:"aws_access_key_id,omitempty"`

	// AWS secret access key, only needed when registering EKS cluster and kubeconfig does not contain it.
	AWSSecretAccessKey string `json:"aws_secret_access_key,omitempty"`

	// kube auth
	KubeAuth *KubernetesRegisterKubernetesClusterParamsBodyKubeAuth `json:"kube_auth,omitempty"`
}

// Validate validates this kubernetes register kubernetes cluster body
func (o *KubernetesRegisterKubernetesClusterBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKubeAuth(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *KubernetesRegisterKubernetesClusterBody) validateKubeAuth(formats strfmt.Registry) error {

	if swag.IsZero(o.KubeAuth) { // not required
		return nil
	}

	if o.KubeAuth != nil {
		if err := o.KubeAuth.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "kube_auth")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesRegisterKubernetesClusterBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesRegisterKubernetesClusterBody) UnmarshalBinary(b []byte) error {
	var res KubernetesRegisterKubernetesClusterBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*KubernetesRegisterKubernetesClusterDefaultBody kubernetes register kubernetes cluster default body
swagger:model KubernetesRegisterKubernetesClusterDefaultBody
*/
type KubernetesRegisterKubernetesClusterDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this kubernetes register kubernetes cluster default body
func (o *KubernetesRegisterKubernetesClusterDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *KubernetesRegisterKubernetesClusterDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Kubernetes_RegisterKubernetesCluster default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesRegisterKubernetesClusterDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesRegisterKubernetesClusterDefaultBody) UnmarshalBinary(b []byte) error {
	var res KubernetesRegisterKubernetesClusterDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*KubernetesRegisterKubernetesClusterParamsBodyKubeAuth KubeAuth represents Kubernetes / kubectl authentication and authorization information.
swagger:model KubernetesRegisterKubernetesClusterParamsBodyKubeAuth
*/
type KubernetesRegisterKubernetesClusterParamsBodyKubeAuth struct {

	// Kubeconfig file content.
	Kubeconfig string `json:"kubeconfig,omitempty"`
}

// Validate validates this kubernetes register kubernetes cluster params body kube auth
func (o *KubernetesRegisterKubernetesClusterParamsBodyKubeAuth) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *KubernetesRegisterKubernetesClusterParamsBodyKubeAuth) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *KubernetesRegisterKubernetesClusterParamsBodyKubeAuth) UnmarshalBinary(b []byte) error {
	var res KubernetesRegisterKubernetesClusterParamsBodyKubeAuth
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
