// Code generated by go-swagger; DO NOT EDIT.

package components

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewComponentsCheckForOperatorUpdateParams creates a new ComponentsCheckForOperatorUpdateParams object
// with the default values initialized.
func NewComponentsCheckForOperatorUpdateParams() *ComponentsCheckForOperatorUpdateParams {
	var ()
	return &ComponentsCheckForOperatorUpdateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewComponentsCheckForOperatorUpdateParamsWithTimeout creates a new ComponentsCheckForOperatorUpdateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewComponentsCheckForOperatorUpdateParamsWithTimeout(timeout time.Duration) *ComponentsCheckForOperatorUpdateParams {
	var ()
	return &ComponentsCheckForOperatorUpdateParams{

		timeout: timeout,
	}
}

// NewComponentsCheckForOperatorUpdateParamsWithContext creates a new ComponentsCheckForOperatorUpdateParams object
// with the default values initialized, and the ability to set a context for a request
func NewComponentsCheckForOperatorUpdateParamsWithContext(ctx context.Context) *ComponentsCheckForOperatorUpdateParams {
	var ()
	return &ComponentsCheckForOperatorUpdateParams{

		Context: ctx,
	}
}

// NewComponentsCheckForOperatorUpdateParamsWithHTTPClient creates a new ComponentsCheckForOperatorUpdateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewComponentsCheckForOperatorUpdateParamsWithHTTPClient(client *http.Client) *ComponentsCheckForOperatorUpdateParams {
	var ()
	return &ComponentsCheckForOperatorUpdateParams{
		HTTPClient: client,
	}
}

/*ComponentsCheckForOperatorUpdateParams contains all the parameters to send to the API endpoint
for the components check for operator update operation typically these are written to a http.Request
*/
type ComponentsCheckForOperatorUpdateParams struct {

	/*Body*/
	Body interface{}

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the components check for operator update params
func (o *ComponentsCheckForOperatorUpdateParams) WithTimeout(timeout time.Duration) *ComponentsCheckForOperatorUpdateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the components check for operator update params
func (o *ComponentsCheckForOperatorUpdateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the components check for operator update params
func (o *ComponentsCheckForOperatorUpdateParams) WithContext(ctx context.Context) *ComponentsCheckForOperatorUpdateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the components check for operator update params
func (o *ComponentsCheckForOperatorUpdateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the components check for operator update params
func (o *ComponentsCheckForOperatorUpdateParams) WithHTTPClient(client *http.Client) *ComponentsCheckForOperatorUpdateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the components check for operator update params
func (o *ComponentsCheckForOperatorUpdateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the components check for operator update params
func (o *ComponentsCheckForOperatorUpdateParams) WithBody(body interface{}) *ComponentsCheckForOperatorUpdateParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the components check for operator update params
func (o *ComponentsCheckForOperatorUpdateParams) SetBody(body interface{}) {
	o.Body = body
}

// WriteToRequest writes these params to a swagger request
func (o *ComponentsCheckForOperatorUpdateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
