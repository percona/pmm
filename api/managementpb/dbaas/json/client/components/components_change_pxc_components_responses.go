// Code generated by go-swagger; DO NOT EDIT.

package components

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ComponentsChangePXCComponentsReader is a Reader for the ComponentsChangePXCComponents structure.
type ComponentsChangePXCComponentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ComponentsChangePXCComponentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewComponentsChangePXCComponentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewComponentsChangePXCComponentsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewComponentsChangePXCComponentsOK creates a ComponentsChangePXCComponentsOK with default headers values
func NewComponentsChangePXCComponentsOK() *ComponentsChangePXCComponentsOK {
	return &ComponentsChangePXCComponentsOK{}
}

/*ComponentsChangePXCComponentsOK handles this case with default header values.

A successful response.
*/
type ComponentsChangePXCComponentsOK struct {
	Payload interface{}
}

func (o *ComponentsChangePXCComponentsOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/Components/ChangePXC][%d] componentsChangePxcComponentsOk  %+v", 200, o.Payload)
}

func (o *ComponentsChangePXCComponentsOK) GetPayload() interface{} {
	return o.Payload
}

func (o *ComponentsChangePXCComponentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewComponentsChangePXCComponentsDefault creates a ComponentsChangePXCComponentsDefault with default headers values
func NewComponentsChangePXCComponentsDefault(code int) *ComponentsChangePXCComponentsDefault {
	return &ComponentsChangePXCComponentsDefault{
		_statusCode: code,
	}
}

/*ComponentsChangePXCComponentsDefault handles this case with default header values.

An unexpected error response.
*/
type ComponentsChangePXCComponentsDefault struct {
	_statusCode int

	Payload *ComponentsChangePXCComponentsDefaultBody
}

// Code gets the status code for the components change PXC components default response
func (o *ComponentsChangePXCComponentsDefault) Code() int {
	return o._statusCode
}

func (o *ComponentsChangePXCComponentsDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/Components/ChangePXC][%d] Components_ChangePXCComponents default  %+v", o._statusCode, o.Payload)
}

func (o *ComponentsChangePXCComponentsDefault) GetPayload() *ComponentsChangePXCComponentsDefaultBody {
	return o.Payload
}

func (o *ComponentsChangePXCComponentsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ComponentsChangePXCComponentsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ComponentsChangePXCComponentsBody components change PXC components body
swagger:model ComponentsChangePXCComponentsBody
*/
type ComponentsChangePXCComponentsBody struct {

	// Kubernetes cluster name.
	KubernetesClusterName string `json:"kubernetes_cluster_name,omitempty"`

	// haproxy
	Haproxy *ComponentsChangePXCComponentsParamsBodyHaproxy `json:"haproxy,omitempty"`

	// proxysql
	Proxysql *ComponentsChangePXCComponentsParamsBodyProxysql `json:"proxysql,omitempty"`

	// pxc
	PXC *ComponentsChangePXCComponentsParamsBodyPXC `json:"pxc,omitempty"`
}

// Validate validates this components change PXC components body
func (o *ComponentsChangePXCComponentsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateHaproxy(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProxysql(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePXC(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ComponentsChangePXCComponentsBody) validateHaproxy(formats strfmt.Registry) error {

	if swag.IsZero(o.Haproxy) { // not required
		return nil
	}

	if o.Haproxy != nil {
		if err := o.Haproxy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "haproxy")
			}
			return err
		}
	}

	return nil
}

func (o *ComponentsChangePXCComponentsBody) validateProxysql(formats strfmt.Registry) error {

	if swag.IsZero(o.Proxysql) { // not required
		return nil
	}

	if o.Proxysql != nil {
		if err := o.Proxysql.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "proxysql")
			}
			return err
		}
	}

	return nil
}

func (o *ComponentsChangePXCComponentsBody) validatePXC(formats strfmt.Registry) error {

	if swag.IsZero(o.PXC) { // not required
		return nil
	}

	if o.PXC != nil {
		if err := o.PXC.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "pxc")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsBody) UnmarshalBinary(b []byte) error {
	var res ComponentsChangePXCComponentsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ComponentsChangePXCComponentsDefaultBody components change PXC components default body
swagger:model ComponentsChangePXCComponentsDefaultBody
*/
type ComponentsChangePXCComponentsDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this components change PXC components default body
func (o *ComponentsChangePXCComponentsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ComponentsChangePXCComponentsDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Components_ChangePXCComponents default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsDefaultBody) UnmarshalBinary(b []byte) error {
	var res ComponentsChangePXCComponentsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ComponentsChangePXCComponentsParamsBodyHaproxy ChangeComponent contains fields to manage components.
swagger:model ComponentsChangePXCComponentsParamsBodyHaproxy
*/
type ComponentsChangePXCComponentsParamsBodyHaproxy struct {

	// default version
	DefaultVersion string `json:"default_version,omitempty"`

	// versions
	Versions []*ComponentsChangePXCComponentsParamsBodyHaproxyVersionsItems0 `json:"versions"`
}

// Validate validates this components change PXC components params body haproxy
func (o *ComponentsChangePXCComponentsParamsBodyHaproxy) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateVersions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ComponentsChangePXCComponentsParamsBodyHaproxy) validateVersions(formats strfmt.Registry) error {

	if swag.IsZero(o.Versions) { // not required
		return nil
	}

	for i := 0; i < len(o.Versions); i++ {
		if swag.IsZero(o.Versions[i]) { // not required
			continue
		}

		if o.Versions[i] != nil {
			if err := o.Versions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "haproxy" + "." + "versions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsParamsBodyHaproxy) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsParamsBodyHaproxy) UnmarshalBinary(b []byte) error {
	var res ComponentsChangePXCComponentsParamsBodyHaproxy
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ComponentsChangePXCComponentsParamsBodyHaproxyVersionsItems0 ComponentVersion contains operations which should be done with component version.
swagger:model ComponentsChangePXCComponentsParamsBodyHaproxyVersionsItems0
*/
type ComponentsChangePXCComponentsParamsBodyHaproxyVersionsItems0 struct {

	// version
	Version string `json:"version,omitempty"`

	// disable
	Disable bool `json:"disable,omitempty"`

	// enable
	Enable bool `json:"enable,omitempty"`
}

// Validate validates this components change PXC components params body haproxy versions items0
func (o *ComponentsChangePXCComponentsParamsBodyHaproxyVersionsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsParamsBodyHaproxyVersionsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsParamsBodyHaproxyVersionsItems0) UnmarshalBinary(b []byte) error {
	var res ComponentsChangePXCComponentsParamsBodyHaproxyVersionsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ComponentsChangePXCComponentsParamsBodyPXC ChangeComponent contains fields to manage components.
swagger:model ComponentsChangePXCComponentsParamsBodyPXC
*/
type ComponentsChangePXCComponentsParamsBodyPXC struct {

	// default version
	DefaultVersion string `json:"default_version,omitempty"`

	// versions
	Versions []*ComponentsChangePXCComponentsParamsBodyPXCVersionsItems0 `json:"versions"`
}

// Validate validates this components change PXC components params body PXC
func (o *ComponentsChangePXCComponentsParamsBodyPXC) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateVersions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ComponentsChangePXCComponentsParamsBodyPXC) validateVersions(formats strfmt.Registry) error {

	if swag.IsZero(o.Versions) { // not required
		return nil
	}

	for i := 0; i < len(o.Versions); i++ {
		if swag.IsZero(o.Versions[i]) { // not required
			continue
		}

		if o.Versions[i] != nil {
			if err := o.Versions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "pxc" + "." + "versions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsParamsBodyPXC) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsParamsBodyPXC) UnmarshalBinary(b []byte) error {
	var res ComponentsChangePXCComponentsParamsBodyPXC
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ComponentsChangePXCComponentsParamsBodyPXCVersionsItems0 ComponentVersion contains operations which should be done with component version.
swagger:model ComponentsChangePXCComponentsParamsBodyPXCVersionsItems0
*/
type ComponentsChangePXCComponentsParamsBodyPXCVersionsItems0 struct {

	// version
	Version string `json:"version,omitempty"`

	// disable
	Disable bool `json:"disable,omitempty"`

	// enable
	Enable bool `json:"enable,omitempty"`
}

// Validate validates this components change PXC components params body PXC versions items0
func (o *ComponentsChangePXCComponentsParamsBodyPXCVersionsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsParamsBodyPXCVersionsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsParamsBodyPXCVersionsItems0) UnmarshalBinary(b []byte) error {
	var res ComponentsChangePXCComponentsParamsBodyPXCVersionsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ComponentsChangePXCComponentsParamsBodyProxysql ChangeComponent contains fields to manage components.
swagger:model ComponentsChangePXCComponentsParamsBodyProxysql
*/
type ComponentsChangePXCComponentsParamsBodyProxysql struct {

	// default version
	DefaultVersion string `json:"default_version,omitempty"`

	// versions
	Versions []*ComponentsChangePXCComponentsParamsBodyProxysqlVersionsItems0 `json:"versions"`
}

// Validate validates this components change PXC components params body proxysql
func (o *ComponentsChangePXCComponentsParamsBodyProxysql) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateVersions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ComponentsChangePXCComponentsParamsBodyProxysql) validateVersions(formats strfmt.Registry) error {

	if swag.IsZero(o.Versions) { // not required
		return nil
	}

	for i := 0; i < len(o.Versions); i++ {
		if swag.IsZero(o.Versions[i]) { // not required
			continue
		}

		if o.Versions[i] != nil {
			if err := o.Versions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "proxysql" + "." + "versions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsParamsBodyProxysql) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsParamsBodyProxysql) UnmarshalBinary(b []byte) error {
	var res ComponentsChangePXCComponentsParamsBodyProxysql
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ComponentsChangePXCComponentsParamsBodyProxysqlVersionsItems0 ComponentVersion contains operations which should be done with component version.
swagger:model ComponentsChangePXCComponentsParamsBodyProxysqlVersionsItems0
*/
type ComponentsChangePXCComponentsParamsBodyProxysqlVersionsItems0 struct {

	// version
	Version string `json:"version,omitempty"`

	// disable
	Disable bool `json:"disable,omitempty"`

	// enable
	Enable bool `json:"enable,omitempty"`
}

// Validate validates this components change PXC components params body proxysql versions items0
func (o *ComponentsChangePXCComponentsParamsBodyProxysqlVersionsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsParamsBodyProxysqlVersionsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ComponentsChangePXCComponentsParamsBodyProxysqlVersionsItems0) UnmarshalBinary(b []byte) error {
	var res ComponentsChangePXCComponentsParamsBodyProxysqlVersionsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
