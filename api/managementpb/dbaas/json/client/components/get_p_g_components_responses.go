// Code generated by go-swagger; DO NOT EDIT.

package components

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetPGComponentsReader is a Reader for the GetPGComponents structure.
type GetPGComponentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPGComponentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPGComponentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetPGComponentsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPGComponentsOK creates a GetPGComponentsOK with default headers values
func NewGetPGComponentsOK() *GetPGComponentsOK {
	return &GetPGComponentsOK{}
}

/*
GetPGComponentsOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetPGComponentsOK struct {
	Payload *GetPGComponentsOKBody
}

func (o *GetPGComponentsOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/Components/GetPG][%d] getPGComponentsOk  %+v", 200, o.Payload)
}

func (o *GetPGComponentsOK) GetPayload() *GetPGComponentsOKBody {
	return o.Payload
}

func (o *GetPGComponentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(GetPGComponentsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPGComponentsDefault creates a GetPGComponentsDefault with default headers values
func NewGetPGComponentsDefault(code int) *GetPGComponentsDefault {
	return &GetPGComponentsDefault{
		_statusCode: code,
	}
}

/*
GetPGComponentsDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetPGComponentsDefault struct {
	_statusCode int

	Payload *GetPGComponentsDefaultBody
}

// Code gets the status code for the get p g components default response
func (o *GetPGComponentsDefault) Code() int {
	return o._statusCode
}

func (o *GetPGComponentsDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/Components/GetPG][%d] GetPGComponents default  %+v", o._statusCode, o.Payload)
}

func (o *GetPGComponentsDefault) GetPayload() *GetPGComponentsDefaultBody {
	return o.Payload
}

func (o *GetPGComponentsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(GetPGComponentsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetPGComponentsBody get p g components body
swagger:model GetPGComponentsBody
*/
type GetPGComponentsBody struct {
	// Kubernetes cluster name.
	KubernetesClusterName string `json:"kubernetes_cluster_name,omitempty"`

	// Version of DB.
	DBVersion string `json:"db_version,omitempty"`
}

// Validate validates this get p g components body
func (o *GetPGComponentsBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g components body based on context it is used
func (o *GetPGComponentsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsBody) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsDefaultBody get p g components default body
swagger:model GetPGComponentsDefaultBody
*/
type GetPGComponentsDefaultBody struct {
	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*GetPGComponentsDefaultBodyDetailsItems0 `json:"details"`
}

// Validate validates this get p g components default body
func (o *GetPGComponentsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPGComponentsDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetPGComponents default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetPGComponents default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get p g components default body based on the context it is used
func (o *GetPGComponentsDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPGComponentsDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Details); i++ {
		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetPGComponents default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetPGComponents default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsDefaultBodyDetailsItems0 get p g components default body details items0
swagger:model GetPGComponentsDefaultBodyDetailsItems0
*/
type GetPGComponentsDefaultBodyDetailsItems0 struct {
	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this get p g components default body details items0
func (o *GetPGComponentsDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g components default body details items0 based on context it is used
func (o *GetPGComponentsDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsOKBody get p g components OK body
swagger:model GetPGComponentsOKBody
*/
type GetPGComponentsOKBody struct {
	// versions
	Versions []*GetPGComponentsOKBodyVersionsItems0 `json:"versions"`
}

// Validate validates this get p g components OK body
func (o *GetPGComponentsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateVersions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPGComponentsOKBody) validateVersions(formats strfmt.Registry) error {
	if swag.IsZero(o.Versions) { // not required
		return nil
	}

	for i := 0; i < len(o.Versions); i++ {
		if swag.IsZero(o.Versions[i]) { // not required
			continue
		}

		if o.Versions[i] != nil {
			if err := o.Versions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPGComponentsOk" + "." + "versions" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getPGComponentsOk" + "." + "versions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get p g components OK body based on the context it is used
func (o *GetPGComponentsOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateVersions(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPGComponentsOKBody) contextValidateVersions(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Versions); i++ {
		if o.Versions[i] != nil {
			if err := o.Versions[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getPGComponentsOk" + "." + "versions" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getPGComponentsOk" + "." + "versions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsOKBody) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsOKBodyVersionsItems0 OperatorVersion contains information about operator and components matrix.
swagger:model GetPGComponentsOKBodyVersionsItems0
*/
type GetPGComponentsOKBodyVersionsItems0 struct {
	// product
	Product string `json:"product,omitempty"`

	// operator
	Operator string `json:"operator,omitempty"`

	// matrix
	Matrix *GetPGComponentsOKBodyVersionsItems0Matrix `json:"matrix,omitempty"`
}

// Validate validates this get p g components OK body versions items0
func (o *GetPGComponentsOKBodyVersionsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMatrix(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0) validateMatrix(formats strfmt.Registry) error {
	if swag.IsZero(o.Matrix) { // not required
		return nil
	}

	if o.Matrix != nil {
		if err := o.Matrix.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("matrix")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("matrix")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this get p g components OK body versions items0 based on the context it is used
func (o *GetPGComponentsOKBodyVersionsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateMatrix(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0) contextValidateMatrix(ctx context.Context, formats strfmt.Registry) error {
	if o.Matrix != nil {
		if err := o.Matrix.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("matrix")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("matrix")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsOKBodyVersionsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsOKBodyVersionsItems0Matrix Matrix contains all available components.
swagger:model GetPGComponentsOKBodyVersionsItems0Matrix
*/
type GetPGComponentsOKBodyVersionsItems0Matrix struct {
	// mongod
	Mongod map[string]GetPGComponentsOKBodyVersionsItems0MatrixMongodAnon `json:"mongod,omitempty"`

	// pxc
	PXC map[string]GetPGComponentsOKBodyVersionsItems0MatrixPXCAnon `json:"pxc,omitempty"`

	// pmm
	PMM map[string]GetPGComponentsOKBodyVersionsItems0MatrixPMMAnon `json:"pmm,omitempty"`

	// proxysql
	Proxysql map[string]GetPGComponentsOKBodyVersionsItems0MatrixProxysqlAnon `json:"proxysql,omitempty"`

	// haproxy
	Haproxy map[string]GetPGComponentsOKBodyVersionsItems0MatrixHaproxyAnon `json:"haproxy,omitempty"`

	// backup
	Backup map[string]GetPGComponentsOKBodyVersionsItems0MatrixBackupAnon `json:"backup,omitempty"`

	// operator
	Operator map[string]GetPGComponentsOKBodyVersionsItems0MatrixOperatorAnon `json:"operator,omitempty"`

	// log collector
	LogCollector map[string]GetPGComponentsOKBodyVersionsItems0MatrixLogCollectorAnon `json:"log_collector,omitempty"`

	// postgresql
	Postgresql map[string]GetPGComponentsOKBodyVersionsItems0MatrixPostgresqlAnon `json:"postgresql,omitempty"`

	// pgbouncer
	Pgbouncer map[string]GetPGComponentsOKBodyVersionsItems0MatrixPgbouncerAnon `json:"pgbouncer,omitempty"`

	// pgbackrest
	Pgbackrest map[string]GetPGComponentsOKBodyVersionsItems0MatrixPgbackrestAnon `json:"pgbackrest,omitempty"`
}

// Validate validates this get p g components OK body versions items0 matrix
func (o *GetPGComponentsOKBodyVersionsItems0Matrix) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMongod(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePXC(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePMM(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProxysql(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateHaproxy(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBackup(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateOperator(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLogCollector(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePostgresql(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePgbouncer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePgbackrest(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) validateMongod(formats strfmt.Registry) error {
	if swag.IsZero(o.Mongod) { // not required
		return nil
	}

	for k := range o.Mongod {

		if swag.IsZero(o.Mongod[k]) { // not required
			continue
		}
		if val, ok := o.Mongod[k]; ok {
			if err := val.Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("matrix" + "." + "mongod" + "." + k)
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("matrix" + "." + "mongod" + "." + k)
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) validatePXC(formats strfmt.Registry) error {
	if swag.IsZero(o.PXC) { // not required
		return nil
	}

	for k := range o.PXC {

		if swag.IsZero(o.PXC[k]) { // not required
			continue
		}
		if val, ok := o.PXC[k]; ok {
			if err := val.Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("matrix" + "." + "pxc" + "." + k)
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("matrix" + "." + "pxc" + "." + k)
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) validatePMM(formats strfmt.Registry) error {
	if swag.IsZero(o.PMM) { // not required
		return nil
	}

	for k := range o.PMM {

		if swag.IsZero(o.PMM[k]) { // not required
			continue
		}
		if val, ok := o.PMM[k]; ok {
			if err := val.Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("matrix" + "." + "pmm" + "." + k)
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("matrix" + "." + "pmm" + "." + k)
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) validateProxysql(formats strfmt.Registry) error {
	if swag.IsZero(o.Proxysql) { // not required
		return nil
	}

	for k := range o.Proxysql {

		if swag.IsZero(o.Proxysql[k]) { // not required
			continue
		}
		if val, ok := o.Proxysql[k]; ok {
			if err := val.Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("matrix" + "." + "proxysql" + "." + k)
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("matrix" + "." + "proxysql" + "." + k)
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) validateHaproxy(formats strfmt.Registry) error {
	if swag.IsZero(o.Haproxy) { // not required
		return nil
	}

	for k := range o.Haproxy {

		if swag.IsZero(o.Haproxy[k]) { // not required
			continue
		}
		if val, ok := o.Haproxy[k]; ok {
			if err := val.Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("matrix" + "." + "haproxy" + "." + k)
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("matrix" + "." + "haproxy" + "." + k)
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) validateBackup(formats strfmt.Registry) error {
	if swag.IsZero(o.Backup) { // not required
		return nil
	}

	for k := range o.Backup {

		if swag.IsZero(o.Backup[k]) { // not required
			continue
		}
		if val, ok := o.Backup[k]; ok {
			if err := val.Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("matrix" + "." + "backup" + "." + k)
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("matrix" + "." + "backup" + "." + k)
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) validateOperator(formats strfmt.Registry) error {
	if swag.IsZero(o.Operator) { // not required
		return nil
	}

	for k := range o.Operator {

		if swag.IsZero(o.Operator[k]) { // not required
			continue
		}
		if val, ok := o.Operator[k]; ok {
			if err := val.Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("matrix" + "." + "operator" + "." + k)
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("matrix" + "." + "operator" + "." + k)
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) validateLogCollector(formats strfmt.Registry) error {
	if swag.IsZero(o.LogCollector) { // not required
		return nil
	}

	for k := range o.LogCollector {

		if swag.IsZero(o.LogCollector[k]) { // not required
			continue
		}
		if val, ok := o.LogCollector[k]; ok {
			if err := val.Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("matrix" + "." + "log_collector" + "." + k)
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("matrix" + "." + "log_collector" + "." + k)
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) validatePostgresql(formats strfmt.Registry) error {
	if swag.IsZero(o.Postgresql) { // not required
		return nil
	}

	for k := range o.Postgresql {

		if swag.IsZero(o.Postgresql[k]) { // not required
			continue
		}
		if val, ok := o.Postgresql[k]; ok {
			if err := val.Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("matrix" + "." + "postgresql" + "." + k)
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("matrix" + "." + "postgresql" + "." + k)
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) validatePgbouncer(formats strfmt.Registry) error {
	if swag.IsZero(o.Pgbouncer) { // not required
		return nil
	}

	for k := range o.Pgbouncer {

		if swag.IsZero(o.Pgbouncer[k]) { // not required
			continue
		}
		if val, ok := o.Pgbouncer[k]; ok {
			if err := val.Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("matrix" + "." + "pgbouncer" + "." + k)
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("matrix" + "." + "pgbouncer" + "." + k)
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) validatePgbackrest(formats strfmt.Registry) error {
	if swag.IsZero(o.Pgbackrest) { // not required
		return nil
	}

	for k := range o.Pgbackrest {

		if swag.IsZero(o.Pgbackrest[k]) { // not required
			continue
		}
		if val, ok := o.Pgbackrest[k]; ok {
			if err := val.Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("matrix" + "." + "pgbackrest" + "." + k)
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("matrix" + "." + "pgbackrest" + "." + k)
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get p g components OK body versions items0 matrix based on the context it is used
func (o *GetPGComponentsOKBodyVersionsItems0Matrix) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateMongod(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidatePXC(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidatePMM(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateProxysql(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateHaproxy(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateBackup(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateOperator(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidateLogCollector(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidatePostgresql(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidatePgbouncer(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := o.contextValidatePgbackrest(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) contextValidateMongod(ctx context.Context, formats strfmt.Registry) error {
	for k := range o.Mongod {
		if val, ok := o.Mongod[k]; ok {
			if err := val.ContextValidate(ctx, formats); err != nil {
				return err
			}
		}
	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) contextValidatePXC(ctx context.Context, formats strfmt.Registry) error {
	for k := range o.PXC {
		if val, ok := o.PXC[k]; ok {
			if err := val.ContextValidate(ctx, formats); err != nil {
				return err
			}
		}
	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) contextValidatePMM(ctx context.Context, formats strfmt.Registry) error {
	for k := range o.PMM {
		if val, ok := o.PMM[k]; ok {
			if err := val.ContextValidate(ctx, formats); err != nil {
				return err
			}
		}
	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) contextValidateProxysql(ctx context.Context, formats strfmt.Registry) error {
	for k := range o.Proxysql {
		if val, ok := o.Proxysql[k]; ok {
			if err := val.ContextValidate(ctx, formats); err != nil {
				return err
			}
		}
	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) contextValidateHaproxy(ctx context.Context, formats strfmt.Registry) error {
	for k := range o.Haproxy {
		if val, ok := o.Haproxy[k]; ok {
			if err := val.ContextValidate(ctx, formats); err != nil {
				return err
			}
		}
	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) contextValidateBackup(ctx context.Context, formats strfmt.Registry) error {
	for k := range o.Backup {
		if val, ok := o.Backup[k]; ok {
			if err := val.ContextValidate(ctx, formats); err != nil {
				return err
			}
		}
	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) contextValidateOperator(ctx context.Context, formats strfmt.Registry) error {
	for k := range o.Operator {
		if val, ok := o.Operator[k]; ok {
			if err := val.ContextValidate(ctx, formats); err != nil {
				return err
			}
		}
	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) contextValidateLogCollector(ctx context.Context, formats strfmt.Registry) error {
	for k := range o.LogCollector {
		if val, ok := o.LogCollector[k]; ok {
			if err := val.ContextValidate(ctx, formats); err != nil {
				return err
			}
		}
	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) contextValidatePostgresql(ctx context.Context, formats strfmt.Registry) error {
	for k := range o.Postgresql {
		if val, ok := o.Postgresql[k]; ok {
			if err := val.ContextValidate(ctx, formats); err != nil {
				return err
			}
		}
	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) contextValidatePgbouncer(ctx context.Context, formats strfmt.Registry) error {
	for k := range o.Pgbouncer {
		if val, ok := o.Pgbouncer[k]; ok {
			if err := val.ContextValidate(ctx, formats); err != nil {
				return err
			}
		}
	}

	return nil
}

func (o *GetPGComponentsOKBodyVersionsItems0Matrix) contextValidatePgbackrest(ctx context.Context, formats strfmt.Registry) error {
	for k := range o.Pgbackrest {
		if val, ok := o.Pgbackrest[k]; ok {
			if err := val.ContextValidate(ctx, formats); err != nil {
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0Matrix) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0Matrix) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsOKBodyVersionsItems0Matrix
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsOKBodyVersionsItems0MatrixBackupAnon Component contains information about component.
swagger:model GetPGComponentsOKBodyVersionsItems0MatrixBackupAnon
*/
type GetPGComponentsOKBodyVersionsItems0MatrixBackupAnon struct {
	// image path
	ImagePath string `json:"image_path,omitempty"`

	// image hash
	ImageHash string `json:"image_hash,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// critical
	Critical bool `json:"critical,omitempty"`

	// default
	Default bool `json:"default,omitempty"`

	// disabled
	Disabled bool `json:"disabled,omitempty"`
}

// Validate validates this get p g components OK body versions items0 matrix backup anon
func (o *GetPGComponentsOKBodyVersionsItems0MatrixBackupAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g components OK body versions items0 matrix backup anon based on context it is used
func (o *GetPGComponentsOKBodyVersionsItems0MatrixBackupAnon) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixBackupAnon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixBackupAnon) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsOKBodyVersionsItems0MatrixBackupAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsOKBodyVersionsItems0MatrixHaproxyAnon Component contains information about component.
swagger:model GetPGComponentsOKBodyVersionsItems0MatrixHaproxyAnon
*/
type GetPGComponentsOKBodyVersionsItems0MatrixHaproxyAnon struct {
	// image path
	ImagePath string `json:"image_path,omitempty"`

	// image hash
	ImageHash string `json:"image_hash,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// critical
	Critical bool `json:"critical,omitempty"`

	// default
	Default bool `json:"default,omitempty"`

	// disabled
	Disabled bool `json:"disabled,omitempty"`
}

// Validate validates this get p g components OK body versions items0 matrix haproxy anon
func (o *GetPGComponentsOKBodyVersionsItems0MatrixHaproxyAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g components OK body versions items0 matrix haproxy anon based on context it is used
func (o *GetPGComponentsOKBodyVersionsItems0MatrixHaproxyAnon) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixHaproxyAnon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixHaproxyAnon) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsOKBodyVersionsItems0MatrixHaproxyAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsOKBodyVersionsItems0MatrixLogCollectorAnon Component contains information about component.
swagger:model GetPGComponentsOKBodyVersionsItems0MatrixLogCollectorAnon
*/
type GetPGComponentsOKBodyVersionsItems0MatrixLogCollectorAnon struct {
	// image path
	ImagePath string `json:"image_path,omitempty"`

	// image hash
	ImageHash string `json:"image_hash,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// critical
	Critical bool `json:"critical,omitempty"`

	// default
	Default bool `json:"default,omitempty"`

	// disabled
	Disabled bool `json:"disabled,omitempty"`
}

// Validate validates this get p g components OK body versions items0 matrix log collector anon
func (o *GetPGComponentsOKBodyVersionsItems0MatrixLogCollectorAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g components OK body versions items0 matrix log collector anon based on context it is used
func (o *GetPGComponentsOKBodyVersionsItems0MatrixLogCollectorAnon) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixLogCollectorAnon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixLogCollectorAnon) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsOKBodyVersionsItems0MatrixLogCollectorAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsOKBodyVersionsItems0MatrixMongodAnon Component contains information about component.
swagger:model GetPGComponentsOKBodyVersionsItems0MatrixMongodAnon
*/
type GetPGComponentsOKBodyVersionsItems0MatrixMongodAnon struct {
	// image path
	ImagePath string `json:"image_path,omitempty"`

	// image hash
	ImageHash string `json:"image_hash,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// critical
	Critical bool `json:"critical,omitempty"`

	// default
	Default bool `json:"default,omitempty"`

	// disabled
	Disabled bool `json:"disabled,omitempty"`
}

// Validate validates this get p g components OK body versions items0 matrix mongod anon
func (o *GetPGComponentsOKBodyVersionsItems0MatrixMongodAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g components OK body versions items0 matrix mongod anon based on context it is used
func (o *GetPGComponentsOKBodyVersionsItems0MatrixMongodAnon) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixMongodAnon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixMongodAnon) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsOKBodyVersionsItems0MatrixMongodAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsOKBodyVersionsItems0MatrixOperatorAnon Component contains information about component.
swagger:model GetPGComponentsOKBodyVersionsItems0MatrixOperatorAnon
*/
type GetPGComponentsOKBodyVersionsItems0MatrixOperatorAnon struct {
	// image path
	ImagePath string `json:"image_path,omitempty"`

	// image hash
	ImageHash string `json:"image_hash,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// critical
	Critical bool `json:"critical,omitempty"`

	// default
	Default bool `json:"default,omitempty"`

	// disabled
	Disabled bool `json:"disabled,omitempty"`
}

// Validate validates this get p g components OK body versions items0 matrix operator anon
func (o *GetPGComponentsOKBodyVersionsItems0MatrixOperatorAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g components OK body versions items0 matrix operator anon based on context it is used
func (o *GetPGComponentsOKBodyVersionsItems0MatrixOperatorAnon) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixOperatorAnon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixOperatorAnon) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsOKBodyVersionsItems0MatrixOperatorAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsOKBodyVersionsItems0MatrixPMMAnon Component contains information about component.
swagger:model GetPGComponentsOKBodyVersionsItems0MatrixPMMAnon
*/
type GetPGComponentsOKBodyVersionsItems0MatrixPMMAnon struct {
	// image path
	ImagePath string `json:"image_path,omitempty"`

	// image hash
	ImageHash string `json:"image_hash,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// critical
	Critical bool `json:"critical,omitempty"`

	// default
	Default bool `json:"default,omitempty"`

	// disabled
	Disabled bool `json:"disabled,omitempty"`
}

// Validate validates this get p g components OK body versions items0 matrix PMM anon
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPMMAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g components OK body versions items0 matrix PMM anon based on context it is used
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPMMAnon) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPMMAnon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPMMAnon) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsOKBodyVersionsItems0MatrixPMMAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsOKBodyVersionsItems0MatrixPXCAnon Component contains information about component.
swagger:model GetPGComponentsOKBodyVersionsItems0MatrixPXCAnon
*/
type GetPGComponentsOKBodyVersionsItems0MatrixPXCAnon struct {
	// image path
	ImagePath string `json:"image_path,omitempty"`

	// image hash
	ImageHash string `json:"image_hash,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// critical
	Critical bool `json:"critical,omitempty"`

	// default
	Default bool `json:"default,omitempty"`

	// disabled
	Disabled bool `json:"disabled,omitempty"`
}

// Validate validates this get p g components OK body versions items0 matrix PXC anon
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPXCAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g components OK body versions items0 matrix PXC anon based on context it is used
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPXCAnon) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPXCAnon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPXCAnon) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsOKBodyVersionsItems0MatrixPXCAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsOKBodyVersionsItems0MatrixPgbackrestAnon Component contains information about component.
swagger:model GetPGComponentsOKBodyVersionsItems0MatrixPgbackrestAnon
*/
type GetPGComponentsOKBodyVersionsItems0MatrixPgbackrestAnon struct {
	// image path
	ImagePath string `json:"image_path,omitempty"`

	// image hash
	ImageHash string `json:"image_hash,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// critical
	Critical bool `json:"critical,omitempty"`

	// default
	Default bool `json:"default,omitempty"`

	// disabled
	Disabled bool `json:"disabled,omitempty"`
}

// Validate validates this get p g components OK body versions items0 matrix pgbackrest anon
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPgbackrestAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g components OK body versions items0 matrix pgbackrest anon based on context it is used
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPgbackrestAnon) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPgbackrestAnon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPgbackrestAnon) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsOKBodyVersionsItems0MatrixPgbackrestAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsOKBodyVersionsItems0MatrixPgbouncerAnon Component contains information about component.
swagger:model GetPGComponentsOKBodyVersionsItems0MatrixPgbouncerAnon
*/
type GetPGComponentsOKBodyVersionsItems0MatrixPgbouncerAnon struct {
	// image path
	ImagePath string `json:"image_path,omitempty"`

	// image hash
	ImageHash string `json:"image_hash,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// critical
	Critical bool `json:"critical,omitempty"`

	// default
	Default bool `json:"default,omitempty"`

	// disabled
	Disabled bool `json:"disabled,omitempty"`
}

// Validate validates this get p g components OK body versions items0 matrix pgbouncer anon
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPgbouncerAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g components OK body versions items0 matrix pgbouncer anon based on context it is used
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPgbouncerAnon) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPgbouncerAnon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPgbouncerAnon) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsOKBodyVersionsItems0MatrixPgbouncerAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsOKBodyVersionsItems0MatrixPostgresqlAnon Component contains information about component.
swagger:model GetPGComponentsOKBodyVersionsItems0MatrixPostgresqlAnon
*/
type GetPGComponentsOKBodyVersionsItems0MatrixPostgresqlAnon struct {
	// image path
	ImagePath string `json:"image_path,omitempty"`

	// image hash
	ImageHash string `json:"image_hash,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// critical
	Critical bool `json:"critical,omitempty"`

	// default
	Default bool `json:"default,omitempty"`

	// disabled
	Disabled bool `json:"disabled,omitempty"`
}

// Validate validates this get p g components OK body versions items0 matrix postgresql anon
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPostgresqlAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g components OK body versions items0 matrix postgresql anon based on context it is used
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPostgresqlAnon) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPostgresqlAnon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixPostgresqlAnon) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsOKBodyVersionsItems0MatrixPostgresqlAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetPGComponentsOKBodyVersionsItems0MatrixProxysqlAnon Component contains information about component.
swagger:model GetPGComponentsOKBodyVersionsItems0MatrixProxysqlAnon
*/
type GetPGComponentsOKBodyVersionsItems0MatrixProxysqlAnon struct {
	// image path
	ImagePath string `json:"image_path,omitempty"`

	// image hash
	ImageHash string `json:"image_hash,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// critical
	Critical bool `json:"critical,omitempty"`

	// default
	Default bool `json:"default,omitempty"`

	// disabled
	Disabled bool `json:"disabled,omitempty"`
}

// Validate validates this get p g components OK body versions items0 matrix proxysql anon
func (o *GetPGComponentsOKBodyVersionsItems0MatrixProxysqlAnon) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get p g components OK body versions items0 matrix proxysql anon based on context it is used
func (o *GetPGComponentsOKBodyVersionsItems0MatrixProxysqlAnon) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixProxysqlAnon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetPGComponentsOKBodyVersionsItems0MatrixProxysqlAnon) UnmarshalBinary(b []byte) error {
	var res GetPGComponentsOKBodyVersionsItems0MatrixProxysqlAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
