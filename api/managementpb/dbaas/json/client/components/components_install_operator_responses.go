// Code generated by go-swagger; DO NOT EDIT.

package components

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ComponentsInstallOperatorReader is a Reader for the ComponentsInstallOperator structure.
type ComponentsInstallOperatorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ComponentsInstallOperatorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewComponentsInstallOperatorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewComponentsInstallOperatorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewComponentsInstallOperatorOK creates a ComponentsInstallOperatorOK with default headers values
func NewComponentsInstallOperatorOK() *ComponentsInstallOperatorOK {
	return &ComponentsInstallOperatorOK{}
}

/*ComponentsInstallOperatorOK handles this case with default header values.

A successful response.
*/
type ComponentsInstallOperatorOK struct {
	Payload *ComponentsInstallOperatorOKBody
}

func (o *ComponentsInstallOperatorOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/Components/InstallOperator][%d] componentsInstallOperatorOk  %+v", 200, o.Payload)
}

func (o *ComponentsInstallOperatorOK) GetPayload() *ComponentsInstallOperatorOKBody {
	return o.Payload
}

func (o *ComponentsInstallOperatorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ComponentsInstallOperatorOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewComponentsInstallOperatorDefault creates a ComponentsInstallOperatorDefault with default headers values
func NewComponentsInstallOperatorDefault(code int) *ComponentsInstallOperatorDefault {
	return &ComponentsInstallOperatorDefault{
		_statusCode: code,
	}
}

/*ComponentsInstallOperatorDefault handles this case with default header values.

An unexpected error response.
*/
type ComponentsInstallOperatorDefault struct {
	_statusCode int

	Payload *ComponentsInstallOperatorDefaultBody
}

// Code gets the status code for the components install operator default response
func (o *ComponentsInstallOperatorDefault) Code() int {
	return o._statusCode
}

func (o *ComponentsInstallOperatorDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/DBaaS/Components/InstallOperator][%d] Components_InstallOperator default  %+v", o._statusCode, o.Payload)
}

func (o *ComponentsInstallOperatorDefault) GetPayload() *ComponentsInstallOperatorDefaultBody {
	return o.Payload
}

func (o *ComponentsInstallOperatorDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ComponentsInstallOperatorDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ComponentsInstallOperatorBody components install operator body
swagger:model ComponentsInstallOperatorBody
*/
type ComponentsInstallOperatorBody struct {

	// Kubernetes cluster name.
	KubernetesClusterName string `json:"kubernetes_cluster_name,omitempty"`

	// operator_type tells what operator we are interested in updating.
	OperatorType string `json:"operator_type,omitempty"`

	// version tells what version of the operator we should update to.
	Version string `json:"version,omitempty"`
}

// Validate validates this components install operator body
func (o *ComponentsInstallOperatorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ComponentsInstallOperatorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ComponentsInstallOperatorBody) UnmarshalBinary(b []byte) error {
	var res ComponentsInstallOperatorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ComponentsInstallOperatorDefaultBody components install operator default body
swagger:model ComponentsInstallOperatorDefaultBody
*/
type ComponentsInstallOperatorDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this components install operator default body
func (o *ComponentsInstallOperatorDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ComponentsInstallOperatorDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Components_InstallOperator default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ComponentsInstallOperatorDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ComponentsInstallOperatorDefaultBody) UnmarshalBinary(b []byte) error {
	var res ComponentsInstallOperatorDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ComponentsInstallOperatorOKBody components install operator OK body
swagger:model ComponentsInstallOperatorOKBody
*/
type ComponentsInstallOperatorOKBody struct {

	// OperatorsStatus defines status of operators installed in Kubernetes cluster.
	//
	//  - OPERATORS_STATUS_INVALID: OPERATORS_STATUS_INVALID represents unknown state.
	//  - OPERATORS_STATUS_OK: OPERATORS_STATUS_OK represents that operators are installed and have supported API version.
	//  - OPERATORS_STATUS_UNSUPPORTED: OPERATORS_STATUS_UNSUPPORTED represents that operators are installed, but doesn't have supported API version.
	//  - OPERATORS_STATUS_NOT_INSTALLED: OPERATORS_STATUS_NOT_INSTALLED represents that operators are not installed.
	// Enum: [OPERATORS_STATUS_INVALID OPERATORS_STATUS_OK OPERATORS_STATUS_UNSUPPORTED OPERATORS_STATUS_NOT_INSTALLED]
	Status *string `json:"status,omitempty"`
}

// Validate validates this components install operator OK body
func (o *ComponentsInstallOperatorOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var componentsInstallOperatorOkBodyTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["OPERATORS_STATUS_INVALID","OPERATORS_STATUS_OK","OPERATORS_STATUS_UNSUPPORTED","OPERATORS_STATUS_NOT_INSTALLED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		componentsInstallOperatorOkBodyTypeStatusPropEnum = append(componentsInstallOperatorOkBodyTypeStatusPropEnum, v)
	}
}

const (

	// ComponentsInstallOperatorOKBodyStatusOPERATORSSTATUSINVALID captures enum value "OPERATORS_STATUS_INVALID"
	ComponentsInstallOperatorOKBodyStatusOPERATORSSTATUSINVALID string = "OPERATORS_STATUS_INVALID"

	// ComponentsInstallOperatorOKBodyStatusOPERATORSSTATUSOK captures enum value "OPERATORS_STATUS_OK"
	ComponentsInstallOperatorOKBodyStatusOPERATORSSTATUSOK string = "OPERATORS_STATUS_OK"

	// ComponentsInstallOperatorOKBodyStatusOPERATORSSTATUSUNSUPPORTED captures enum value "OPERATORS_STATUS_UNSUPPORTED"
	ComponentsInstallOperatorOKBodyStatusOPERATORSSTATUSUNSUPPORTED string = "OPERATORS_STATUS_UNSUPPORTED"

	// ComponentsInstallOperatorOKBodyStatusOPERATORSSTATUSNOTINSTALLED captures enum value "OPERATORS_STATUS_NOT_INSTALLED"
	ComponentsInstallOperatorOKBodyStatusOPERATORSSTATUSNOTINSTALLED string = "OPERATORS_STATUS_NOT_INSTALLED"
)

// prop value enum
func (o *ComponentsInstallOperatorOKBody) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, componentsInstallOperatorOkBodyTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *ComponentsInstallOperatorOKBody) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("componentsInstallOperatorOk"+"."+"status", "body", *o.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ComponentsInstallOperatorOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ComponentsInstallOperatorOKBody) UnmarshalBinary(b []byte) error {
	var res ComponentsInstallOperatorOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
