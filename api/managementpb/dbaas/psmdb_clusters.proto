syntax = "proto3";

package dbaas.v1beta1;

option go_package = "api/managementpb/dbaas;dbaasv1beta1";

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "managementpb/dbaas/dbaas.proto";

// PSMDBClusterParams represents PSMDB cluster parameters that can be updated.
message PSMDBClusterParams {
  // ReplicaSet container parameters.
  // TODO Do not use inner messages in all public APIs (for consistency).
  message ReplicaSet {
    // Requested compute resources.
    ComputeResources compute_resources = 1;
    // Disk size in bytes.
    int64 disk_size = 2;
  }
  // Cluster size.
  int32 cluster_size = 1;
  // ReplicaSet container parameters.
  ReplicaSet replicaset = 2;
  // Docker image used for PSMDB.
  string image = 3;
}

message GetPSMDBClusterCredentialsRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // PSMDB cluster name.
  string name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message GetPSMDBClusterCredentialsResponse {
  // PSMDBCredentials is a credentials to connect to PSMDB.
  // TODO Do not use inner messages in all public APIs (for consistency).
  message PSMDBCredentials {
    // MongoDB username.
    string username = 1;
    // MongoDB password.
    string password = 2;
    // MongoDB host.
    string host = 3;
    // MongoDB port.
    int32 port = 4;
    // Replicaset name.
    string replicaset = 5;
  }
  PSMDBCredentials connection_credentials = 1;
}

message CreatePSMDBClusterRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // PSMDB cluster name.
  // a DNS-1035 label must consist of lower case alphanumeric characters or '-',
  // start with an alphabetic character, and end with an alphanumeric character
  // (e.g. 'my-name',  or 'abc-123', regex used for validation is '[a-z]([-a-z0-9]*[a-z0-9])?')
  string name = 2;
  // Cluster parameters.
  PSMDBClusterParams params = 3;
  // Make DB cluster accessible outside of K8s cluster.
  bool expose = 4;
}

message CreatePSMDBClusterResponse {}

message UpdatePSMDBClusterRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // PSMDB cluster name.
  string name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // UpdatePSMDBClusterParams represents PSMDB cluster parameters that can be updated.
  message UpdatePSMDBClusterParams {
    // ReplicaSet container parameters.
    message ReplicaSet {
      // Requested compute resources.
      ComputeResources compute_resources = 1;
    }
    // Cluster size.
    int32 cluster_size = 1;
    // ReplicaSet container parameters.
    ReplicaSet replicaset = 2;
    // Suspend cluster `pause: true`.
    bool suspend = 3;
    // Resume cluster `pause: false`.
    bool resume = 4;
    // PSMDB image to use. If it's the same image but with different version tag, upgrade of database cluster to version
    // in given tag is triggered. If entirely different image is given, error is returned.
    string image = 5;
  }
  // Cluster parameters.
  UpdatePSMDBClusterParams params = 3;
}

message UpdatePSMDBClusterResponse {}

message GetPSMDBClusterResourcesRequest {
  // Cluster parameters.
  PSMDBClusterParams params = 1;
}

message GetPSMDBClusterResourcesResponse {
  // Expected resources to be consumed by the cluster.
  Resources expected = 1;
}

// PSMDBClusters service provides public methods for managing PSMDB clusters.
service PSMDBClusters {
  // GetPSMDBClusterCredentials returns a PSMDB cluster credentials by cluster name.
  rpc GetPSMDBClusterCredentials(GetPSMDBClusterCredentialsRequest) returns (GetPSMDBClusterCredentialsResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/PSMDBClusters/GetCredentials"
      body: "*"
    };
  }
  // CreatePSMDBCluster creates a new PSMDB cluster.
  rpc CreatePSMDBCluster(CreatePSMDBClusterRequest) returns (CreatePSMDBClusterResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/PSMDBCluster/Create"
      body: "*"
    };
  }
  // UpdatePSMDBCluster updates existing PSMDB cluster.
  rpc UpdatePSMDBCluster(UpdatePSMDBClusterRequest) returns (UpdatePSMDBClusterResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/PSMDBCluster/Update"
      body: "*"
    };
  }
  // GetPSMDBClusterResources returns expected resources to be consumed by the cluster.
  rpc GetPSMDBClusterResources(GetPSMDBClusterResourcesRequest) returns (GetPSMDBClusterResourcesResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/PSMDBCluster/Resources/Get"
      body: "*"
    };
  }
}
