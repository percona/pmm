syntax = "proto3";

package dbaas.v1beta1;

option go_package = "api/managementpb/dbaas;dbaasv1beta1";

import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/api/annotations.proto";
import "managementpb/dbaas/dbaas.proto";

// PSMDBClusterState represents PSMDB cluster CR state.
enum PSMDBClusterState {
  // PSMDB_CLUSTER_STATE_INVALID represents unknown state.
  PSMDB_CLUSTER_STATE_INVALID = 0;
  // PSMDB_CLUSTER_STATE_CHANGING represents a cluster being changed.
  PSMDB_CLUSTER_STATE_CHANGING = 1;
  // PSMDB_CLUSTER_STATE_READY represents a cluster without pending changes.
  PSMDB_CLUSTER_STATE_READY = 2;
  // PSMDB_CLUSTER_STATE_FAILED represents a failed cluster.
  PSMDB_CLUSTER_STATE_FAILED = 3;
  // PSMDB_CLUSTER_STATE_DELETING represents a cluster being deleting.
  PSMDB_CLUSTER_STATE_DELETING = 4;
  // PSMDB_CLUSTER_STATE_PAUSED represents a cluster is paused.
  PSMDB_CLUSTER_STATE_PAUSED = 5;
}

// PSMDBClusterParams represents PSMDB cluster parameters that can be updated.
message PSMDBClusterParams {
  // ReplicaSet container parameters.
  // TODO Do not use inner messages in all public APIs (for consistency).
  message ReplicaSet {
    // Requested compute resources.
    ComputeResources compute_resources = 1;
    // Disk size in bytes.
    int64 disk_size = 2 [
      (validator.field) = {
        int_gt: 0
      }
    ];
  }
  // Cluster size.
  int32 cluster_size = 1 [
    (validator.field) = {
      int_gt: 0
    }
  ];
  // ReplicaSet container parameters.
  ReplicaSet replicaset = 2 [
    (validator.field) = {
      msg_exists: true
    }
  ];
}

message ListPSMDBClustersRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message ListPSMDBClustersResponse {
  // Cluster represents PSMDB cluster information.
  // TODO Do not use inner messages in all public APIs (for consistency).
  message Cluster {
    // Cluster name.
    string name = 1;
    // Cluster state.
    PSMDBClusterState state = 2;
    // Currently running operation, if any.
    RunningOperation operation = 3;
    // Cluster parameters.
    PSMDBClusterParams params = 4;
  }
  // PSMDB clusters information.
  repeated Cluster clusters = 1;
}

message GetPSMDBClusterCredentialsRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // PSMDB cluster name.
  string name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message GetPSMDBClusterCredentialsResponse {
  // PSMDBCredentials is a credentials to connect to PSMDB.
  // TODO Do not use inner messages in all public APIs (for consistency).
  message PSMDBCredentials {
    // MongoDB username.
    string username = 1;
    // MongoDB password.
    string password = 2;
    // MongoDB host.
    string host = 3;
    // MongoDB port.
    int32 port = 4;
    // Replicaset name.
    string replicaset = 5;
  }
  PSMDBCredentials connection_credentials = 1;
}

message CreatePSMDBClusterRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // PSMDB cluster name.
  // a DNS-1035 label must consist of lower case alphanumeric characters or '-',
  // start with an alphabetic character, and end with an alphanumeric character
  // (e.g. 'my-name',  or 'abc-123', regex used for validation is '[a-z]([-a-z0-9]*[a-z0-9])?')
  string name = 2 [
    (validator.field) = {
      regex: "^[a-z]([-a-z0-9]*[a-z0-9])?$"
    }
  ];
  // Cluster parameters.
  PSMDBClusterParams params = 3 [
    (validator.field) = {
      msg_exists: true
    }
  ];
}

message CreatePSMDBClusterResponse {}

message UpdatePSMDBClusterRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // PSMDB cluster name.
  string name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // UpdatePSMDBClusterParams represents PSMDB cluster parameters that can be updated.
  message UpdatePSMDBClusterParams {
    // ReplicaSet container parameters.
    message ReplicaSet {
      // Requested compute resources.
      ComputeResources compute_resources = 1;
    }
    // Cluster size.
    int32 cluster_size = 1;
    // ReplicaSet container parameters.
    ReplicaSet replicaset = 2;
    // Suspend cluster `pause: true`.
    bool suspend = 3;
    // Resume cluster `pause: false`.
    bool resume = 4;
  }
  // Cluster parameters.
  UpdatePSMDBClusterParams params = 3;
}

message UpdatePSMDBClusterResponse {}

message DeletePSMDBClusterRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // PSMDB cluster name.
  string name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message DeletePSMDBClusterResponse {}

message RestartPSMDBClusterRequest {
  // Kubernetes cluster name.
  string kubernetes_cluster_name = 1 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // PSMDB cluster name.
  string name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message RestartPSMDBClusterResponse {}

// PSMDBCluster service provides public methods for managing PSMDB clusters.
service PSMDBCluster {
  // ListPSMDBClusters returns a list of PSMDB clusters.
  rpc ListPSMDBClusters(ListPSMDBClustersRequest) returns (ListPSMDBClustersResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/PSMDBClusters/List"
      body: "*"
    };
  }
  // GetPSMDBClusterCredentials returns a PSMDB cluster credentials by cluster name.
  rpc GetPSMDBClusterCredentials(GetPSMDBClusterCredentialsRequest) returns (GetPSMDBClusterCredentialsResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/PSMDBClusters/GetCredentials"
      body: "*"
    };
  }
  // CreatePSMDBCluster creates a new PSMDB cluster.
  rpc CreatePSMDBCluster(CreatePSMDBClusterRequest) returns (CreatePSMDBClusterResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/PSMDBCluster/Create"
      body: "*"
    };
  }
  // UpdatePSMDBCluster updates existing PSMDB cluster.
  rpc UpdatePSMDBCluster(UpdatePSMDBClusterRequest) returns (UpdatePSMDBClusterResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/PSMDBCluster/Update"
      body: "*"
    };
  }
  // DeletePSMDBCluster deletes PSMDB cluster.
  rpc DeletePSMDBCluster(DeletePSMDBClusterRequest) returns (DeletePSMDBClusterResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/PSMDBCluster/Delete"
      body: "*"
    };
  }
  // RestartPSMDBCluster restarts PSMDB cluster.
  rpc RestartPSMDBCluster(RestartPSMDBClusterRequest) returns (RestartPSMDBClusterResponse) {
    option (google.api.http) = {
      post: "/v1/management/DBaaS/PSMDBCluster/Restart"
      body: "*"
    };
  }
}
