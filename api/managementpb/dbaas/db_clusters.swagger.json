{
  "swagger": "2.0",
  "info": {
    "title": "managementpb/dbaas/db_clusters.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/management/DBaaS/DBClusters/Delete": {
      "post": {
        "summary": "DeleteDBCluster deletes DB cluster.",
        "operationId": "DeleteDBCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteDBClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1DeleteDBClusterRequest"
            }
          }
        ],
        "tags": [
          "DBClusters"
        ]
      }
    },
    "/v1/management/DBaaS/DBClusters/List": {
      "post": {
        "summary": "ListDBClusters returns a list of DB clusters.",
        "operationId": "ListDBClusters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ListDBClustersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ListDBClustersRequest"
            }
          }
        ],
        "tags": [
          "DBClusters"
        ]
      }
    },
    "/v1/management/DBaaS/DBClusters/Restart": {
      "post": {
        "summary": "RestartDBCluster restarts DB cluster.",
        "operationId": "RestartDBCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1RestartDBClusterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1RestartDBClusterRequest"
            }
          }
        ],
        "tags": [
          "DBClusters"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1beta1ComputeResources": {
      "type": "object",
      "properties": {
        "cpu_m": {
          "type": "integer",
          "format": "int32",
          "description": "CPUs in milliCPUs; 1000m = 1 vCPU."
        },
        "memory_bytes": {
          "type": "string",
          "format": "int64",
          "description": "Memory in bytes."
        }
      },
      "description": "ComputeResources represents container computer resources requests or limits."
    },
    "v1beta1DBClusterState": {
      "type": "string",
      "enum": [
        "DB_CLUSTER_STATE_INVALID",
        "DB_CLUSTER_STATE_CHANGING",
        "DB_CLUSTER_STATE_READY",
        "DB_CLUSTER_STATE_FAILED",
        "DB_CLUSTER_STATE_DELETING",
        "DB_CLUSTER_STATE_PAUSED",
        "DB_CLUSTER_STATE_UPGRADING"
      ],
      "default": "DB_CLUSTER_STATE_INVALID",
      "description": "DBClusterState represents DB cluster CR state.\n\n - DB_CLUSTER_STATE_INVALID: DB_CLUSTER_STATE_INVALID represents unknown state.\n - DB_CLUSTER_STATE_CHANGING: DB_CLUSTER_STATE_CHANGING represents a cluster being changed.\n - DB_CLUSTER_STATE_READY: DB_CLUSTER_STATE_READY represents a cluster without pending changes.\n - DB_CLUSTER_STATE_FAILED: DB_CLUSTER_STATE_FAILED represents a failed cluster.\n - DB_CLUSTER_STATE_DELETING: DB_CLUSTER_STATE_DELETING represents a cluster being deleting.\n - DB_CLUSTER_STATE_PAUSED: DB_CLUSTER_STATE_PAUSED represents a cluster is paused.\n - DB_CLUSTER_STATE_UPGRADING: DB_CLUSTER_STATE_UPGRADING is a special case of DB_CLUSTER_STATE_CHANGING.\nIt indicates database cluster upgrade is ongoing."
    },
    "v1beta1DBClusterType": {
      "type": "string",
      "enum": [
        "DB_CLUSTER_TYPE_INVALID",
        "DB_CLUSTER_TYPE_PXC",
        "DB_CLUSTER_TYPE_PSMDB"
      ],
      "default": "DB_CLUSTER_TYPE_INVALID",
      "description": "DBClusterType represents database cluster type.\n\n - DB_CLUSTER_TYPE_INVALID: DB_CLUSTER_TYPE_INVALID represents unknown cluster type.\n - DB_CLUSTER_TYPE_PXC: DB_CLUSTER_TYPE_PXC represents pxc cluster type.\n - DB_CLUSTER_TYPE_PSMDB: DB_CLUSTER_TYPE_PSMDB represents psmdb cluster type."
    },
    "v1beta1DeleteDBClusterRequest": {
      "type": "object",
      "properties": {
        "kubernetes_cluster_name": {
          "type": "string",
          "description": "Kubernetes cluster name."
        },
        "name": {
          "type": "string",
          "description": "DB cluster name."
        },
        "cluster_type": {
          "$ref": "#/definitions/v1beta1DBClusterType",
          "description": "DB cluster type."
        }
      }
    },
    "v1beta1DeleteDBClusterResponse": {
      "type": "object"
    },
    "v1beta1ListDBClustersRequest": {
      "type": "object",
      "properties": {
        "kubernetes_cluster_name": {
          "type": "string",
          "description": "Kubernetes cluster name."
        }
      }
    },
    "v1beta1ListDBClustersResponse": {
      "type": "object",
      "properties": {
        "pxc_clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1PXCCluster"
          },
          "description": "PXC clusters information."
        },
        "psmdb_clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1beta1PSMDBCluster"
          },
          "description": "PSMDB clusters information."
        }
      }
    },
    "v1beta1PSMDBCluster": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Cluster name."
        },
        "state": {
          "$ref": "#/definitions/v1beta1DBClusterState",
          "description": "Cluster state."
        },
        "operation": {
          "$ref": "#/definitions/v1beta1RunningOperation",
          "description": "Currently running operation, if any."
        },
        "params": {
          "$ref": "#/definitions/v1beta1PSMDBClusterParams",
          "description": "Cluster parameters."
        },
        "exposed": {
          "type": "boolean",
          "description": "DB cluster accessible outside of K8s cluster."
        },
        "installed_image": {
          "type": "string",
          "description": "Installed PSMDB image."
        },
        "available_image": {
          "type": "string",
          "description": "Available database version user can upgrade cluster to, returned as an image. Image tag contains the version.\nIf it's empty, no upgrade is available."
        }
      },
      "description": "PSMDBCluster represents PSMDB cluster information."
    },
    "v1beta1PSMDBClusterParams": {
      "type": "object",
      "properties": {
        "cluster_size": {
          "type": "integer",
          "format": "int32",
          "description": "Cluster size."
        },
        "replicaset": {
          "$ref": "#/definitions/v1beta1PSMDBClusterParamsReplicaSet",
          "description": "ReplicaSet container parameters."
        },
        "image": {
          "type": "string",
          "description": "Docker image used for PSMDB."
        }
      },
      "description": "PSMDBClusterParams represents PSMDB cluster parameters that can be updated."
    },
    "v1beta1PSMDBClusterParamsReplicaSet": {
      "type": "object",
      "properties": {
        "compute_resources": {
          "$ref": "#/definitions/v1beta1ComputeResources",
          "description": "Requested compute resources."
        },
        "disk_size": {
          "type": "string",
          "format": "int64",
          "description": "Disk size in bytes."
        }
      },
      "description": "ReplicaSet container parameters.\nTODO Do not use inner messages in all public APIs (for consistency)."
    },
    "v1beta1PXCCluster": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Cluster name."
        },
        "state": {
          "$ref": "#/definitions/v1beta1DBClusterState",
          "description": "Cluster state."
        },
        "operation": {
          "$ref": "#/definitions/v1beta1RunningOperation",
          "description": "Currently running operation, if any."
        },
        "params": {
          "$ref": "#/definitions/v1beta1PXCClusterParams",
          "description": "Cluster parameters."
        },
        "exposed": {
          "type": "boolean",
          "description": "DB cluster accessible outside of K8s cluster."
        },
        "installed_image": {
          "type": "string",
          "description": "Installed XtraDB image."
        },
        "available_image": {
          "type": "string",
          "description": "Available database version user can upgrade cluster to, returned as an image. Image tag contains the version.\nIf it's empty, no upgrade is available."
        }
      },
      "description": "PXCCluster represents PXC cluster information."
    },
    "v1beta1PXCClusterParams": {
      "type": "object",
      "properties": {
        "cluster_size": {
          "type": "integer",
          "format": "int32",
          "description": "Cluster size."
        },
        "pxc": {
          "$ref": "#/definitions/v1beta1PXCClusterParamsPXC",
          "description": "PXC container parameters."
        },
        "proxysql": {
          "$ref": "#/definitions/v1beta1PXCClusterParamsProxySQL",
          "description": "NOTE: Only one of fields proxysql or haproxy has to be set, we check this in the code.\nProxySQL container parameters."
        },
        "haproxy": {
          "$ref": "#/definitions/v1beta1PXCClusterParamsHAProxy",
          "description": "HAProxy container parameters."
        }
      },
      "description": "PXCClusterParams represents PXC cluster parameters that can be updated."
    },
    "v1beta1PXCClusterParamsHAProxy": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "description": "Docker image used for HAProxy."
        },
        "compute_resources": {
          "$ref": "#/definitions/v1beta1ComputeResources",
          "description": "Requested compute resources."
        }
      },
      "description": "HAProxy container parameters.\nNOTE: HAProxy does not need disk size as ProxySQL does because the container does not require it."
    },
    "v1beta1PXCClusterParamsPXC": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "description": "Docker image used for PXC."
        },
        "compute_resources": {
          "$ref": "#/definitions/v1beta1ComputeResources",
          "description": "Requested compute resources."
        },
        "disk_size": {
          "type": "string",
          "format": "int64",
          "description": "Disk size in bytes."
        }
      },
      "description": "PXC container parameters.\nTODO Do not use inner messages in all public APIs (for consistency)."
    },
    "v1beta1PXCClusterParamsProxySQL": {
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "description": "Docker image used for ProxySQL."
        },
        "compute_resources": {
          "$ref": "#/definitions/v1beta1ComputeResources",
          "description": "Requested compute resources."
        },
        "disk_size": {
          "type": "string",
          "format": "int64",
          "description": "Disk size in bytes."
        }
      },
      "description": "ProxySQL container parameters.\nTODO Do not use inner messages in all public APIs (for consistency)."
    },
    "v1beta1RestartDBClusterRequest": {
      "type": "object",
      "properties": {
        "kubernetes_cluster_name": {
          "type": "string",
          "description": "Kubernetes cluster name."
        },
        "name": {
          "type": "string",
          "description": "PXC cluster name."
        },
        "cluster_type": {
          "$ref": "#/definitions/v1beta1DBClusterType",
          "description": "DB cluster type."
        }
      }
    },
    "v1beta1RestartDBClusterResponse": {
      "type": "object"
    },
    "v1beta1RunningOperation": {
      "type": "object",
      "properties": {
        "finished_steps": {
          "type": "integer",
          "format": "int32",
          "description": "Finished steps of the operaion; can decrease or increase compared to the previous value."
        },
        "message": {
          "type": "string",
          "description": "Text describing the current operation progress step."
        },
        "total_steps": {
          "type": "integer",
          "format": "int32",
          "description": "Total steps needed to finish the operation; can decrease or increase compared to the previous value."
        }
      },
      "description": "RunningOperation respresents a long-running operation."
    }
  }
}
