// Code generated by protoc-gen-go. DO NOT EDIT.
// source: managementpb/annotation.proto

package managementpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// AddAnnotationRequest is a params to add new annotation.
type AddAnnotationRequest struct {
	// An annotation description.
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// Tags are used to filter annotations.
	Tags                 []string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAnnotationRequest) Reset()         { *m = AddAnnotationRequest{} }
func (m *AddAnnotationRequest) String() string { return proto.CompactTextString(m) }
func (*AddAnnotationRequest) ProtoMessage()    {}
func (*AddAnnotationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_dea15ba3ce14c56e, []int{0}
}

func (m *AddAnnotationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAnnotationRequest.Unmarshal(m, b)
}
func (m *AddAnnotationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAnnotationRequest.Marshal(b, m, deterministic)
}
func (m *AddAnnotationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAnnotationRequest.Merge(m, src)
}
func (m *AddAnnotationRequest) XXX_Size() int {
	return xxx_messageInfo_AddAnnotationRequest.Size(m)
}
func (m *AddAnnotationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAnnotationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddAnnotationRequest proto.InternalMessageInfo

func (m *AddAnnotationRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AddAnnotationRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type AddAnnotationResponse struct {
	// Status message.
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAnnotationResponse) Reset()         { *m = AddAnnotationResponse{} }
func (m *AddAnnotationResponse) String() string { return proto.CompactTextString(m) }
func (*AddAnnotationResponse) ProtoMessage()    {}
func (*AddAnnotationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_dea15ba3ce14c56e, []int{1}
}

func (m *AddAnnotationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAnnotationResponse.Unmarshal(m, b)
}
func (m *AddAnnotationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAnnotationResponse.Marshal(b, m, deterministic)
}
func (m *AddAnnotationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAnnotationResponse.Merge(m, src)
}
func (m *AddAnnotationResponse) XXX_Size() int {
	return xxx_messageInfo_AddAnnotationResponse.Size(m)
}
func (m *AddAnnotationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAnnotationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddAnnotationResponse proto.InternalMessageInfo

func (m *AddAnnotationResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*AddAnnotationRequest)(nil), "management.AddAnnotationRequest")
	proto.RegisterType((*AddAnnotationResponse)(nil), "management.AddAnnotationResponse")
}

func init() { proto.RegisterFile("managementpb/annotation.proto", fileDescriptor_dea15ba3ce14c56e) }

var fileDescriptor_dea15ba3ce14c56e = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xcd, 0x4d, 0xcc, 0x4b,
	0x4c, 0x4f, 0xcd, 0x4d, 0xcd, 0x2b, 0x29, 0x48, 0xd2, 0x4f, 0xcc, 0xcb, 0xcb, 0x2f, 0x49, 0x2c,
	0xc9, 0xcc, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x42, 0x48, 0x4b, 0xc9, 0xa4,
	0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x27, 0x16, 0x64, 0x22, 0x29, 0x2c, 0x86, 0xa8, 0x94, 0xd2,
	0x01, 0x53, 0xc9, 0xba, 0xe9, 0xa9, 0x79, 0xba, 0xc5, 0xe5, 0x89, 0xe9, 0xe9, 0xa9, 0x45, 0xfa,
	0xf9, 0x05, 0x60, 0x15, 0x98, 0xaa, 0x95, 0xec, 0xb8, 0x44, 0x1c, 0x53, 0x52, 0x1c, 0xe1, 0xe2,
	0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x42, 0x5c, 0x2c, 0x25, 0xa9, 0x15, 0x25, 0x12,
	0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0x36, 0x58, 0x2c, 0x31, 0xbd, 0x58, 0x82, 0x49, 0x81,
	0x19, 0x2c, 0x96, 0x98, 0x5e, 0xac, 0x64, 0xc8, 0x25, 0x8a, 0xa6, 0xbf, 0xb8, 0x20, 0x3f, 0xaf,
	0x38, 0x55, 0x48, 0x82, 0x8b, 0x3d, 0x37, 0xb5, 0xb8, 0x38, 0x31, 0x3d, 0x15, 0x6a, 0x06, 0x8c,
	0x6b, 0xd4, 0xcb, 0xc8, 0xc5, 0x85, 0xd0, 0x20, 0x54, 0xcf, 0xc5, 0x8b, 0x62, 0x82, 0x90, 0x82,
	0x1e, 0xc2, 0xaf, 0x7a, 0xd8, 0x1c, 0x27, 0xa5, 0x88, 0x47, 0x05, 0xc4, 0x7a, 0x25, 0xcd, 0xa6,
	0xcb, 0x4f, 0x26, 0x33, 0x29, 0x2b, 0xc9, 0xe9, 0x97, 0x19, 0xea, 0x23, 0x54, 0xeb, 0x23, 0x94,
	0x16, 0xeb, 0x3b, 0xa6, 0xa4, 0x58, 0x31, 0x6a, 0x39, 0xf1, 0x45, 0xf1, 0x20, 0x87, 0x7d, 0x12,
	0x1b, 0x38, 0x64, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3a, 0x5b, 0xcb, 0xaf, 0x92, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AnnotationClient is the client API for Annotation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnnotationClient interface {
	// AddAnnotation adds annotation.
	AddAnnotation(ctx context.Context, in *AddAnnotationRequest, opts ...grpc.CallOption) (*AddAnnotationResponse, error)
}

type annotationClient struct {
	cc grpc.ClientConnInterface
}

func NewAnnotationClient(cc grpc.ClientConnInterface) AnnotationClient {
	return &annotationClient{cc}
}

func (c *annotationClient) AddAnnotation(ctx context.Context, in *AddAnnotationRequest, opts ...grpc.CallOption) (*AddAnnotationResponse, error) {
	out := new(AddAnnotationResponse)
	err := c.cc.Invoke(ctx, "/management.Annotation/AddAnnotation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnnotationServer is the server API for Annotation service.
type AnnotationServer interface {
	// AddAnnotation adds annotation.
	AddAnnotation(context.Context, *AddAnnotationRequest) (*AddAnnotationResponse, error)
}

// UnimplementedAnnotationServer can be embedded to have forward compatible implementations.
type UnimplementedAnnotationServer struct {
}

func (*UnimplementedAnnotationServer) AddAnnotation(ctx context.Context, req *AddAnnotationRequest) (*AddAnnotationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAnnotation not implemented")
}

func RegisterAnnotationServer(s *grpc.Server, srv AnnotationServer) {
	s.RegisterService(&_Annotation_serviceDesc, srv)
}

func _Annotation_AddAnnotation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAnnotationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnnotationServer).AddAnnotation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/management.Annotation/AddAnnotation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnnotationServer).AddAnnotation(ctx, req.(*AddAnnotationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Annotation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "management.Annotation",
	HandlerType: (*AnnotationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddAnnotation",
			Handler:    _Annotation_AddAnnotation_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "managementpb/annotation.proto",
}
