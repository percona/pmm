syntax = "proto3";

package backup.v1beta1;

option go_package = "api/managementpb/backup;backupv1beta1";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "managementpb/backup/common.proto";

// RestoreStatus shows the current status of execution of restore.
enum RestoreStatus {
  RESTORE_STATUS_INVALID = 0;
  RESTORE_STATUS_IN_PROGRESS = 1;
  RESTORE_STATUS_SUCCESS = 2;
  RESTORE_STATUS_ERROR = 3;
}

// RestoreHistoryItem represents single backup restore item.
message RestoreHistoryItem {
  // Machine-readable restore id.
  string restore_id = 1;
  // ID of the artifact used for restore.
  string artifact_id = 2;
  // Artifact name used for restore.
  string name = 3;
  // Database vendor e.g. PostgreSQL, MongoDB, MySQL.
  string vendor = 4;
  // Machine-readable location ID.
  string location_id = 5;
  // Location name.
  string location_name = 6;
  // Machine-readable service ID.
  string service_id = 7;
  // Service name.
  string service_name = 8;
  // Backup data model.
  DataModel data_model = 9;
  // Restore status.
  RestoreStatus status = 10;
  // Restore start time.
  google.protobuf.Timestamp started_at = 11;
  // Restore finish time.
  google.protobuf.Timestamp finished_at = 12;
}

message ListRestoreHistoryRequest {}

message ListRestoreHistoryResponse {
  repeated RestoreHistoryItem items = 1;
}

// RestoreHistory service provides public methods for managing backup restore history.
service RestoreHistory {
  // ListRestoreHistory returns a list of all backup restore history items.
  rpc ListRestoreHistory(ListRestoreHistoryRequest) returns (ListRestoreHistoryResponse) {
    option (google.api.http) = {
      post: "/v1/management/backup/RestoreHistory/List"
      body: "*"
    };
  }
}
