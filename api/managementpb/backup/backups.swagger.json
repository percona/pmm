{
  "swagger": "2.0",
  "info": {
    "title": "managementpb/backup/backups.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Backups"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/management/backup/Backups/ChangeScheduled": {
      "post": {
        "summary": "ChangeScheduledBackup changes existing scheduled backup.",
        "operationId": "ChangeScheduledBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ChangeScheduledBackupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChangeScheduledBackupRequest"
            }
          }
        ],
        "tags": [
          "Backups"
        ]
      }
    },
    "/v1/management/backup/Backups/GetLogs": {
      "post": {
        "summary": "GetLogs returns logs from the underlying tools for a backup/restore job.",
        "operationId": "GetLogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetLogsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GetLogsRequest"
            }
          }
        ],
        "tags": [
          "Backups"
        ]
      }
    },
    "/v1/management/backup/Backups/ListArtifactCompatibleServices": {
      "post": {
        "summary": "ListArtifactCompatibleServices lists compatible services for restoring a backup.",
        "operationId": "ListArtifactCompatibleServices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListArtifactCompatibleServicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListArtifactCompatibleServicesRequest"
            }
          }
        ],
        "tags": [
          "Backups"
        ]
      }
    },
    "/v1/management/backup/Backups/ListScheduled": {
      "post": {
        "summary": "ListScheduledBackups returns all scheduled backups.",
        "operationId": "ListScheduledBackups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListScheduledBackupsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ListScheduledBackupsRequest"
            }
          }
        ],
        "tags": [
          "Backups"
        ]
      }
    },
    "/v1/management/backup/Backups/RemoveScheduled": {
      "post": {
        "summary": "RemoveScheduledBackup removes existing scheduled backup.",
        "operationId": "RemoveScheduledBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RemoveScheduledBackupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RemoveScheduledBackupRequest"
            }
          }
        ],
        "tags": [
          "Backups"
        ]
      }
    },
    "/v1/management/backup/Backups/Restore": {
      "post": {
        "summary": "RestoreBackup requests the backup restore.",
        "description": "Could return the Error message in the details containing specific ErrorCode indicating failure reason:\nERROR_CODE_XTRABACKUP_NOT_INSTALLED - xtrabackup is not installed on the service\nERROR_CODE_INVALID_XTRABACKUP - different versions of xtrabackup and xbcloud\nERROR_CODE_INCOMPATIBLE_XTRABACKUP - xtrabackup is not compatible with MySQL for taking a backup\nERROR_CODE_INCOMPATIBLE_TARGET_MYSQL - target MySQL version is not compatible with the artifact for performing a restore of the backup",
        "operationId": "RestoreBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1RestoreBackupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RestoreBackupRequest"
            }
          }
        ],
        "tags": [
          "Backups"
        ]
      }
    },
    "/v1/management/backup/Backups/Schedule": {
      "post": {
        "summary": "ScheduleBackup schedules repeated backup.",
        "operationId": "ScheduleBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ScheduleBackupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ScheduleBackupRequest"
            }
          }
        ],
        "tags": [
          "Backups"
        ]
      }
    },
    "/v1/management/backup/Backups/Start": {
      "post": {
        "summary": "StartBackup request backup specified service to location.",
        "description": "Could return the Error message in the details containing specific ErrorCode indicating failure reason:\nERROR_CODE_XTRABACKUP_NOT_INSTALLED - xtrabackup is not installed on the service\nERROR_CODE_INVALID_XTRABACKUP - different versions of xtrabackup and xbcloud\nERROR_CODE_INCOMPATIBLE_XTRABACKUP - xtrabackup is not compatible with MySQL for taking a backup",
        "operationId": "StartBackup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StartBackupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StartBackupRequest"
            }
          }
        ],
        "tags": [
          "Backups"
        ]
      }
    }
  },
  "definitions": {
    "inventoryMongoDBService": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "service_name": {
          "type": "string",
          "description": "Unique across all Services user-defined name."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs."
        },
        "address": {
          "type": "string",
          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "Access port.\nPort is required when the address present."
        },
        "socket": {
          "type": "string",
          "description": "Access unix socket.\nAddress (and port) or socket is required."
        },
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster name."
        },
        "replication_set": {
          "type": "string",
          "description": "Replication set name."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      },
      "description": "MongoDBService represents a generic MongoDB instance."
    },
    "inventoryMySQLService": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "service_name": {
          "type": "string",
          "description": "Unique across all Services user-defined name."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs."
        },
        "address": {
          "type": "string",
          "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required."
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "Access port.\nPort is required when the address present."
        },
        "socket": {
          "type": "string",
          "description": "Access unix socket.\nAddress (and port) or socket is required."
        },
        "environment": {
          "type": "string",
          "description": "Environment name."
        },
        "cluster": {
          "type": "string",
          "description": "Cluster name."
        },
        "replication_set": {
          "type": "string",
          "description": "Replication set name."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      },
      "description": "MySQLService represents a generic MySQL instance."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1BackupMode": {
      "type": "string",
      "enum": [
        "BACKUP_MODE_INVALID",
        "SNAPSHOT",
        "INCREMENTAL",
        "PITR"
      ],
      "default": "BACKUP_MODE_INVALID",
      "description": "BackupMode specifies backup mode."
    },
    "v1ChangeScheduledBackupRequest": {
      "type": "object",
      "properties": {
        "scheduled_backup_id": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "cron_expression": {
          "type": "string",
          "description": "How often backup should be run in cron format."
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "First backup wouldn't happen before this time."
        },
        "name": {
          "type": "string",
          "description": "Name of backup."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description."
        },
        "retry_interval": {
          "type": "string",
          "description": "Delay between each retry. Should have a suffix in JSON: 1s, 1m, 1h."
        },
        "retries": {
          "type": "integer",
          "format": "int64",
          "description": "How many times to retry a failed backup before giving up."
        },
        "retention": {
          "type": "integer",
          "format": "int64",
          "description": "How many artifacts keep. 0 - unlimited."
        }
      }
    },
    "v1ChangeScheduledBackupResponse": {
      "type": "object"
    },
    "v1DataModel": {
      "type": "string",
      "enum": [
        "DATA_MODEL_INVALID",
        "PHYSICAL",
        "LOGICAL"
      ],
      "default": "DATA_MODEL_INVALID",
      "description": "DataModel is a model used for performing a backup."
    },
    "v1GetLogsRequest": {
      "type": "object",
      "properties": {
        "artifact_id": {
          "type": "string"
        },
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "limit": {
          "type": "integer",
          "format": "int64"
        },
        "restore_id": {
          "type": "string"
        }
      }
    },
    "v1GetLogsResponse": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1LogChunk"
          }
        },
        "end": {
          "type": "boolean"
        }
      }
    },
    "v1ListArtifactCompatibleServicesRequest": {
      "type": "object",
      "properties": {
        "artifact_id": {
          "type": "string",
          "description": "Artifact id used to determine restore compatibility."
        }
      }
    },
    "v1ListArtifactCompatibleServicesResponse": {
      "type": "object",
      "properties": {
        "mysql": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryMySQLService"
          }
        },
        "mongodb": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryMongoDBService"
          }
        }
      }
    },
    "v1ListScheduledBackupsRequest": {
      "type": "object"
    },
    "v1ListScheduledBackupsResponse": {
      "type": "object",
      "properties": {
        "scheduled_backups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1ScheduledBackup"
          }
        }
      }
    },
    "v1LogChunk": {
      "type": "object",
      "properties": {
        "chunk_id": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "string"
        }
      },
      "description": "LogChunk represent one chunk of logs."
    },
    "v1RemoveScheduledBackupRequest": {
      "type": "object",
      "properties": {
        "scheduled_backup_id": {
          "type": "string"
        }
      }
    },
    "v1RemoveScheduledBackupResponse": {
      "type": "object"
    },
    "v1RestoreBackupRequest": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Service identifier where backup should be restored."
        },
        "artifact_id": {
          "type": "string",
          "description": "Artifact id to restore."
        },
        "pitr_timestamp": {
          "type": "string",
          "format": "date-time",
          "title": "Timestamp of PITR to restore to"
        }
      }
    },
    "v1RestoreBackupResponse": {
      "type": "object",
      "properties": {
        "restore_id": {
          "type": "string",
          "description": "Unique restore identifier."
        }
      }
    },
    "v1ScheduleBackupRequest": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Service identifier where backup should be performed."
        },
        "location_id": {
          "type": "string",
          "description": "Machine-readable location ID."
        },
        "cron_expression": {
          "type": "string",
          "description": "How often backup should be run in cron format."
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "First backup wouldn't happen before this time."
        },
        "name": {
          "type": "string",
          "description": "Name of backup."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description."
        },
        "retry_interval": {
          "type": "string",
          "description": "Delay between each retry. Should have a suffix in JSON: 1s, 1m, 1h."
        },
        "retries": {
          "type": "integer",
          "format": "int64",
          "description": "How many times to retry a failed backup before giving up."
        },
        "enabled": {
          "type": "boolean",
          "description": "If scheduling is enabled."
        },
        "retention": {
          "type": "integer",
          "format": "int64",
          "description": "How many artifacts keep. 0 - unlimited."
        },
        "mode": {
          "$ref": "#/definitions/v1BackupMode",
          "description": "Backup mode."
        },
        "data_model": {
          "$ref": "#/definitions/v1DataModel",
          "description": "Backup data model (physical or logical)."
        },
        "folder": {
          "type": "string",
          "description": "Folder on storage for artifact."
        }
      }
    },
    "v1ScheduleBackupResponse": {
      "type": "object",
      "properties": {
        "scheduled_backup_id": {
          "type": "string"
        }
      }
    },
    "v1ScheduledBackup": {
      "type": "object",
      "properties": {
        "scheduled_backup_id": {
          "type": "string",
          "description": "Machine-readable ID."
        },
        "service_id": {
          "type": "string",
          "description": "Machine-readable service ID."
        },
        "service_name": {
          "type": "string",
          "description": "Service name."
        },
        "location_id": {
          "type": "string",
          "description": "Machine-readable location ID."
        },
        "location_name": {
          "type": "string",
          "description": "Location name."
        },
        "cron_expression": {
          "type": "string",
          "description": "How often backup will be run in cron format."
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "First backup wouldn't happen before this time."
        },
        "name": {
          "type": "string",
          "description": "Artifact name."
        },
        "description": {
          "type": "string",
          "description": "Description."
        },
        "retry_interval": {
          "type": "string",
          "description": "Delay between each retry. Should have a suffix in JSON: 1s, 1m, 1h."
        },
        "retries": {
          "type": "integer",
          "format": "int64",
          "description": "How many times to retry a failed backup before giving up."
        },
        "enabled": {
          "type": "boolean",
          "description": "If scheduling is enabled."
        },
        "data_model": {
          "$ref": "#/definitions/v1DataModel",
          "description": "Backup data model (physical or logical)."
        },
        "vendor": {
          "type": "string",
          "description": "Database vendor e.g. PostgreSQL, MongoDB, MySQL."
        },
        "last_run": {
          "type": "string",
          "format": "date-time",
          "description": "Last run."
        },
        "next_run": {
          "type": "string",
          "format": "date-time",
          "description": "Next run."
        },
        "retention": {
          "type": "integer",
          "format": "int64",
          "description": "How many artifacts keep. 0 - unlimited."
        },
        "mode": {
          "$ref": "#/definitions/v1BackupMode",
          "description": "Backup mode."
        },
        "folder": {
          "type": "string",
          "description": "Folder on storage for artifact."
        }
      },
      "description": "ScheduledBackup represents scheduled task for backup."
    },
    "v1StartBackupRequest": {
      "type": "object",
      "properties": {
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "location_id": {
          "type": "string",
          "description": "Machine-readable location ID."
        },
        "name": {
          "type": "string",
          "description": "If empty then name is auto-generated."
        },
        "description": {
          "type": "string",
          "description": "Human-readable description."
        },
        "retry_interval": {
          "type": "string",
          "description": "Delay between each retry. Should have a suffix in JSON: 1s, 1m, 1h."
        },
        "retries": {
          "type": "integer",
          "format": "int64",
          "description": "How many times to retry a failed backup before giving up."
        },
        "data_model": {
          "$ref": "#/definitions/v1DataModel",
          "description": "DataModel represents the data model used for the backup."
        },
        "folder": {
          "type": "string",
          "description": "Folder on storage for artifact."
        }
      }
    },
    "v1StartBackupResponse": {
      "type": "object",
      "properties": {
        "artifact_id": {
          "type": "string",
          "description": "Unique identifier."
        }
      }
    }
  }
}
