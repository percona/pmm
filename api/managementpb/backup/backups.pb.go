// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: managementpb/backup/backups.proto

package backupv1beta1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// RetryMode specifies how backup should retry in case of failure.
type RetryMode int32

const (
	RetryMode_RETRY_MODE_INVALID RetryMode = 0
	RetryMode_AUTO               RetryMode = 1
	RetryMode_MANUAL             RetryMode = 2
)

// Enum value maps for RetryMode.
var (
	RetryMode_name = map[int32]string{
		0: "RETRY_MODE_INVALID",
		1: "AUTO",
		2: "MANUAL",
	}
	RetryMode_value = map[string]int32{
		"RETRY_MODE_INVALID": 0,
		"AUTO":               1,
		"MANUAL":             2,
	}
)

func (x RetryMode) Enum() *RetryMode {
	p := new(RetryMode)
	*p = x
	return p
}

func (x RetryMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RetryMode) Descriptor() protoreflect.EnumDescriptor {
	return file_managementpb_backup_backups_proto_enumTypes[0].Descriptor()
}

func (RetryMode) Type() protoreflect.EnumType {
	return &file_managementpb_backup_backups_proto_enumTypes[0]
}

func (x RetryMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RetryMode.Descriptor instead.
func (RetryMode) EnumDescriptor() ([]byte, []int) {
	return file_managementpb_backup_backups_proto_rawDescGZIP(), []int{0}
}

type PerformBackupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Service identifier.
	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Machine-readable location ID.
	LocationId string `protobuf:"bytes,2,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// Database names to backup, If empty then each database is backed up.
	DatabaseNames []string `protobuf:"bytes,3,rep,name=database_names,json=databaseNames,proto3" json:"database_names,omitempty"`
	// If empty then name is auto-generated.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Human-readable description.
	Description string    `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	RetryMode   RetryMode `protobuf:"varint,6,opt,name=retry_mode,json=retryMode,proto3,enum=backup.v1beta1.RetryMode" json:"retry_mode,omitempty"`
	// Retry interval in seconds. Default 30s.
	RetryInterval uint32 `protobuf:"varint,7,opt,name=retry_interval,json=retryInterval,proto3" json:"retry_interval,omitempty"`
	// How many times should backup be retried in case of failure. Default 2 times.
	RetryTimes uint32 `protobuf:"varint,8,opt,name=retry_times,json=retryTimes,proto3" json:"retry_times,omitempty"`
}

func (x *PerformBackupRequest) Reset() {
	*x = PerformBackupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_backup_backups_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformBackupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformBackupRequest) ProtoMessage() {}

func (x *PerformBackupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_backup_backups_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformBackupRequest.ProtoReflect.Descriptor instead.
func (*PerformBackupRequest) Descriptor() ([]byte, []int) {
	return file_managementpb_backup_backups_proto_rawDescGZIP(), []int{0}
}

func (x *PerformBackupRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *PerformBackupRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *PerformBackupRequest) GetDatabaseNames() []string {
	if x != nil {
		return x.DatabaseNames
	}
	return nil
}

func (x *PerformBackupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PerformBackupRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PerformBackupRequest) GetRetryMode() RetryMode {
	if x != nil {
		return x.RetryMode
	}
	return RetryMode_RETRY_MODE_INVALID
}

func (x *PerformBackupRequest) GetRetryInterval() uint32 {
	if x != nil {
		return x.RetryInterval
	}
	return 0
}

func (x *PerformBackupRequest) GetRetryTimes() uint32 {
	if x != nil {
		return x.RetryTimes
	}
	return 0
}

type PerformBackupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier.
	BackupId string `protobuf:"bytes,1,opt,name=backup_id,json=backupId,proto3" json:"backup_id,omitempty"`
}

func (x *PerformBackupResponse) Reset() {
	*x = PerformBackupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_managementpb_backup_backups_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PerformBackupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PerformBackupResponse) ProtoMessage() {}

func (x *PerformBackupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_managementpb_backup_backups_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PerformBackupResponse.ProtoReflect.Descriptor instead.
func (*PerformBackupResponse) Descriptor() ([]byte, []int) {
	return file_managementpb_backup_backups_proto_rawDescGZIP(), []int{1}
}

func (x *PerformBackupResponse) GetBackupId() string {
	if x != nil {
		return x.BackupId
	}
	return ""
}

var File_managementpb_backup_backups_proto protoreflect.FileDescriptor

var file_managementpb_backup_backups_proto_rawDesc = []byte{
	0x0a, 0x21, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x1a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6d, 0x77, 0x69, 0x74, 0x6b, 0x6f, 0x77, 0x2f, 0x67, 0x6f, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2d, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc5, 0x02, 0x0a, 0x14, 0x50, 0x65,
	0x72, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x09,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0b, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xe2, 0xdf, 0x1f, 0x02, 0x58, 0x01, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61,
	0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x38, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x09,
	0x72, 0x65, 0x74, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x74,
	0x72, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0d, 0x72, 0x65, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x22, 0x34, 0x0a, 0x15, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x64, 0x2a, 0x39, 0x0a, 0x09, 0x52, 0x65, 0x74, 0x72, 0x79,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x45, 0x54, 0x52, 0x59, 0x5f, 0x4d, 0x4f,
	0x44, 0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x41, 0x55, 0x54, 0x4f, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x41, 0x4e, 0x55, 0x41, 0x4c,
	0x10, 0x02, 0x32, 0xa0, 0x01, 0x0a, 0x07, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x73, 0x12, 0x94,
	0x01, 0x0a, 0x0d, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x12, 0x24, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x30, 0x22, 0x2b, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x2f, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x73, 0x2f, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x3a, 0x01, 0x2a, 0x42, 0x27, 0x5a, 0x25, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x3b, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_managementpb_backup_backups_proto_rawDescOnce sync.Once
	file_managementpb_backup_backups_proto_rawDescData = file_managementpb_backup_backups_proto_rawDesc
)

func file_managementpb_backup_backups_proto_rawDescGZIP() []byte {
	file_managementpb_backup_backups_proto_rawDescOnce.Do(func() {
		file_managementpb_backup_backups_proto_rawDescData = protoimpl.X.CompressGZIP(file_managementpb_backup_backups_proto_rawDescData)
	})
	return file_managementpb_backup_backups_proto_rawDescData
}

var file_managementpb_backup_backups_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_managementpb_backup_backups_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_managementpb_backup_backups_proto_goTypes = []interface{}{
	(RetryMode)(0),                // 0: backup.v1beta1.RetryMode
	(*PerformBackupRequest)(nil),  // 1: backup.v1beta1.PerformBackupRequest
	(*PerformBackupResponse)(nil), // 2: backup.v1beta1.PerformBackupResponse
}
var file_managementpb_backup_backups_proto_depIdxs = []int32{
	0, // 0: backup.v1beta1.PerformBackupRequest.retry_mode:type_name -> backup.v1beta1.RetryMode
	1, // 1: backup.v1beta1.Backups.PerformBackup:input_type -> backup.v1beta1.PerformBackupRequest
	2, // 2: backup.v1beta1.Backups.PerformBackup:output_type -> backup.v1beta1.PerformBackupResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_managementpb_backup_backups_proto_init() }
func file_managementpb_backup_backups_proto_init() {
	if File_managementpb_backup_backups_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_managementpb_backup_backups_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformBackupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_managementpb_backup_backups_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PerformBackupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_managementpb_backup_backups_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_managementpb_backup_backups_proto_goTypes,
		DependencyIndexes: file_managementpb_backup_backups_proto_depIdxs,
		EnumInfos:         file_managementpb_backup_backups_proto_enumTypes,
		MessageInfos:      file_managementpb_backup_backups_proto_msgTypes,
	}.Build()
	File_managementpb_backup_backups_proto = out.File
	file_managementpb_backup_backups_proto_rawDesc = nil
	file_managementpb_backup_backups_proto_goTypes = nil
	file_managementpb_backup_backups_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BackupsClient is the client API for Backups service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BackupsClient interface {
	// PerformBackup request backup specified service to location.
	PerformBackup(ctx context.Context, in *PerformBackupRequest, opts ...grpc.CallOption) (*PerformBackupResponse, error)
}

type backupsClient struct {
	cc grpc.ClientConnInterface
}

func NewBackupsClient(cc grpc.ClientConnInterface) BackupsClient {
	return &backupsClient{cc}
}

func (c *backupsClient) PerformBackup(ctx context.Context, in *PerformBackupRequest, opts ...grpc.CallOption) (*PerformBackupResponse, error) {
	out := new(PerformBackupResponse)
	err := c.cc.Invoke(ctx, "/backup.v1beta1.Backups/PerformBackup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BackupsServer is the server API for Backups service.
type BackupsServer interface {
	// PerformBackup request backup specified service to location.
	PerformBackup(context.Context, *PerformBackupRequest) (*PerformBackupResponse, error)
}

// UnimplementedBackupsServer can be embedded to have forward compatible implementations.
type UnimplementedBackupsServer struct {
}

func (*UnimplementedBackupsServer) PerformBackup(context.Context, *PerformBackupRequest) (*PerformBackupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PerformBackup not implemented")
}

func RegisterBackupsServer(s *grpc.Server, srv BackupsServer) {
	s.RegisterService(&_Backups_serviceDesc, srv)
}

func _Backups_PerformBackup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PerformBackupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BackupsServer).PerformBackup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/backup.v1beta1.Backups/PerformBackup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BackupsServer).PerformBackup(ctx, req.(*PerformBackupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Backups_serviceDesc = grpc.ServiceDesc{
	ServiceName: "backup.v1beta1.Backups",
	HandlerType: (*BackupsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PerformBackup",
			Handler:    _Backups_PerformBackup_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "managementpb/backup/backups.proto",
}
