// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: managementpb/backup/common.proto

package backupv1

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = proto.Marshal
	_ = fmt.Errorf
	_ = math.Inf
)

func (this *File) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	return nil
}

func (this *BackupToolData) Validate() error {
	return nil
}

func (this *Metadata) Validate() error {
	for _, item := range this.FileList {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("FileList", err)
			}
		}
	}
	if this.RestoreTo != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.RestoreTo); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("RestoreTo", err)
		}
	}
	if this.BackupToolData != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.BackupToolData); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("BackupToolData", err)
		}
	}
	return nil
}
