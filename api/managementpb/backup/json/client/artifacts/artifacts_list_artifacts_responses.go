// Code generated by go-swagger; DO NOT EDIT.

package artifacts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ArtifactsListArtifactsReader is a Reader for the ArtifactsListArtifacts structure.
type ArtifactsListArtifactsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ArtifactsListArtifactsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewArtifactsListArtifactsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewArtifactsListArtifactsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewArtifactsListArtifactsOK creates a ArtifactsListArtifactsOK with default headers values
func NewArtifactsListArtifactsOK() *ArtifactsListArtifactsOK {
	return &ArtifactsListArtifactsOK{}
}

/*ArtifactsListArtifactsOK handles this case with default header values.

A successful response.
*/
type ArtifactsListArtifactsOK struct {
	Payload *ArtifactsListArtifactsOKBody
}

func (o *ArtifactsListArtifactsOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/backup/Artifacts/List][%d] artifactsListArtifactsOk  %+v", 200, o.Payload)
}

func (o *ArtifactsListArtifactsOK) GetPayload() *ArtifactsListArtifactsOKBody {
	return o.Payload
}

func (o *ArtifactsListArtifactsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ArtifactsListArtifactsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewArtifactsListArtifactsDefault creates a ArtifactsListArtifactsDefault with default headers values
func NewArtifactsListArtifactsDefault(code int) *ArtifactsListArtifactsDefault {
	return &ArtifactsListArtifactsDefault{
		_statusCode: code,
	}
}

/*ArtifactsListArtifactsDefault handles this case with default header values.

An unexpected error response.
*/
type ArtifactsListArtifactsDefault struct {
	_statusCode int

	Payload *ArtifactsListArtifactsDefaultBody
}

// Code gets the status code for the artifacts list artifacts default response
func (o *ArtifactsListArtifactsDefault) Code() int {
	return o._statusCode
}

func (o *ArtifactsListArtifactsDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/backup/Artifacts/List][%d] Artifacts_ListArtifacts default  %+v", o._statusCode, o.Payload)
}

func (o *ArtifactsListArtifactsDefault) GetPayload() *ArtifactsListArtifactsDefaultBody {
	return o.Payload
}

func (o *ArtifactsListArtifactsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ArtifactsListArtifactsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ArtifactsItems0 Artifact represents single backup artifact.
swagger:model ArtifactsItems0
*/
type ArtifactsItems0 struct {

	// Machine-readable artifact ID.
	ArtifactID string `json:"artifact_id,omitempty"`

	// Artifact name
	Name string `json:"name,omitempty"`

	// Database vendor e.g. PostgreSQL, MongoDB, MySQL.
	Vendor string `json:"vendor,omitempty"`

	// Machine-readable location ID.
	LocationID string `json:"location_id,omitempty"`

	// Location name.
	LocationName string `json:"location_name,omitempty"`

	// Machine-readable service ID.
	ServiceID string `json:"service_id,omitempty"`

	// Service name.
	ServiceName string `json:"service_name,omitempty"`

	// DataModel is a model used for performing a backup.
	// Enum: [DATA_MODEL_INVALID PHYSICAL LOGICAL]
	DataModel *string `json:"data_model,omitempty"`

	// BackupStatus shows the current status of execution of backup.
	// Enum: [BACKUP_STATUS_INVALID BACKUP_STATUS_PENDING BACKUP_STATUS_IN_PROGRESS BACKUP_STATUS_PAUSED BACKUP_STATUS_SUCCESS BACKUP_STATUS_ERROR BACKUP_STATUS_DELETING BACKUP_STATUS_FAILED_TO_DELETE]
	Status *string `json:"status,omitempty"`

	// Artifact creation time.
	// Format: date-time
	CreatedAt strfmt.DateTime `json:"created_at,omitempty"`

	// BackupMode specifies backup mode.
	// Enum: [BACKUP_MODE_INVALID SNAPSHOT INCREMENTAL PITR]
	Mode *string `json:"mode,omitempty"`
}

// Validate validates this artifacts items0
func (o *ArtifactsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDataModel(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreatedAt(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var artifactsItems0TypeDataModelPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["DATA_MODEL_INVALID","PHYSICAL","LOGICAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		artifactsItems0TypeDataModelPropEnum = append(artifactsItems0TypeDataModelPropEnum, v)
	}
}

const (

	// ArtifactsItems0DataModelDATAMODELINVALID captures enum value "DATA_MODEL_INVALID"
	ArtifactsItems0DataModelDATAMODELINVALID string = "DATA_MODEL_INVALID"

	// ArtifactsItems0DataModelPHYSICAL captures enum value "PHYSICAL"
	ArtifactsItems0DataModelPHYSICAL string = "PHYSICAL"

	// ArtifactsItems0DataModelLOGICAL captures enum value "LOGICAL"
	ArtifactsItems0DataModelLOGICAL string = "LOGICAL"
)

// prop value enum
func (o *ArtifactsItems0) validateDataModelEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, artifactsItems0TypeDataModelPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *ArtifactsItems0) validateDataModel(formats strfmt.Registry) error {

	if swag.IsZero(o.DataModel) { // not required
		return nil
	}

	// value enum
	if err := o.validateDataModelEnum("data_model", "body", *o.DataModel); err != nil {
		return err
	}

	return nil
}

var artifactsItems0TypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BACKUP_STATUS_INVALID","BACKUP_STATUS_PENDING","BACKUP_STATUS_IN_PROGRESS","BACKUP_STATUS_PAUSED","BACKUP_STATUS_SUCCESS","BACKUP_STATUS_ERROR","BACKUP_STATUS_DELETING","BACKUP_STATUS_FAILED_TO_DELETE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		artifactsItems0TypeStatusPropEnum = append(artifactsItems0TypeStatusPropEnum, v)
	}
}

const (

	// ArtifactsItems0StatusBACKUPSTATUSINVALID captures enum value "BACKUP_STATUS_INVALID"
	ArtifactsItems0StatusBACKUPSTATUSINVALID string = "BACKUP_STATUS_INVALID"

	// ArtifactsItems0StatusBACKUPSTATUSPENDING captures enum value "BACKUP_STATUS_PENDING"
	ArtifactsItems0StatusBACKUPSTATUSPENDING string = "BACKUP_STATUS_PENDING"

	// ArtifactsItems0StatusBACKUPSTATUSINPROGRESS captures enum value "BACKUP_STATUS_IN_PROGRESS"
	ArtifactsItems0StatusBACKUPSTATUSINPROGRESS string = "BACKUP_STATUS_IN_PROGRESS"

	// ArtifactsItems0StatusBACKUPSTATUSPAUSED captures enum value "BACKUP_STATUS_PAUSED"
	ArtifactsItems0StatusBACKUPSTATUSPAUSED string = "BACKUP_STATUS_PAUSED"

	// ArtifactsItems0StatusBACKUPSTATUSSUCCESS captures enum value "BACKUP_STATUS_SUCCESS"
	ArtifactsItems0StatusBACKUPSTATUSSUCCESS string = "BACKUP_STATUS_SUCCESS"

	// ArtifactsItems0StatusBACKUPSTATUSERROR captures enum value "BACKUP_STATUS_ERROR"
	ArtifactsItems0StatusBACKUPSTATUSERROR string = "BACKUP_STATUS_ERROR"

	// ArtifactsItems0StatusBACKUPSTATUSDELETING captures enum value "BACKUP_STATUS_DELETING"
	ArtifactsItems0StatusBACKUPSTATUSDELETING string = "BACKUP_STATUS_DELETING"

	// ArtifactsItems0StatusBACKUPSTATUSFAILEDTODELETE captures enum value "BACKUP_STATUS_FAILED_TO_DELETE"
	ArtifactsItems0StatusBACKUPSTATUSFAILEDTODELETE string = "BACKUP_STATUS_FAILED_TO_DELETE"
)

// prop value enum
func (o *ArtifactsItems0) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, artifactsItems0TypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *ArtifactsItems0) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("status", "body", *o.Status); err != nil {
		return err
	}

	return nil
}

func (o *ArtifactsItems0) validateCreatedAt(formats strfmt.Registry) error {

	if swag.IsZero(o.CreatedAt) { // not required
		return nil
	}

	if err := validate.FormatOf("created_at", "body", "date-time", o.CreatedAt.String(), formats); err != nil {
		return err
	}

	return nil
}

var artifactsItems0TypeModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BACKUP_MODE_INVALID","SNAPSHOT","INCREMENTAL","PITR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		artifactsItems0TypeModePropEnum = append(artifactsItems0TypeModePropEnum, v)
	}
}

const (

	// ArtifactsItems0ModeBACKUPMODEINVALID captures enum value "BACKUP_MODE_INVALID"
	ArtifactsItems0ModeBACKUPMODEINVALID string = "BACKUP_MODE_INVALID"

	// ArtifactsItems0ModeSNAPSHOT captures enum value "SNAPSHOT"
	ArtifactsItems0ModeSNAPSHOT string = "SNAPSHOT"

	// ArtifactsItems0ModeINCREMENTAL captures enum value "INCREMENTAL"
	ArtifactsItems0ModeINCREMENTAL string = "INCREMENTAL"

	// ArtifactsItems0ModePITR captures enum value "PITR"
	ArtifactsItems0ModePITR string = "PITR"
)

// prop value enum
func (o *ArtifactsItems0) validateModeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, artifactsItems0TypeModePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *ArtifactsItems0) validateMode(formats strfmt.Registry) error {

	if swag.IsZero(o.Mode) { // not required
		return nil
	}

	// value enum
	if err := o.validateModeEnum("mode", "body", *o.Mode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ArtifactsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ArtifactsItems0) UnmarshalBinary(b []byte) error {
	var res ArtifactsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ArtifactsListArtifactsDefaultBody artifacts list artifacts default body
swagger:model ArtifactsListArtifactsDefaultBody
*/
type ArtifactsListArtifactsDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this artifacts list artifacts default body
func (o *ArtifactsListArtifactsDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ArtifactsListArtifactsDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Artifacts_ListArtifacts default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ArtifactsListArtifactsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ArtifactsListArtifactsDefaultBody) UnmarshalBinary(b []byte) error {
	var res ArtifactsListArtifactsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ArtifactsListArtifactsOKBody artifacts list artifacts OK body
swagger:model ArtifactsListArtifactsOKBody
*/
type ArtifactsListArtifactsOKBody struct {

	// artifacts
	Artifacts []*ArtifactsItems0 `json:"artifacts"`
}

// Validate validates this artifacts list artifacts OK body
func (o *ArtifactsListArtifactsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateArtifacts(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ArtifactsListArtifactsOKBody) validateArtifacts(formats strfmt.Registry) error {

	if swag.IsZero(o.Artifacts) { // not required
		return nil
	}

	for i := 0; i < len(o.Artifacts); i++ {
		if swag.IsZero(o.Artifacts[i]) { // not required
			continue
		}

		if o.Artifacts[i] != nil {
			if err := o.Artifacts[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("artifactsListArtifactsOk" + "." + "artifacts" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ArtifactsListArtifactsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ArtifactsListArtifactsOKBody) UnmarshalBinary(b []byte) error {
	var res ArtifactsListArtifactsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
