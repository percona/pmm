// Code generated by go-swagger; DO NOT EDIT.

package locations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ListPITRTimelinesReader is a Reader for the ListPITRTimelines structure.
type ListPITRTimelinesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPITRTimelinesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPITRTimelinesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewListPITRTimelinesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListPITRTimelinesOK creates a ListPITRTimelinesOK with default headers values
func NewListPITRTimelinesOK() *ListPITRTimelinesOK {
	return &ListPITRTimelinesOK{}
}

/* ListPITRTimelinesOK describes a response with status code 200, with default header values.

A successful response.
*/
type ListPITRTimelinesOK struct {
	Payload *ListPITRTimelinesOKBody
}

func (o *ListPITRTimelinesOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/backup/Artifacts/ListPITRTimelines][%d] listPITRTimelinesOk  %+v", 200, o.Payload)
}

func (o *ListPITRTimelinesOK) GetPayload() *ListPITRTimelinesOKBody {
	return o.Payload
}

func (o *ListPITRTimelinesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(ListPITRTimelinesOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPITRTimelinesDefault creates a ListPITRTimelinesDefault with default headers values
func NewListPITRTimelinesDefault(code int) *ListPITRTimelinesDefault {
	return &ListPITRTimelinesDefault{
		_statusCode: code,
	}
}

/* ListPITRTimelinesDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type ListPITRTimelinesDefault struct {
	_statusCode int

	Payload *ListPITRTimelinesDefaultBody
}

// Code gets the status code for the list p i t r timelines default response
func (o *ListPITRTimelinesDefault) Code() int {
	return o._statusCode
}

func (o *ListPITRTimelinesDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/backup/Artifacts/ListPITRTimelines][%d] ListPITRTimelines default  %+v", o._statusCode, o.Payload)
}

func (o *ListPITRTimelinesDefault) GetPayload() *ListPITRTimelinesDefaultBody {
	return o.Payload
}

func (o *ListPITRTimelinesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(ListPITRTimelinesDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ListPITRTimelinesBody list p i t r timelines body
swagger:model ListPITRTimelinesBody
*/
type ListPITRTimelinesBody struct {
	// Artifact ID represents artifact whose location has PITR timeranges to be retrieved.
	ArtifactID string `json:"artifact_id,omitempty"`
}

// Validate validates this list p i t r timelines body
func (o *ListPITRTimelinesBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list p i t r timelines body based on context it is used
func (o *ListPITRTimelinesBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListPITRTimelinesBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListPITRTimelinesBody) UnmarshalBinary(b []byte) error {
	var res ListPITRTimelinesBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ListPITRTimelinesDefaultBody list p i t r timelines default body
swagger:model ListPITRTimelinesDefaultBody
*/
type ListPITRTimelinesDefaultBody struct {
	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*ListPITRTimelinesDefaultBodyDetailsItems0 `json:"details"`
}

// Validate validates this list p i t r timelines default body
func (o *ListPITRTimelinesDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListPITRTimelinesDefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ListPITRTimelines default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("ListPITRTimelines default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this list p i t r timelines default body based on the context it is used
func (o *ListPITRTimelinesDefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListPITRTimelinesDefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Details); i++ {
		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ListPITRTimelines default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("ListPITRTimelines default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListPITRTimelinesDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListPITRTimelinesDefaultBody) UnmarshalBinary(b []byte) error {
	var res ListPITRTimelinesDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ListPITRTimelinesDefaultBodyDetailsItems0 list p i t r timelines default body details items0
swagger:model ListPITRTimelinesDefaultBodyDetailsItems0
*/
type ListPITRTimelinesDefaultBodyDetailsItems0 struct {
	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this list p i t r timelines default body details items0
func (o *ListPITRTimelinesDefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this list p i t r timelines default body details items0 based on context it is used
func (o *ListPITRTimelinesDefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListPITRTimelinesDefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListPITRTimelinesDefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res ListPITRTimelinesDefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ListPITRTimelinesOKBody list p i t r timelines OK body
swagger:model ListPITRTimelinesOKBody
*/
type ListPITRTimelinesOKBody struct {
	// timelines
	Timelines []*ListPITRTimelinesOKBodyTimelinesItems0 `json:"timelines"`
}

// Validate validates this list p i t r timelines OK body
func (o *ListPITRTimelinesOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateTimelines(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListPITRTimelinesOKBody) validateTimelines(formats strfmt.Registry) error {
	if swag.IsZero(o.Timelines) { // not required
		return nil
	}

	for i := 0; i < len(o.Timelines); i++ {
		if swag.IsZero(o.Timelines[i]) { // not required
			continue
		}

		if o.Timelines[i] != nil {
			if err := o.Timelines[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listPITRTimelinesOk" + "." + "timelines" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("listPITRTimelinesOk" + "." + "timelines" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this list p i t r timelines OK body based on the context it is used
func (o *ListPITRTimelinesOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateTimelines(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListPITRTimelinesOKBody) contextValidateTimelines(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Timelines); i++ {
		if o.Timelines[i] != nil {
			if err := o.Timelines[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("listPITRTimelinesOk" + "." + "timelines" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("listPITRTimelinesOk" + "." + "timelines" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ListPITRTimelinesOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListPITRTimelinesOKBody) UnmarshalBinary(b []byte) error {
	var res ListPITRTimelinesOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ListPITRTimelinesOKBodyTimelinesItems0 list p i t r timelines OK body timelines items0
swagger:model ListPITRTimelinesOKBodyTimelinesItems0
*/
type ListPITRTimelinesOKBodyTimelinesItems0 struct {
	// Filename is the filename of the PITR oplog archive
	Filename string `json:"filename,omitempty"`

	// ReplicaSet is the name of the replica set that the backup was taken from
	ReplicaSet string `json:"replica_set,omitempty"`

	// start_timestamp is the time of the first event in the PITR chunk
	// Format: date-time
	StartTimestamp strfmt.DateTime `json:"start_timestamp,omitempty"`

	// end_timestamp is the time of the last event in the PITR chunk
	// Format: date-time
	EndTimestamp strfmt.DateTime `json:"end_timestamp,omitempty"`
}

// Validate validates this list p i t r timelines OK body timelines items0
func (o *ListPITRTimelinesOKBodyTimelinesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStartTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateEndTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ListPITRTimelinesOKBodyTimelinesItems0) validateStartTimestamp(formats strfmt.Registry) error {
	if swag.IsZero(o.StartTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("start_timestamp", "body", "date-time", o.StartTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *ListPITRTimelinesOKBodyTimelinesItems0) validateEndTimestamp(formats strfmt.Registry) error {
	if swag.IsZero(o.EndTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("end_timestamp", "body", "date-time", o.EndTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this list p i t r timelines OK body timelines items0 based on context it is used
func (o *ListPITRTimelinesOKBodyTimelinesItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ListPITRTimelinesOKBodyTimelinesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ListPITRTimelinesOKBodyTimelinesItems0) UnmarshalBinary(b []byte) error {
	var res ListPITRTimelinesOKBodyTimelinesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
