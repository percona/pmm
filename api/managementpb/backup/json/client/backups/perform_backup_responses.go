// Code generated by go-swagger; DO NOT EDIT.

package backups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PerformBackupReader is a Reader for the PerformBackup structure.
type PerformBackupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PerformBackupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPerformBackupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPerformBackupDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPerformBackupOK creates a PerformBackupOK with default headers values
func NewPerformBackupOK() *PerformBackupOK {
	return &PerformBackupOK{}
}

/*PerformBackupOK handles this case with default header values.

A successful response.
*/
type PerformBackupOK struct {
	Payload *PerformBackupOKBody
}

func (o *PerformBackupOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/backup/Backups/PerformBackup][%d] performBackupOk  %+v", 200, o.Payload)
}

func (o *PerformBackupOK) GetPayload() *PerformBackupOKBody {
	return o.Payload
}

func (o *PerformBackupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PerformBackupOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPerformBackupDefault creates a PerformBackupDefault with default headers values
func NewPerformBackupDefault(code int) *PerformBackupDefault {
	return &PerformBackupDefault{
		_statusCode: code,
	}
}

/*PerformBackupDefault handles this case with default header values.

An unexpected error response.
*/
type PerformBackupDefault struct {
	_statusCode int

	Payload *PerformBackupDefaultBody
}

// Code gets the status code for the perform backup default response
func (o *PerformBackupDefault) Code() int {
	return o._statusCode
}

func (o *PerformBackupDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/backup/Backups/PerformBackup][%d] PerformBackup default  %+v", o._statusCode, o.Payload)
}

func (o *PerformBackupDefault) GetPayload() *PerformBackupDefaultBody {
	return o.Payload
}

func (o *PerformBackupDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(PerformBackupDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DetailsItems0 details items0
swagger:model DetailsItems0
*/
type DetailsItems0 struct {

	// type url
	TypeURL string `json:"type_url,omitempty"`

	// value
	// Format: byte
	Value strfmt.Base64 `json:"value,omitempty"`
}

// Validate validates this details items0
func (o *DetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *DetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DetailsItems0) UnmarshalBinary(b []byte) error {
	var res DetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PerformBackupBody perform backup body
swagger:model PerformBackupBody
*/
type PerformBackupBody struct {

	// Service identifier.
	ServiceID string `json:"service_id,omitempty"`

	// Machine-readable location ID.
	LocationID string `json:"location_id,omitempty"`

	// Database names to backup, If empty then each database is backed up.
	DatabaseNames []string `json:"database_names"`

	// If empty then name is auto-generated.
	Name string `json:"name,omitempty"`

	// Human-readable description.
	Description string `json:"description,omitempty"`

	// RetryMode specifies how backup should retry in case of failure.
	// Enum: [RETRY_MODE_INVALID AUTO MANUAL]
	RetryMode *string `json:"retry_mode,omitempty"`

	// Retry interval in seconds. Default 30s.
	RetryInterval int64 `json:"retry_interval,omitempty"`

	// How many times should backup be retried in case of failure. Default 2 times.
	RetryTimes int64 `json:"retry_times,omitempty"`
}

// Validate validates this perform backup body
func (o *PerformBackupBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRetryMode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var performBackupBodyTypeRetryModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["RETRY_MODE_INVALID","AUTO","MANUAL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		performBackupBodyTypeRetryModePropEnum = append(performBackupBodyTypeRetryModePropEnum, v)
	}
}

const (

	// PerformBackupBodyRetryModeRETRYMODEINVALID captures enum value "RETRY_MODE_INVALID"
	PerformBackupBodyRetryModeRETRYMODEINVALID string = "RETRY_MODE_INVALID"

	// PerformBackupBodyRetryModeAUTO captures enum value "AUTO"
	PerformBackupBodyRetryModeAUTO string = "AUTO"

	// PerformBackupBodyRetryModeMANUAL captures enum value "MANUAL"
	PerformBackupBodyRetryModeMANUAL string = "MANUAL"
)

// prop value enum
func (o *PerformBackupBody) validateRetryModeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, performBackupBodyTypeRetryModePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *PerformBackupBody) validateRetryMode(formats strfmt.Registry) error {

	if swag.IsZero(o.RetryMode) { // not required
		return nil
	}

	// value enum
	if err := o.validateRetryModeEnum("body"+"."+"retry_mode", "body", *o.RetryMode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PerformBackupBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PerformBackupBody) UnmarshalBinary(b []byte) error {
	var res PerformBackupBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PerformBackupDefaultBody perform backup default body
swagger:model PerformBackupDefaultBody
*/
type PerformBackupDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this perform backup default body
func (o *PerformBackupDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PerformBackupDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("PerformBackup default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *PerformBackupDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PerformBackupDefaultBody) UnmarshalBinary(b []byte) error {
	var res PerformBackupDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*PerformBackupOKBody perform backup OK body
swagger:model PerformBackupOKBody
*/
type PerformBackupOKBody struct {

	// Unique identifier.
	BackupID string `json:"backup_id,omitempty"`
}

// Validate validates this perform backup OK body
func (o *PerformBackupOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *PerformBackupOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PerformBackupOKBody) UnmarshalBinary(b []byte) error {
	var res PerformBackupOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
