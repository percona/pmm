// Code generated by go-swagger; DO NOT EDIT.

package backups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// BackupsStartBackupReader is a Reader for the BackupsStartBackup structure.
type BackupsStartBackupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BackupsStartBackupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBackupsStartBackupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewBackupsStartBackupDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewBackupsStartBackupOK creates a BackupsStartBackupOK with default headers values
func NewBackupsStartBackupOK() *BackupsStartBackupOK {
	return &BackupsStartBackupOK{}
}

/*BackupsStartBackupOK handles this case with default header values.

A successful response.
*/
type BackupsStartBackupOK struct {
	Payload *BackupsStartBackupOKBody
}

func (o *BackupsStartBackupOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/backup/Backups/Start][%d] backupsStartBackupOk  %+v", 200, o.Payload)
}

func (o *BackupsStartBackupOK) GetPayload() *BackupsStartBackupOKBody {
	return o.Payload
}

func (o *BackupsStartBackupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BackupsStartBackupOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupsStartBackupDefault creates a BackupsStartBackupDefault with default headers values
func NewBackupsStartBackupDefault(code int) *BackupsStartBackupDefault {
	return &BackupsStartBackupDefault{
		_statusCode: code,
	}
}

/*BackupsStartBackupDefault handles this case with default header values.

An unexpected error response.
*/
type BackupsStartBackupDefault struct {
	_statusCode int

	Payload *BackupsStartBackupDefaultBody
}

// Code gets the status code for the backups start backup default response
func (o *BackupsStartBackupDefault) Code() int {
	return o._statusCode
}

func (o *BackupsStartBackupDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/backup/Backups/Start][%d] Backups_StartBackup default  %+v", o._statusCode, o.Payload)
}

func (o *BackupsStartBackupDefault) GetPayload() *BackupsStartBackupDefaultBody {
	return o.Payload
}

func (o *BackupsStartBackupDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BackupsStartBackupDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*BackupsStartBackupBody backups start backup body
swagger:model BackupsStartBackupBody
*/
type BackupsStartBackupBody struct {

	// Service identifier.
	ServiceID string `json:"service_id,omitempty"`

	// Machine-readable location ID.
	LocationID string `json:"location_id,omitempty"`

	// If empty then name is auto-generated.
	Name string `json:"name,omitempty"`

	// Human-readable description.
	Description string `json:"description,omitempty"`

	// Delay between each retry. Should have a suffix in JSON: 1s, 1m, 1h.
	RetryInterval string `json:"retry_interval,omitempty"`

	// How many times to retry a failed backup before giving up.
	Retries int64 `json:"retries,omitempty"`
}

// Validate validates this backups start backup body
func (o *BackupsStartBackupBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupsStartBackupBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupsStartBackupBody) UnmarshalBinary(b []byte) error {
	var res BackupsStartBackupBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*BackupsStartBackupDefaultBody backups start backup default body
swagger:model BackupsStartBackupDefaultBody
*/
type BackupsStartBackupDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this backups start backup default body
func (o *BackupsStartBackupDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BackupsStartBackupDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Backups_StartBackup default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *BackupsStartBackupDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupsStartBackupDefaultBody) UnmarshalBinary(b []byte) error {
	var res BackupsStartBackupDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*BackupsStartBackupOKBody backups start backup OK body
swagger:model BackupsStartBackupOKBody
*/
type BackupsStartBackupOKBody struct {

	// Unique identifier.
	ArtifactID string `json:"artifact_id,omitempty"`
}

// Validate validates this backups start backup OK body
func (o *BackupsStartBackupOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupsStartBackupOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupsStartBackupOKBody) UnmarshalBinary(b []byte) error {
	var res BackupsStartBackupOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
