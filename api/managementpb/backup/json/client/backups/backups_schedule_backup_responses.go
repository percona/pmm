// Code generated by go-swagger; DO NOT EDIT.

package backups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// BackupsScheduleBackupReader is a Reader for the BackupsScheduleBackup structure.
type BackupsScheduleBackupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BackupsScheduleBackupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBackupsScheduleBackupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewBackupsScheduleBackupDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewBackupsScheduleBackupOK creates a BackupsScheduleBackupOK with default headers values
func NewBackupsScheduleBackupOK() *BackupsScheduleBackupOK {
	return &BackupsScheduleBackupOK{}
}

/*BackupsScheduleBackupOK handles this case with default header values.

A successful response.
*/
type BackupsScheduleBackupOK struct {
	Payload *BackupsScheduleBackupOKBody
}

func (o *BackupsScheduleBackupOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/backup/Backups/Schedule][%d] backupsScheduleBackupOk  %+v", 200, o.Payload)
}

func (o *BackupsScheduleBackupOK) GetPayload() *BackupsScheduleBackupOKBody {
	return o.Payload
}

func (o *BackupsScheduleBackupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BackupsScheduleBackupOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBackupsScheduleBackupDefault creates a BackupsScheduleBackupDefault with default headers values
func NewBackupsScheduleBackupDefault(code int) *BackupsScheduleBackupDefault {
	return &BackupsScheduleBackupDefault{
		_statusCode: code,
	}
}

/*BackupsScheduleBackupDefault handles this case with default header values.

An unexpected error response.
*/
type BackupsScheduleBackupDefault struct {
	_statusCode int

	Payload *BackupsScheduleBackupDefaultBody
}

// Code gets the status code for the backups schedule backup default response
func (o *BackupsScheduleBackupDefault) Code() int {
	return o._statusCode
}

func (o *BackupsScheduleBackupDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/backup/Backups/Schedule][%d] Backups_ScheduleBackup default  %+v", o._statusCode, o.Payload)
}

func (o *BackupsScheduleBackupDefault) GetPayload() *BackupsScheduleBackupDefaultBody {
	return o.Payload
}

func (o *BackupsScheduleBackupDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BackupsScheduleBackupDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*BackupsScheduleBackupBody backups schedule backup body
swagger:model BackupsScheduleBackupBody
*/
type BackupsScheduleBackupBody struct {

	// Service identifier where backup should be performed.
	ServiceID string `json:"service_id,omitempty"`

	// Machine-readable location ID.
	LocationID string `json:"location_id,omitempty"`

	// How often backup should be run in cron format.
	CronExpression string `json:"cron_expression,omitempty"`

	// First backup wouldn't happen before this time.
	// Format: date-time
	StartTime strfmt.DateTime `json:"start_time,omitempty"`

	// Name of backup.
	Name string `json:"name,omitempty"`

	// Human-readable description.
	Description string `json:"description,omitempty"`

	// Delay between each retry. Should have a suffix in JSON: 1s, 1m, 1h.
	RetryInterval string `json:"retry_interval,omitempty"`

	// How many times to retry a failed backup before giving up.
	Retries int64 `json:"retries,omitempty"`

	// If scheduling is enabled.
	Enabled bool `json:"enabled,omitempty"`

	// How many artifacts keep. 0 - unlimited.
	Retention int64 `json:"retention,omitempty"`

	// BackupMode specifies backup mode.
	// Enum: [BACKUP_MODE_INVALID SNAPSHOT INCREMENTAL PITR]
	Mode *string `json:"mode,omitempty"`
}

// Validate validates this backups schedule backup body
func (o *BackupsScheduleBackupBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStartTime(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateMode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BackupsScheduleBackupBody) validateStartTime(formats strfmt.Registry) error {

	if swag.IsZero(o.StartTime) { // not required
		return nil
	}

	if err := validate.FormatOf("body"+"."+"start_time", "body", "date-time", o.StartTime.String(), formats); err != nil {
		return err
	}

	return nil
}

var backupsScheduleBackupBodyTypeModePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BACKUP_MODE_INVALID","SNAPSHOT","INCREMENTAL","PITR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		backupsScheduleBackupBodyTypeModePropEnum = append(backupsScheduleBackupBodyTypeModePropEnum, v)
	}
}

const (

	// BackupsScheduleBackupBodyModeBACKUPMODEINVALID captures enum value "BACKUP_MODE_INVALID"
	BackupsScheduleBackupBodyModeBACKUPMODEINVALID string = "BACKUP_MODE_INVALID"

	// BackupsScheduleBackupBodyModeSNAPSHOT captures enum value "SNAPSHOT"
	BackupsScheduleBackupBodyModeSNAPSHOT string = "SNAPSHOT"

	// BackupsScheduleBackupBodyModeINCREMENTAL captures enum value "INCREMENTAL"
	BackupsScheduleBackupBodyModeINCREMENTAL string = "INCREMENTAL"

	// BackupsScheduleBackupBodyModePITR captures enum value "PITR"
	BackupsScheduleBackupBodyModePITR string = "PITR"
)

// prop value enum
func (o *BackupsScheduleBackupBody) validateModeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, backupsScheduleBackupBodyTypeModePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *BackupsScheduleBackupBody) validateMode(formats strfmt.Registry) error {

	if swag.IsZero(o.Mode) { // not required
		return nil
	}

	// value enum
	if err := o.validateModeEnum("body"+"."+"mode", "body", *o.Mode); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *BackupsScheduleBackupBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupsScheduleBackupBody) UnmarshalBinary(b []byte) error {
	var res BackupsScheduleBackupBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*BackupsScheduleBackupDefaultBody backups schedule backup default body
swagger:model BackupsScheduleBackupDefaultBody
*/
type BackupsScheduleBackupDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this backups schedule backup default body
func (o *BackupsScheduleBackupDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BackupsScheduleBackupDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Backups_ScheduleBackup default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *BackupsScheduleBackupDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupsScheduleBackupDefaultBody) UnmarshalBinary(b []byte) error {
	var res BackupsScheduleBackupDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*BackupsScheduleBackupOKBody backups schedule backup OK body
swagger:model BackupsScheduleBackupOKBody
*/
type BackupsScheduleBackupOKBody struct {

	// scheduled backup id
	ScheduledBackupID string `json:"scheduled_backup_id,omitempty"`
}

// Validate validates this backups schedule backup OK body
func (o *BackupsScheduleBackupOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BackupsScheduleBackupOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BackupsScheduleBackupOKBody) UnmarshalBinary(b []byte) error {
	var res BackupsScheduleBackupOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
