// Code generated by go-swagger; DO NOT EDIT.

package actions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// CancelActionReader is a Reader for the CancelAction structure.
type CancelActionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CancelActionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCancelActionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewCancelActionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCancelActionOK creates a CancelActionOK with default headers values
func NewCancelActionOK() *CancelActionOK {
	return &CancelActionOK{}
}

/*CancelActionOK handles this case with default header values.

A successful response.
*/
type CancelActionOK struct {
	Payload interface{}
}

func (o *CancelActionOK) Error() string {
	return fmt.Sprintf("[POST /v0/management/Actions/Cancel][%d] cancelActionOk  %+v", 200, o.Payload)
}

func (o *CancelActionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelActionDefault creates a CancelActionDefault with default headers values
func NewCancelActionDefault(code int) *CancelActionDefault {
	return &CancelActionDefault{
		_statusCode: code,
	}
}

/*CancelActionDefault handles this case with default header values.

An error response.
*/
type CancelActionDefault struct {
	_statusCode int

	Payload *CancelActionDefaultBody
}

// Code gets the status code for the cancel action default response
func (o *CancelActionDefault) Code() int {
	return o._statusCode
}

func (o *CancelActionDefault) Error() string {
	return fmt.Sprintf("[POST /v0/management/Actions/Cancel][%d] CancelAction default  %+v", o._statusCode, o.Payload)
}

func (o *CancelActionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CancelActionDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CancelActionBody cancel action body
swagger:model CancelActionBody
*/
type CancelActionBody struct {

	// Unique Action ID. Required.
	ActionID string `json:"action_id,omitempty"`
}

// Validate validates this cancel action body
func (o *CancelActionBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CancelActionBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CancelActionBody) UnmarshalBinary(b []byte) error {
	var res CancelActionBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CancelActionDefaultBody ErrorResponse is a message returned on HTTP error.
swagger:model CancelActionDefaultBody
*/
type CancelActionDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this cancel action default body
func (o *CancelActionDefaultBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *CancelActionDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CancelActionDefaultBody) UnmarshalBinary(b []byte) error {
	var res CancelActionDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
