// Code generated by go-swagger; DO NOT EDIT.

package actions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// RunActionReader is a Reader for the RunAction structure.
type RunActionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RunActionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewRunActionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewRunActionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewRunActionOK creates a RunActionOK with default headers values
func NewRunActionOK() *RunActionOK {
	return &RunActionOK{}
}

/*RunActionOK handles this case with default header values.

A successful response.
*/
type RunActionOK struct {
	Payload *RunActionOKBody
}

func (o *RunActionOK) Error() string {
	return fmt.Sprintf("[POST /v0/management/Actions/RunAction][%d] runActionOk  %+v", 200, o.Payload)
}

func (o *RunActionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RunActionOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunActionDefault creates a RunActionDefault with default headers values
func NewRunActionDefault(code int) *RunActionDefault {
	return &RunActionDefault{
		_statusCode: code,
	}
}

/*RunActionDefault handles this case with default header values.

An error response.
*/
type RunActionDefault struct {
	_statusCode int

	Payload *RunActionDefaultBody
}

// Code gets the status code for the run action default response
func (o *RunActionDefault) Code() int {
	return o._statusCode
}

func (o *RunActionDefault) Error() string {
	return fmt.Sprintf("[POST /v0/management/Actions/RunAction][%d] RunAction default  %+v", o._statusCode, o.Payload)
}

func (o *RunActionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RunActionDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*RunActionBody RunActionRequest describes request to run an action.
swagger:model RunActionBody
*/
type RunActionBody struct {

	// ActionName defines allowed action names.
	// Enum: [ACTION_NAME_INVALID PT_SUMMARY PT_MYSQL_SUMMARY MYSQL_EXPLAIN]
	ActionName *string `json:"action_name,omitempty"`

	// action parameters.
	ActionParams []string `json:"action_params"`

	// Node ID for which action is running.
	NodeID string `json:"node_id,omitempty"`

	// PMM agent instance identifier.
	PMMAgentID string `json:"pmm_agent_id,omitempty"`

	// Service ID for which action is running.
	ServiceID string `json:"service_id,omitempty"`
}

// Validate validates this run action body
func (o *RunActionBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateActionName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var runActionBodyTypeActionNamePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["ACTION_NAME_INVALID","PT_SUMMARY","PT_MYSQL_SUMMARY","MYSQL_EXPLAIN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		runActionBodyTypeActionNamePropEnum = append(runActionBodyTypeActionNamePropEnum, v)
	}
}

const (

	// RunActionBodyActionNameACTIONNAMEINVALID captures enum value "ACTION_NAME_INVALID"
	RunActionBodyActionNameACTIONNAMEINVALID string = "ACTION_NAME_INVALID"

	// RunActionBodyActionNamePTSUMMARY captures enum value "PT_SUMMARY"
	RunActionBodyActionNamePTSUMMARY string = "PT_SUMMARY"

	// RunActionBodyActionNamePTMYSQLSUMMARY captures enum value "PT_MYSQL_SUMMARY"
	RunActionBodyActionNamePTMYSQLSUMMARY string = "PT_MYSQL_SUMMARY"

	// RunActionBodyActionNameMYSQLEXPLAIN captures enum value "MYSQL_EXPLAIN"
	RunActionBodyActionNameMYSQLEXPLAIN string = "MYSQL_EXPLAIN"
)

// prop value enum
func (o *RunActionBody) validateActionNameEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, runActionBodyTypeActionNamePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *RunActionBody) validateActionName(formats strfmt.Registry) error {

	if swag.IsZero(o.ActionName) { // not required
		return nil
	}

	// value enum
	if err := o.validateActionNameEnum("body"+"."+"action_name", "body", *o.ActionName); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RunActionBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RunActionBody) UnmarshalBinary(b []byte) error {
	var res RunActionBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RunActionDefaultBody ErrorResponse is a message returned on HTTP error.
swagger:model RunActionDefaultBody
*/
type RunActionDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this run action default body
func (o *RunActionDefaultBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RunActionDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RunActionDefaultBody) UnmarshalBinary(b []byte) error {
	var res RunActionDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RunActionOKBody RunActionResponse describes response while running an action.
swagger:model RunActionOKBody
*/
type RunActionOKBody struct {

	// Action ID returned by pmm-agent.
	ActionID string `json:"action_id,omitempty"`

	// PMM agent instance identifier.
	PMMAgentID string `json:"pmm_agent_id,omitempty"`
}

// Validate validates this run action OK body
func (o *RunActionOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RunActionOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RunActionOKBody) UnmarshalBinary(b []byte) error {
	var res RunActionOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
