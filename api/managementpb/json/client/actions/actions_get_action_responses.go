// Code generated by go-swagger; DO NOT EDIT.

package actions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ActionsGetActionReader is a Reader for the ActionsGetAction structure.
type ActionsGetActionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ActionsGetActionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewActionsGetActionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewActionsGetActionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewActionsGetActionOK creates a ActionsGetActionOK with default headers values
func NewActionsGetActionOK() *ActionsGetActionOK {
	return &ActionsGetActionOK{}
}

/*ActionsGetActionOK handles this case with default header values.

A successful response.
*/
type ActionsGetActionOK struct {
	Payload *ActionsGetActionOKBody
}

func (o *ActionsGetActionOK) Error() string {
	return fmt.Sprintf("[POST /v1/management/Actions/Get][%d] actionsGetActionOk  %+v", 200, o.Payload)
}

func (o *ActionsGetActionOK) GetPayload() *ActionsGetActionOKBody {
	return o.Payload
}

func (o *ActionsGetActionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ActionsGetActionOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewActionsGetActionDefault creates a ActionsGetActionDefault with default headers values
func NewActionsGetActionDefault(code int) *ActionsGetActionDefault {
	return &ActionsGetActionDefault{
		_statusCode: code,
	}
}

/*ActionsGetActionDefault handles this case with default header values.

An unexpected error response.
*/
type ActionsGetActionDefault struct {
	_statusCode int

	Payload *ActionsGetActionDefaultBody
}

// Code gets the status code for the actions get action default response
func (o *ActionsGetActionDefault) Code() int {
	return o._statusCode
}

func (o *ActionsGetActionDefault) Error() string {
	return fmt.Sprintf("[POST /v1/management/Actions/Get][%d] Actions_GetAction default  %+v", o._statusCode, o.Payload)
}

func (o *ActionsGetActionDefault) GetPayload() *ActionsGetActionDefaultBody {
	return o.Payload
}

func (o *ActionsGetActionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ActionsGetActionDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ActionsGetActionBody actions get action body
swagger:model ActionsGetActionBody
*/
type ActionsGetActionBody struct {

	// Unique Action ID.
	ActionID string `json:"action_id,omitempty"`
}

// Validate validates this actions get action body
func (o *ActionsGetActionBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ActionsGetActionBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ActionsGetActionBody) UnmarshalBinary(b []byte) error {
	var res ActionsGetActionBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ActionsGetActionDefaultBody actions get action default body
swagger:model ActionsGetActionDefaultBody
*/
type ActionsGetActionDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this actions get action default body
func (o *ActionsGetActionDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ActionsGetActionDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Actions_GetAction default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ActionsGetActionDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ActionsGetActionDefaultBody) UnmarshalBinary(b []byte) error {
	var res ActionsGetActionDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ActionsGetActionOKBody actions get action OK body
swagger:model ActionsGetActionOKBody
*/
type ActionsGetActionOKBody struct {

	// Unique Action ID.
	ActionID string `json:"action_id,omitempty"`

	// pmm-agent ID where this Action is running / was run.
	PMMAgentID string `json:"pmm_agent_id,omitempty"`

	// Current Action output; may be partial if Action is still running.
	Output string `json:"output,omitempty"`

	// True if Action is finished.
	Done bool `json:"done,omitempty"`

	// Error message if Action failed.
	Error string `json:"error,omitempty"`
}

// Validate validates this actions get action OK body
func (o *ActionsGetActionOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ActionsGetActionOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ActionsGetActionOKBody) UnmarshalBinary(b []byte) error {
	var res ActionsGetActionOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
