{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "PMM Management API",
    "version": "v1"
  },
  "paths": {
    "/v1/management/Actions/Cancel": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "CancelAction stops an Action.",
        "operationId": "CancelAction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "action_id": {
                  "description": "Unique Action ID. Required.",
                  "type": "string",
                  "x-order": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Actions/Get": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "GetAction gets an result of given Action.",
        "operationId": "GetAction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "action_id": {
                  "description": "Unique Action ID.",
                  "type": "string",
                  "x-order": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "action_id": {
                  "description": "Unique Action ID.",
                  "type": "string",
                  "x-order": 0
                },
                "done": {
                  "description": "True if Action is finished.",
                  "type": "boolean",
                  "x-order": 3
                },
                "error": {
                  "description": "Error message if Action failed.",
                  "type": "string",
                  "x-order": 4
                },
                "output": {
                  "description": "Current Action output; may be partial if Action is still running.",
                  "type": "string",
                  "x-order": 2
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where this Action is running / was run.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Actions/StartMongoDBExplain": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "StartMongoDBExplainAction starts MongoDB EXPLAIN Action.",
        "operationId": "StartMongoDBExplainAction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to run this Action.",
                  "type": "string",
                  "x-order": 0
                },
                "query": {
                  "description": "Query. Required.",
                  "type": "string",
                  "x-order": 2
                },
                "service_id": {
                  "description": "Service ID for this Action. Required.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "action_id": {
                  "description": "Unique Action ID.",
                  "type": "string",
                  "x-order": 0
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to this Action was started.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Actions/StartMySQLExplain": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "StartMySQLExplainAction starts MySQL EXPLAIN Action with traditional output.",
        "operationId": "StartMySQLExplainAction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "database": {
                  "description": "Database name. Required if it can't be deduced from the query.",
                  "type": "string",
                  "x-order": 3
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to run this Action.",
                  "type": "string",
                  "x-order": 0
                },
                "query": {
                  "description": "SQL query. Required.",
                  "type": "string",
                  "x-order": 2
                },
                "service_id": {
                  "description": "Service ID for this Action. Required.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "action_id": {
                  "description": "Unique Action ID.",
                  "type": "string",
                  "x-order": 0
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to this Action was started.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Actions/StartMySQLExplainJSON": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "StartMySQLExplainJSONAction starts MySQL EXPLAIN Action with JSON output.",
        "operationId": "StartMySQLExplainJSONAction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "database": {
                  "description": "Database name. Required if it can't be deduced from the query.",
                  "type": "string",
                  "x-order": 3
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to run this Action.",
                  "type": "string",
                  "x-order": 0
                },
                "query": {
                  "description": "SQL query. Required.",
                  "type": "string",
                  "x-order": 2
                },
                "service_id": {
                  "description": "Service ID for this Action. Required.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "action_id": {
                  "description": "Unique Action ID.",
                  "type": "string",
                  "x-order": 0
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to this Action was started.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Actions/StartMySQLExplainTraditionalJSON": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "StartMySQLExplainTraditionalJSONAction starts MySQL EXPLAIN Action with traditional JSON output.",
        "operationId": "StartMySQLExplainTraditionalJSONAction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "database": {
                  "description": "Database name. Required if it can't be deduced from the query.",
                  "type": "string",
                  "x-order": 3
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to run this Action.",
                  "type": "string",
                  "x-order": 0
                },
                "query": {
                  "description": "SQL query. Required.",
                  "type": "string",
                  "x-order": 2
                },
                "service_id": {
                  "description": "Service ID for this Action. Required.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "action_id": {
                  "description": "Unique Action ID.",
                  "type": "string",
                  "x-order": 0
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to this Action was started.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Actions/StartMySQLShowCreateTable": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "StartMySQLShowCreateTableAction starts MySQL SHOW CREATE TABLE Action.",
        "operationId": "StartMySQLShowCreateTableAction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "database": {
                  "description": "Database name. Required if not given in the table_name field.",
                  "type": "string",
                  "x-order": 3
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to run this Action.",
                  "type": "string",
                  "x-order": 0
                },
                "service_id": {
                  "description": "Service ID for this Action. Required.",
                  "type": "string",
                  "x-order": 1
                },
                "table_name": {
                  "description": "Table name. Required. May additionally contain a database name.",
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "action_id": {
                  "description": "Unique Action ID.",
                  "type": "string",
                  "x-order": 0
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to this Action was started.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Actions/StartMySQLShowIndex": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "StartMySQLShowIndexAction starts MySQL SHOW INDEX Action.",
        "operationId": "StartMySQLShowIndexAction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "database": {
                  "description": "Database name. Required if not given in the table_name field.",
                  "type": "string",
                  "x-order": 3
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to run this Action.",
                  "type": "string",
                  "x-order": 0
                },
                "service_id": {
                  "description": "Service ID for this Action. Required.",
                  "type": "string",
                  "x-order": 1
                },
                "table_name": {
                  "description": "Table name. Required. May additionally contain a database name.",
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "action_id": {
                  "description": "Unique Action ID.",
                  "type": "string",
                  "x-order": 0
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to this Action was started.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Actions/StartMySQLShowTableStatus": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "StartMySQLShowTableStatusAction starts MySQL SHOW TABLE STATUS Action.",
        "operationId": "StartMySQLShowTableStatusAction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "database": {
                  "description": "Database name. Required if not given in the table_name field.",
                  "type": "string",
                  "x-order": 3
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to run this Action.",
                  "type": "string",
                  "x-order": 0
                },
                "service_id": {
                  "description": "Service ID for this Action. Required.",
                  "type": "string",
                  "x-order": 1
                },
                "table_name": {
                  "description": "Table name. Required. May additionally contain a database name.",
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "action_id": {
                  "description": "Unique Action ID.",
                  "type": "string",
                  "x-order": 0
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to this Action was started.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Actions/StartPTMongoDBSummary": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "StartPTMongoDBSummaryAction starts pt-mongodb-summary Action.",
        "operationId": "StartPTMongoDBSummaryAction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "title": "Message to prepare pt-mongodb-summary data",
              "properties": {
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to run this Action.",
                  "type": "string",
                  "x-order": 0
                },
                "service_id": {
                  "description": "Service ID for this Action.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "title": "Message to retrieve the prepared pt-mongodb-summary data",
              "properties": {
                "action_id": {
                  "description": "Unique Action ID.",
                  "type": "string",
                  "x-order": 0
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to this Action was started.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Actions/StartPTSummary": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "StartPTSummaryAction starts pt-summary Action.",
        "operationId": "StartPTSummaryAction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "node_id": {
                  "description": "Node ID for this Action.",
                  "type": "string",
                  "x-order": 1
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to run this Action.",
                  "type": "string",
                  "x-order": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "action_id": {
                  "description": "Unique Action ID.",
                  "type": "string",
                  "x-order": 0
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to this Action was started.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Actions/StartPostgreSQLShowCreateTable": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "StartPostgreSQLShowCreateTableAction starts PostgreSQL SHOW CREATE TABLE Action.",
        "operationId": "StartPostgreSQLShowCreateTableAction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "database": {
                  "description": "Database name. Required if not given in the table_name field.",
                  "type": "string",
                  "x-order": 3
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to run this Action.",
                  "type": "string",
                  "x-order": 0
                },
                "service_id": {
                  "description": "Service ID for this Action. Required.",
                  "type": "string",
                  "x-order": 1
                },
                "table_name": {
                  "description": "Table name. Required. May additionally contain a database name.",
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "action_id": {
                  "description": "Unique Action ID.",
                  "type": "string",
                  "x-order": 0
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to this Action was started.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Actions/StartPostgreSQLShowIndex": {
      "post": {
        "tags": [
          "Actions"
        ],
        "summary": "StartPostgreSQLShowIndexAction starts PostgreSQL SHOW INDEX Action.",
        "operationId": "StartPostgreSQLShowIndexAction",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "database": {
                  "description": "Database name. Required if not given in the table_name field.",
                  "type": "string",
                  "x-order": 3
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to run this Action.",
                  "type": "string",
                  "x-order": 0
                },
                "service_id": {
                  "description": "Service ID for this Action. Required.",
                  "type": "string",
                  "x-order": 1
                },
                "table_name": {
                  "description": "Table name. Required. May additionally contain a database name.",
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "action_id": {
                  "description": "Unique Action ID.",
                  "type": "string",
                  "x-order": 0
                },
                "pmm_agent_id": {
                  "description": "pmm-agent ID where to this Action was started.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Annotations/Add": {
      "post": {
        "tags": [
          "Annotation"
        ],
        "summary": "AddAnnotation adds annotation.",
        "operationId": "AddAnnotation",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "AddAnnotationRequest is a params to add new annotation.",
              "type": "object",
              "properties": {
                "node_name": {
                  "description": "Used for annotate node.",
                  "type": "string",
                  "x-order": 2
                },
                "service_names": {
                  "description": "Used for annotate services.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-order": 3
                },
                "tags": {
                  "description": "Tags are used to filter annotations.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-order": 1
                },
                "text": {
                  "description": "An annotation description. Required.",
                  "type": "string",
                  "x-order": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/External/Add": {
      "post": {
        "tags": [
          "External"
        ],
        "summary": "AddExternal adds external service and adds external exporter.\nIt automatically adds a service to inventory, which is running on provided \"node_id\",\nthen adds an \"external exporter\" agent to inventory, which is running on provided \"runs_on_node_id\".",
        "operationId": "AddExternal",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "add_node": {
                  "description": "AddNodeParams is a params to add new node to inventory while adding new service.",
                  "type": "object",
                  "properties": {
                    "az": {
                      "description": "Node availability zone.",
                      "type": "string",
                      "x-order": 8
                    },
                    "container_id": {
                      "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                      "type": "string",
                      "x-order": 4
                    },
                    "container_name": {
                      "description": "Container name.",
                      "type": "string",
                      "x-order": 5
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Node.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "distro": {
                      "description": "Linux distribution name and version.",
                      "type": "string",
                      "x-order": 3
                    },
                    "machine_id": {
                      "description": "Linux machine-id.",
                      "type": "string",
                      "x-order": 2
                    },
                    "node_model": {
                      "description": "Node model.",
                      "type": "string",
                      "x-order": 6
                    },
                    "node_name": {
                      "description": "Unique across all Nodes user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "node_type": {
                      "description": "NodeType describes supported Node types.",
                      "type": "string",
                      "default": "NODE_TYPE_INVALID",
                      "enum": [
                        "NODE_TYPE_INVALID",
                        "GENERIC_NODE",
                        "CONTAINER_NODE",
                        "REMOTE_NODE",
                        "REMOTE_RDS_NODE"
                      ],
                      "x-order": 0
                    },
                    "region": {
                      "description": "Node region.",
                      "type": "string",
                      "x-order": 7
                    }
                  },
                  "x-order": 2
                },
                "address": {
                  "description": "Node and Exporter access address (DNS name or IP).\naddress always should be passed with add_node.",
                  "type": "string",
                  "x-order": 3
                },
                "cluster": {
                  "description": "Cluster name.",
                  "type": "string",
                  "x-order": 12
                },
                "custom_labels": {
                  "description": "Custom user-assigned labels for Service.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-order": 14
                },
                "environment": {
                  "description": "Environment name.",
                  "type": "string",
                  "x-order": 11
                },
                "group": {
                  "description": "Group name of external service.",
                  "type": "string",
                  "x-order": 15
                },
                "listen_port": {
                  "description": "Listen port for scraping metrics.",
                  "type": "integer",
                  "format": "int64",
                  "x-order": 9
                },
                "metrics_mode": {
                  "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.",
                  "type": "string",
                  "default": "AUTO",
                  "enum": [
                    "AUTO",
                    "PULL",
                    "PUSH"
                  ],
                  "x-order": 16
                },
                "metrics_path": {
                  "description": "Path under which metrics are exposed, used to generate URI.",
                  "type": "string",
                  "x-order": 8
                },
                "node_id": {
                  "description": "Node identifier on which an external service is been running.\nnode_id always should be passed with runs_on_node_id.",
                  "type": "string",
                  "x-order": 10
                },
                "node_name": {
                  "description": "Node name on which a service and node is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                  "type": "string",
                  "x-order": 1
                },
                "password": {
                  "description": "HTTP basic auth password for collecting metrics.",
                  "type": "string",
                  "x-order": 6
                },
                "replication_set": {
                  "description": "Replication set name.",
                  "type": "string",
                  "x-order": 13
                },
                "runs_on_node_id": {
                  "description": "Node identifier on which an external exporter is been running.\nruns_on_node_id always should be passed with node_id.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                  "type": "string",
                  "x-order": 0
                },
                "scheme": {
                  "description": "Scheme to generate URI to exporter metrics endpoints.",
                  "type": "string",
                  "x-order": 7
                },
                "service_name": {
                  "description": "Unique across all Services user-defined name. Required.",
                  "type": "string",
                  "x-order": 4
                },
                "username": {
                  "description": "HTTP basic auth username for collecting metrics.",
                  "type": "string",
                  "x-order": 5
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "external_exporter": {
                  "description": "ExternalExporter runs on any Node type, including Remote Node.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 7
                    },
                    "disabled": {
                      "description": "If disabled, metrics from this exporter will not be collected.",
                      "type": "boolean",
                      "x-order": 2
                    },
                    "listen_port": {
                      "description": "Listen port for scraping metrics.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 8
                    },
                    "metrics_path": {
                      "description": "Path under which metrics are exposed, used to generate URI.",
                      "type": "string",
                      "x-order": 6
                    },
                    "push_metrics_enabled": {
                      "description": "True if exporter uses push metrics mode.",
                      "type": "boolean",
                      "x-order": 9
                    },
                    "runs_on_node_id": {
                      "description": "Node identifier where this instance runs.",
                      "type": "string",
                      "x-order": 1
                    },
                    "scheme": {
                      "description": "Scheme to generate URI to exporter metrics endpoints.",
                      "type": "string",
                      "x-order": 5
                    },
                    "service_id": {
                      "description": "Service identifier.",
                      "type": "string",
                      "x-order": 3
                    },
                    "username": {
                      "description": "HTTP basic auth username for collecting metrics.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 1
                },
                "service": {
                  "description": "ExternalService represents a generic External service instance.",
                  "type": "object",
                  "properties": {
                    "cluster": {
                      "description": "Cluster name.",
                      "type": "string",
                      "x-order": 4
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 6
                    },
                    "environment": {
                      "description": "Environment name.",
                      "type": "string",
                      "x-order": 3
                    },
                    "group": {
                      "description": "Group name of external service.",
                      "type": "string",
                      "x-order": 7
                    },
                    "node_id": {
                      "description": "Node identifier where this service instance runs.",
                      "type": "string",
                      "x-order": 2
                    },
                    "replication_set": {
                      "description": "Replication set name.",
                      "type": "string",
                      "x-order": 5
                    },
                    "service_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "service_name": {
                      "description": "Unique across all Services user-defined name.",
                      "type": "string",
                      "x-order": 1
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/HAProxy/Add": {
      "post": {
        "tags": [
          "HAProxy"
        ],
        "summary": "AddHAProxy adds HAProxy service and adds external exporter.\nIt automatically adds a service to inventory, which is running on provided \"node_id\",\nthen adds an \"external exporter\" agent to inventory.",
        "operationId": "AddHAProxy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "add_node": {
                  "description": "AddNodeParams is a params to add new node to inventory while adding new service.",
                  "type": "object",
                  "properties": {
                    "az": {
                      "description": "Node availability zone.",
                      "type": "string",
                      "x-order": 8
                    },
                    "container_id": {
                      "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                      "type": "string",
                      "x-order": 4
                    },
                    "container_name": {
                      "description": "Container name.",
                      "type": "string",
                      "x-order": 5
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Node.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "distro": {
                      "description": "Linux distribution name and version.",
                      "type": "string",
                      "x-order": 3
                    },
                    "machine_id": {
                      "description": "Linux machine-id.",
                      "type": "string",
                      "x-order": 2
                    },
                    "node_model": {
                      "description": "Node model.",
                      "type": "string",
                      "x-order": 6
                    },
                    "node_name": {
                      "description": "Unique across all Nodes user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "node_type": {
                      "description": "NodeType describes supported Node types.",
                      "type": "string",
                      "default": "NODE_TYPE_INVALID",
                      "enum": [
                        "NODE_TYPE_INVALID",
                        "GENERIC_NODE",
                        "CONTAINER_NODE",
                        "REMOTE_NODE",
                        "REMOTE_RDS_NODE"
                      ],
                      "x-order": 0
                    },
                    "region": {
                      "description": "Node region.",
                      "type": "string",
                      "x-order": 7
                    }
                  },
                  "x-order": 2
                },
                "address": {
                  "description": "Node and Exporter access address (DNS name or IP).\naddress always should be passed with add_node.",
                  "type": "string",
                  "x-order": 3
                },
                "cluster": {
                  "description": "Cluster name.",
                  "type": "string",
                  "x-order": 11
                },
                "custom_labels": {
                  "description": "Custom user-assigned labels for Service.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-order": 13
                },
                "environment": {
                  "description": "Environment name.",
                  "type": "string",
                  "x-order": 10
                },
                "listen_port": {
                  "description": "Listen port for scraping metrics.",
                  "type": "integer",
                  "format": "int64",
                  "x-order": 9
                },
                "metrics_mode": {
                  "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.",
                  "type": "string",
                  "default": "AUTO",
                  "enum": [
                    "AUTO",
                    "PULL",
                    "PUSH"
                  ],
                  "x-order": 14
                },
                "metrics_path": {
                  "description": "Path under which metrics are exposed, used to generate URI.",
                  "type": "string",
                  "x-order": 8
                },
                "node_id": {
                  "description": "Node identifier on which an external exporter is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                  "type": "string",
                  "x-order": 0
                },
                "node_name": {
                  "description": "Node name on which a service and node is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                  "type": "string",
                  "x-order": 1
                },
                "password": {
                  "description": "HTTP basic auth password for collecting metrics.",
                  "type": "string",
                  "x-order": 6
                },
                "replication_set": {
                  "description": "Replication set name.",
                  "type": "string",
                  "x-order": 12
                },
                "scheme": {
                  "description": "Scheme to generate URI to exporter metrics endpoints.",
                  "type": "string",
                  "x-order": 7
                },
                "service_name": {
                  "description": "Unique across all Services user-defined name. Required.",
                  "type": "string",
                  "x-order": 4
                },
                "username": {
                  "description": "HTTP basic auth username for collecting metrics.",
                  "type": "string",
                  "x-order": 5
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "external_exporter": {
                  "description": "ExternalExporter runs on any Node type, including Remote Node.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 7
                    },
                    "disabled": {
                      "description": "If disabled, metrics from this exporter will not be collected.",
                      "type": "boolean",
                      "x-order": 2
                    },
                    "listen_port": {
                      "description": "Listen port for scraping metrics.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 8
                    },
                    "metrics_path": {
                      "description": "Path under which metrics are exposed, used to generate URI.",
                      "type": "string",
                      "x-order": 6
                    },
                    "push_metrics_enabled": {
                      "description": "True if exporter uses push metrics mode.",
                      "type": "boolean",
                      "x-order": 9
                    },
                    "runs_on_node_id": {
                      "description": "Node identifier where this instance runs.",
                      "type": "string",
                      "x-order": 1
                    },
                    "scheme": {
                      "description": "Scheme to generate URI to exporter metrics endpoints.",
                      "type": "string",
                      "x-order": 5
                    },
                    "service_id": {
                      "description": "Service identifier.",
                      "type": "string",
                      "x-order": 3
                    },
                    "username": {
                      "description": "HTTP basic auth username for collecting metrics.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 1
                },
                "service": {
                  "description": "HAProxyService represents a generic HAProxy service instance.",
                  "type": "object",
                  "properties": {
                    "cluster": {
                      "description": "Cluster name.",
                      "type": "string",
                      "x-order": 4
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 6
                    },
                    "environment": {
                      "description": "Environment name.",
                      "type": "string",
                      "x-order": 3
                    },
                    "node_id": {
                      "description": "Node identifier where this service instance runs.",
                      "type": "string",
                      "x-order": 2
                    },
                    "replication_set": {
                      "description": "Replication set name.",
                      "type": "string",
                      "x-order": 5
                    },
                    "service_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "service_name": {
                      "description": "Unique across all Services user-defined name.",
                      "type": "string",
                      "x-order": 1
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/MongoDB/Add": {
      "post": {
        "tags": [
          "MongoDB"
        ],
        "summary": "AddMongoDB adds MongoDB Service and starts several Agents.\nIt automatically adds a service to inventory, which is running on provided \"node_id\",\nthen adds \"mongodb_exporter\", and \"qan_mongodb_profiler\" agents\nwith provided \"pmm_agent_id\" and other parameters.",
        "operationId": "AddMongoDB",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "add_node": {
                  "description": "AddNodeParams is a params to add new node to inventory while adding new service.",
                  "type": "object",
                  "properties": {
                    "az": {
                      "description": "Node availability zone.",
                      "type": "string",
                      "x-order": 8
                    },
                    "container_id": {
                      "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                      "type": "string",
                      "x-order": 4
                    },
                    "container_name": {
                      "description": "Container name.",
                      "type": "string",
                      "x-order": 5
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Node.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "distro": {
                      "description": "Linux distribution name and version.",
                      "type": "string",
                      "x-order": 3
                    },
                    "machine_id": {
                      "description": "Linux machine-id.",
                      "type": "string",
                      "x-order": 2
                    },
                    "node_model": {
                      "description": "Node model.",
                      "type": "string",
                      "x-order": 6
                    },
                    "node_name": {
                      "description": "Unique across all Nodes user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "node_type": {
                      "description": "NodeType describes supported Node types.",
                      "type": "string",
                      "default": "NODE_TYPE_INVALID",
                      "enum": [
                        "NODE_TYPE_INVALID",
                        "GENERIC_NODE",
                        "CONTAINER_NODE",
                        "REMOTE_NODE",
                        "REMOTE_RDS_NODE"
                      ],
                      "x-order": 0
                    },
                    "region": {
                      "description": "Node region.",
                      "type": "string",
                      "x-order": 7
                    }
                  },
                  "x-order": 2
                },
                "address": {
                  "description": "Node and Service access address (DNS name or IP).\nAddress (and port) or socket is required.",
                  "type": "string",
                  "x-order": 4
                },
                "cluster": {
                  "description": "Cluster name.",
                  "type": "string",
                  "x-order": 9
                },
                "custom_labels": {
                  "description": "Custom user-assigned labels for Service.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-order": 14
                },
                "disable_collectors": {
                  "description": "List of collector names to disable in this exporter.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-order": 22
                },
                "environment": {
                  "description": "Environment name.",
                  "type": "string",
                  "x-order": 8
                },
                "metrics_mode": {
                  "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.",
                  "type": "string",
                  "default": "AUTO",
                  "enum": [
                    "AUTO",
                    "PULL",
                    "PUSH"
                  ],
                  "x-order": 21
                },
                "node_id": {
                  "description": "Node identifier on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                  "type": "string",
                  "x-order": 0
                },
                "node_name": {
                  "description": "Node name on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                  "type": "string",
                  "x-order": 1
                },
                "password": {
                  "description": "MongoDB password for exporter and QAN agent access.",
                  "type": "string",
                  "x-order": 12
                },
                "pmm_agent_id": {
                  "description": "The \"pmm-agent\" identifier which should run agents. Required.",
                  "type": "string",
                  "x-order": 7
                },
                "port": {
                  "description": "Service Access port.\nPort is required when the address present.",
                  "type": "integer",
                  "format": "int64",
                  "x-order": 5
                },
                "qan_mongodb_profiler": {
                  "description": "If true, adds qan-mongodb-profiler-agent for provided service.",
                  "type": "boolean",
                  "x-order": 13
                },
                "replication_set": {
                  "description": "Replication set name.",
                  "type": "string",
                  "x-order": 10
                },
                "service_name": {
                  "description": "Unique across all Services user-defined name. Required.",
                  "type": "string",
                  "x-order": 3
                },
                "skip_connection_check": {
                  "description": "Skip connection check.",
                  "type": "boolean",
                  "x-order": 15
                },
                "socket": {
                  "description": "Service Access socket.\nAddress (and port) or socket is required.",
                  "type": "string",
                  "x-order": 6
                },
                "tls": {
                  "description": "Use TLS for database connections.",
                  "type": "boolean",
                  "x-order": 16
                },
                "tls_ca": {
                  "description": "Certificate Authority certificate chain.",
                  "type": "string",
                  "x-order": 20
                },
                "tls_certificate_key": {
                  "description": "Client certificate and key.",
                  "type": "string",
                  "x-order": 18
                },
                "tls_certificate_key_file_password": {
                  "description": "Password for decrypting tls_certificate_key.",
                  "type": "string",
                  "x-order": 19
                },
                "tls_skip_verify": {
                  "description": "Skip TLS certificate and hostname validation.",
                  "type": "boolean",
                  "x-order": 17
                },
                "username": {
                  "description": "MongoDB username for exporter and QAN agent access.",
                  "type": "string",
                  "x-order": 11
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "mongodb_exporter": {
                  "description": "MongoDBExporter runs on Generic or Container Node and exposes MongoDB Service metrics.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 7
                    },
                    "disabled": {
                      "description": "Desired Agent status: enabled (false) or disabled (true).",
                      "type": "boolean",
                      "x-order": 2
                    },
                    "disabled_collectors": {
                      "description": "List of disabled collector names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "listen_port": {
                      "description": "Listen port for scraping metrics.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 11
                    },
                    "pmm_agent_id": {
                      "description": "The pmm-agent identifier which runs this instance.",
                      "type": "string",
                      "x-order": 1
                    },
                    "push_metrics_enabled": {
                      "description": "True if exporter uses push metrics mode.",
                      "type": "boolean",
                      "x-order": 8
                    },
                    "service_id": {
                      "description": "Service identifier.",
                      "type": "string",
                      "x-order": 3
                    },
                    "status": {
                      "description": "AgentStatus represents actual Agent status.\n\n - STARTING: Agent is starting.\n - RUNNING: Agent is running.\n - WAITING: Agent encountered error and will be restarted automatically soon.\n - STOPPING: Agent is stopping.\n - DONE: Agent finished.",
                      "type": "string",
                      "default": "AGENT_STATUS_INVALID",
                      "enum": [
                        "AGENT_STATUS_INVALID",
                        "STARTING",
                        "RUNNING",
                        "WAITING",
                        "STOPPING",
                        "DONE"
                      ],
                      "x-order": 10
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 5
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation.",
                      "type": "boolean",
                      "x-order": 6
                    },
                    "username": {
                      "description": "MongoDB username for scraping metrics.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 1
                },
                "qan_mongodb_profiler": {
                  "description": "QANMongoDBProfilerAgent runs within pmm-agent and sends MongoDB Query Analytics data to the PMM Server.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 7
                    },
                    "disabled": {
                      "description": "Desired Agent status: enabled (false) or disabled (true).",
                      "type": "boolean",
                      "x-order": 2
                    },
                    "pmm_agent_id": {
                      "description": "The pmm-agent identifier which runs this instance.",
                      "type": "string",
                      "x-order": 1
                    },
                    "service_id": {
                      "description": "Service identifier.",
                      "type": "string",
                      "x-order": 3
                    },
                    "status": {
                      "description": "AgentStatus represents actual Agent status.\n\n - STARTING: Agent is starting.\n - RUNNING: Agent is running.\n - WAITING: Agent encountered error and will be restarted automatically soon.\n - STOPPING: Agent is stopping.\n - DONE: Agent finished.",
                      "type": "string",
                      "default": "AGENT_STATUS_INVALID",
                      "enum": [
                        "AGENT_STATUS_INVALID",
                        "STARTING",
                        "RUNNING",
                        "WAITING",
                        "STOPPING",
                        "DONE"
                      ],
                      "x-order": 8
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 5
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation.",
                      "type": "boolean",
                      "x-order": 6
                    },
                    "username": {
                      "description": "MongoDB username for getting profiler data.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 2
                },
                "service": {
                  "description": "MongoDBService represents a generic MongoDB instance.",
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 3
                    },
                    "cluster": {
                      "description": "Cluster name.",
                      "type": "string",
                      "x-order": 7
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "environment": {
                      "description": "Environment name.",
                      "type": "string",
                      "x-order": 6
                    },
                    "node_id": {
                      "description": "Node identifier where this instance runs.",
                      "type": "string",
                      "x-order": 2
                    },
                    "port": {
                      "description": "Access port.\nPort is required when the address present.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 4
                    },
                    "replication_set": {
                      "description": "Replication set name.",
                      "type": "string",
                      "x-order": 8
                    },
                    "service_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "service_name": {
                      "description": "Unique across all Services user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "socket": {
                      "description": "Access unix socket.\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 5
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/MySQL/Add": {
      "post": {
        "tags": [
          "MySQL"
        ],
        "summary": "AddMySQL adds MySQL Service and starts several Agents.\nIt automatically adds a service to inventory, which is running on provided \"node_id\",\nthen adds \"mysqld_exporter\", and \"qan_mysql_perfschema\" agents\nwith provided \"pmm_agent_id\" and other parameters.",
        "operationId": "AddMySQL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "add_node": {
                  "description": "AddNodeParams is a params to add new node to inventory while adding new service.",
                  "type": "object",
                  "properties": {
                    "az": {
                      "description": "Node availability zone.",
                      "type": "string",
                      "x-order": 8
                    },
                    "container_id": {
                      "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                      "type": "string",
                      "x-order": 4
                    },
                    "container_name": {
                      "description": "Container name.",
                      "type": "string",
                      "x-order": 5
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Node.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "distro": {
                      "description": "Linux distribution name and version.",
                      "type": "string",
                      "x-order": 3
                    },
                    "machine_id": {
                      "description": "Linux machine-id.",
                      "type": "string",
                      "x-order": 2
                    },
                    "node_model": {
                      "description": "Node model.",
                      "type": "string",
                      "x-order": 6
                    },
                    "node_name": {
                      "description": "Unique across all Nodes user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "node_type": {
                      "description": "NodeType describes supported Node types.",
                      "type": "string",
                      "default": "NODE_TYPE_INVALID",
                      "enum": [
                        "NODE_TYPE_INVALID",
                        "GENERIC_NODE",
                        "CONTAINER_NODE",
                        "REMOTE_NODE",
                        "REMOTE_RDS_NODE"
                      ],
                      "x-order": 0
                    },
                    "region": {
                      "description": "Node region.",
                      "type": "string",
                      "x-order": 7
                    }
                  },
                  "x-order": 2
                },
                "address": {
                  "description": "Node and Service access address (DNS name or IP).\nAddress (and port) or socket is required.",
                  "type": "string",
                  "x-order": 4
                },
                "cluster": {
                  "description": "Cluster name.",
                  "type": "string",
                  "x-order": 9
                },
                "custom_labels": {
                  "description": "Custom user-assigned labels for Service.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-order": 15
                },
                "disable_collectors": {
                  "description": "List of collector names to disable in this exporter.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-order": 23
                },
                "disable_query_examples": {
                  "description": "Disable query examples.",
                  "type": "boolean",
                  "x-order": 17
                },
                "environment": {
                  "description": "Environment name.",
                  "type": "string",
                  "x-order": 8
                },
                "max_slowlog_file_size": {
                  "description": "If qan-mysql-slowlog-agent is added, slowlog file is rotated at this size if \u003e 0.\nIf zero, server's default value is used.\nUse negative value to disable rotation.",
                  "type": "string",
                  "format": "int64",
                  "x-order": 18
                },
                "metrics_mode": {
                  "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.",
                  "type": "string",
                  "default": "AUTO",
                  "enum": [
                    "AUTO",
                    "PULL",
                    "PUSH"
                  ],
                  "x-order": 22
                },
                "node_id": {
                  "description": "Node identifier on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                  "type": "string",
                  "x-order": 0
                },
                "node_name": {
                  "description": "Node name on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                  "type": "string",
                  "x-order": 1
                },
                "password": {
                  "description": "MySQL password for scraping metrics.",
                  "type": "string",
                  "x-order": 12
                },
                "pmm_agent_id": {
                  "description": "The \"pmm-agent\" identifier which should run agents. Required.",
                  "type": "string",
                  "x-order": 7
                },
                "port": {
                  "description": "Service Access port.\nPort is required when the address present.",
                  "type": "integer",
                  "format": "int64",
                  "x-order": 5
                },
                "qan_mysql_perfschema": {
                  "description": "If true, adds qan-mysql-perfschema-agent for provided service.",
                  "type": "boolean",
                  "x-order": 13
                },
                "qan_mysql_slowlog": {
                  "description": "If true, adds qan-mysql-slowlog-agent for provided service.",
                  "type": "boolean",
                  "x-order": 14
                },
                "replication_set": {
                  "description": "Replication set name.",
                  "type": "string",
                  "x-order": 10
                },
                "service_name": {
                  "description": "Unique across all Services user-defined name. Required.",
                  "type": "string",
                  "x-order": 3
                },
                "skip_connection_check": {
                  "description": "Skip connection check.",
                  "type": "boolean",
                  "x-order": 16
                },
                "socket": {
                  "description": "Service Access socket.\nAddress (and port) or socket is required.",
                  "type": "string",
                  "x-order": 6
                },
                "tablestats_group_table_limit": {
                  "description": "Tablestats group collectors will be disabled if there are more than that number of tables.\nIf zero, server's default value is used.\nUse negative value to disable them.",
                  "type": "integer",
                  "format": "int32",
                  "x-order": 21
                },
                "tls": {
                  "description": "Use TLS for database connections.",
                  "type": "boolean",
                  "x-order": 19
                },
                "tls_skip_verify": {
                  "description": "Skip TLS certificate and hostname validation.",
                  "type": "boolean",
                  "x-order": 20
                },
                "username": {
                  "description": "MySQL username for scraping metrics.",
                  "type": "string",
                  "x-order": 11
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "mysqld_exporter": {
                  "description": "MySQLdExporter runs on Generic or Container Node and exposes MySQL Service metrics.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 8
                    },
                    "disabled": {
                      "description": "Desired Agent status: enabled (false) or disabled (true).",
                      "type": "boolean",
                      "x-order": 2
                    },
                    "disabled_collectors": {
                      "description": "List of disabled collector names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-order": 10
                    },
                    "listen_port": {
                      "description": "Listen port for scraping metrics.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 12
                    },
                    "pmm_agent_id": {
                      "description": "The pmm-agent identifier which runs this instance.",
                      "type": "string",
                      "x-order": 1
                    },
                    "push_metrics_enabled": {
                      "description": "True if exporter uses push metrics mode.",
                      "type": "boolean",
                      "x-order": 9
                    },
                    "service_id": {
                      "description": "Service identifier.",
                      "type": "string",
                      "x-order": 3
                    },
                    "status": {
                      "description": "AgentStatus represents actual Agent status.\n\n - STARTING: Agent is starting.\n - RUNNING: Agent is running.\n - WAITING: Agent encountered error and will be restarted automatically soon.\n - STOPPING: Agent is stopping.\n - DONE: Agent finished.",
                      "type": "string",
                      "default": "AGENT_STATUS_INVALID",
                      "enum": [
                        "AGENT_STATUS_INVALID",
                        "STARTING",
                        "RUNNING",
                        "WAITING",
                        "STOPPING",
                        "DONE"
                      ],
                      "x-order": 11
                    },
                    "tablestats_group_disabled": {
                      "description": "True if tablestats group collectors are currently disabled.",
                      "type": "boolean",
                      "x-order": 13
                    },
                    "tablestats_group_table_limit": {
                      "description": "Tablestats group collectors are disabled if there are more than that number of tables.\n0 means tablestats group collectors are always enabled (no limit).\nNegative value means tablestats group collectors are always disabled.",
                      "type": "integer",
                      "format": "int32",
                      "x-order": 7
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 5
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation.",
                      "type": "boolean",
                      "x-order": 6
                    },
                    "username": {
                      "description": "MySQL username for scraping metrics.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 1
                },
                "qan_mysql_perfschema": {
                  "description": "QANMySQLPerfSchemaAgent runs within pmm-agent and sends MySQL Query Analytics data to the PMM Server.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 8
                    },
                    "disabled": {
                      "description": "Desired Agent status: enabled (false) or disabled (true).",
                      "type": "boolean",
                      "x-order": 2
                    },
                    "pmm_agent_id": {
                      "description": "The pmm-agent identifier which runs this instance.",
                      "type": "string",
                      "x-order": 1
                    },
                    "query_examples_disabled": {
                      "description": "True if query examples are disabled.",
                      "type": "boolean",
                      "x-order": 7
                    },
                    "service_id": {
                      "description": "Service identifier.",
                      "type": "string",
                      "x-order": 3
                    },
                    "status": {
                      "description": "AgentStatus represents actual Agent status.\n\n - STARTING: Agent is starting.\n - RUNNING: Agent is running.\n - WAITING: Agent encountered error and will be restarted automatically soon.\n - STOPPING: Agent is stopping.\n - DONE: Agent finished.",
                      "type": "string",
                      "default": "AGENT_STATUS_INVALID",
                      "enum": [
                        "AGENT_STATUS_INVALID",
                        "STARTING",
                        "RUNNING",
                        "WAITING",
                        "STOPPING",
                        "DONE"
                      ],
                      "x-order": 9
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 5
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation.",
                      "type": "boolean",
                      "x-order": 6
                    },
                    "username": {
                      "description": "MySQL username for getting performance data.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 2
                },
                "qan_mysql_slowlog": {
                  "description": "QANMySQLSlowlogAgent runs within pmm-agent and sends MySQL Query Analytics data to the PMM Server.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "disabled": {
                      "description": "Desired Agent status: enabled (false) or disabled (true).",
                      "type": "boolean",
                      "x-order": 2
                    },
                    "max_slowlog_file_size": {
                      "description": "Slowlog file is rotated at this size if \u003e 0.",
                      "type": "string",
                      "format": "int64",
                      "x-order": 8
                    },
                    "pmm_agent_id": {
                      "description": "The pmm-agent identifier which runs this instance.",
                      "type": "string",
                      "x-order": 1
                    },
                    "query_examples_disabled": {
                      "description": "True if query examples are disabled.",
                      "type": "boolean",
                      "x-order": 7
                    },
                    "service_id": {
                      "description": "Service identifier.",
                      "type": "string",
                      "x-order": 3
                    },
                    "status": {
                      "description": "AgentStatus represents actual Agent status.\n\n - STARTING: Agent is starting.\n - RUNNING: Agent is running.\n - WAITING: Agent encountered error and will be restarted automatically soon.\n - STOPPING: Agent is stopping.\n - DONE: Agent finished.",
                      "type": "string",
                      "default": "AGENT_STATUS_INVALID",
                      "enum": [
                        "AGENT_STATUS_INVALID",
                        "STARTING",
                        "RUNNING",
                        "WAITING",
                        "STOPPING",
                        "DONE"
                      ],
                      "x-order": 10
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 5
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation.",
                      "type": "boolean",
                      "x-order": 6
                    },
                    "username": {
                      "description": "MySQL username for getting performance data.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 3
                },
                "service": {
                  "description": "MySQLService represents a generic MySQL instance.",
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 3
                    },
                    "cluster": {
                      "description": "Cluster name.",
                      "type": "string",
                      "x-order": 7
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "environment": {
                      "description": "Environment name.",
                      "type": "string",
                      "x-order": 6
                    },
                    "node_id": {
                      "description": "Node identifier where this instance runs.",
                      "type": "string",
                      "x-order": 2
                    },
                    "port": {
                      "description": "Access port.\nPort is required when the address present.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 4
                    },
                    "replication_set": {
                      "description": "Replication set name.",
                      "type": "string",
                      "x-order": 8
                    },
                    "service_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "service_name": {
                      "description": "Unique across all Services user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "socket": {
                      "description": "Access unix socket.\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 5
                    }
                  },
                  "x-order": 0
                },
                "table_count": {
                  "description": "Actual table count at the moment of adding.",
                  "type": "integer",
                  "format": "int32",
                  "x-order": 4
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Node/Register": {
      "post": {
        "tags": [
          "Node"
        ],
        "summary": "RegisterNode registers a new Node and pmm-agent.",
        "operationId": "RegisterNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "description": "Node address (DNS name or IP).",
                  "type": "string",
                  "x-order": 2
                },
                "az": {
                  "description": "Node availability zone.",
                  "type": "string",
                  "x-order": 9
                },
                "container_id": {
                  "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                  "type": "string",
                  "x-order": 5
                },
                "container_name": {
                  "description": "Container name.",
                  "type": "string",
                  "x-order": 6
                },
                "custom_labels": {
                  "description": "Custom user-assigned labels for Node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-order": 10
                },
                "disable_collectors": {
                  "description": "List of collector names to disable in this exporter.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-order": 13
                },
                "distro": {
                  "description": "Linux distribution name and version.",
                  "type": "string",
                  "x-order": 4
                },
                "machine_id": {
                  "description": "Linux machine-id.",
                  "type": "string",
                  "x-order": 3
                },
                "metrics_mode": {
                  "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.",
                  "type": "string",
                  "default": "AUTO",
                  "enum": [
                    "AUTO",
                    "PULL",
                    "PUSH"
                  ],
                  "x-order": 12
                },
                "node_model": {
                  "description": "Node model.",
                  "type": "string",
                  "x-order": 7
                },
                "node_name": {
                  "description": "Unique across all Nodes user-defined name.",
                  "type": "string",
                  "x-order": 1
                },
                "node_type": {
                  "description": "NodeType describes supported Node types.",
                  "type": "string",
                  "default": "NODE_TYPE_INVALID",
                  "enum": [
                    "NODE_TYPE_INVALID",
                    "GENERIC_NODE",
                    "CONTAINER_NODE",
                    "REMOTE_NODE",
                    "REMOTE_RDS_NODE"
                  ],
                  "x-order": 0
                },
                "region": {
                  "description": "Node region.",
                  "type": "string",
                  "x-order": 8
                },
                "reregister": {
                  "description": "If true, and Node with that name already exist, it will be removed with all dependent Services and Agents.",
                  "type": "boolean",
                  "x-order": 11
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "container_node": {
                  "description": "ContainerNode represents a Docker container.",
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "Node address (DNS name or IP).",
                      "type": "string",
                      "x-order": 2
                    },
                    "az": {
                      "description": "Node availability zone.",
                      "type": "string",
                      "x-order": 8
                    },
                    "container_id": {
                      "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                      "type": "string",
                      "x-order": 4
                    },
                    "container_name": {
                      "description": "Container name.",
                      "type": "string",
                      "x-order": 5
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "machine_id": {
                      "description": "Linux machine-id of the Generic Node where this Container Node runs.",
                      "type": "string",
                      "x-order": 3
                    },
                    "node_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "node_model": {
                      "description": "Node model.",
                      "type": "string",
                      "x-order": 6
                    },
                    "node_name": {
                      "description": "Unique across all Nodes user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "region": {
                      "description": "Node region.",
                      "type": "string",
                      "x-order": 7
                    }
                  },
                  "x-order": 1
                },
                "generic_node": {
                  "description": "GenericNode represents a bare metal server or virtual machine.",
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "Node address (DNS name or IP).",
                      "type": "string",
                      "x-order": 2
                    },
                    "az": {
                      "description": "Node availability zone.",
                      "type": "string",
                      "x-order": 7
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 8
                    },
                    "distro": {
                      "description": "Linux distribution name and version.",
                      "type": "string",
                      "x-order": 4
                    },
                    "machine_id": {
                      "description": "Linux machine-id.",
                      "type": "string",
                      "x-order": 3
                    },
                    "node_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "node_model": {
                      "description": "Node model.",
                      "type": "string",
                      "x-order": 5
                    },
                    "node_name": {
                      "description": "Unique across all Nodes user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "region": {
                      "description": "Node region.",
                      "type": "string",
                      "x-order": 6
                    }
                  },
                  "x-order": 0
                },
                "pmm_agent": {
                  "description": "PMMAgent runs on Generic or Container Node.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "connected": {
                      "description": "True if Agent is running and connected to pmm-managed.",
                      "type": "boolean",
                      "x-order": 3
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 2
                    },
                    "runs_on_node_id": {
                      "description": "Node identifier where this instance runs.",
                      "type": "string",
                      "x-order": 1
                    }
                  },
                  "x-order": 2
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/PostgreSQL/Add": {
      "post": {
        "tags": [
          "PostgreSQL"
        ],
        "summary": "AddPostgreSQL adds PostgreSQL Service and starts postgres exporter.\nIt automatically adds a service to inventory, which is running on provided \"node_id\",\nthen adds \"postgres_exporter\" with provided \"pmm_agent_id\" and other parameters.",
        "operationId": "AddPostgreSQL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "add_node": {
                  "description": "AddNodeParams is a params to add new node to inventory while adding new service.",
                  "type": "object",
                  "properties": {
                    "az": {
                      "description": "Node availability zone.",
                      "type": "string",
                      "x-order": 8
                    },
                    "container_id": {
                      "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                      "type": "string",
                      "x-order": 4
                    },
                    "container_name": {
                      "description": "Container name.",
                      "type": "string",
                      "x-order": 5
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Node.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "distro": {
                      "description": "Linux distribution name and version.",
                      "type": "string",
                      "x-order": 3
                    },
                    "machine_id": {
                      "description": "Linux machine-id.",
                      "type": "string",
                      "x-order": 2
                    },
                    "node_model": {
                      "description": "Node model.",
                      "type": "string",
                      "x-order": 6
                    },
                    "node_name": {
                      "description": "Unique across all Nodes user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "node_type": {
                      "description": "NodeType describes supported Node types.",
                      "type": "string",
                      "default": "NODE_TYPE_INVALID",
                      "enum": [
                        "NODE_TYPE_INVALID",
                        "GENERIC_NODE",
                        "CONTAINER_NODE",
                        "REMOTE_NODE",
                        "REMOTE_RDS_NODE"
                      ],
                      "x-order": 0
                    },
                    "region": {
                      "description": "Node region.",
                      "type": "string",
                      "x-order": 7
                    }
                  },
                  "x-order": 2
                },
                "address": {
                  "description": "Node and Service access address (DNS name or IP).\nAddress (and port) or socket is required.",
                  "type": "string",
                  "x-order": 4
                },
                "cluster": {
                  "description": "Cluster name.",
                  "type": "string",
                  "x-order": 9
                },
                "custom_labels": {
                  "description": "Custom user-assigned labels for Service.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-order": 16
                },
                "disable_collectors": {
                  "description": "List of collector names to disable in this exporter.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-order": 21
                },
                "disable_query_examples": {
                  "description": "Disable query examples.",
                  "type": "boolean",
                  "x-order": 15
                },
                "environment": {
                  "description": "Environment name.",
                  "type": "string",
                  "x-order": 8
                },
                "metrics_mode": {
                  "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.",
                  "type": "string",
                  "default": "AUTO",
                  "enum": [
                    "AUTO",
                    "PULL",
                    "PUSH"
                  ],
                  "x-order": 20
                },
                "node_id": {
                  "description": "Node identifier on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                  "type": "string",
                  "x-order": 0
                },
                "node_name": {
                  "description": "Node name on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                  "type": "string",
                  "x-order": 1
                },
                "password": {
                  "description": "PostgreSQL password for scraping metrics.",
                  "type": "string",
                  "x-order": 12
                },
                "pmm_agent_id": {
                  "description": "The \"pmm-agent\" identifier which should run agents. Required.",
                  "type": "string",
                  "x-order": 7
                },
                "port": {
                  "description": "Service Access port.\nPort is required when the address present.",
                  "type": "integer",
                  "format": "int64",
                  "x-order": 5
                },
                "qan_postgresql_pgstatements_agent": {
                  "description": "If true, adds qan-postgresql-pgstatements-agent for provided service.",
                  "type": "boolean",
                  "x-order": 13
                },
                "qan_postgresql_pgstatmonitor_agent": {
                  "description": "If true, adds qan-postgresql-pgstatmonitor-agent for provided service.",
                  "type": "boolean",
                  "x-order": 14
                },
                "replication_set": {
                  "description": "Replication set name.",
                  "type": "string",
                  "x-order": 10
                },
                "service_name": {
                  "description": "Unique across all Services user-defined name. Required.",
                  "type": "string",
                  "x-order": 3
                },
                "skip_connection_check": {
                  "description": "Skip connection check.",
                  "type": "boolean",
                  "x-order": 17
                },
                "socket": {
                  "description": "Service Access socket.\nAddress (and port) or socket is required.",
                  "type": "string",
                  "x-order": 6
                },
                "tls": {
                  "description": "Use TLS for database connections.",
                  "type": "boolean",
                  "x-order": 18
                },
                "tls_skip_verify": {
                  "description": "Skip TLS certificate and hostname validation. Uses sslmode=required instead of verify-full.",
                  "type": "boolean",
                  "x-order": 19
                },
                "username": {
                  "description": "PostgreSQL username for scraping metrics.",
                  "type": "string",
                  "x-order": 11
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "postgres_exporter": {
                  "description": "PostgresExporter runs on Generic or Container Node and exposes PostgreSQL Service metrics.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 7
                    },
                    "disabled": {
                      "description": "Desired Agent status: enabled (false) or disabled (true).",
                      "type": "boolean",
                      "x-order": 2
                    },
                    "disabled_collectors": {
                      "description": "List of disabled collector names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "listen_port": {
                      "description": "Listen port for scraping metrics.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 11
                    },
                    "pmm_agent_id": {
                      "description": "The pmm-agent identifier which runs this instance.",
                      "type": "string",
                      "x-order": 1
                    },
                    "push_metrics_enabled": {
                      "description": "True if exporter uses push metrics mode.",
                      "type": "boolean",
                      "x-order": 8
                    },
                    "service_id": {
                      "description": "Service identifier.",
                      "type": "string",
                      "x-order": 3
                    },
                    "status": {
                      "description": "AgentStatus represents actual Agent status.\n\n - STARTING: Agent is starting.\n - RUNNING: Agent is running.\n - WAITING: Agent encountered error and will be restarted automatically soon.\n - STOPPING: Agent is stopping.\n - DONE: Agent finished.",
                      "type": "string",
                      "default": "AGENT_STATUS_INVALID",
                      "enum": [
                        "AGENT_STATUS_INVALID",
                        "STARTING",
                        "RUNNING",
                        "WAITING",
                        "STOPPING",
                        "DONE"
                      ],
                      "x-order": 10
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 5
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation. Uses sslmode=required instead of verify-full.",
                      "type": "boolean",
                      "x-order": 6
                    },
                    "username": {
                      "description": "PostgreSQL username for scraping metrics.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 1
                },
                "qan_postgresql_pgstatements_agent": {
                  "description": "QANPostgreSQLPgStatementsAgent runs within pmm-agent and sends PostgreSQL Query Analytics data to the PMM Server.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 7
                    },
                    "disabled": {
                      "description": "Desired Agent status: enabled (false) or disabled (true).",
                      "type": "boolean",
                      "x-order": 2
                    },
                    "pmm_agent_id": {
                      "description": "The pmm-agent identifier which runs this instance.",
                      "type": "string",
                      "x-order": 1
                    },
                    "service_id": {
                      "description": "Service identifier.",
                      "type": "string",
                      "x-order": 3
                    },
                    "status": {
                      "description": "AgentStatus represents actual Agent status.\n\n - STARTING: Agent is starting.\n - RUNNING: Agent is running.\n - WAITING: Agent encountered error and will be restarted automatically soon.\n - STOPPING: Agent is stopping.\n - DONE: Agent finished.",
                      "type": "string",
                      "default": "AGENT_STATUS_INVALID",
                      "enum": [
                        "AGENT_STATUS_INVALID",
                        "STARTING",
                        "RUNNING",
                        "WAITING",
                        "STOPPING",
                        "DONE"
                      ],
                      "x-order": 8
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 5
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation.",
                      "type": "boolean",
                      "x-order": 6
                    },
                    "username": {
                      "description": "PostgreSQL username for getting pg stat statements data.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 2
                },
                "qan_postgresql_pgstatmonitor_agent": {
                  "description": "QANPostgreSQLPgStatMonitorAgent runs within pmm-agent and sends PostgreSQL Query Analytics data to the PMM Server.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 8
                    },
                    "disabled": {
                      "description": "Desired Agent status: enabled (false) or disabled (true).",
                      "type": "boolean",
                      "x-order": 2
                    },
                    "pmm_agent_id": {
                      "description": "The pmm-agent identifier which runs this instance.",
                      "type": "string",
                      "x-order": 1
                    },
                    "query_examples_disabled": {
                      "description": "True if query examples are disabled.",
                      "type": "boolean",
                      "x-order": 7
                    },
                    "service_id": {
                      "description": "Service identifier.",
                      "type": "string",
                      "x-order": 3
                    },
                    "status": {
                      "description": "AgentStatus represents actual Agent status.\n\n - STARTING: Agent is starting.\n - RUNNING: Agent is running.\n - WAITING: Agent encountered error and will be restarted automatically soon.\n - STOPPING: Agent is stopping.\n - DONE: Agent finished.",
                      "type": "string",
                      "default": "AGENT_STATUS_INVALID",
                      "enum": [
                        "AGENT_STATUS_INVALID",
                        "STARTING",
                        "RUNNING",
                        "WAITING",
                        "STOPPING",
                        "DONE"
                      ],
                      "x-order": 9
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 5
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation.",
                      "type": "boolean",
                      "x-order": 6
                    },
                    "username": {
                      "description": "PostgreSQL username for getting pg stat monitor data.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 3
                },
                "service": {
                  "description": "PostgreSQLService represents a generic PostgreSQL instance.",
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 3
                    },
                    "cluster": {
                      "description": "Cluster name.",
                      "type": "string",
                      "x-order": 7
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "environment": {
                      "description": "Environment name.",
                      "type": "string",
                      "x-order": 6
                    },
                    "node_id": {
                      "description": "Node identifier where this instance runs.",
                      "type": "string",
                      "x-order": 2
                    },
                    "port": {
                      "description": "Access port.\nPort is required when the address present.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 4
                    },
                    "replication_set": {
                      "description": "Replication set name.",
                      "type": "string",
                      "x-order": 8
                    },
                    "service_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "service_name": {
                      "description": "Unique across all Services user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "socket": {
                      "description": "Access unix socket.\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 5
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/ProxySQL/Add": {
      "post": {
        "tags": [
          "ProxySQL"
        ],
        "summary": "AddProxySQL adds ProxySQL Service and starts several Agents.\nIt automatically adds a service to inventory, which is running on provided \"node_id\",\nthen adds \"proxysql_exporter\" with provided \"pmm_agent_id\" and other parameters.",
        "operationId": "AddProxySQL",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "add_node": {
                  "description": "AddNodeParams is a params to add new node to inventory while adding new service.",
                  "type": "object",
                  "properties": {
                    "az": {
                      "description": "Node availability zone.",
                      "type": "string",
                      "x-order": 8
                    },
                    "container_id": {
                      "description": "Container identifier. If specified, must be a unique Docker container identifier.",
                      "type": "string",
                      "x-order": 4
                    },
                    "container_name": {
                      "description": "Container name.",
                      "type": "string",
                      "x-order": 5
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels for Node.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "distro": {
                      "description": "Linux distribution name and version.",
                      "type": "string",
                      "x-order": 3
                    },
                    "machine_id": {
                      "description": "Linux machine-id.",
                      "type": "string",
                      "x-order": 2
                    },
                    "node_model": {
                      "description": "Node model.",
                      "type": "string",
                      "x-order": 6
                    },
                    "node_name": {
                      "description": "Unique across all Nodes user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "node_type": {
                      "description": "NodeType describes supported Node types.",
                      "type": "string",
                      "default": "NODE_TYPE_INVALID",
                      "enum": [
                        "NODE_TYPE_INVALID",
                        "GENERIC_NODE",
                        "CONTAINER_NODE",
                        "REMOTE_NODE",
                        "REMOTE_RDS_NODE"
                      ],
                      "x-order": 0
                    },
                    "region": {
                      "description": "Node region.",
                      "type": "string",
                      "x-order": 7
                    }
                  },
                  "x-order": 2
                },
                "address": {
                  "description": "Node and Service access address (DNS name or IP).\nAddress (and port) or socket is required.",
                  "type": "string",
                  "x-order": 4
                },
                "cluster": {
                  "description": "Cluster name.",
                  "type": "string",
                  "x-order": 9
                },
                "custom_labels": {
                  "description": "Custom user-assigned labels for Service.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-order": 13
                },
                "disable_collectors": {
                  "description": "List of collector names to disable in this exporter.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-order": 18
                },
                "environment": {
                  "description": "Environment name.",
                  "type": "string",
                  "x-order": 8
                },
                "metrics_mode": {
                  "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.",
                  "type": "string",
                  "default": "AUTO",
                  "enum": [
                    "AUTO",
                    "PULL",
                    "PUSH"
                  ],
                  "x-order": 17
                },
                "node_id": {
                  "description": "Node identifier on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                  "type": "string",
                  "x-order": 0
                },
                "node_name": {
                  "description": "Node name on which a service is been running.\nExactly one of these parameters should be present: node_id, node_name, add_node.",
                  "type": "string",
                  "x-order": 1
                },
                "password": {
                  "description": "ProxySQL password for scraping metrics.",
                  "type": "string",
                  "x-order": 12
                },
                "pmm_agent_id": {
                  "description": "The \"pmm-agent\" identifier which should run agents. Required.",
                  "type": "string",
                  "x-order": 7
                },
                "port": {
                  "description": "Service Access port.\nPort is required when the address present.",
                  "type": "integer",
                  "format": "int64",
                  "x-order": 5
                },
                "replication_set": {
                  "description": "Replication set name.",
                  "type": "string",
                  "x-order": 10
                },
                "service_name": {
                  "description": "Unique across all Services user-defined name. Required.",
                  "type": "string",
                  "x-order": 3
                },
                "skip_connection_check": {
                  "description": "Skip connection check.",
                  "type": "boolean",
                  "x-order": 14
                },
                "socket": {
                  "description": "Service Access socket.\nAddress (and port) or socket is required.",
                  "type": "string",
                  "x-order": 6
                },
                "tls": {
                  "description": "Use TLS for database connections.",
                  "type": "boolean",
                  "x-order": 15
                },
                "tls_skip_verify": {
                  "description": "Skip TLS certificate and hostname validation.",
                  "type": "boolean",
                  "x-order": 16
                },
                "username": {
                  "description": "ProxySQL username for scraping metrics.",
                  "type": "string",
                  "x-order": 11
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "proxysql_exporter": {
                  "description": "ProxySQLExporter runs on Generic or Container Node and exposes ProxySQL Service metrics.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 7
                    },
                    "disabled": {
                      "description": "Desired Agent status: enabled (false) or disabled (true).",
                      "type": "boolean",
                      "x-order": 2
                    },
                    "disabled_collectors": {
                      "description": "List of disabled collector names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "listen_port": {
                      "description": "Listen port for scraping metrics.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 11
                    },
                    "pmm_agent_id": {
                      "description": "The pmm-agent identifier which runs this instance.",
                      "type": "string",
                      "x-order": 1
                    },
                    "push_metrics_enabled": {
                      "description": "True if exporter uses push metrics mode.",
                      "type": "boolean",
                      "x-order": 8
                    },
                    "service_id": {
                      "description": "Service identifier.",
                      "type": "string",
                      "x-order": 3
                    },
                    "status": {
                      "description": "AgentStatus represents actual Agent status.\n\n - STARTING: Agent is starting.\n - RUNNING: Agent is running.\n - WAITING: Agent encountered error and will be restarted automatically soon.\n - STOPPING: Agent is stopping.\n - DONE: Agent finished.",
                      "type": "string",
                      "default": "AGENT_STATUS_INVALID",
                      "enum": [
                        "AGENT_STATUS_INVALID",
                        "STARTING",
                        "RUNNING",
                        "WAITING",
                        "STOPPING",
                        "DONE"
                      ],
                      "x-order": 10
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 5
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation.",
                      "type": "boolean",
                      "x-order": 6
                    },
                    "username": {
                      "description": "ProxySQL username for scraping metrics.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 1
                },
                "service": {
                  "description": "ProxySQLService represents a generic ProxySQL instance.",
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 3
                    },
                    "cluster": {
                      "description": "Cluster name.",
                      "type": "string",
                      "x-order": 7
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "environment": {
                      "description": "Environment name.",
                      "type": "string",
                      "x-order": 6
                    },
                    "node_id": {
                      "description": "Node identifier where this instance runs.",
                      "type": "string",
                      "x-order": 2
                    },
                    "port": {
                      "description": "Access port.\nPort is required when the address present.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 4
                    },
                    "replication_set": {
                      "description": "Replication set name.",
                      "type": "string",
                      "x-order": 8
                    },
                    "service_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "service_name": {
                      "description": "Unique across all Services user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "socket": {
                      "description": "Access unix socket.\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 5
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/RDS/Add": {
      "post": {
        "tags": [
          "RDS"
        ],
        "summary": "AddRDS adds RDS instance.",
        "operationId": "AddRDS",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "description": "Address used to connect to it.",
                  "type": "string",
                  "x-order": 4
                },
                "aws_access_key": {
                  "description": "AWS Access key.",
                  "type": "string",
                  "x-order": 14
                },
                "aws_secret_key": {
                  "description": "AWS Secret key.",
                  "type": "string",
                  "x-order": 15
                },
                "az": {
                  "description": "AWS availability zone.",
                  "type": "string",
                  "x-order": 1
                },
                "cluster": {
                  "description": "Cluster name.",
                  "type": "string",
                  "x-order": 10
                },
                "custom_labels": {
                  "description": "Custom user-assigned labels for Node and Service.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-order": 18
                },
                "disable_basic_metrics": {
                  "description": "Disable basic metrics.",
                  "type": "boolean",
                  "x-order": 24
                },
                "disable_enhanced_metrics": {
                  "description": "Disable enhanced metrics.",
                  "type": "boolean",
                  "x-order": 25
                },
                "disable_query_examples": {
                  "description": "Disable query examples.",
                  "type": "boolean",
                  "x-order": 22
                },
                "engine": {
                  "description": "DiscoverRDSEngine describes supported RDS instance engines.",
                  "type": "string",
                  "default": "DISCOVER_RDS_ENGINE_INVALID",
                  "enum": [
                    "DISCOVER_RDS_ENGINE_INVALID",
                    "DISCOVER_RDS_MYSQL"
                  ],
                  "x-order": 6
                },
                "environment": {
                  "description": "Environment name.",
                  "type": "string",
                  "x-order": 9
                },
                "instance_id": {
                  "description": "AWS instance ID.",
                  "type": "string",
                  "x-order": 2
                },
                "metrics_mode": {
                  "description": "MetricsMode defines desired metrics mode for agent,\nit can be pull, push or auto mode chosen by server.",
                  "type": "string",
                  "default": "AUTO",
                  "enum": [
                    "AUTO",
                    "PULL",
                    "PUSH"
                  ],
                  "x-order": 26
                },
                "node_model": {
                  "description": "AWS instance class.",
                  "type": "string",
                  "x-order": 3
                },
                "node_name": {
                  "description": "Unique across all Nodes user-defined name. Defaults to AWS instance ID.",
                  "type": "string",
                  "x-order": 7
                },
                "password": {
                  "description": "Password for scraping metrics.",
                  "type": "string",
                  "x-order": 13
                },
                "port": {
                  "description": "Access port.",
                  "type": "integer",
                  "format": "int64",
                  "x-order": 5
                },
                "qan_mysql_perfschema": {
                  "description": "If true, adds qan-mysql-perfschema-agent.",
                  "type": "boolean",
                  "x-order": 17
                },
                "rds_exporter": {
                  "description": "If true, adds rds_exporter.",
                  "type": "boolean",
                  "x-order": 16
                },
                "region": {
                  "description": "AWS region.",
                  "type": "string",
                  "x-order": 0
                },
                "replication_set": {
                  "description": "Replication set name.",
                  "type": "string",
                  "x-order": 11
                },
                "service_name": {
                  "description": "Unique across all Services user-defined name. Defaults to AWS instance ID.",
                  "type": "string",
                  "x-order": 8
                },
                "skip_connection_check": {
                  "description": "Skip connection check.",
                  "type": "boolean",
                  "x-order": 19
                },
                "tablestats_group_table_limit": {
                  "description": "Tablestats group collectors will be disabled if there are more than that number of tables.\nIf zero, server's default value is used.\nUse negative value to disable them.",
                  "type": "integer",
                  "format": "int32",
                  "x-order": 23
                },
                "tls": {
                  "description": "Use TLS for database connections.",
                  "type": "boolean",
                  "x-order": 20
                },
                "tls_skip_verify": {
                  "description": "Skip TLS certificate and hostname validation.",
                  "type": "boolean",
                  "x-order": 21
                },
                "username": {
                  "description": "Username for scraping metrics.",
                  "type": "string",
                  "x-order": 12
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "mysql": {
                  "description": "MySQLService represents a generic MySQL instance.",
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "Access address (DNS name or IP).\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 3
                    },
                    "cluster": {
                      "description": "Cluster name.",
                      "type": "string",
                      "x-order": 7
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 9
                    },
                    "environment": {
                      "description": "Environment name.",
                      "type": "string",
                      "x-order": 6
                    },
                    "node_id": {
                      "description": "Node identifier where this instance runs.",
                      "type": "string",
                      "x-order": 2
                    },
                    "port": {
                      "description": "Access port.\nPort is required when the address present.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 4
                    },
                    "replication_set": {
                      "description": "Replication set name.",
                      "type": "string",
                      "x-order": 8
                    },
                    "service_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "service_name": {
                      "description": "Unique across all Services user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "socket": {
                      "description": "Access unix socket.\nAddress (and port) or socket is required.",
                      "type": "string",
                      "x-order": 5
                    }
                  },
                  "x-order": 2
                },
                "mysqld_exporter": {
                  "description": "MySQLdExporter runs on Generic or Container Node and exposes MySQL Service metrics.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 8
                    },
                    "disabled": {
                      "description": "Desired Agent status: enabled (false) or disabled (true).",
                      "type": "boolean",
                      "x-order": 2
                    },
                    "disabled_collectors": {
                      "description": "List of disabled collector names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-order": 10
                    },
                    "listen_port": {
                      "description": "Listen port for scraping metrics.",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 12
                    },
                    "pmm_agent_id": {
                      "description": "The pmm-agent identifier which runs this instance.",
                      "type": "string",
                      "x-order": 1
                    },
                    "push_metrics_enabled": {
                      "description": "True if exporter uses push metrics mode.",
                      "type": "boolean",
                      "x-order": 9
                    },
                    "service_id": {
                      "description": "Service identifier.",
                      "type": "string",
                      "x-order": 3
                    },
                    "status": {
                      "description": "AgentStatus represents actual Agent status.\n\n - STARTING: Agent is starting.\n - RUNNING: Agent is running.\n - WAITING: Agent encountered error and will be restarted automatically soon.\n - STOPPING: Agent is stopping.\n - DONE: Agent finished.",
                      "type": "string",
                      "default": "AGENT_STATUS_INVALID",
                      "enum": [
                        "AGENT_STATUS_INVALID",
                        "STARTING",
                        "RUNNING",
                        "WAITING",
                        "STOPPING",
                        "DONE"
                      ],
                      "x-order": 11
                    },
                    "tablestats_group_disabled": {
                      "description": "True if tablestats group collectors are currently disabled.",
                      "type": "boolean",
                      "x-order": 13
                    },
                    "tablestats_group_table_limit": {
                      "description": "Tablestats group collectors are disabled if there are more than that number of tables.\n0 means tablestats group collectors are always enabled (no limit).\nNegative value means tablestats group collectors are always disabled.",
                      "type": "integer",
                      "format": "int32",
                      "x-order": 7
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 5
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation.",
                      "type": "boolean",
                      "x-order": 6
                    },
                    "username": {
                      "description": "MySQL username for scraping metrics.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 3
                },
                "node": {
                  "description": "RemoteRDSNode represents remote RDS Node. Agents can't run on Remote RDS Nodes.",
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "DB instance identifier.",
                      "type": "string",
                      "x-order": 2
                    },
                    "az": {
                      "description": "Node availability zone.",
                      "type": "string",
                      "x-order": 5
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 6
                    },
                    "node_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "node_model": {
                      "description": "Node model.",
                      "type": "string",
                      "x-order": 3
                    },
                    "node_name": {
                      "description": "Unique across all Nodes user-defined name.",
                      "type": "string",
                      "x-order": 1
                    },
                    "region": {
                      "description": "Node region.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 0
                },
                "qan_mysql_perfschema": {
                  "description": "QANMySQLPerfSchemaAgent runs within pmm-agent and sends MySQL Query Analytics data to the PMM Server.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 8
                    },
                    "disabled": {
                      "description": "Desired Agent status: enabled (false) or disabled (true).",
                      "type": "boolean",
                      "x-order": 2
                    },
                    "pmm_agent_id": {
                      "description": "The pmm-agent identifier which runs this instance.",
                      "type": "string",
                      "x-order": 1
                    },
                    "query_examples_disabled": {
                      "description": "True if query examples are disabled.",
                      "type": "boolean",
                      "x-order": 7
                    },
                    "service_id": {
                      "description": "Service identifier.",
                      "type": "string",
                      "x-order": 3
                    },
                    "status": {
                      "description": "AgentStatus represents actual Agent status.\n\n - STARTING: Agent is starting.\n - RUNNING: Agent is running.\n - WAITING: Agent encountered error and will be restarted automatically soon.\n - STOPPING: Agent is stopping.\n - DONE: Agent finished.",
                      "type": "string",
                      "default": "AGENT_STATUS_INVALID",
                      "enum": [
                        "AGENT_STATUS_INVALID",
                        "STARTING",
                        "RUNNING",
                        "WAITING",
                        "STOPPING",
                        "DONE"
                      ],
                      "x-order": 9
                    },
                    "tls": {
                      "description": "Use TLS for database connections.",
                      "type": "boolean",
                      "x-order": 5
                    },
                    "tls_skip_verify": {
                      "description": "Skip TLS certificate and hostname validation.",
                      "type": "boolean",
                      "x-order": 6
                    },
                    "username": {
                      "description": "MySQL username for getting performance data.",
                      "type": "string",
                      "x-order": 4
                    }
                  },
                  "x-order": 4
                },
                "rds_exporter": {
                  "description": "RDSExporter runs on Generic or Container Node and exposes RemoteRDS Node metrics.",
                  "type": "object",
                  "properties": {
                    "agent_id": {
                      "description": "Unique randomly generated instance identifier.",
                      "type": "string",
                      "x-order": 0
                    },
                    "aws_access_key": {
                      "description": "AWS Access Key.",
                      "type": "string",
                      "x-order": 4
                    },
                    "basic_metrics_disabled": {
                      "description": "Basic metrics are disabled.",
                      "type": "boolean",
                      "x-order": 8
                    },
                    "custom_labels": {
                      "description": "Custom user-assigned labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-order": 5
                    },
                    "disabled": {
                      "description": "Desired Agent status: enabled (false) or disabled (true).",
                      "type": "boolean",
                      "x-order": 2
                    },
                    "enhanced_metrics_disabled": {
                      "description": "Enhanced metrics are disabled.",
                      "type": "boolean",
                      "x-order": 9
                    },
                    "listen_port": {
                      "description": "Listen port for scraping metrics (the same for several configurations).",
                      "type": "integer",
                      "format": "int64",
                      "x-order": 7
                    },
                    "node_id": {
                      "description": "Node identifier.",
                      "type": "string",
                      "x-order": 3
                    },
                    "pmm_agent_id": {
                      "description": "The pmm-agent identifier which runs this instance.",
                      "type": "string",
                      "x-order": 1
                    },
                    "push_metrics_enabled": {
                      "description": "True if exporter uses push metrics mode.",
                      "type": "boolean",
                      "x-order": 10
                    },
                    "status": {
                      "description": "AgentStatus represents actual Agent status.\n\n - STARTING: Agent is starting.\n - RUNNING: Agent is running.\n - WAITING: Agent encountered error and will be restarted automatically soon.\n - STOPPING: Agent is stopping.\n - DONE: Agent finished.",
                      "type": "string",
                      "default": "AGENT_STATUS_INVALID",
                      "enum": [
                        "AGENT_STATUS_INVALID",
                        "STARTING",
                        "RUNNING",
                        "WAITING",
                        "STOPPING",
                        "DONE"
                      ],
                      "x-order": 6
                    }
                  },
                  "x-order": 1
                },
                "table_count": {
                  "description": "Actual table count at the moment of adding.",
                  "type": "integer",
                  "format": "int32",
                  "x-order": 5
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/RDS/Discover": {
      "post": {
        "tags": [
          "RDS"
        ],
        "summary": "DiscoverRDS discovers RDS instances.",
        "operationId": "DiscoverRDS",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "aws_access_key": {
                  "description": "AWS Access key. Optional.",
                  "type": "string",
                  "x-order": 0
                },
                "aws_secret_key": {
                  "description": "AWS Secret key. Optional.",
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "rds_instances": {
                  "type": "array",
                  "items": {
                    "description": "DiscoverRDSInstance models an unique RDS instance for the list of instances returned by Discovery.",
                    "type": "object",
                    "properties": {
                      "address": {
                        "description": "Address used to connect to it.",
                        "type": "string",
                        "x-order": 4
                      },
                      "az": {
                        "description": "AWS availability zone.",
                        "type": "string",
                        "x-order": 1
                      },
                      "engine": {
                        "description": "DiscoverRDSEngine describes supported RDS instance engines.",
                        "type": "string",
                        "default": "DISCOVER_RDS_ENGINE_INVALID",
                        "enum": [
                          "DISCOVER_RDS_ENGINE_INVALID",
                          "DISCOVER_RDS_MYSQL"
                        ],
                        "x-order": 6
                      },
                      "engine_version": {
                        "description": "Engine version.",
                        "type": "string",
                        "x-order": 7
                      },
                      "instance_id": {
                        "description": "AWS instance ID.",
                        "type": "string",
                        "x-order": 2
                      },
                      "node_model": {
                        "description": "AWS instance class.",
                        "type": "string",
                        "x-order": 3
                      },
                      "port": {
                        "description": "Access port.",
                        "type": "integer",
                        "format": "int64",
                        "x-order": 5
                      },
                      "region": {
                        "description": "AWS region.",
                        "type": "string",
                        "x-order": 0
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/SecurityChecks/Change": {
      "post": {
        "tags": [
          "SecurityChecks"
        ],
        "summary": "ChangeSecurityChecks enables/disables Security Thread Tool checks by names.",
        "operationId": "ChangeSecurityChecks",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "params": {
                  "type": "array",
                  "items": {
                    "description": "ChangeSecurityCheckParams specifies a single check parameters.",
                    "type": "object",
                    "properties": {
                      "disable": {
                        "type": "boolean",
                        "x-order": 2
                      },
                      "enable": {
                        "type": "boolean",
                        "x-order": 1
                      },
                      "name": {
                        "description": "The name of the check to change.",
                        "type": "string",
                        "x-order": 0
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/SecurityChecks/GetCheckResults": {
      "post": {
        "tags": [
          "SecurityChecks"
        ],
        "summary": "GetSecurityCheckResults returns Security Thread Tool's latest checks results.",
        "operationId": "GetSecurityCheckResults",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "array",
                  "items": {
                    "description": "SecurityCheckResult represents the check result returned from pmm-managed after running the check.",
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string",
                        "x-order": 1
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-order": 3
                      },
                      "read_more_url": {
                        "description": "URL containing information on how to resolve an issue detected by an STT check.",
                        "type": "string",
                        "x-order": 4
                      },
                      "severity": {
                        "description": "Severity represents severity level of the check result or alert.",
                        "type": "string",
                        "default": "SEVERITY_INVALID",
                        "enum": [
                          "SEVERITY_INVALID",
                          "SEVERITY_EMERGENCY",
                          "SEVERITY_ALERT",
                          "SEVERITY_CRITICAL",
                          "SEVERITY_ERROR",
                          "SEVERITY_WARNING",
                          "SEVERITY_NOTICE",
                          "SEVERITY_INFO",
                          "SEVERITY_DEBUG"
                        ],
                        "x-order": 2
                      },
                      "summary": {
                        "type": "string",
                        "x-order": 0
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/SecurityChecks/List": {
      "post": {
        "tags": [
          "SecurityChecks"
        ],
        "summary": "ListSecurityChecks returns a list of available Security Thread Tool checks.",
        "operationId": "ListSecurityChecks",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {
                "checks": {
                  "type": "array",
                  "items": {
                    "description": "SecurityCheck contains check name and status.",
                    "type": "object",
                    "properties": {
                      "description": {
                        "description": "Long human-readable description.",
                        "type": "string",
                        "x-order": 2
                      },
                      "disabled": {
                        "description": "True if that check is disabled.",
                        "type": "boolean",
                        "x-order": 1
                      },
                      "name": {
                        "description": "Machine-readable name (ID) that is used in expression.",
                        "type": "string",
                        "x-order": 0
                      },
                      "summary": {
                        "description": "Short human-readable summary.",
                        "type": "string",
                        "x-order": 3
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/SecurityChecks/Start": {
      "post": {
        "tags": [
          "SecurityChecks"
        ],
        "summary": "StartSecurityChecks executes Security Thread Tool checks and returns when all checks are executed.",
        "operationId": "StartSecurityChecks",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    },
    "/v1/management/Service/Remove": {
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "RemoveService removes Service with Agents.",
        "operationId": "RemoveService",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "service_id": {
                  "description": "Service ID or Service Name is required.\nUnique randomly generated instance identifier.",
                  "type": "string",
                  "x-order": 1
                },
                "service_name": {
                  "description": "Unique across all Services user-defined name.",
                  "type": "string",
                  "x-order": 2
                },
                "service_type": {
                  "description": "ServiceType describes supported Service types.",
                  "type": "string",
                  "default": "SERVICE_TYPE_INVALID",
                  "enum": [
                    "SERVICE_TYPE_INVALID",
                    "MYSQL_SERVICE",
                    "MONGODB_SERVICE",
                    "POSTGRESQL_SERVICE",
                    "PROXYSQL_SERVICE",
                    "HAPROXY_SERVICE",
                    "EXTERNAL_SERVICE"
                  ],
                  "x-order": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 1
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type_url": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "string",
                        "format": "byte",
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "error": {
                  "type": "string",
                  "x-order": 0
                },
                "message": {
                  "type": "string",
                  "x-order": 2
                }
              }
            }
          }
        }
      }
    }
  }
}