{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "PMM QAN API",
    "version": "v0"
  },
  "paths": {
    "/v1/qan/Filters/Get": {
      "post": {
        "description": "Provides a filtered map of metrics names.",
        "tags": [
          "QANService"
        ],
        "summary": "Get Filters",
        "operationId": "GetFilteredMetricsNames",
        "parameters": [
          {
            "description": "GetFilteredMetricsNamesRequest contains period for which we need filters.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "GetFilteredMetricsNamesRequest contains period for which we need filters.",
              "type": "object",
              "properties": {
                "labels": {
                  "type": "array",
                  "items": {
                    "description": "MapFieldEntry allows to pass labels/dimensions in form like {\"server\": [\"db1\", \"db2\"...]}.",
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "main_metric_name": {
                  "type": "string",
                  "x-order": 2
                },
                "period_start_from": {
                  "type": "string",
                  "format": "date-time",
                  "x-order": 0
                },
                "period_start_to": {
                  "type": "string",
                  "format": "date-time",
                  "x-order": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "GetFilteredMetricsNamesResponse is map of labels for given period by key.\nKey is label's name and value is label's value and how many times it occur.",
              "type": "object",
              "properties": {
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "ListLabels is list of label's values: duplicates are impossible.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "array",
                        "items": {
                          "description": "Values is label values and main metric percent and per second.",
                          "type": "object",
                          "properties": {
                            "main_metric_per_sec": {
                              "type": "number",
                              "format": "float",
                              "x-order": 2
                            },
                            "main_metric_percent": {
                              "type": "number",
                              "format": "float",
                              "x-order": 1
                            },
                            "value": {
                              "type": "string",
                              "x-order": 0
                            }
                          }
                        },
                        "x-order": 0
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/qan/GetMetricsNames": {
      "post": {
        "description": "Provides a map of all metrics names.",
        "tags": [
          "QANService"
        ],
        "summary": "Get Metrics Names",
        "operationId": "GetMetricsNames",
        "parameters": [
          {
            "description": "MetricsNamesRequest is empty.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "MetricsNamesRequest is empty.",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "MetricsNamesReply is map of stored metrics:\nkey is root of metric name in db (Ex:. [m_]query_time[_sum]);\nvalue - Human readable name of metrics.",
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/qan/GetReport": {
      "post": {
        "description": "Returns a list of metrics grouped by queryid or other dimensions.",
        "tags": [
          "QANService"
        ],
        "summary": "Get Report",
        "operationId": "GetReport",
        "parameters": [
          {
            "description": "ReportRequest defines filtering of metrics report for db server or other dimentions.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "ReportRequest defines filtering of metrics report for db server or other dimentions.",
              "type": "object",
              "properties": {
                "columns": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-order": 4
                },
                "group_by": {
                  "type": "string",
                  "x-order": 2
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "description": "ReportMapFieldEntry allows to pass labels/dimentions in form like {\"server\": [\"db1\", \"db2\"...]}.",
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 3
                },
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "x-order": 7
                },
                "main_metric": {
                  "type": "string",
                  "x-order": 8
                },
                "offset": {
                  "type": "integer",
                  "format": "int64",
                  "x-order": 6
                },
                "order_by": {
                  "type": "string",
                  "x-order": 5
                },
                "period_start_from": {
                  "type": "string",
                  "format": "date-time",
                  "x-order": 0
                },
                "period_start_to": {
                  "type": "string",
                  "format": "date-time",
                  "x-order": 1
                },
                "search": {
                  "type": "string",
                  "x-order": 9
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "ReportReply is list of reports per quieryids, hosts etc.",
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "x-order": 2
                },
                "offset": {
                  "type": "integer",
                  "format": "int64",
                  "x-order": 1
                },
                "rows": {
                  "type": "array",
                  "items": {
                    "description": "Row define metrics for selected dimention.",
                    "type": "object",
                    "properties": {
                      "database": {
                        "type": "string",
                        "x-order": 2
                      },
                      "dimension": {
                        "type": "string",
                        "x-order": 1
                      },
                      "fingerprint": {
                        "type": "string",
                        "x-order": 5
                      },
                      "load": {
                        "type": "number",
                        "format": "float",
                        "x-order": 8
                      },
                      "metrics": {
                        "type": "object",
                        "additionalProperties": {
                          "description": "Metric cell.",
                          "type": "object",
                          "properties": {
                            "stats": {
                              "description": "Stat is statistics of specific metric.",
                              "type": "object",
                              "properties": {
                                "avg": {
                                  "type": "number",
                                  "format": "float",
                                  "x-order": 6
                                },
                                "cnt": {
                                  "type": "number",
                                  "format": "float",
                                  "x-order": 1
                                },
                                "max": {
                                  "type": "number",
                                  "format": "float",
                                  "x-order": 4
                                },
                                "min": {
                                  "type": "number",
                                  "format": "float",
                                  "x-order": 3
                                },
                                "p99": {
                                  "type": "number",
                                  "format": "float",
                                  "x-order": 5
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "float",
                                  "x-order": 0
                                },
                                "sum": {
                                  "type": "number",
                                  "format": "float",
                                  "x-order": 2
                                },
                                "sum_per_sec": {
                                  "type": "number",
                                  "format": "float",
                                  "x-order": 7
                                }
                              },
                              "x-order": 0
                            }
                          }
                        },
                        "x-order": 3
                      },
                      "num_queries": {
                        "type": "integer",
                        "format": "int64",
                        "x-order": 6
                      },
                      "qps": {
                        "type": "number",
                        "format": "float",
                        "x-order": 7
                      },
                      "rank": {
                        "type": "integer",
                        "format": "int64",
                        "x-order": 0
                      },
                      "sparkline": {
                        "type": "array",
                        "items": {
                          "description": "Point contains values that represents abscissa (time) and ordinate (volume etc.)\nof every point in a coordinate system of Sparklines.",
                          "type": "object",
                          "properties": {
                            "load": {
                              "description": "load is query_time / time_range.",
                              "type": "number",
                              "format": "float",
                              "x-order": 3
                            },
                            "m_blk_read_time_sum_per_sec": {
                              "description": "Total time the statement spent reading blocks, in milliseconds (if track_io_timing is enabled, otherwise zero).",
                              "type": "number",
                              "format": "float",
                              "x-order": 53
                            },
                            "m_blk_write_time_sum_per_sec": {
                              "description": "Total time the statement spent writing blocks, in milliseconds (if track_io_timing is enabled, otherwise zero).",
                              "type": "number",
                              "format": "float",
                              "x-order": 54
                            },
                            "m_bytes_sent_sum_per_sec": {
                              "description": "The number of bytes sent to all clients.",
                              "type": "number",
                              "format": "float",
                              "x-order": 21
                            },
                            "m_cpu_sys_time_sum_per_sec": {
                              "description": "Total time system spent in query.",
                              "type": "number",
                              "format": "float",
                              "x-order": 56
                            },
                            "m_cpu_user_time_sum_per_sec": {
                              "description": "Total time user spent in query.",
                              "type": "number",
                              "format": "float",
                              "x-order": 55
                            },
                            "m_docs_returned_sum_per_sec": {
                              "description": "The number of returned documents.",
                              "type": "number",
                              "format": "float",
                              "x-order": 40
                            },
                            "m_docs_scanned_sum_per_sec": {
                              "description": "The number of scanned documents.",
                              "type": "number",
                              "format": "float",
                              "x-order": 42
                            },
                            "m_filesort_on_disk_sum_per_sec": {
                              "description": "The filesort was performed on disk.",
                              "type": "number",
                              "format": "float",
                              "x-order": 31
                            },
                            "m_filesort_sum_per_sec": {
                              "description": "The query used a filesort.",
                              "type": "number",
                              "format": "float",
                              "x-order": 30
                            },
                            "m_full_join_sum_per_sec": {
                              "description": "The query performed a full join (a join without indexes).",
                              "type": "number",
                              "format": "float",
                              "x-order": 27
                            },
                            "m_full_scan_sum_per_sec": {
                              "description": "The query performed a full table scan.",
                              "type": "number",
                              "format": "float",
                              "x-order": 26
                            },
                            "m_innodb_io_r_bytes_sum_per_sec": {
                              "description": "Similar to innodb_IO_r_ops, but the unit is bytes.",
                              "type": "number",
                              "format": "float",
                              "x-order": 15
                            },
                            "m_innodb_io_r_ops_sum_per_sec": {
                              "description": "Counts the number of page read operations scheduled.",
                              "type": "number",
                              "format": "float",
                              "x-order": 14
                            },
                            "m_innodb_io_r_wait_sum_per_sec": {
                              "description": "Shows how long (in seconds) it took InnoDB to actually read the data from storage.",
                              "type": "number",
                              "format": "float",
                              "x-order": 16
                            },
                            "m_innodb_pages_distinct_sum_per_sec": {
                              "description": "Counts approximately the number of unique pages the query accessed.",
                              "type": "number",
                              "format": "float",
                              "x-order": 19
                            },
                            "m_innodb_queue_wait_sum_per_sec": {
                              "description": "Shows how long (in seconds) the query spent either waiting to enter the InnoDB queue or inside that queue waiting for execution.",
                              "type": "number",
                              "format": "float",
                              "x-order": 18
                            },
                            "m_innodb_rec_lock_wait_sum_per_sec": {
                              "description": "Shows how long (in seconds) the query waited for row locks.",
                              "type": "number",
                              "format": "float",
                              "x-order": 17
                            },
                            "m_local_blks_dirtied_sum_per_sec": {
                              "description": "Total number of local blocks dirtied by the statement.",
                              "type": "number",
                              "format": "float",
                              "x-order": 49
                            },
                            "m_local_blks_hit_sum_per_sec": {
                              "description": "Total number of local block cache hits by the statement.",
                              "type": "number",
                              "format": "float",
                              "x-order": 47
                            },
                            "m_local_blks_read_sum_per_sec": {
                              "description": "Total number of local blocks read by the statement.",
                              "type": "number",
                              "format": "float",
                              "x-order": 48
                            },
                            "m_local_blks_written_sum_per_sec": {
                              "description": "Total number of local blocks written by the statement.",
                              "type": "number",
                              "format": "float",
                              "x-order": 50
                            },
                            "m_lock_time_sum_per_sec": {
                              "description": "The time to acquire locks in seconds.",
                              "type": "number",
                              "format": "float",
                              "x-order": 8
                            },
                            "m_merge_passes_sum_per_sec": {
                              "description": "The number of merge passes that the sort algorithm has had to do.",
                              "type": "number",
                              "format": "float",
                              "x-order": 13
                            },
                            "m_no_good_index_used_sum_per_sec": {
                              "description": "The number of queries without good index.",
                              "type": "number",
                              "format": "float",
                              "x-order": 39
                            },
                            "m_no_index_used_sum_per_sec": {
                              "description": "The number of queries without index.",
                              "type": "number",
                              "format": "float",
                              "x-order": 38
                            },
                            "m_plan_time_sum_per_sec": {
                              "description": "Plan time in per seconds.",
                              "type": "number",
                              "format": "float",
                              "x-order": 61
                            },
                            "m_plans_calls_sum_per_sec": {
                              "description": "Total number of planned calls.",
                              "type": "number",
                              "format": "float",
                              "x-order": 57
                            },
                            "m_qc_hit_sum_per_sec": {
                              "description": "Query Cache hits.",
                              "type": "number",
                              "format": "float",
                              "x-order": 25
                            },
                            "m_query_length_sum_per_sec": {
                              "description": "Shows how long the query is.",
                              "type": "number",
                              "format": "float",
                              "x-order": 20
                            },
                            "m_query_time_sum_per_sec": {
                              "description": "The statement execution time in seconds.",
                              "type": "number",
                              "format": "float",
                              "x-order": 7
                            },
                            "m_response_length_sum_per_sec": {
                              "description": "The response length of the query result in bytes.",
                              "type": "number",
                              "format": "float",
                              "x-order": 41
                            },
                            "m_rows_affected_sum_per_sec": {
                              "description": "Number of rows changed - UPDATE, DELETE, INSERT.",
                              "type": "number",
                              "format": "float",
                              "x-order": 11
                            },
                            "m_rows_examined_sum_per_sec": {
                              "description": "Number of rows scanned - SELECT.",
                              "type": "number",
                              "format": "float",
                              "x-order": 10
                            },
                            "m_rows_read_sum_per_sec": {
                              "description": "The number of rows read from tables.",
                              "type": "number",
                              "format": "float",
                              "x-order": 12
                            },
                            "m_rows_sent_sum_per_sec": {
                              "description": "The number of rows sent to the client.",
                              "type": "number",
                              "format": "float",
                              "x-order": 9
                            },
                            "m_select_full_range_join_sum_per_sec": {
                              "description": "The number of joins that used a range search on a reference table.",
                              "type": "number",
                              "format": "float",
                              "x-order": 32
                            },
                            "m_select_range_check_sum_per_sec": {
                              "description": "The number of joins without keys that check for key usage after each row.",
                              "type": "number",
                              "format": "float",
                              "x-order": 34
                            },
                            "m_select_range_sum_per_sec": {
                              "description": "The number of joins that used ranges on the first table.",
                              "type": "number",
                              "format": "float",
                              "x-order": 33
                            },
                            "m_shared_blks_dirtied_sum_per_sec": {
                              "description": "Total number of shared blocks dirtied by the statement.",
                              "type": "number",
                              "format": "float",
                              "x-order": 45
                            },
                            "m_shared_blks_hit_sum_per_sec": {
                              "description": "Total number of shared block cache hits by the statement.",
                              "type": "number",
                              "format": "float",
                              "x-order": 43
                            },
                            "m_shared_blks_read_sum_per_sec": {
                              "description": "Total number of shared blocks read by the statement.",
                              "type": "number",
                              "format": "float",
                              "x-order": 44
                            },
                            "m_shared_blks_written_sum_per_sec": {
                              "description": "Total number of shared blocks written by the statement.",
                              "type": "number",
                              "format": "float",
                              "x-order": 46
                            },
                            "m_sort_range_sum_per_sec": {
                              "description": "The number of sorts that were done using ranges.",
                              "type": "number",
                              "format": "float",
                              "x-order": 35
                            },
                            "m_sort_rows_sum_per_sec": {
                              "description": "The number of sorted rows.",
                              "type": "number",
                              "format": "float",
                              "x-order": 36
                            },
                            "m_sort_scan_sum_per_sec": {
                              "description": "The number of sorts that were done by scanning the table.",
                              "type": "number",
                              "format": "float",
                              "x-order": 37
                            },
                            "m_temp_blks_read_sum_per_sec": {
                              "description": "Total number of temp blocks read by the statement.",
                              "type": "number",
                              "format": "float",
                              "x-order": 51
                            },
                            "m_temp_blks_written_sum_per_sec": {
                              "description": "Total number of temp blocks written by the statement.",
                              "type": "number",
                              "format": "float",
                              "x-order": 52
                            },
                            "m_tmp_disk_tables_sum_per_sec": {
                              "description": "Number of temporary tables created on disk for the query.",
                              "type": "number",
                              "format": "float",
                              "x-order": 23
                            },
                            "m_tmp_table_on_disk_sum_per_sec": {
                              "description": "The querys temporary table was stored on disk.",
                              "type": "number",
                              "format": "float",
                              "x-order": 29
                            },
                            "m_tmp_table_sizes_sum_per_sec": {
                              "description": "Total Size in bytes for all temporary tables used in the query.",
                              "type": "number",
                              "format": "float",
                              "x-order": 24
                            },
                            "m_tmp_table_sum_per_sec": {
                              "description": "The query created an implicit internal temporary table.",
                              "type": "number",
                              "format": "float",
                              "x-order": 28
                            },
                            "m_tmp_tables_sum_per_sec": {
                              "description": "Number of temporary tables created on memory for the query.",
                              "type": "number",
                              "format": "float",
                              "x-order": 22
                            },
                            "m_wal_bytes_sum_per_sec": {
                              "description": "Total bytes of WAL (Write-ahead logging) records.",
                              "type": "number",
                              "format": "float",
                              "x-order": 60
                            },
                            "m_wal_fpi_sum_per_sec": {
                              "description": "Total number of FPI (full page images) in WAL (Write-ahead logging) records.",
                              "type": "number",
                              "format": "float",
                              "x-order": 59
                            },
                            "m_wal_records_sum_per_sec": {
                              "description": "Total number of WAL (Write-ahead logging) records.",
                              "type": "number",
                              "format": "float",
                              "x-order": 58
                            },
                            "num_queries_per_sec": {
                              "description": "number of queries in bucket.",
                              "type": "number",
                              "format": "float",
                              "x-order": 4
                            },
                            "num_queries_with_errors_per_sec": {
                              "description": "number of queries with errors.",
                              "type": "number",
                              "format": "float",
                              "x-order": 5
                            },
                            "num_queries_with_warnings_per_sec": {
                              "description": "number of queries with warnings.",
                              "type": "number",
                              "format": "float",
                              "x-order": 6
                            },
                            "point": {
                              "description": "The serial number of the chart point from the largest time in the time interval to the lowest time in the time range.",
                              "type": "integer",
                              "format": "int64",
                              "x-order": 0
                            },
                            "time_frame": {
                              "description": "Duration beetween two points.",
                              "type": "integer",
                              "format": "int64",
                              "x-order": 1
                            },
                            "timestamp": {
                              "description": "Time of point in format RFC3339.",
                              "type": "string",
                              "x-order": 2
                            }
                          }
                        },
                        "x-order": 4
                      }
                    }
                  },
                  "x-order": 3
                },
                "total_rows": {
                  "type": "integer",
                  "format": "int64",
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/qan/ObjectDetails/ExplainFingerprintByQueryID": {
      "post": {
        "description": "Provides an explain fingerprint for given query ID.",
        "tags": [
          "QANService"
        ],
        "summary": "Get Explain Fingerprint",
        "operationId": "ExplainFingerprintByQueryID",
        "parameters": [
          {
            "description": "ExplainFingerprintByQueryIDRequest get explain fingerprint for given query ID.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "ExplainFingerprintByQueryIDRequest get explain fingerprint for given query ID.",
              "type": "object",
              "properties": {
                "query_id": {
                  "type": "string",
                  "x-order": 1
                },
                "serviceid": {
                  "type": "string",
                  "x-order": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "ExplainFingerprintByQueryIDResponse is explain fingerprint and placeholders count for given query ID.",
              "type": "object",
              "properties": {
                "explain_fingerprint": {
                  "type": "string",
                  "x-order": 0
                },
                "placeholders_count": {
                  "type": "integer",
                  "format": "int64",
                  "x-order": 1
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/qan/ObjectDetails/GetHistogram": {
      "post": {
        "description": "Provides histogram items for specific filtering.",
        "tags": [
          "QANService"
        ],
        "summary": "Get Histogram",
        "operationId": "GetHistogram",
        "parameters": [
          {
            "description": "GetHistogramRequest defines filtering by time range, labels and queryid.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "GetHistogramRequest defines filtering by time range, labels and queryid.",
              "type": "object",
              "properties": {
                "labels": {
                  "type": "array",
                  "items": {
                    "description": "MapFieldEntry allows to pass labels/dimensions in form like {\"server\": [\"db1\", \"db2\"...]}.",
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 2
                },
                "period_start_from": {
                  "type": "string",
                  "format": "date-time",
                  "x-order": 0
                },
                "period_start_to": {
                  "type": "string",
                  "format": "date-time",
                  "x-order": 1
                },
                "queryid": {
                  "type": "string",
                  "x-order": 3
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "GetHistogramResponse is histogram items as a list.",
              "type": "object",
              "properties": {
                "histogram_items": {
                  "type": "array",
                  "items": {
                    "description": "HistogramItem represents one item in histogram.",
                    "type": "object",
                    "properties": {
                      "frequency": {
                        "type": "integer",
                        "format": "int64",
                        "x-order": 1
                      },
                      "range": {
                        "type": "string",
                        "x-order": 0
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/qan/ObjectDetails/GetLabels": {
      "post": {
        "description": "Provides a list of labels for object details.",
        "tags": [
          "QANService"
        ],
        "summary": "Get Labels",
        "operationId": "GetLabels",
        "parameters": [
          {
            "description": "GetLabelsRequest defines filtering of object detail's labels for specific value of\ndimension (ex.: host=hostname1 or queryid=1D410B4BE5060972.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "GetLabelsRequest defines filtering of object detail's labels for specific value of\ndimension (ex.: host=hostname1 or queryid=1D410B4BE5060972.",
              "type": "object",
              "properties": {
                "filter_by": {
                  "description": "dimension value: ex: queryid - 1D410B4BE5060972.",
                  "type": "string",
                  "x-order": 2
                },
                "group_by": {
                  "description": "one of dimension: queryid | host ...",
                  "type": "string",
                  "x-order": 3
                },
                "period_start_from": {
                  "type": "string",
                  "format": "date-time",
                  "x-order": 0
                },
                "period_start_to": {
                  "type": "string",
                  "format": "date-time",
                  "x-order": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "GetLabelsResponse is a map of labels names as keys and labels values as a list.",
              "type": "object",
              "properties": {
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "ListLabelValues is list of label's values.",
                    "type": "object",
                    "properties": {
                      "values": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-order": 0
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/qan/ObjectDetails/GetMetrics": {
      "post": {
        "description": "Provides a map of metrics for specific filtering.",
        "tags": [
          "QANService"
        ],
        "summary": "Get Metrics",
        "operationId": "GetMetrics",
        "parameters": [
          {
            "description": "GetMetricsRequest defines filtering of metrics for specific value of dimension (ex.: host=hostname1 or queryid=1D410B4BE5060972.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "GetMetricsRequest defines filtering of metrics for specific value of dimension (ex.: host=hostname1 or queryid=1D410B4BE5060972.",
              "type": "object",
              "properties": {
                "filter_by": {
                  "description": "dimension value: ex: queryid - 1D410B4BE5060972.",
                  "type": "string",
                  "x-order": 2
                },
                "group_by": {
                  "description": "one of dimension: queryid | host ...",
                  "type": "string",
                  "x-order": 3
                },
                "include_only_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-order": 5
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "description": "MapFieldEntry allows to pass labels/dimensions in form like {\"server\": [\"db1\", \"db2\"...]}.",
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 4
                },
                "period_start_from": {
                  "type": "string",
                  "format": "date-time",
                  "x-order": 0
                },
                "period_start_to": {
                  "type": "string",
                  "format": "date-time",
                  "x-order": 1
                },
                "totals": {
                  "type": "boolean",
                  "title": "retrieve only values for totals, excluding N/A values",
                  "x-order": 6
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "GetMetricsResponse defines metrics for specific value of dimension (ex.: host=hostname1 or queryid=1D410B4BE5060972.",
              "type": "object",
              "properties": {
                "fingerprint": {
                  "type": "string",
                  "x-order": 4
                },
                "metadata": {
                  "description": "GetSlecetedQueryMetadataResponse consists selected query metadata to show in details for given query ID.",
                  "type": "object",
                  "properties": {
                    "cluster": {
                      "type": "string",
                      "x-order": 5
                    },
                    "database": {
                      "type": "string",
                      "x-order": 1
                    },
                    "environment": {
                      "type": "string",
                      "x-order": 8
                    },
                    "node_id": {
                      "type": "string",
                      "x-order": 9
                    },
                    "node_name": {
                      "type": "string",
                      "x-order": 10
                    },
                    "node_type": {
                      "type": "string",
                      "x-order": 11
                    },
                    "replication_set": {
                      "type": "string",
                      "x-order": 4
                    },
                    "schema": {
                      "type": "string",
                      "x-order": 2
                    },
                    "service_id": {
                      "type": "string",
                      "x-order": 7
                    },
                    "service_name": {
                      "type": "string",
                      "x-order": 0
                    },
                    "service_type": {
                      "type": "string",
                      "x-order": 6
                    },
                    "username": {
                      "type": "string",
                      "x-order": 3
                    }
                  },
                  "x-order": 5
                },
                "metrics": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "MetricValues is statistics of specific metric.",
                    "type": "object",
                    "properties": {
                      "avg": {
                        "type": "number",
                        "format": "float",
                        "x-order": 5
                      },
                      "cnt": {
                        "type": "number",
                        "format": "float",
                        "x-order": 1
                      },
                      "max": {
                        "type": "number",
                        "format": "float",
                        "x-order": 4
                      },
                      "min": {
                        "type": "number",
                        "format": "float",
                        "x-order": 3
                      },
                      "p99": {
                        "type": "number",
                        "format": "float",
                        "x-order": 6
                      },
                      "percent_of_total": {
                        "type": "number",
                        "format": "float",
                        "x-order": 7
                      },
                      "rate": {
                        "type": "number",
                        "format": "float",
                        "x-order": 0
                      },
                      "sum": {
                        "type": "number",
                        "format": "float",
                        "x-order": 2
                      }
                    }
                  },
                  "x-order": 0
                },
                "sparkline": {
                  "type": "array",
                  "items": {
                    "description": "Point contains values that represents abscissa (time) and ordinate (volume etc.)\nof every point in a coordinate system of Sparklines.",
                    "type": "object",
                    "properties": {
                      "load": {
                        "description": "load is query_time / time_range.",
                        "type": "number",
                        "format": "float",
                        "x-order": 3
                      },
                      "m_blk_read_time_sum_per_sec": {
                        "description": "Total time the statement spent reading blocks, in milliseconds (if track_io_timing is enabled, otherwise zero).",
                        "type": "number",
                        "format": "float",
                        "x-order": 53
                      },
                      "m_blk_write_time_sum_per_sec": {
                        "description": "Total time the statement spent writing blocks, in milliseconds (if track_io_timing is enabled, otherwise zero).",
                        "type": "number",
                        "format": "float",
                        "x-order": 54
                      },
                      "m_bytes_sent_sum_per_sec": {
                        "description": "The number of bytes sent to all clients.",
                        "type": "number",
                        "format": "float",
                        "x-order": 21
                      },
                      "m_cpu_sys_time_sum_per_sec": {
                        "description": "Total time system spent in query.",
                        "type": "number",
                        "format": "float",
                        "x-order": 56
                      },
                      "m_cpu_user_time_sum_per_sec": {
                        "description": "Total time user spent in query.",
                        "type": "number",
                        "format": "float",
                        "x-order": 55
                      },
                      "m_docs_returned_sum_per_sec": {
                        "description": "The number of returned documents.",
                        "type": "number",
                        "format": "float",
                        "x-order": 40
                      },
                      "m_docs_scanned_sum_per_sec": {
                        "description": "The number of scanned documents.",
                        "type": "number",
                        "format": "float",
                        "x-order": 42
                      },
                      "m_filesort_on_disk_sum_per_sec": {
                        "description": "The filesort was performed on disk.",
                        "type": "number",
                        "format": "float",
                        "x-order": 31
                      },
                      "m_filesort_sum_per_sec": {
                        "description": "The query used a filesort.",
                        "type": "number",
                        "format": "float",
                        "x-order": 30
                      },
                      "m_full_join_sum_per_sec": {
                        "description": "The query performed a full join (a join without indexes).",
                        "type": "number",
                        "format": "float",
                        "x-order": 27
                      },
                      "m_full_scan_sum_per_sec": {
                        "description": "The query performed a full table scan.",
                        "type": "number",
                        "format": "float",
                        "x-order": 26
                      },
                      "m_innodb_io_r_bytes_sum_per_sec": {
                        "description": "Similar to innodb_IO_r_ops, but the unit is bytes.",
                        "type": "number",
                        "format": "float",
                        "x-order": 15
                      },
                      "m_innodb_io_r_ops_sum_per_sec": {
                        "description": "Counts the number of page read operations scheduled.",
                        "type": "number",
                        "format": "float",
                        "x-order": 14
                      },
                      "m_innodb_io_r_wait_sum_per_sec": {
                        "description": "Shows how long (in seconds) it took InnoDB to actually read the data from storage.",
                        "type": "number",
                        "format": "float",
                        "x-order": 16
                      },
                      "m_innodb_pages_distinct_sum_per_sec": {
                        "description": "Counts approximately the number of unique pages the query accessed.",
                        "type": "number",
                        "format": "float",
                        "x-order": 19
                      },
                      "m_innodb_queue_wait_sum_per_sec": {
                        "description": "Shows how long (in seconds) the query spent either waiting to enter the InnoDB queue or inside that queue waiting for execution.",
                        "type": "number",
                        "format": "float",
                        "x-order": 18
                      },
                      "m_innodb_rec_lock_wait_sum_per_sec": {
                        "description": "Shows how long (in seconds) the query waited for row locks.",
                        "type": "number",
                        "format": "float",
                        "x-order": 17
                      },
                      "m_local_blks_dirtied_sum_per_sec": {
                        "description": "Total number of local blocks dirtied by the statement.",
                        "type": "number",
                        "format": "float",
                        "x-order": 49
                      },
                      "m_local_blks_hit_sum_per_sec": {
                        "description": "Total number of local block cache hits by the statement.",
                        "type": "number",
                        "format": "float",
                        "x-order": 47
                      },
                      "m_local_blks_read_sum_per_sec": {
                        "description": "Total number of local blocks read by the statement.",
                        "type": "number",
                        "format": "float",
                        "x-order": 48
                      },
                      "m_local_blks_written_sum_per_sec": {
                        "description": "Total number of local blocks written by the statement.",
                        "type": "number",
                        "format": "float",
                        "x-order": 50
                      },
                      "m_lock_time_sum_per_sec": {
                        "description": "The time to acquire locks in seconds.",
                        "type": "number",
                        "format": "float",
                        "x-order": 8
                      },
                      "m_merge_passes_sum_per_sec": {
                        "description": "The number of merge passes that the sort algorithm has had to do.",
                        "type": "number",
                        "format": "float",
                        "x-order": 13
                      },
                      "m_no_good_index_used_sum_per_sec": {
                        "description": "The number of queries without good index.",
                        "type": "number",
                        "format": "float",
                        "x-order": 39
                      },
                      "m_no_index_used_sum_per_sec": {
                        "description": "The number of queries without index.",
                        "type": "number",
                        "format": "float",
                        "x-order": 38
                      },
                      "m_plan_time_sum_per_sec": {
                        "description": "Plan time in per seconds.",
                        "type": "number",
                        "format": "float",
                        "x-order": 61
                      },
                      "m_plans_calls_sum_per_sec": {
                        "description": "Total number of planned calls.",
                        "type": "number",
                        "format": "float",
                        "x-order": 57
                      },
                      "m_qc_hit_sum_per_sec": {
                        "description": "Query Cache hits.",
                        "type": "number",
                        "format": "float",
                        "x-order": 25
                      },
                      "m_query_length_sum_per_sec": {
                        "description": "Shows how long the query is.",
                        "type": "number",
                        "format": "float",
                        "x-order": 20
                      },
                      "m_query_time_sum_per_sec": {
                        "description": "The statement execution time in seconds.",
                        "type": "number",
                        "format": "float",
                        "x-order": 7
                      },
                      "m_response_length_sum_per_sec": {
                        "description": "The response length of the query result in bytes.",
                        "type": "number",
                        "format": "float",
                        "x-order": 41
                      },
                      "m_rows_affected_sum_per_sec": {
                        "description": "Number of rows changed - UPDATE, DELETE, INSERT.",
                        "type": "number",
                        "format": "float",
                        "x-order": 11
                      },
                      "m_rows_examined_sum_per_sec": {
                        "description": "Number of rows scanned - SELECT.",
                        "type": "number",
                        "format": "float",
                        "x-order": 10
                      },
                      "m_rows_read_sum_per_sec": {
                        "description": "The number of rows read from tables.",
                        "type": "number",
                        "format": "float",
                        "x-order": 12
                      },
                      "m_rows_sent_sum_per_sec": {
                        "description": "The number of rows sent to the client.",
                        "type": "number",
                        "format": "float",
                        "x-order": 9
                      },
                      "m_select_full_range_join_sum_per_sec": {
                        "description": "The number of joins that used a range search on a reference table.",
                        "type": "number",
                        "format": "float",
                        "x-order": 32
                      },
                      "m_select_range_check_sum_per_sec": {
                        "description": "The number of joins without keys that check for key usage after each row.",
                        "type": "number",
                        "format": "float",
                        "x-order": 34
                      },
                      "m_select_range_sum_per_sec": {
                        "description": "The number of joins that used ranges on the first table.",
                        "type": "number",
                        "format": "float",
                        "x-order": 33
                      },
                      "m_shared_blks_dirtied_sum_per_sec": {
                        "description": "Total number of shared blocks dirtied by the statement.",
                        "type": "number",
                        "format": "float",
                        "x-order": 45
                      },
                      "m_shared_blks_hit_sum_per_sec": {
                        "description": "Total number of shared block cache hits by the statement.",
                        "type": "number",
                        "format": "float",
                        "x-order": 43
                      },
                      "m_shared_blks_read_sum_per_sec": {
                        "description": "Total number of shared blocks read by the statement.",
                        "type": "number",
                        "format": "float",
                        "x-order": 44
                      },
                      "m_shared_blks_written_sum_per_sec": {
                        "description": "Total number of shared blocks written by the statement.",
                        "type": "number",
                        "format": "float",
                        "x-order": 46
                      },
                      "m_sort_range_sum_per_sec": {
                        "description": "The number of sorts that were done using ranges.",
                        "type": "number",
                        "format": "float",
                        "x-order": 35
                      },
                      "m_sort_rows_sum_per_sec": {
                        "description": "The number of sorted rows.",
                        "type": "number",
                        "format": "float",
                        "x-order": 36
                      },
                      "m_sort_scan_sum_per_sec": {
                        "description": "The number of sorts that were done by scanning the table.",
                        "type": "number",
                        "format": "float",
                        "x-order": 37
                      },
                      "m_temp_blks_read_sum_per_sec": {
                        "description": "Total number of temp blocks read by the statement.",
                        "type": "number",
                        "format": "float",
                        "x-order": 51
                      },
                      "m_temp_blks_written_sum_per_sec": {
                        "description": "Total number of temp blocks written by the statement.",
                        "type": "number",
                        "format": "float",
                        "x-order": 52
                      },
                      "m_tmp_disk_tables_sum_per_sec": {
                        "description": "Number of temporary tables created on disk for the query.",
                        "type": "number",
                        "format": "float",
                        "x-order": 23
                      },
                      "m_tmp_table_on_disk_sum_per_sec": {
                        "description": "The querys temporary table was stored on disk.",
                        "type": "number",
                        "format": "float",
                        "x-order": 29
                      },
                      "m_tmp_table_sizes_sum_per_sec": {
                        "description": "Total Size in bytes for all temporary tables used in the query.",
                        "type": "number",
                        "format": "float",
                        "x-order": 24
                      },
                      "m_tmp_table_sum_per_sec": {
                        "description": "The query created an implicit internal temporary table.",
                        "type": "number",
                        "format": "float",
                        "x-order": 28
                      },
                      "m_tmp_tables_sum_per_sec": {
                        "description": "Number of temporary tables created on memory for the query.",
                        "type": "number",
                        "format": "float",
                        "x-order": 22
                      },
                      "m_wal_bytes_sum_per_sec": {
                        "description": "Total bytes of WAL (Write-ahead logging) records.",
                        "type": "number",
                        "format": "float",
                        "x-order": 60
                      },
                      "m_wal_fpi_sum_per_sec": {
                        "description": "Total number of FPI (full page images) in WAL (Write-ahead logging) records.",
                        "type": "number",
                        "format": "float",
                        "x-order": 59
                      },
                      "m_wal_records_sum_per_sec": {
                        "description": "Total number of WAL (Write-ahead logging) records.",
                        "type": "number",
                        "format": "float",
                        "x-order": 58
                      },
                      "num_queries_per_sec": {
                        "description": "number of queries in bucket.",
                        "type": "number",
                        "format": "float",
                        "x-order": 4
                      },
                      "num_queries_with_errors_per_sec": {
                        "description": "number of queries with errors.",
                        "type": "number",
                        "format": "float",
                        "x-order": 5
                      },
                      "num_queries_with_warnings_per_sec": {
                        "description": "number of queries with warnings.",
                        "type": "number",
                        "format": "float",
                        "x-order": 6
                      },
                      "point": {
                        "description": "The serial number of the chart point from the largest time in the time interval to the lowest time in the time range.",
                        "type": "integer",
                        "format": "int64",
                        "x-order": 0
                      },
                      "time_frame": {
                        "description": "Duration beetween two points.",
                        "type": "integer",
                        "format": "int64",
                        "x-order": 1
                      },
                      "timestamp": {
                        "description": "Time of point in format RFC3339.",
                        "type": "string",
                        "x-order": 2
                      }
                    }
                  },
                  "x-order": 2
                },
                "text_metrics": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-order": 1
                },
                "totals": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "MetricValues is statistics of specific metric.",
                    "type": "object",
                    "properties": {
                      "avg": {
                        "type": "number",
                        "format": "float",
                        "x-order": 5
                      },
                      "cnt": {
                        "type": "number",
                        "format": "float",
                        "x-order": 1
                      },
                      "max": {
                        "type": "number",
                        "format": "float",
                        "x-order": 4
                      },
                      "min": {
                        "type": "number",
                        "format": "float",
                        "x-order": 3
                      },
                      "p99": {
                        "type": "number",
                        "format": "float",
                        "x-order": 6
                      },
                      "percent_of_total": {
                        "type": "number",
                        "format": "float",
                        "x-order": 7
                      },
                      "rate": {
                        "type": "number",
                        "format": "float",
                        "x-order": 0
                      },
                      "sum": {
                        "type": "number",
                        "format": "float",
                        "x-order": 2
                      }
                    }
                  },
                  "x-order": 3
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/qan/ObjectDetails/GetQueryExample": {
      "post": {
        "description": "Provides a list of query examples.",
        "tags": [
          "QANService"
        ],
        "summary": "Get Query Example",
        "operationId": "GetQueryExample",
        "parameters": [
          {
            "description": "GetQueryExampleRequest defines filtering of query examples for specific value of\ndimension (ex.: host=hostname1 or queryid=1D410B4BE5060972.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "GetQueryExampleRequest defines filtering of query examples for specific value of\ndimension (ex.: host=hostname1 or queryid=1D410B4BE5060972.",
              "type": "object",
              "properties": {
                "filter_by": {
                  "description": "dimension value: ex: queryid - 1D410B4BE5060972.",
                  "type": "string",
                  "x-order": 2
                },
                "group_by": {
                  "description": "one of dimension: queryid | host ...",
                  "type": "string",
                  "x-order": 3
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "description": "MapFieldEntry allows to pass labels/dimensions in form like {\"server\": [\"db1\", \"db2\"...]}.",
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string",
                        "x-order": 0
                      },
                      "value": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-order": 1
                      }
                    }
                  },
                  "x-order": 4
                },
                "limit": {
                  "type": "integer",
                  "format": "int64",
                  "x-order": 5
                },
                "period_start_from": {
                  "type": "string",
                  "format": "date-time",
                  "x-order": 0
                },
                "period_start_to": {
                  "type": "string",
                  "format": "date-time",
                  "x-order": 1
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "GetQueryExampleResponse list of query examples.",
              "type": "object",
              "properties": {
                "query_examples": {
                  "type": "array",
                  "items": {
                    "description": "QueryExample shows query examples and their metrics.",
                    "type": "object",
                    "properties": {
                      "example": {
                        "type": "string",
                        "x-order": 0
                      },
                      "example_metrics": {
                        "type": "string",
                        "x-order": 6
                      },
                      "example_type": {
                        "description": "ExampleType is a type of query example selected for this query class in given period of time.",
                        "type": "string",
                        "default": "EXAMPLE_TYPE_UNSPECIFIED",
                        "enum": [
                          "EXAMPLE_TYPE_UNSPECIFIED",
                          "EXAMPLE_TYPE_RANDOM",
                          "EXAMPLE_TYPE_SLOWEST",
                          "EXAMPLE_TYPE_FASTEST",
                          "EXAMPLE_TYPE_WITH_ERROR"
                        ],
                        "x-order": 1
                      },
                      "explain_fingerprint": {
                        "type": "string",
                        "x-order": 4
                      },
                      "is_truncated": {
                        "type": "integer",
                        "format": "int64",
                        "x-order": 2
                      },
                      "placeholders_count": {
                        "type": "integer",
                        "format": "int64",
                        "x-order": 3
                      },
                      "query_id": {
                        "type": "string",
                        "x-order": 5
                      },
                      "schema": {
                        "type": "string",
                        "x-order": 9
                      },
                      "service_id": {
                        "type": "string",
                        "x-order": 7
                      },
                      "service_type": {
                        "type": "string",
                        "x-order": 8
                      },
                      "tables": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-order": 10
                      }
                    }
                  },
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/qan/ObjectDetails/GetQueryPlan": {
      "post": {
        "description": "Provides a query plan and plan id for specific filtering.",
        "tags": [
          "QANService"
        ],
        "summary": "Get Query Plan",
        "operationId": "GetQueryPlan",
        "parameters": [
          {
            "description": "GetQueryPlanRequest defines filtering by queryid.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "GetQueryPlanRequest defines filtering by queryid.",
              "type": "object",
              "properties": {
                "queryid": {
                  "type": "string",
                  "x-order": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "GetQueryPlanResponse contains planid and query_plan.",
              "type": "object",
              "properties": {
                "planid": {
                  "type": "string",
                  "x-order": 0
                },
                "query_plan": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/qan/ObjectDetails/QueryExists": {
      "post": {
        "description": "Checks if query exists in clickhouse.",
        "tags": [
          "QANService"
        ],
        "summary": "Check Query Existence",
        "operationId": "QueryExists",
        "parameters": [
          {
            "description": "QueryExistsRequest check if provided query exists or not.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "QueryExistsRequest check if provided query exists or not.",
              "type": "object",
              "properties": {
                "query": {
                  "type": "string",
                  "x-order": 1
                },
                "serviceid": {
                  "type": "string",
                  "x-order": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "QueryExistsResponse returns true if query exists.",
              "type": "object",
              "properties": {
                "exists": {
                  "type": "boolean",
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    },
    "/v1/qan/ObjectDetails/SchemaByQueryID": {
      "post": {
        "description": "Provides the schema for a given queryID and serviceID.",
        "tags": [
          "QANService"
        ],
        "summary": "Get Schema",
        "operationId": "SchemaByQueryID",
        "parameters": [
          {
            "description": "SchemaByQueryIDRequest returns schema for given query ID and service ID.",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "SchemaByQueryIDRequest returns schema for given query ID and service ID.",
              "type": "object",
              "properties": {
                "query_id": {
                  "type": "string",
                  "x-order": 1
                },
                "service_id": {
                  "type": "string",
                  "x-order": 0
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "SchemaByQueryIDResponse is schema for given query ID and service ID.",
              "type": "object",
              "properties": {
                "schema": {
                  "type": "string",
                  "x-order": 0
                }
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32",
                  "x-order": 0
                },
                "details": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "@type": {
                        "type": "string",
                        "x-order": 0
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-order": 2
                },
                "message": {
                  "type": "string",
                  "x-order": 1
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "CollectorService"
    },
    {
      "name": "QANService"
    }
  ]
}