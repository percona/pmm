// Code generated by go-swagger; DO NOT EDIT.

package restore_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetLogsMixin5Reader is a Reader for the GetLogsMixin5 structure.
type GetLogsMixin5Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLogsMixin5Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLogsMixin5OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetLogsMixin5Default(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetLogsMixin5OK creates a GetLogsMixin5OK with default headers values
func NewGetLogsMixin5OK() *GetLogsMixin5OK {
	return &GetLogsMixin5OK{}
}

/*
GetLogsMixin5OK describes a response with status code 200, with default header values.

A successful response.
*/
type GetLogsMixin5OK struct {
	Payload *GetLogsMixin5OKBody
}

func (o *GetLogsMixin5OK) Error() string {
	return fmt.Sprintf("[GET /v1/backups/restores/{restore_id}/logs][%d] getLogsMixin5Ok  %+v", 200, o.Payload)
}

func (o *GetLogsMixin5OK) GetPayload() *GetLogsMixin5OKBody {
	return o.Payload
}

func (o *GetLogsMixin5OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(GetLogsMixin5OKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogsMixin5Default creates a GetLogsMixin5Default with default headers values
func NewGetLogsMixin5Default(code int) *GetLogsMixin5Default {
	return &GetLogsMixin5Default{
		_statusCode: code,
	}
}

/*
GetLogsMixin5Default describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetLogsMixin5Default struct {
	_statusCode int

	Payload *GetLogsMixin5DefaultBody
}

// Code gets the status code for the get logs mixin5 default response
func (o *GetLogsMixin5Default) Code() int {
	return o._statusCode
}

func (o *GetLogsMixin5Default) Error() string {
	return fmt.Sprintf("[GET /v1/backups/restores/{restore_id}/logs][%d] GetLogsMixin5 default  %+v", o._statusCode, o.Payload)
}

func (o *GetLogsMixin5Default) GetPayload() *GetLogsMixin5DefaultBody {
	return o.Payload
}

func (o *GetLogsMixin5Default) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {
	o.Payload = new(GetLogsMixin5DefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetLogsMixin5DefaultBody get logs mixin5 default body
swagger:model GetLogsMixin5DefaultBody
*/
type GetLogsMixin5DefaultBody struct {
	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*GetLogsMixin5DefaultBodyDetailsItems0 `json:"details"`
}

// Validate validates this get logs mixin5 default body
func (o *GetLogsMixin5DefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetLogsMixin5DefaultBody) validateDetails(formats strfmt.Registry) error {
	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetLogsMixin5 default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetLogsMixin5 default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get logs mixin5 default body based on the context it is used
func (o *GetLogsMixin5DefaultBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateDetails(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetLogsMixin5DefaultBody) contextValidateDetails(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Details); i++ {
		if o.Details[i] != nil {
			if err := o.Details[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("GetLogsMixin5 default" + "." + "details" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("GetLogsMixin5 default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetLogsMixin5DefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetLogsMixin5DefaultBody) UnmarshalBinary(b []byte) error {
	var res GetLogsMixin5DefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetLogsMixin5DefaultBodyDetailsItems0 get logs mixin5 default body details items0
swagger:model GetLogsMixin5DefaultBodyDetailsItems0
*/
type GetLogsMixin5DefaultBodyDetailsItems0 struct {
	// at type
	AtType string `json:"@type,omitempty"`
}

// Validate validates this get logs mixin5 default body details items0
func (o *GetLogsMixin5DefaultBodyDetailsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get logs mixin5 default body details items0 based on context it is used
func (o *GetLogsMixin5DefaultBodyDetailsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetLogsMixin5DefaultBodyDetailsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetLogsMixin5DefaultBodyDetailsItems0) UnmarshalBinary(b []byte) error {
	var res GetLogsMixin5DefaultBodyDetailsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetLogsMixin5OKBody get logs mixin5 OK body
swagger:model GetLogsMixin5OKBody
*/
type GetLogsMixin5OKBody struct {
	// logs
	Logs []*GetLogsMixin5OKBodyLogsItems0 `json:"logs"`

	// end
	End bool `json:"end,omitempty"`
}

// Validate validates this get logs mixin5 OK body
func (o *GetLogsMixin5OKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLogs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetLogsMixin5OKBody) validateLogs(formats strfmt.Registry) error {
	if swag.IsZero(o.Logs) { // not required
		return nil
	}

	for i := 0; i < len(o.Logs); i++ {
		if swag.IsZero(o.Logs[i]) { // not required
			continue
		}

		if o.Logs[i] != nil {
			if err := o.Logs[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getLogsMixin5Ok" + "." + "logs" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getLogsMixin5Ok" + "." + "logs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// ContextValidate validate this get logs mixin5 OK body based on the context it is used
func (o *GetLogsMixin5OKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateLogs(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetLogsMixin5OKBody) contextValidateLogs(ctx context.Context, formats strfmt.Registry) error {
	for i := 0; i < len(o.Logs); i++ {
		if o.Logs[i] != nil {
			if err := o.Logs[i].ContextValidate(ctx, formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getLogsMixin5Ok" + "." + "logs" + "." + strconv.Itoa(i))
				} else if ce, ok := err.(*errors.CompositeError); ok {
					return ce.ValidateName("getLogsMixin5Ok" + "." + "logs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetLogsMixin5OKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetLogsMixin5OKBody) UnmarshalBinary(b []byte) error {
	var res GetLogsMixin5OKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*
GetLogsMixin5OKBodyLogsItems0 LogChunk represent one chunk of logs.
swagger:model GetLogsMixin5OKBodyLogsItems0
*/
type GetLogsMixin5OKBodyLogsItems0 struct {
	// chunk id
	ChunkID int64 `json:"chunk_id,omitempty"`

	// data
	Data string `json:"data,omitempty"`
}

// Validate validates this get logs mixin5 OK body logs items0
func (o *GetLogsMixin5OKBodyLogsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get logs mixin5 OK body logs items0 based on context it is used
func (o *GetLogsMixin5OKBodyLogsItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetLogsMixin5OKBodyLogsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetLogsMixin5OKBodyLogsItems0) UnmarshalBinary(b []byte) error {
	var res GetLogsMixin5OKBodyLogsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
