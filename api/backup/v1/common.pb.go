// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: backup/v1/common.proto

package backupv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DataModel is a model used for performing a backup.
type DataModel int32

const (
	DataModel_DATA_MODEL_UNSPECIFIED DataModel = 0
	DataModel_DATA_MODEL_PHYSICAL    DataModel = 1
	DataModel_DATA_MODEL_LOGICAL     DataModel = 2
)

// Enum value maps for DataModel.
var (
	DataModel_name = map[int32]string{
		0: "DATA_MODEL_UNSPECIFIED",
		1: "DATA_MODEL_PHYSICAL",
		2: "DATA_MODEL_LOGICAL",
	}
	DataModel_value = map[string]int32{
		"DATA_MODEL_UNSPECIFIED": 0,
		"DATA_MODEL_PHYSICAL":    1,
		"DATA_MODEL_LOGICAL":     2,
	}
)

func (x DataModel) Enum() *DataModel {
	p := new(DataModel)
	*p = x
	return p
}

func (x DataModel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataModel) Descriptor() protoreflect.EnumDescriptor {
	return file_backup_v1_common_proto_enumTypes[0].Descriptor()
}

func (DataModel) Type() protoreflect.EnumType {
	return &file_backup_v1_common_proto_enumTypes[0]
}

func (x DataModel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataModel.Descriptor instead.
func (DataModel) EnumDescriptor() ([]byte, []int) {
	return file_backup_v1_common_proto_rawDescGZIP(), []int{0}
}

// BackupMode specifies backup mode.
type BackupMode int32

const (
	BackupMode_BACKUP_MODE_UNSPECIFIED BackupMode = 0
	BackupMode_BACKUP_MODE_SNAPSHOT    BackupMode = 1
	BackupMode_BACKUP_MODE_INCREMENTAL BackupMode = 2
	BackupMode_BACKUP_MODE_PITR        BackupMode = 3
)

// Enum value maps for BackupMode.
var (
	BackupMode_name = map[int32]string{
		0: "BACKUP_MODE_UNSPECIFIED",
		1: "BACKUP_MODE_SNAPSHOT",
		2: "BACKUP_MODE_INCREMENTAL",
		3: "BACKUP_MODE_PITR",
	}
	BackupMode_value = map[string]int32{
		"BACKUP_MODE_UNSPECIFIED": 0,
		"BACKUP_MODE_SNAPSHOT":    1,
		"BACKUP_MODE_INCREMENTAL": 2,
		"BACKUP_MODE_PITR":        3,
	}
)

func (x BackupMode) Enum() *BackupMode {
	p := new(BackupMode)
	*p = x
	return p
}

func (x BackupMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackupMode) Descriptor() protoreflect.EnumDescriptor {
	return file_backup_v1_common_proto_enumTypes[1].Descriptor()
}

func (BackupMode) Type() protoreflect.EnumType {
	return &file_backup_v1_common_proto_enumTypes[1]
}

func (x BackupMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackupMode.Descriptor instead.
func (BackupMode) EnumDescriptor() ([]byte, []int) {
	return file_backup_v1_common_proto_rawDescGZIP(), []int{1}
}

// BackupCompression specifies compression
type BackupCompression int32

const (
	BackupCompression_BACKUP_COMPRESSION_UNSPECIFIED BackupCompression = 0
	BackupCompression_BACKUP_COMPRESSION_DEFAULT     BackupCompression = 1
	BackupCompression_BACKUP_COMPRESSION_NONE        BackupCompression = 2
	BackupCompression_BACKUP_COMPRESSION_QUICKLZ     BackupCompression = 3
	BackupCompression_BACKUP_COMPRESSION_ZSTD        BackupCompression = 4
	BackupCompression_BACKUP_COMPRESSION_LZ4         BackupCompression = 5
	BackupCompression_BACKUP_COMPRESSION_S2          BackupCompression = 6
	BackupCompression_BACKUP_COMPRESSION_GZIP        BackupCompression = 7
	BackupCompression_BACKUP_COMPRESSION_SNAPPY      BackupCompression = 8
	BackupCompression_BACKUP_COMPRESSION_PGZIP       BackupCompression = 9
)

// Enum value maps for BackupCompression.
var (
	BackupCompression_name = map[int32]string{
		0: "BACKUP_COMPRESSION_UNSPECIFIED",
		1: "BACKUP_COMPRESSION_DEFAULT",
		2: "BACKUP_COMPRESSION_NONE",
		3: "BACKUP_COMPRESSION_QUICKLZ",
		4: "BACKUP_COMPRESSION_ZSTD",
		5: "BACKUP_COMPRESSION_LZ4",
		6: "BACKUP_COMPRESSION_S2",
		7: "BACKUP_COMPRESSION_GZIP",
		8: "BACKUP_COMPRESSION_SNAPPY",
		9: "BACKUP_COMPRESSION_PGZIP",
	}
	BackupCompression_value = map[string]int32{
		"BACKUP_COMPRESSION_UNSPECIFIED": 0,
		"BACKUP_COMPRESSION_DEFAULT":     1,
		"BACKUP_COMPRESSION_NONE":        2,
		"BACKUP_COMPRESSION_QUICKLZ":     3,
		"BACKUP_COMPRESSION_ZSTD":        4,
		"BACKUP_COMPRESSION_LZ4":         5,
		"BACKUP_COMPRESSION_S2":          6,
		"BACKUP_COMPRESSION_GZIP":        7,
		"BACKUP_COMPRESSION_SNAPPY":      8,
		"BACKUP_COMPRESSION_PGZIP":       9,
	}
)

func (x BackupCompression) Enum() *BackupCompression {
	p := new(BackupCompression)
	*p = x
	return p
}

func (x BackupCompression) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BackupCompression) Descriptor() protoreflect.EnumDescriptor {
	return file_backup_v1_common_proto_enumTypes[2].Descriptor()
}

func (BackupCompression) Type() protoreflect.EnumType {
	return &file_backup_v1_common_proto_enumTypes[2]
}

func (x BackupCompression) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BackupCompression.Descriptor instead.
func (BackupCompression) EnumDescriptor() ([]byte, []int) {
	return file_backup_v1_common_proto_rawDescGZIP(), []int{2}
}

// File represents file or folder on a storage.
type File struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	IsDirectory   bool                   `protobuf:"varint,2,opt,name=is_directory,json=isDirectory,proto3" json:"is_directory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_backup_v1_common_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_common_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_backup_v1_common_proto_rawDescGZIP(), []int{0}
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetIsDirectory() bool {
	if x != nil {
		return x.IsDirectory
	}
	return false
}

// PbmMetadata contains additional data for pbm cli tools.
type PbmMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of backup in backup tool representation.
	Name          string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PbmMetadata) Reset() {
	*x = PbmMetadata{}
	mi := &file_backup_v1_common_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PbmMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PbmMetadata) ProtoMessage() {}

func (x *PbmMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_common_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PbmMetadata.ProtoReflect.Descriptor instead.
func (*PbmMetadata) Descriptor() ([]byte, []int) {
	return file_backup_v1_common_proto_rawDescGZIP(), []int{1}
}

func (x *PbmMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Metadata contains extra artifact data like files it consists of, tool specific data, etc.
type Metadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of files backup consists of.
	FileList []*File `protobuf:"bytes,1,rep,name=file_list,json=fileList,proto3" json:"file_list,omitempty"`
	// Exact time DB can be restored to.
	RestoreTo *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=restore_to,json=restoreTo,proto3" json:"restore_to,omitempty"`
	// Extra data for backup tools.
	//
	// Types that are valid to be assigned to BackupToolMetadata:
	//
	//	*Metadata_PbmMetadata
	BackupToolMetadata isMetadata_BackupToolMetadata `protobuf_oneof:"backup_tool_metadata"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_backup_v1_common_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_common_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_backup_v1_common_proto_rawDescGZIP(), []int{2}
}

func (x *Metadata) GetFileList() []*File {
	if x != nil {
		return x.FileList
	}
	return nil
}

func (x *Metadata) GetRestoreTo() *timestamppb.Timestamp {
	if x != nil {
		return x.RestoreTo
	}
	return nil
}

func (x *Metadata) GetBackupToolMetadata() isMetadata_BackupToolMetadata {
	if x != nil {
		return x.BackupToolMetadata
	}
	return nil
}

func (x *Metadata) GetPbmMetadata() *PbmMetadata {
	if x != nil {
		if x, ok := x.BackupToolMetadata.(*Metadata_PbmMetadata); ok {
			return x.PbmMetadata
		}
	}
	return nil
}

type isMetadata_BackupToolMetadata interface {
	isMetadata_BackupToolMetadata()
}

type Metadata_PbmMetadata struct {
	PbmMetadata *PbmMetadata `protobuf:"bytes,3,opt,name=pbm_metadata,json=pbmMetadata,proto3,oneof"`
}

func (*Metadata_PbmMetadata) isMetadata_BackupToolMetadata() {}

// LogChunk represent one chunk of logs.
type LogChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       uint32                 `protobuf:"varint,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	Data          string                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogChunk) Reset() {
	*x = LogChunk{}
	mi := &file_backup_v1_common_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogChunk) ProtoMessage() {}

func (x *LogChunk) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_common_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogChunk.ProtoReflect.Descriptor instead.
func (*LogChunk) Descriptor() ([]byte, []int) {
	return file_backup_v1_common_proto_rawDescGZIP(), []int{3}
}

func (x *LogChunk) GetChunkId() uint32 {
	if x != nil {
		return x.ChunkId
	}
	return 0
}

func (x *LogChunk) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

var File_backup_v1_common_proto protoreflect.FileDescriptor

const file_backup_v1_common_proto_rawDesc = "" +
	"\n" +
	"\x16backup/v1/common.proto\x12\tbackup.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x17validate/validate.proto\"F\n" +
	"\x04File\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04name\x12!\n" +
	"\fis_directory\x18\x02 \x01(\bR\visDirectory\"!\n" +
	"\vPbmMetadata\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"\xc8\x01\n" +
	"\bMetadata\x12,\n" +
	"\tfile_list\x18\x01 \x03(\v2\x0f.backup.v1.FileR\bfileList\x129\n" +
	"\n" +
	"restore_to\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\trestoreTo\x12;\n" +
	"\fpbm_metadata\x18\x03 \x01(\v2\x16.backup.v1.PbmMetadataH\x00R\vpbmMetadataB\x16\n" +
	"\x14backup_tool_metadata\"9\n" +
	"\bLogChunk\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\rR\achunkId\x12\x12\n" +
	"\x04data\x18\x02 \x01(\tR\x04data*X\n" +
	"\tDataModel\x12\x1a\n" +
	"\x16DATA_MODEL_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13DATA_MODEL_PHYSICAL\x10\x01\x12\x16\n" +
	"\x12DATA_MODEL_LOGICAL\x10\x02*v\n" +
	"\n" +
	"BackupMode\x12\x1b\n" +
	"\x17BACKUP_MODE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14BACKUP_MODE_SNAPSHOT\x10\x01\x12\x1b\n" +
	"\x17BACKUP_MODE_INCREMENTAL\x10\x02\x12\x14\n" +
	"\x10BACKUP_MODE_PITR\x10\x03*\xc2\x02\n" +
	"\x11BackupCompression\x12\"\n" +
	"\x1eBACKUP_COMPRESSION_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aBACKUP_COMPRESSION_DEFAULT\x10\x01\x12\x1b\n" +
	"\x17BACKUP_COMPRESSION_NONE\x10\x02\x12\x1e\n" +
	"\x1aBACKUP_COMPRESSION_QUICKLZ\x10\x03\x12\x1b\n" +
	"\x17BACKUP_COMPRESSION_ZSTD\x10\x04\x12\x1a\n" +
	"\x16BACKUP_COMPRESSION_LZ4\x10\x05\x12\x19\n" +
	"\x15BACKUP_COMPRESSION_S2\x10\x06\x12\x1b\n" +
	"\x17BACKUP_COMPRESSION_GZIP\x10\a\x12\x1d\n" +
	"\x19BACKUP_COMPRESSION_SNAPPY\x10\b\x12\x1c\n" +
	"\x18BACKUP_COMPRESSION_PGZIP\x10\tB\x90\x01\n" +
	"\rcom.backup.v1B\vCommonProtoP\x01Z-github.com/percona/pmm/api/backup/v1;backupv1\xa2\x02\x03BXX\xaa\x02\tBackup.V1\xca\x02\tBackup\\V1\xe2\x02\x15Backup\\V1\\GPBMetadata\xea\x02\n" +
	"Backup::V1b\x06proto3"

var (
	file_backup_v1_common_proto_rawDescOnce sync.Once
	file_backup_v1_common_proto_rawDescData []byte
)

func file_backup_v1_common_proto_rawDescGZIP() []byte {
	file_backup_v1_common_proto_rawDescOnce.Do(func() {
		file_backup_v1_common_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backup_v1_common_proto_rawDesc), len(file_backup_v1_common_proto_rawDesc)))
	})
	return file_backup_v1_common_proto_rawDescData
}

var (
	file_backup_v1_common_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
	file_backup_v1_common_proto_msgTypes  = make([]protoimpl.MessageInfo, 4)
	file_backup_v1_common_proto_goTypes   = []any{
		(DataModel)(0),                // 0: backup.v1.DataModel
		(BackupMode)(0),               // 1: backup.v1.BackupMode
		(BackupCompression)(0),        // 2: backup.v1.BackupCompression
		(*File)(nil),                  // 3: backup.v1.File
		(*PbmMetadata)(nil),           // 4: backup.v1.PbmMetadata
		(*Metadata)(nil),              // 5: backup.v1.Metadata
		(*LogChunk)(nil),              // 6: backup.v1.LogChunk
		(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
	}
)

var file_backup_v1_common_proto_depIdxs = []int32{
	3, // 0: backup.v1.Metadata.file_list:type_name -> backup.v1.File
	7, // 1: backup.v1.Metadata.restore_to:type_name -> google.protobuf.Timestamp
	4, // 2: backup.v1.Metadata.pbm_metadata:type_name -> backup.v1.PbmMetadata
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_backup_v1_common_proto_init() }
func file_backup_v1_common_proto_init() {
	if File_backup_v1_common_proto != nil {
		return
	}
	file_backup_v1_common_proto_msgTypes[2].OneofWrappers = []any{
		(*Metadata_PbmMetadata)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backup_v1_common_proto_rawDesc), len(file_backup_v1_common_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_backup_v1_common_proto_goTypes,
		DependencyIndexes: file_backup_v1_common_proto_depIdxs,
		EnumInfos:         file_backup_v1_common_proto_enumTypes,
		MessageInfos:      file_backup_v1_common_proto_msgTypes,
	}.Build()
	File_backup_v1_common_proto = out.File
	file_backup_v1_common_proto_goTypes = nil
	file_backup_v1_common_proto_depIdxs = nil
}
