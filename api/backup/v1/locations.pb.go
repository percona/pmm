// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: backup/v1/locations.proto

package backupv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// FilesystemLocationConfig represents file system location config.
type FilesystemLocationConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilesystemLocationConfig) Reset() {
	*x = FilesystemLocationConfig{}
	mi := &file_backup_v1_locations_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilesystemLocationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesystemLocationConfig) ProtoMessage() {}

func (x *FilesystemLocationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_locations_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesystemLocationConfig.ProtoReflect.Descriptor instead.
func (*FilesystemLocationConfig) Descriptor() ([]byte, []int) {
	return file_backup_v1_locations_proto_rawDescGZIP(), []int{0}
}

func (x *FilesystemLocationConfig) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// S3LocationConfig represents S3 bucket configuration.
type S3LocationConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Endpoint      string                 `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKey     string                 `protobuf:"bytes,2,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	SecretKey     string                 `protobuf:"bytes,3,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	BucketName    string                 `protobuf:"bytes,4,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S3LocationConfig) Reset() {
	*x = S3LocationConfig{}
	mi := &file_backup_v1_locations_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S3LocationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3LocationConfig) ProtoMessage() {}

func (x *S3LocationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_locations_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3LocationConfig.ProtoReflect.Descriptor instead.
func (*S3LocationConfig) Descriptor() ([]byte, []int) {
	return file_backup_v1_locations_proto_rawDescGZIP(), []int{1}
}

func (x *S3LocationConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *S3LocationConfig) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *S3LocationConfig) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *S3LocationConfig) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

// Location represents single Backup Location.
type Location struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Machine-readable ID.
	LocationId string `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// Location name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Short description
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are valid to be assigned to Config:
	//
	//	*Location_FilesystemConfig
	//	*Location_S3Config
	Config        isLocation_Config `protobuf_oneof:"config"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Location) Reset() {
	*x = Location{}
	mi := &file_backup_v1_locations_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_locations_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_backup_v1_locations_proto_rawDescGZIP(), []int{2}
}

func (x *Location) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *Location) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Location) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Location) GetConfig() isLocation_Config {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Location) GetFilesystemConfig() *FilesystemLocationConfig {
	if x != nil {
		if x, ok := x.Config.(*Location_FilesystemConfig); ok {
			return x.FilesystemConfig
		}
	}
	return nil
}

func (x *Location) GetS3Config() *S3LocationConfig {
	if x != nil {
		if x, ok := x.Config.(*Location_S3Config); ok {
			return x.S3Config
		}
	}
	return nil
}

type isLocation_Config interface {
	isLocation_Config()
}

type Location_FilesystemConfig struct {
	FilesystemConfig *FilesystemLocationConfig `protobuf:"bytes,4,opt,name=filesystem_config,json=filesystemConfig,proto3,oneof"`
}

type Location_S3Config struct {
	S3Config *S3LocationConfig `protobuf:"bytes,5,opt,name=s3_config,json=s3Config,proto3,oneof"`
}

func (*Location_FilesystemConfig) isLocation_Config() {}

func (*Location_S3Config) isLocation_Config() {}

type ListLocationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLocationsRequest) Reset() {
	*x = ListLocationsRequest{}
	mi := &file_backup_v1_locations_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocationsRequest) ProtoMessage() {}

func (x *ListLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_locations_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocationsRequest.ProtoReflect.Descriptor instead.
func (*ListLocationsRequest) Descriptor() ([]byte, []int) {
	return file_backup_v1_locations_proto_rawDescGZIP(), []int{3}
}

type ListLocationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Locations     []*Location            `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLocationsResponse) Reset() {
	*x = ListLocationsResponse{}
	mi := &file_backup_v1_locations_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLocationsResponse) ProtoMessage() {}

func (x *ListLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_locations_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLocationsResponse.ProtoReflect.Descriptor instead.
func (*ListLocationsResponse) Descriptor() ([]byte, []int) {
	return file_backup_v1_locations_proto_rawDescGZIP(), []int{4}
}

func (x *ListLocationsResponse) GetLocations() []*Location {
	if x != nil {
		return x.Locations
	}
	return nil
}

type AddLocationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Location name
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Filesystem location configuration. Exactly one config should be set.
	FilesystemConfig *FilesystemLocationConfig `protobuf:"bytes,3,opt,name=filesystem_config,json=filesystemConfig,proto3" json:"filesystem_config,omitempty"`
	// S3 Bucket configuration. Exactly one config should be set.
	S3Config      *S3LocationConfig `protobuf:"bytes,4,opt,name=s3_config,json=s3Config,proto3" json:"s3_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddLocationRequest) Reset() {
	*x = AddLocationRequest{}
	mi := &file_backup_v1_locations_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLocationRequest) ProtoMessage() {}

func (x *AddLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_locations_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLocationRequest.ProtoReflect.Descriptor instead.
func (*AddLocationRequest) Descriptor() ([]byte, []int) {
	return file_backup_v1_locations_proto_rawDescGZIP(), []int{5}
}

func (x *AddLocationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddLocationRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *AddLocationRequest) GetFilesystemConfig() *FilesystemLocationConfig {
	if x != nil {
		return x.FilesystemConfig
	}
	return nil
}

func (x *AddLocationRequest) GetS3Config() *S3LocationConfig {
	if x != nil {
		return x.S3Config
	}
	return nil
}

type AddLocationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Machine-readable ID.
	LocationId    string `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddLocationResponse) Reset() {
	*x = AddLocationResponse{}
	mi := &file_backup_v1_locations_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddLocationResponse) ProtoMessage() {}

func (x *AddLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_locations_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddLocationResponse.ProtoReflect.Descriptor instead.
func (*AddLocationResponse) Descriptor() ([]byte, []int) {
	return file_backup_v1_locations_proto_rawDescGZIP(), []int{6}
}

func (x *AddLocationResponse) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

type ChangeLocationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Machine-readable ID.
	LocationId string `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// Location name
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Filesystem location configuration. Exactly one config should be set.
	FilesystemConfig *FilesystemLocationConfig `protobuf:"bytes,4,opt,name=filesystem_config,json=filesystemConfig,proto3" json:"filesystem_config,omitempty"`
	// S3 Bucket configuration. Exactly one config should be set.
	S3Config      *S3LocationConfig `protobuf:"bytes,5,opt,name=s3_config,json=s3Config,proto3" json:"s3_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeLocationRequest) Reset() {
	*x = ChangeLocationRequest{}
	mi := &file_backup_v1_locations_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeLocationRequest) ProtoMessage() {}

func (x *ChangeLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_locations_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeLocationRequest.ProtoReflect.Descriptor instead.
func (*ChangeLocationRequest) Descriptor() ([]byte, []int) {
	return file_backup_v1_locations_proto_rawDescGZIP(), []int{7}
}

func (x *ChangeLocationRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *ChangeLocationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChangeLocationRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ChangeLocationRequest) GetFilesystemConfig() *FilesystemLocationConfig {
	if x != nil {
		return x.FilesystemConfig
	}
	return nil
}

func (x *ChangeLocationRequest) GetS3Config() *S3LocationConfig {
	if x != nil {
		return x.S3Config
	}
	return nil
}

type ChangeLocationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeLocationResponse) Reset() {
	*x = ChangeLocationResponse{}
	mi := &file_backup_v1_locations_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeLocationResponse) ProtoMessage() {}

func (x *ChangeLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_locations_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeLocationResponse.ProtoReflect.Descriptor instead.
func (*ChangeLocationResponse) Descriptor() ([]byte, []int) {
	return file_backup_v1_locations_proto_rawDescGZIP(), []int{8}
}

type RemoveLocationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Machine-readable ID.
	LocationId string `protobuf:"bytes,1,opt,name=location_id,json=locationId,proto3" json:"location_id,omitempty"`
	// Force mode
	Force         bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveLocationRequest) Reset() {
	*x = RemoveLocationRequest{}
	mi := &file_backup_v1_locations_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLocationRequest) ProtoMessage() {}

func (x *RemoveLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_locations_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLocationRequest.ProtoReflect.Descriptor instead.
func (*RemoveLocationRequest) Descriptor() ([]byte, []int) {
	return file_backup_v1_locations_proto_rawDescGZIP(), []int{9}
}

func (x *RemoveLocationRequest) GetLocationId() string {
	if x != nil {
		return x.LocationId
	}
	return ""
}

func (x *RemoveLocationRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type RemoveLocationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveLocationResponse) Reset() {
	*x = RemoveLocationResponse{}
	mi := &file_backup_v1_locations_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveLocationResponse) ProtoMessage() {}

func (x *RemoveLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_locations_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveLocationResponse.ProtoReflect.Descriptor instead.
func (*RemoveLocationResponse) Descriptor() ([]byte, []int) {
	return file_backup_v1_locations_proto_rawDescGZIP(), []int{10}
}

type TestLocationConfigRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Filesystem location configuration. Exactly one config should be set.
	FilesystemConfig *FilesystemLocationConfig `protobuf:"bytes,1,opt,name=filesystem_config,json=filesystemConfig,proto3" json:"filesystem_config,omitempty"`
	// S3 Bucket configuration. Exactly one config should be set.
	S3Config      *S3LocationConfig `protobuf:"bytes,2,opt,name=s3_config,json=s3Config,proto3" json:"s3_config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestLocationConfigRequest) Reset() {
	*x = TestLocationConfigRequest{}
	mi := &file_backup_v1_locations_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestLocationConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestLocationConfigRequest) ProtoMessage() {}

func (x *TestLocationConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_locations_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestLocationConfigRequest.ProtoReflect.Descriptor instead.
func (*TestLocationConfigRequest) Descriptor() ([]byte, []int) {
	return file_backup_v1_locations_proto_rawDescGZIP(), []int{11}
}

func (x *TestLocationConfigRequest) GetFilesystemConfig() *FilesystemLocationConfig {
	if x != nil {
		return x.FilesystemConfig
	}
	return nil
}

func (x *TestLocationConfigRequest) GetS3Config() *S3LocationConfig {
	if x != nil {
		return x.S3Config
	}
	return nil
}

type TestLocationConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TestLocationConfigResponse) Reset() {
	*x = TestLocationConfigResponse{}
	mi := &file_backup_v1_locations_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TestLocationConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestLocationConfigResponse) ProtoMessage() {}

func (x *TestLocationConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_backup_v1_locations_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestLocationConfigResponse.ProtoReflect.Descriptor instead.
func (*TestLocationConfigResponse) Descriptor() ([]byte, []int) {
	return file_backup_v1_locations_proto_rawDescGZIP(), []int{12}
}

var File_backup_v1_locations_proto protoreflect.FileDescriptor

const file_backup_v1_locations_proto_rawDesc = "" +
	"\n" +
	"\x19backup/v1/locations.proto\x12\tbackup.v1\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x17validate/validate.proto\"7\n" +
	"\x18FilesystemLocationConfig\x12\x1b\n" +
	"\x04path\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04path\"\xb1\x01\n" +
	"\x10S3LocationConfig\x12#\n" +
	"\bendpoint\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\bendpoint\x12&\n" +
	"\n" +
	"access_key\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\taccessKey\x12&\n" +
	"\n" +
	"secret_key\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\tsecretKey\x12(\n" +
	"\vbucket_name\x18\x04 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"bucketName\"\xfb\x01\n" +
	"\bLocation\x12\x1f\n" +
	"\vlocation_id\x18\x01 \x01(\tR\n" +
	"locationId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12R\n" +
	"\x11filesystem_config\x18\x04 \x01(\v2#.backup.v1.FilesystemLocationConfigH\x00R\x10filesystemConfig\x12:\n" +
	"\ts3_config\x18\x05 \x01(\v2\x1b.backup.v1.S3LocationConfigH\x00R\bs3ConfigB\b\n" +
	"\x06config\"\x16\n" +
	"\x14ListLocationsRequest\"J\n" +
	"\x15ListLocationsResponse\x121\n" +
	"\tlocations\x18\x01 \x03(\v2\x13.backup.v1.LocationR\tlocations\"\xdf\x01\n" +
	"\x12AddLocationRequest\x12\x1b\n" +
	"\x04name\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12P\n" +
	"\x11filesystem_config\x18\x03 \x01(\v2#.backup.v1.FilesystemLocationConfigR\x10filesystemConfig\x128\n" +
	"\ts3_config\x18\x04 \x01(\v2\x1b.backup.v1.S3LocationConfigR\bs3Config\"6\n" +
	"\x13AddLocationResponse\x12\x1f\n" +
	"\vlocation_id\x18\x01 \x01(\tR\n" +
	"locationId\"\x83\x02\n" +
	"\x15ChangeLocationRequest\x12(\n" +
	"\vlocation_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"locationId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12P\n" +
	"\x11filesystem_config\x18\x04 \x01(\v2#.backup.v1.FilesystemLocationConfigR\x10filesystemConfig\x128\n" +
	"\ts3_config\x18\x05 \x01(\v2\x1b.backup.v1.S3LocationConfigR\bs3Config\"\x18\n" +
	"\x16ChangeLocationResponse\"N\n" +
	"\x15RemoveLocationRequest\x12\x1f\n" +
	"\vlocation_id\x18\x01 \x01(\tR\n" +
	"locationId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"\x18\n" +
	"\x16RemoveLocationResponse\"\xa7\x01\n" +
	"\x19TestLocationConfigRequest\x12P\n" +
	"\x11filesystem_config\x18\x01 \x01(\v2#.backup.v1.FilesystemLocationConfigR\x10filesystemConfig\x128\n" +
	"\ts3_config\x18\x02 \x01(\v2\x1b.backup.v1.S3LocationConfigR\bs3Config\"\x1c\n" +
	"\x1aTestLocationConfigResponse2\xbe\a\n" +
	"\x10LocationsService\x12\xa3\x01\n" +
	"\rListLocations\x12\x1f.backup.v1.ListLocationsRequest\x1a .backup.v1.ListLocationsResponse\"O\x92A/\x12\x15List Backup Locations\x1a\x16List backup locations.\x82\xd3\xe4\x93\x02\x17\x12\x15/v1/backups/locations\x12\xa0\x01\n" +
	"\vAddLocation\x12\x1d.backup.v1.AddLocationRequest\x1a\x1e.backup.v1.AddLocationResponse\"R\x92A/\x12\x15Add a Backup Location\x1a\x16Add a backup location.\x82\xd3\xe4\x93\x02\x1a:\x01*\"\x15/v1/backups/locations\x12\xbd\x01\n" +
	"\x0eChangeLocation\x12 .backup.v1.ChangeLocationRequest\x1a!.backup.v1.ChangeLocationResponse\"f\x92A5\x12\x18Change a Backup Location\x1a\x19Change a backup location.\x82\xd3\xe4\x93\x02(:\x01*\x1a#/v1/backups/locations/{location_id}\x12\xbb\x01\n" +
	"\x0eRemoveLocation\x12 .backup.v1.RemoveLocationRequest\x1a!.backup.v1.RemoveLocationResponse\"d\x92A6\x12\x19Remove a Scheduled Backup\x1a\x19Remove a backup location.\x82\xd3\xe4\x93\x02%*#/v1/backups/locations/{location_id}\x12\xe2\x01\n" +
	"\x12TestLocationConfig\x12$.backup.v1.TestLocationConfigRequest\x1a%.backup.v1.TestLocationConfigResponse\"\x7f\x92AQ\x12&Test a Backup Location and Credentials\x1a'Test a backup location and credentials.\x82\xd3\xe4\x93\x02%:\x01*\" /v1/backups/locations:testConfigB\x93\x01\n" +
	"\rcom.backup.v1B\x0eLocationsProtoP\x01Z-github.com/percona/pmm/api/backup/v1;backupv1\xa2\x02\x03BXX\xaa\x02\tBackup.V1\xca\x02\tBackup\\V1\xe2\x02\x15Backup\\V1\\GPBMetadata\xea\x02\n" +
	"Backup::V1b\x06proto3"

var (
	file_backup_v1_locations_proto_rawDescOnce sync.Once
	file_backup_v1_locations_proto_rawDescData []byte
)

func file_backup_v1_locations_proto_rawDescGZIP() []byte {
	file_backup_v1_locations_proto_rawDescOnce.Do(func() {
		file_backup_v1_locations_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_backup_v1_locations_proto_rawDesc), len(file_backup_v1_locations_proto_rawDesc)))
	})
	return file_backup_v1_locations_proto_rawDescData
}

var (
	file_backup_v1_locations_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
	file_backup_v1_locations_proto_goTypes  = []any{
		(*FilesystemLocationConfig)(nil),   // 0: backup.v1.FilesystemLocationConfig
		(*S3LocationConfig)(nil),           // 1: backup.v1.S3LocationConfig
		(*Location)(nil),                   // 2: backup.v1.Location
		(*ListLocationsRequest)(nil),       // 3: backup.v1.ListLocationsRequest
		(*ListLocationsResponse)(nil),      // 4: backup.v1.ListLocationsResponse
		(*AddLocationRequest)(nil),         // 5: backup.v1.AddLocationRequest
		(*AddLocationResponse)(nil),        // 6: backup.v1.AddLocationResponse
		(*ChangeLocationRequest)(nil),      // 7: backup.v1.ChangeLocationRequest
		(*ChangeLocationResponse)(nil),     // 8: backup.v1.ChangeLocationResponse
		(*RemoveLocationRequest)(nil),      // 9: backup.v1.RemoveLocationRequest
		(*RemoveLocationResponse)(nil),     // 10: backup.v1.RemoveLocationResponse
		(*TestLocationConfigRequest)(nil),  // 11: backup.v1.TestLocationConfigRequest
		(*TestLocationConfigResponse)(nil), // 12: backup.v1.TestLocationConfigResponse
	}
)

var file_backup_v1_locations_proto_depIdxs = []int32{
	0,  // 0: backup.v1.Location.filesystem_config:type_name -> backup.v1.FilesystemLocationConfig
	1,  // 1: backup.v1.Location.s3_config:type_name -> backup.v1.S3LocationConfig
	2,  // 2: backup.v1.ListLocationsResponse.locations:type_name -> backup.v1.Location
	0,  // 3: backup.v1.AddLocationRequest.filesystem_config:type_name -> backup.v1.FilesystemLocationConfig
	1,  // 4: backup.v1.AddLocationRequest.s3_config:type_name -> backup.v1.S3LocationConfig
	0,  // 5: backup.v1.ChangeLocationRequest.filesystem_config:type_name -> backup.v1.FilesystemLocationConfig
	1,  // 6: backup.v1.ChangeLocationRequest.s3_config:type_name -> backup.v1.S3LocationConfig
	0,  // 7: backup.v1.TestLocationConfigRequest.filesystem_config:type_name -> backup.v1.FilesystemLocationConfig
	1,  // 8: backup.v1.TestLocationConfigRequest.s3_config:type_name -> backup.v1.S3LocationConfig
	3,  // 9: backup.v1.LocationsService.ListLocations:input_type -> backup.v1.ListLocationsRequest
	5,  // 10: backup.v1.LocationsService.AddLocation:input_type -> backup.v1.AddLocationRequest
	7,  // 11: backup.v1.LocationsService.ChangeLocation:input_type -> backup.v1.ChangeLocationRequest
	9,  // 12: backup.v1.LocationsService.RemoveLocation:input_type -> backup.v1.RemoveLocationRequest
	11, // 13: backup.v1.LocationsService.TestLocationConfig:input_type -> backup.v1.TestLocationConfigRequest
	4,  // 14: backup.v1.LocationsService.ListLocations:output_type -> backup.v1.ListLocationsResponse
	6,  // 15: backup.v1.LocationsService.AddLocation:output_type -> backup.v1.AddLocationResponse
	8,  // 16: backup.v1.LocationsService.ChangeLocation:output_type -> backup.v1.ChangeLocationResponse
	10, // 17: backup.v1.LocationsService.RemoveLocation:output_type -> backup.v1.RemoveLocationResponse
	12, // 18: backup.v1.LocationsService.TestLocationConfig:output_type -> backup.v1.TestLocationConfigResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_backup_v1_locations_proto_init() }
func file_backup_v1_locations_proto_init() {
	if File_backup_v1_locations_proto != nil {
		return
	}
	file_backup_v1_locations_proto_msgTypes[2].OneofWrappers = []any{
		(*Location_FilesystemConfig)(nil),
		(*Location_S3Config)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_backup_v1_locations_proto_rawDesc), len(file_backup_v1_locations_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_backup_v1_locations_proto_goTypes,
		DependencyIndexes: file_backup_v1_locations_proto_depIdxs,
		MessageInfos:      file_backup_v1_locations_proto_msgTypes,
	}.Build()
	File_backup_v1_locations_proto = out.File
	file_backup_v1_locations_proto_goTypes = nil
	file_backup_v1_locations_proto_depIdxs = nil
}
