// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: backup/v1/restores.proto

package backupv1

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	RestoreHistoryService_ListRestoreHistory_FullMethodName = "/backup.v1.RestoreHistoryService/ListRestoreHistory"
)

// RestoreHistoryServiceClient is the client API for RestoreHistoryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RestoreHistoryServiceClient interface {
	// ListRestoreHistory returns a list of all backup restore history items.
	ListRestoreHistory(ctx context.Context, in *ListRestoreHistoryRequest, opts ...grpc.CallOption) (*ListRestoreHistoryResponse, error)
}

type restoreHistoryServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRestoreHistoryServiceClient(cc grpc.ClientConnInterface) RestoreHistoryServiceClient {
	return &restoreHistoryServiceClient{cc}
}

func (c *restoreHistoryServiceClient) ListRestoreHistory(ctx context.Context, in *ListRestoreHistoryRequest, opts ...grpc.CallOption) (*ListRestoreHistoryResponse, error) {
	out := new(ListRestoreHistoryResponse)
	err := c.cc.Invoke(ctx, RestoreHistoryService_ListRestoreHistory_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RestoreHistoryServiceServer is the server API for RestoreHistoryService service.
// All implementations must embed UnimplementedRestoreHistoryServiceServer
// for forward compatibility
type RestoreHistoryServiceServer interface {
	// ListRestoreHistory returns a list of all backup restore history items.
	ListRestoreHistory(context.Context, *ListRestoreHistoryRequest) (*ListRestoreHistoryResponse, error)
	mustEmbedUnimplementedRestoreHistoryServiceServer()
}

// UnimplementedRestoreHistoryServiceServer must be embedded to have forward compatible implementations.
type UnimplementedRestoreHistoryServiceServer struct{}

func (UnimplementedRestoreHistoryServiceServer) ListRestoreHistory(context.Context, *ListRestoreHistoryRequest) (*ListRestoreHistoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRestoreHistory not implemented")
}
func (UnimplementedRestoreHistoryServiceServer) mustEmbedUnimplementedRestoreHistoryServiceServer() {}

// UnsafeRestoreHistoryServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RestoreHistoryServiceServer will
// result in compilation errors.
type UnsafeRestoreHistoryServiceServer interface {
	mustEmbedUnimplementedRestoreHistoryServiceServer()
}

func RegisterRestoreHistoryServiceServer(s grpc.ServiceRegistrar, srv RestoreHistoryServiceServer) {
	s.RegisterService(&RestoreHistoryService_ServiceDesc, srv)
}

func _RestoreHistoryService_ListRestoreHistory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRestoreHistoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RestoreHistoryServiceServer).ListRestoreHistory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: RestoreHistoryService_ListRestoreHistory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RestoreHistoryServiceServer).ListRestoreHistory(ctx, req.(*ListRestoreHistoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// RestoreHistoryService_ServiceDesc is the grpc.ServiceDesc for RestoreHistoryService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RestoreHistoryService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "backup.v1.RestoreHistoryService",
	HandlerType: (*RestoreHistoryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListRestoreHistory",
			Handler:    _RestoreHistoryService_ListRestoreHistory_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "backup/v1/restores.proto",
}
