// Code generated by go-swagger; DO NOT EDIT.

package advisor_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetFailedChecksParams creates a new GetFailedChecksParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetFailedChecksParams() *GetFailedChecksParams {
	return &GetFailedChecksParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetFailedChecksParamsWithTimeout creates a new GetFailedChecksParams object
// with the ability to set a timeout on a request.
func NewGetFailedChecksParamsWithTimeout(timeout time.Duration) *GetFailedChecksParams {
	return &GetFailedChecksParams{
		timeout: timeout,
	}
}

// NewGetFailedChecksParamsWithContext creates a new GetFailedChecksParams object
// with the ability to set a context for a request.
func NewGetFailedChecksParamsWithContext(ctx context.Context) *GetFailedChecksParams {
	return &GetFailedChecksParams{
		Context: ctx,
	}
}

// NewGetFailedChecksParamsWithHTTPClient creates a new GetFailedChecksParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetFailedChecksParamsWithHTTPClient(client *http.Client) *GetFailedChecksParams {
	return &GetFailedChecksParams{
		HTTPClient: client,
	}
}

/*
GetFailedChecksParams contains all the parameters to send to the API endpoint

	for the get failed checks operation.

	Typically these are written to a http.Request.
*/
type GetFailedChecksParams struct {
	/* PageIndex.

	   Index of the requested page, starts from 0.

	   Format: int32
	*/
	PageIndex *int32

	/* PageSize.

	   Maximum number of results per page.

	   Format: int32
	*/
	PageSize *int32

	/* ServiceID.

	   Service ID.
	*/
	ServiceID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get failed checks params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetFailedChecksParams) WithDefaults() *GetFailedChecksParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get failed checks params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetFailedChecksParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get failed checks params
func (o *GetFailedChecksParams) WithTimeout(timeout time.Duration) *GetFailedChecksParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get failed checks params
func (o *GetFailedChecksParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get failed checks params
func (o *GetFailedChecksParams) WithContext(ctx context.Context) *GetFailedChecksParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get failed checks params
func (o *GetFailedChecksParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get failed checks params
func (o *GetFailedChecksParams) WithHTTPClient(client *http.Client) *GetFailedChecksParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get failed checks params
func (o *GetFailedChecksParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPageIndex adds the pageIndex to the get failed checks params
func (o *GetFailedChecksParams) WithPageIndex(pageIndex *int32) *GetFailedChecksParams {
	o.SetPageIndex(pageIndex)
	return o
}

// SetPageIndex adds the pageIndex to the get failed checks params
func (o *GetFailedChecksParams) SetPageIndex(pageIndex *int32) {
	o.PageIndex = pageIndex
}

// WithPageSize adds the pageSize to the get failed checks params
func (o *GetFailedChecksParams) WithPageSize(pageSize *int32) *GetFailedChecksParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get failed checks params
func (o *GetFailedChecksParams) SetPageSize(pageSize *int32) {
	o.PageSize = pageSize
}

// WithServiceID adds the serviceID to the get failed checks params
func (o *GetFailedChecksParams) WithServiceID(serviceID *string) *GetFailedChecksParams {
	o.SetServiceID(serviceID)
	return o
}

// SetServiceID adds the serviceId to the get failed checks params
func (o *GetFailedChecksParams) SetServiceID(serviceID *string) {
	o.ServiceID = serviceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetFailedChecksParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {
	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.PageIndex != nil {

		// query param page_index
		var qrPageIndex int32

		if o.PageIndex != nil {
			qrPageIndex = *o.PageIndex
		}
		qPageIndex := swag.FormatInt32(qrPageIndex)
		if qPageIndex != "" {
			if err := r.SetQueryParam("page_index", qPageIndex); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize int32

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt32(qrPageSize)
		if qPageSize != "" {
			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.ServiceID != nil {

		// query param service_id
		var qrServiceID string

		if o.ServiceID != nil {
			qrServiceID = *o.ServiceID
		}
		qServiceID := qrServiceID
		if qServiceID != "" {
			if err := r.SetQueryParam("service_id", qServiceID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
