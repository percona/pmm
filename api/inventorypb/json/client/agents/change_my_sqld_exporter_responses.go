// Code generated by go-swagger; DO NOT EDIT.

package agents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// ChangeMySqldExporterReader is a Reader for the ChangeMySqldExporter structure.
type ChangeMySqldExporterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeMySqldExporterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewChangeMySqldExporterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewChangeMySqldExporterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewChangeMySqldExporterOK creates a ChangeMySqldExporterOK with default headers values
func NewChangeMySqldExporterOK() *ChangeMySqldExporterOK {
	return &ChangeMySqldExporterOK{}
}

/*ChangeMySqldExporterOK handles this case with default header values.

A successful response.
*/
type ChangeMySqldExporterOK struct {
	Payload *ChangeMySqldExporterOKBody
}

func (o *ChangeMySqldExporterOK) Error() string {
	return fmt.Sprintf("[POST /v0/inventory/Agents/ChangeMySQLdExporter][%d] changeMySqldExporterOk  %+v", 200, o.Payload)
}

func (o *ChangeMySqldExporterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ChangeMySqldExporterOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewChangeMySqldExporterDefault creates a ChangeMySqldExporterDefault with default headers values
func NewChangeMySqldExporterDefault(code int) *ChangeMySqldExporterDefault {
	return &ChangeMySqldExporterDefault{
		_statusCode: code,
	}
}

/*ChangeMySqldExporterDefault handles this case with default header values.

An error response.
*/
type ChangeMySqldExporterDefault struct {
	_statusCode int

	Payload *ChangeMySqldExporterDefaultBody
}

// Code gets the status code for the change my sqld exporter default response
func (o *ChangeMySqldExporterDefault) Code() int {
	return o._statusCode
}

func (o *ChangeMySqldExporterDefault) Error() string {
	return fmt.Sprintf("[POST /v0/inventory/Agents/ChangeMySQLdExporter][%d] ChangeMySQLdExporter default  %+v", o._statusCode, o.Payload)
}

func (o *ChangeMySqldExporterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ChangeMySqldExporterDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ChangeMySqldExporterBody change my sqld exporter body
swagger:model ChangeMySqldExporterBody
*/
type ChangeMySqldExporterBody struct {

	// agent id
	AgentID string `json:"agent_id,omitempty"`

	// Replace all custom user-assigned labels.
	CustomLabels map[string]string `json:"custom_labels,omitempty"`

	// disabled
	Disabled bool `json:"disabled,omitempty"`

	// enabled
	Enabled bool `json:"enabled,omitempty"`

	// Remove all custom user-assigned labels.
	RemoveCustomLabels bool `json:"remove_custom_labels,omitempty"`
}

// Validate validates this change my sqld exporter body
func (o *ChangeMySqldExporterBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ChangeMySqldExporterBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ChangeMySqldExporterBody) UnmarshalBinary(b []byte) error {
	var res ChangeMySqldExporterBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ChangeMySqldExporterDefaultBody ErrorResponse is a message returned on HTTP error.
swagger:model ChangeMySqldExporterDefaultBody
*/
type ChangeMySqldExporterDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this change my sqld exporter default body
func (o *ChangeMySqldExporterDefaultBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ChangeMySqldExporterDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ChangeMySqldExporterDefaultBody) UnmarshalBinary(b []byte) error {
	var res ChangeMySqldExporterDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ChangeMySqldExporterOKBody change my sqld exporter OK body
swagger:model ChangeMySqldExporterOKBody
*/
type ChangeMySqldExporterOKBody struct {

	// mysqld exporter
	MysqldExporter *ChangeMySqldExporterOKBodyMysqldExporter `json:"mysqld_exporter,omitempty"`
}

// Validate validates this change my sqld exporter OK body
func (o *ChangeMySqldExporterOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMysqldExporter(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ChangeMySqldExporterOKBody) validateMysqldExporter(formats strfmt.Registry) error {

	if swag.IsZero(o.MysqldExporter) { // not required
		return nil
	}

	if o.MysqldExporter != nil {
		if err := o.MysqldExporter.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("changeMySqldExporterOk" + "." + "mysqld_exporter")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ChangeMySqldExporterOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ChangeMySqldExporterOKBody) UnmarshalBinary(b []byte) error {
	var res ChangeMySqldExporterOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ChangeMySqldExporterOKBodyMysqldExporter MySQLdExporter runs on Generic or Container Node and exposes MySQL and AmazonRDSMySQL Service metrics.
swagger:model ChangeMySqldExporterOKBodyMysqldExporter
*/
type ChangeMySqldExporterOKBodyMysqldExporter struct {

	// Unique randomly generated instance identifier.
	AgentID string `json:"agent_id,omitempty"`

	// Custom user-assigned labels.
	CustomLabels map[string]string `json:"custom_labels,omitempty"`

	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `json:"disabled,omitempty"`

	// Listen port for scraping metrics.
	ListenPort int64 `json:"listen_port,omitempty"`

	// MySQL password for scraping metrics.
	Password string `json:"password,omitempty"`

	// The pmm-agent identifier which runs this instance.
	PMMAgentID string `json:"pmm_agent_id,omitempty"`

	// Service identifier.
	ServiceID string `json:"service_id,omitempty"`

	// AgentStatus represents actual Agent status.
	// Enum: [AGENT_STATUS_INVALID STARTING RUNNING WAITING STOPPING DONE]
	Status *string `json:"status,omitempty"`

	// MySQL username for scraping metrics.
	Username string `json:"username,omitempty"`
}

// Validate validates this change my sqld exporter OK body mysqld exporter
func (o *ChangeMySqldExporterOKBodyMysqldExporter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var changeMySqldExporterOkBodyMysqldExporterTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AGENT_STATUS_INVALID","STARTING","RUNNING","WAITING","STOPPING","DONE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		changeMySqldExporterOkBodyMysqldExporterTypeStatusPropEnum = append(changeMySqldExporterOkBodyMysqldExporterTypeStatusPropEnum, v)
	}
}

const (

	// ChangeMySqldExporterOKBodyMysqldExporterStatusAGENTSTATUSINVALID captures enum value "AGENT_STATUS_INVALID"
	ChangeMySqldExporterOKBodyMysqldExporterStatusAGENTSTATUSINVALID string = "AGENT_STATUS_INVALID"

	// ChangeMySqldExporterOKBodyMysqldExporterStatusSTARTING captures enum value "STARTING"
	ChangeMySqldExporterOKBodyMysqldExporterStatusSTARTING string = "STARTING"

	// ChangeMySqldExporterOKBodyMysqldExporterStatusRUNNING captures enum value "RUNNING"
	ChangeMySqldExporterOKBodyMysqldExporterStatusRUNNING string = "RUNNING"

	// ChangeMySqldExporterOKBodyMysqldExporterStatusWAITING captures enum value "WAITING"
	ChangeMySqldExporterOKBodyMysqldExporterStatusWAITING string = "WAITING"

	// ChangeMySqldExporterOKBodyMysqldExporterStatusSTOPPING captures enum value "STOPPING"
	ChangeMySqldExporterOKBodyMysqldExporterStatusSTOPPING string = "STOPPING"

	// ChangeMySqldExporterOKBodyMysqldExporterStatusDONE captures enum value "DONE"
	ChangeMySqldExporterOKBodyMysqldExporterStatusDONE string = "DONE"
)

// prop value enum
func (o *ChangeMySqldExporterOKBodyMysqldExporter) validateStatusEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, changeMySqldExporterOkBodyMysqldExporterTypeStatusPropEnum); err != nil {
		return err
	}
	return nil
}

func (o *ChangeMySqldExporterOKBodyMysqldExporter) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("changeMySqldExporterOk"+"."+"mysqld_exporter"+"."+"status", "body", *o.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ChangeMySqldExporterOKBodyMysqldExporter) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ChangeMySqldExporterOKBodyMysqldExporter) UnmarshalBinary(b []byte) error {
	var res ChangeMySqldExporterOKBodyMysqldExporter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
