// Code generated by go-swagger; DO NOT EDIT.

package agents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AgentsAddQANPostgreSQLPgStatMonitorAgentReader is a Reader for the AgentsAddQANPostgreSQLPgStatMonitorAgent structure.
type AgentsAddQANPostgreSQLPgStatMonitorAgentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAgentsAddQANPostgreSQLPgStatMonitorAgentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAgentsAddQANPostgreSQLPgStatMonitorAgentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAgentsAddQANPostgreSQLPgStatMonitorAgentOK creates a AgentsAddQANPostgreSQLPgStatMonitorAgentOK with default headers values
func NewAgentsAddQANPostgreSQLPgStatMonitorAgentOK() *AgentsAddQANPostgreSQLPgStatMonitorAgentOK {
	return &AgentsAddQANPostgreSQLPgStatMonitorAgentOK{}
}

/*AgentsAddQANPostgreSQLPgStatMonitorAgentOK handles this case with default header values.

A successful response.
*/
type AgentsAddQANPostgreSQLPgStatMonitorAgentOK struct {
	Payload *AgentsAddQANPostgreSQLPgStatMonitorAgentOKBody
}

func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentOK) Error() string {
	return fmt.Sprintf("[POST /v1/inventory/Agents/AddQANPostgreSQLPgStatMonitorAgent][%d] agentsAddQanPostgreSqlPgStatMonitorAgentOk  %+v", 200, o.Payload)
}

func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentOK) GetPayload() *AgentsAddQANPostgreSQLPgStatMonitorAgentOKBody {
	return o.Payload
}

func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AgentsAddQANPostgreSQLPgStatMonitorAgentOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAgentsAddQANPostgreSQLPgStatMonitorAgentDefault creates a AgentsAddQANPostgreSQLPgStatMonitorAgentDefault with default headers values
func NewAgentsAddQANPostgreSQLPgStatMonitorAgentDefault(code int) *AgentsAddQANPostgreSQLPgStatMonitorAgentDefault {
	return &AgentsAddQANPostgreSQLPgStatMonitorAgentDefault{
		_statusCode: code,
	}
}

/*AgentsAddQANPostgreSQLPgStatMonitorAgentDefault handles this case with default header values.

An unexpected error response.
*/
type AgentsAddQANPostgreSQLPgStatMonitorAgentDefault struct {
	_statusCode int

	Payload *AgentsAddQANPostgreSQLPgStatMonitorAgentDefaultBody
}

// Code gets the status code for the agents add QAN postgre SQL pg stat monitor agent default response
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentDefault) Code() int {
	return o._statusCode
}

func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentDefault) Error() string {
	return fmt.Sprintf("[POST /v1/inventory/Agents/AddQANPostgreSQLPgStatMonitorAgent][%d] Agents_AddQANPostgreSQLPgStatMonitorAgent default  %+v", o._statusCode, o.Payload)
}

func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentDefault) GetPayload() *AgentsAddQANPostgreSQLPgStatMonitorAgentDefaultBody {
	return o.Payload
}

func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AgentsAddQANPostgreSQLPgStatMonitorAgentDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*AgentsAddQANPostgreSQLPgStatMonitorAgentBody agents add QAN postgre SQL pg stat monitor agent body
swagger:model AgentsAddQANPostgreSQLPgStatMonitorAgentBody
*/
type AgentsAddQANPostgreSQLPgStatMonitorAgentBody struct {

	// The pmm-agent identifier which runs this instance.
	PMMAgentID string `json:"pmm_agent_id,omitempty"`

	// Service identifier.
	ServiceID string `json:"service_id,omitempty"`

	// PostgreSQL username for getting pg stat monitor data.
	Username string `json:"username,omitempty"`

	// PostgreSQL password for getting pg stat monitor data.
	Password string `json:"password,omitempty"`

	// Use TLS for database connections.
	TLS bool `json:"tls,omitempty"`

	// Skip TLS certificate and hostname validation.
	TLSSkipVerify bool `json:"tls_skip_verify,omitempty"`

	// Disable query examples.
	DisableQueryExamples bool `json:"disable_query_examples,omitempty"`

	// Custom user-assigned labels.
	CustomLabels map[string]string `json:"custom_labels,omitempty"`

	// Skip connection check.
	SkipConnectionCheck bool `json:"skip_connection_check,omitempty"`

	// TLS CA certificate.
	TLSCa string `json:"tls_ca,omitempty"`

	// TLS Certifcate.
	TLSCert string `json:"tls_cert,omitempty"`

	// TLS Certificate Key.
	TLSKey string `json:"tls_key,omitempty"`
}

// Validate validates this agents add QAN postgre SQL pg stat monitor agent body
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentBody) UnmarshalBinary(b []byte) error {
	var res AgentsAddQANPostgreSQLPgStatMonitorAgentBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AgentsAddQANPostgreSQLPgStatMonitorAgentDefaultBody agents add QAN postgre SQL pg stat monitor agent default body
swagger:model AgentsAddQANPostgreSQLPgStatMonitorAgentDefaultBody
*/
type AgentsAddQANPostgreSQLPgStatMonitorAgentDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this agents add QAN postgre SQL pg stat monitor agent default body
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Agents_AddQANPostgreSQLPgStatMonitorAgent default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentDefaultBody) UnmarshalBinary(b []byte) error {
	var res AgentsAddQANPostgreSQLPgStatMonitorAgentDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AgentsAddQANPostgreSQLPgStatMonitorAgentOKBody agents add QAN postgre SQL pg stat monitor agent OK body
swagger:model AgentsAddQANPostgreSQLPgStatMonitorAgentOKBody
*/
type AgentsAddQANPostgreSQLPgStatMonitorAgentOKBody struct {

	// qan postgresql pgstatmonitor agent
	QANPostgresqlPgstatmonitorAgent *AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgent `json:"qan_postgresql_pgstatmonitor_agent,omitempty"`
}

// Validate validates this agents add QAN postgre SQL pg stat monitor agent OK body
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateQANPostgresqlPgstatmonitorAgent(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentOKBody) validateQANPostgresqlPgstatmonitorAgent(formats strfmt.Registry) error {

	if swag.IsZero(o.QANPostgresqlPgstatmonitorAgent) { // not required
		return nil
	}

	if o.QANPostgresqlPgstatmonitorAgent != nil {
		if err := o.QANPostgresqlPgstatmonitorAgent.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("agentsAddQanPostgreSqlPgStatMonitorAgentOk" + "." + "qan_postgresql_pgstatmonitor_agent")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentOKBody) UnmarshalBinary(b []byte) error {
	var res AgentsAddQANPostgreSQLPgStatMonitorAgentOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgent QANPostgreSQLPgStatMonitorAgent runs within pmm-agent and sends PostgreSQL Query Analytics data to the PMM Server.
swagger:model AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgent
*/
type AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgent struct {

	// Unique randomly generated instance identifier.
	AgentID string `json:"agent_id,omitempty"`

	// The pmm-agent identifier which runs this instance.
	PMMAgentID string `json:"pmm_agent_id,omitempty"`

	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `json:"disabled,omitempty"`

	// Service identifier.
	ServiceID string `json:"service_id,omitempty"`

	// PostgreSQL username for getting pg stat monitor data.
	Username string `json:"username,omitempty"`

	// Use TLS for database connections.
	TLS bool `json:"tls,omitempty"`

	// Skip TLS certificate and hostname validation.
	TLSSkipVerify bool `json:"tls_skip_verify,omitempty"`

	// True if query examples are disabled.
	QueryExamplesDisabled bool `json:"query_examples_disabled,omitempty"`

	// Custom user-assigned labels.
	CustomLabels map[string]string `json:"custom_labels,omitempty"`

	// AgentStatus represents actual Agent status.
	//
	//  - STARTING: Agent is starting.
	//  - RUNNING: Agent is running.
	//  - WAITING: Agent encountered error and will be restarted automatically soon.
	//  - STOPPING: Agent is stopping.
	//  - DONE: Agent finished.
	//  - UNKNOWN: Agent is not connected, we don't know anything about it's state.
	// Enum: [AGENT_STATUS_INVALID STARTING RUNNING WAITING STOPPING DONE UNKNOWN]
	Status *string `json:"status,omitempty"`
}

// Validate validates this agents add QAN postgre SQL pg stat monitor agent OK body QAN postgresql pgstatmonitor agent
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgent) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var agentsAddQanPostgreSqlPgStatMonitorAgentOkBodyQanPostgresqlPgstatmonitorAgentTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AGENT_STATUS_INVALID","STARTING","RUNNING","WAITING","STOPPING","DONE","UNKNOWN"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		agentsAddQanPostgreSqlPgStatMonitorAgentOkBodyQanPostgresqlPgstatmonitorAgentTypeStatusPropEnum = append(agentsAddQanPostgreSqlPgStatMonitorAgentOkBodyQanPostgresqlPgstatmonitorAgentTypeStatusPropEnum, v)
	}
}

const (

	// AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgentStatusAGENTSTATUSINVALID captures enum value "AGENT_STATUS_INVALID"
	AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgentStatusAGENTSTATUSINVALID string = "AGENT_STATUS_INVALID"

	// AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgentStatusSTARTING captures enum value "STARTING"
	AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgentStatusSTARTING string = "STARTING"

	// AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgentStatusRUNNING captures enum value "RUNNING"
	AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgentStatusRUNNING string = "RUNNING"

	// AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgentStatusWAITING captures enum value "WAITING"
	AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgentStatusWAITING string = "WAITING"

	// AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgentStatusSTOPPING captures enum value "STOPPING"
	AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgentStatusSTOPPING string = "STOPPING"

	// AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgentStatusDONE captures enum value "DONE"
	AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgentStatusDONE string = "DONE"

	// AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgentStatusUNKNOWN captures enum value "UNKNOWN"
	AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgentStatusUNKNOWN string = "UNKNOWN"
)

// prop value enum
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgent) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, agentsAddQanPostgreSqlPgStatMonitorAgentOkBodyQanPostgresqlPgstatmonitorAgentTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgent) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("agentsAddQanPostgreSqlPgStatMonitorAgentOk"+"."+"qan_postgresql_pgstatmonitor_agent"+"."+"status", "body", *o.Status); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgent) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgent) UnmarshalBinary(b []byte) error {
	var res AgentsAddQANPostgreSQLPgStatMonitorAgentOKBodyQANPostgresqlPgstatmonitorAgent
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
