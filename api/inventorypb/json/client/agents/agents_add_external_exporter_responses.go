// Code generated by go-swagger; DO NOT EDIT.

package agents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AgentsAddExternalExporterReader is a Reader for the AgentsAddExternalExporter structure.
type AgentsAddExternalExporterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AgentsAddExternalExporterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAgentsAddExternalExporterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAgentsAddExternalExporterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAgentsAddExternalExporterOK creates a AgentsAddExternalExporterOK with default headers values
func NewAgentsAddExternalExporterOK() *AgentsAddExternalExporterOK {
	return &AgentsAddExternalExporterOK{}
}

/*AgentsAddExternalExporterOK handles this case with default header values.

A successful response.
*/
type AgentsAddExternalExporterOK struct {
	Payload *AgentsAddExternalExporterOKBody
}

func (o *AgentsAddExternalExporterOK) Error() string {
	return fmt.Sprintf("[POST /v1/inventory/Agents/AddExternalExporter][%d] agentsAddExternalExporterOk  %+v", 200, o.Payload)
}

func (o *AgentsAddExternalExporterOK) GetPayload() *AgentsAddExternalExporterOKBody {
	return o.Payload
}

func (o *AgentsAddExternalExporterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AgentsAddExternalExporterOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAgentsAddExternalExporterDefault creates a AgentsAddExternalExporterDefault with default headers values
func NewAgentsAddExternalExporterDefault(code int) *AgentsAddExternalExporterDefault {
	return &AgentsAddExternalExporterDefault{
		_statusCode: code,
	}
}

/*AgentsAddExternalExporterDefault handles this case with default header values.

An unexpected error response.
*/
type AgentsAddExternalExporterDefault struct {
	_statusCode int

	Payload *AgentsAddExternalExporterDefaultBody
}

// Code gets the status code for the agents add external exporter default response
func (o *AgentsAddExternalExporterDefault) Code() int {
	return o._statusCode
}

func (o *AgentsAddExternalExporterDefault) Error() string {
	return fmt.Sprintf("[POST /v1/inventory/Agents/AddExternalExporter][%d] Agents_AddExternalExporter default  %+v", o._statusCode, o.Payload)
}

func (o *AgentsAddExternalExporterDefault) GetPayload() *AgentsAddExternalExporterDefaultBody {
	return o.Payload
}

func (o *AgentsAddExternalExporterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AgentsAddExternalExporterDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*AgentsAddExternalExporterBody agents add external exporter body
swagger:model AgentsAddExternalExporterBody
*/
type AgentsAddExternalExporterBody struct {

	// The node identifier where this instance is run.
	RunsOnNodeID string `json:"runs_on_node_id,omitempty"`

	// Service identifier.
	ServiceID string `json:"service_id,omitempty"`

	// HTTP basic auth username for collecting metrics.
	Username string `json:"username,omitempty"`

	// HTTP basic auth password for collecting metrics.
	Password string `json:"password,omitempty"`

	// Scheme to generate URI to exporter metrics endpoints(default: http).
	Scheme string `json:"scheme,omitempty"`

	// Path under which metrics are exposed, used to generate URI(default: /metrics).
	MetricsPath string `json:"metrics_path,omitempty"`

	// Listen port for scraping metrics.
	ListenPort int64 `json:"listen_port,omitempty"`

	// Custom user-assigned labels.
	CustomLabels map[string]string `json:"custom_labels,omitempty"`

	// Enables push metrics mode for exporter.
	PushMetrics bool `json:"push_metrics,omitempty"`
}

// Validate validates this agents add external exporter body
func (o *AgentsAddExternalExporterBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AgentsAddExternalExporterBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentsAddExternalExporterBody) UnmarshalBinary(b []byte) error {
	var res AgentsAddExternalExporterBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AgentsAddExternalExporterDefaultBody agents add external exporter default body
swagger:model AgentsAddExternalExporterDefaultBody
*/
type AgentsAddExternalExporterDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this agents add external exporter default body
func (o *AgentsAddExternalExporterDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AgentsAddExternalExporterDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Agents_AddExternalExporter default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *AgentsAddExternalExporterDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentsAddExternalExporterDefaultBody) UnmarshalBinary(b []byte) error {
	var res AgentsAddExternalExporterDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AgentsAddExternalExporterOKBody agents add external exporter OK body
swagger:model AgentsAddExternalExporterOKBody
*/
type AgentsAddExternalExporterOKBody struct {

	// external exporter
	ExternalExporter *AgentsAddExternalExporterOKBodyExternalExporter `json:"external_exporter,omitempty"`
}

// Validate validates this agents add external exporter OK body
func (o *AgentsAddExternalExporterOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExternalExporter(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AgentsAddExternalExporterOKBody) validateExternalExporter(formats strfmt.Registry) error {

	if swag.IsZero(o.ExternalExporter) { // not required
		return nil
	}

	if o.ExternalExporter != nil {
		if err := o.ExternalExporter.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("agentsAddExternalExporterOk" + "." + "external_exporter")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AgentsAddExternalExporterOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentsAddExternalExporterOKBody) UnmarshalBinary(b []byte) error {
	var res AgentsAddExternalExporterOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AgentsAddExternalExporterOKBodyExternalExporter ExternalExporter runs on any Node type, including Remote Node.
swagger:model AgentsAddExternalExporterOKBodyExternalExporter
*/
type AgentsAddExternalExporterOKBodyExternalExporter struct {

	// Unique randomly generated instance identifier.
	AgentID string `json:"agent_id,omitempty"`

	// Node identifier where this instance runs.
	RunsOnNodeID string `json:"runs_on_node_id,omitempty"`

	// If disabled, metrics from this exporter will not be collected.
	Disabled bool `json:"disabled,omitempty"`

	// Service identifier.
	ServiceID string `json:"service_id,omitempty"`

	// HTTP basic auth username for collecting metrics.
	Username string `json:"username,omitempty"`

	// Scheme to generate URI to exporter metrics endpoints.
	Scheme string `json:"scheme,omitempty"`

	// Path under which metrics are exposed, used to generate URI.
	MetricsPath string `json:"metrics_path,omitempty"`

	// Custom user-assigned labels.
	CustomLabels map[string]string `json:"custom_labels,omitempty"`

	// Listen port for scraping metrics.
	ListenPort int64 `json:"listen_port,omitempty"`

	// True if exporter uses push metrics mode.
	PushMetricsEnabled bool `json:"push_metrics_enabled,omitempty"`
}

// Validate validates this agents add external exporter OK body external exporter
func (o *AgentsAddExternalExporterOKBodyExternalExporter) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AgentsAddExternalExporterOKBodyExternalExporter) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentsAddExternalExporterOKBodyExternalExporter) UnmarshalBinary(b []byte) error {
	var res AgentsAddExternalExporterOKBodyExternalExporter
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
