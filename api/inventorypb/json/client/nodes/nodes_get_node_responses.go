// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NodesGetNodeReader is a Reader for the NodesGetNode structure.
type NodesGetNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NodesGetNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNodesGetNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewNodesGetNodeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewNodesGetNodeOK creates a NodesGetNodeOK with default headers values
func NewNodesGetNodeOK() *NodesGetNodeOK {
	return &NodesGetNodeOK{}
}

/*NodesGetNodeOK handles this case with default header values.

A successful response.
*/
type NodesGetNodeOK struct {
	Payload *NodesGetNodeOKBody
}

func (o *NodesGetNodeOK) Error() string {
	return fmt.Sprintf("[POST /v1/inventory/Nodes/Get][%d] nodesGetNodeOk  %+v", 200, o.Payload)
}

func (o *NodesGetNodeOK) GetPayload() *NodesGetNodeOKBody {
	return o.Payload
}

func (o *NodesGetNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NodesGetNodeOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNodesGetNodeDefault creates a NodesGetNodeDefault with default headers values
func NewNodesGetNodeDefault(code int) *NodesGetNodeDefault {
	return &NodesGetNodeDefault{
		_statusCode: code,
	}
}

/*NodesGetNodeDefault handles this case with default header values.

An unexpected error response.
*/
type NodesGetNodeDefault struct {
	_statusCode int

	Payload *NodesGetNodeDefaultBody
}

// Code gets the status code for the nodes get node default response
func (o *NodesGetNodeDefault) Code() int {
	return o._statusCode
}

func (o *NodesGetNodeDefault) Error() string {
	return fmt.Sprintf("[POST /v1/inventory/Nodes/Get][%d] Nodes_GetNode default  %+v", o._statusCode, o.Payload)
}

func (o *NodesGetNodeDefault) GetPayload() *NodesGetNodeDefaultBody {
	return o.Payload
}

func (o *NodesGetNodeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(NodesGetNodeDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*NodesGetNodeBody nodes get node body
swagger:model NodesGetNodeBody
*/
type NodesGetNodeBody struct {

	// Unique randomly generated instance identifier.
	NodeID string `json:"node_id,omitempty"`
}

// Validate validates this nodes get node body
func (o *NodesGetNodeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NodesGetNodeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NodesGetNodeBody) UnmarshalBinary(b []byte) error {
	var res NodesGetNodeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*NodesGetNodeDefaultBody nodes get node default body
swagger:model NodesGetNodeDefaultBody
*/
type NodesGetNodeDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this nodes get node default body
func (o *NodesGetNodeDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NodesGetNodeDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("Nodes_GetNode default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *NodesGetNodeDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NodesGetNodeDefaultBody) UnmarshalBinary(b []byte) error {
	var res NodesGetNodeDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*NodesGetNodeOKBody nodes get node OK body
swagger:model NodesGetNodeOKBody
*/
type NodesGetNodeOKBody struct {

	// container
	Container *NodesGetNodeOKBodyContainer `json:"container,omitempty"`

	// generic
	Generic *NodesGetNodeOKBodyGeneric `json:"generic,omitempty"`

	// remote
	Remote *NodesGetNodeOKBodyRemote `json:"remote,omitempty"`

	// remote rds
	RemoteRDS *NodesGetNodeOKBodyRemoteRDS `json:"remote_rds,omitempty"`
}

// Validate validates this nodes get node OK body
func (o *NodesGetNodeOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateContainer(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateGeneric(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRemote(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRemoteRDS(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *NodesGetNodeOKBody) validateContainer(formats strfmt.Registry) error {

	if swag.IsZero(o.Container) { // not required
		return nil
	}

	if o.Container != nil {
		if err := o.Container.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("nodesGetNodeOk" + "." + "container")
			}
			return err
		}
	}

	return nil
}

func (o *NodesGetNodeOKBody) validateGeneric(formats strfmt.Registry) error {

	if swag.IsZero(o.Generic) { // not required
		return nil
	}

	if o.Generic != nil {
		if err := o.Generic.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("nodesGetNodeOk" + "." + "generic")
			}
			return err
		}
	}

	return nil
}

func (o *NodesGetNodeOKBody) validateRemote(formats strfmt.Registry) error {

	if swag.IsZero(o.Remote) { // not required
		return nil
	}

	if o.Remote != nil {
		if err := o.Remote.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("nodesGetNodeOk" + "." + "remote")
			}
			return err
		}
	}

	return nil
}

func (o *NodesGetNodeOKBody) validateRemoteRDS(formats strfmt.Registry) error {

	if swag.IsZero(o.RemoteRDS) { // not required
		return nil
	}

	if o.RemoteRDS != nil {
		if err := o.RemoteRDS.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("nodesGetNodeOk" + "." + "remote_rds")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *NodesGetNodeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NodesGetNodeOKBody) UnmarshalBinary(b []byte) error {
	var res NodesGetNodeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*NodesGetNodeOKBodyContainer ContainerNode represents a Docker container.
swagger:model NodesGetNodeOKBodyContainer
*/
type NodesGetNodeOKBodyContainer struct {

	// Unique randomly generated instance identifier.
	NodeID string `json:"node_id,omitempty"`

	// Unique across all Nodes user-defined name.
	NodeName string `json:"node_name,omitempty"`

	// Node address (DNS name or IP).
	Address string `json:"address,omitempty"`

	// Linux machine-id of the Generic Node where this Container Node runs.
	MachineID string `json:"machine_id,omitempty"`

	// Container identifier. If specified, must be a unique Docker container identifier.
	ContainerID string `json:"container_id,omitempty"`

	// Container name.
	ContainerName string `json:"container_name,omitempty"`

	// Node model.
	NodeModel string `json:"node_model,omitempty"`

	// Node region.
	Region string `json:"region,omitempty"`

	// Node availability zone.
	Az string `json:"az,omitempty"`

	// Custom user-assigned labels.
	CustomLabels map[string]string `json:"custom_labels,omitempty"`
}

// Validate validates this nodes get node OK body container
func (o *NodesGetNodeOKBodyContainer) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NodesGetNodeOKBodyContainer) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NodesGetNodeOKBodyContainer) UnmarshalBinary(b []byte) error {
	var res NodesGetNodeOKBodyContainer
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*NodesGetNodeOKBodyGeneric GenericNode represents a bare metal server or virtual machine.
swagger:model NodesGetNodeOKBodyGeneric
*/
type NodesGetNodeOKBodyGeneric struct {

	// Unique randomly generated instance identifier.
	NodeID string `json:"node_id,omitempty"`

	// Unique across all Nodes user-defined name.
	NodeName string `json:"node_name,omitempty"`

	// Node address (DNS name or IP).
	Address string `json:"address,omitempty"`

	// Linux machine-id.
	MachineID string `json:"machine_id,omitempty"`

	// Linux distribution name and version.
	Distro string `json:"distro,omitempty"`

	// Node model.
	NodeModel string `json:"node_model,omitempty"`

	// Node region.
	Region string `json:"region,omitempty"`

	// Node availability zone.
	Az string `json:"az,omitempty"`

	// Custom user-assigned labels.
	CustomLabels map[string]string `json:"custom_labels,omitempty"`
}

// Validate validates this nodes get node OK body generic
func (o *NodesGetNodeOKBodyGeneric) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NodesGetNodeOKBodyGeneric) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NodesGetNodeOKBodyGeneric) UnmarshalBinary(b []byte) error {
	var res NodesGetNodeOKBodyGeneric
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*NodesGetNodeOKBodyRemote RemoteNode represents generic remote Node. It's a node where we don't run pmm-agents. Only external exporters can run on Remote Nodes.
swagger:model NodesGetNodeOKBodyRemote
*/
type NodesGetNodeOKBodyRemote struct {

	// Unique randomly generated instance identifier.
	NodeID string `json:"node_id,omitempty"`

	// Unique across all Nodes user-defined name.
	NodeName string `json:"node_name,omitempty"`

	// Node address (DNS name or IP).
	Address string `json:"address,omitempty"`

	// Node model.
	NodeModel string `json:"node_model,omitempty"`

	// Node region.
	Region string `json:"region,omitempty"`

	// Node availability zone.
	Az string `json:"az,omitempty"`

	// Custom user-assigned labels.
	CustomLabels map[string]string `json:"custom_labels,omitempty"`
}

// Validate validates this nodes get node OK body remote
func (o *NodesGetNodeOKBodyRemote) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NodesGetNodeOKBodyRemote) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NodesGetNodeOKBodyRemote) UnmarshalBinary(b []byte) error {
	var res NodesGetNodeOKBodyRemote
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*NodesGetNodeOKBodyRemoteRDS RemoteRDSNode represents remote RDS Node. Agents can't run on Remote RDS Nodes.
swagger:model NodesGetNodeOKBodyRemoteRDS
*/
type NodesGetNodeOKBodyRemoteRDS struct {

	// Unique randomly generated instance identifier.
	NodeID string `json:"node_id,omitempty"`

	// Unique across all Nodes user-defined name.
	NodeName string `json:"node_name,omitempty"`

	// DB instance identifier.
	Address string `json:"address,omitempty"`

	// Node model.
	NodeModel string `json:"node_model,omitempty"`

	// Node region.
	Region string `json:"region,omitempty"`

	// Node availability zone.
	Az string `json:"az,omitempty"`

	// Custom user-assigned labels.
	CustomLabels map[string]string `json:"custom_labels,omitempty"`
}

// Validate validates this nodes get node OK body remote RDS
func (o *NodesGetNodeOKBodyRemoteRDS) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *NodesGetNodeOKBodyRemoteRDS) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *NodesGetNodeOKBodyRemoteRDS) UnmarshalBinary(b []byte) error {
	var res NodesGetNodeOKBodyRemoteRDS
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
