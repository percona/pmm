{
  "swagger": "2.0",
  "info": {
    "title": "inventorypb/nodes.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/inventory/Nodes/AddContainer": {
      "post": {
        "summary": "Add Container Node",
        "description": "Adds container Node.",
        "operationId": "AddContainerNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddContainerNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddContainerNodeRequest"
            }
          }
        ],
        "tags": [
          "Nodes"
        ]
      }
    },
    "/v1/inventory/Nodes/AddGeneric": {
      "post": {
        "summary": "Add Generic Node",
        "description": "Adds generic Node.",
        "operationId": "AddGenericNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddGenericNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddGenericNodeRequest"
            }
          }
        ],
        "tags": [
          "Nodes"
        ]
      }
    },
    "/v1/inventory/Nodes/AddRemote": {
      "post": {
        "summary": "Add Remote Node",
        "description": "Adds remote Node.",
        "operationId": "AddRemoteNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddRemoteNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddRemoteNodeRequest"
            }
          }
        ],
        "tags": [
          "Nodes"
        ]
      }
    },
    "/v1/inventory/Nodes/AddRemoteAzureDatabase": {
      "post": {
        "summary": "Add Remote Azure Database Node",
        "description": "Adds remote Azure database Node.",
        "operationId": "AddRemoteAzureDatabaseNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddRemoteAzureDatabaseNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddRemoteAzureDatabaseNodeRequest"
            }
          }
        ],
        "tags": [
          "Nodes"
        ]
      }
    },
    "/v1/inventory/Nodes/AddRemoteRDS": {
      "post": {
        "summary": "Add Remote RDS Node",
        "description": "Adds remote RDS Node.",
        "operationId": "AddRemoteRDSNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddRemoteRDSNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddRemoteRDSNodeRequest"
            }
          }
        ],
        "tags": [
          "Nodes"
        ]
      }
    },
    "/v1/inventory/Nodes/Get": {
      "post": {
        "summary": "Get Node",
        "description": "Returns a single Node by ID.",
        "operationId": "GetNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryGetNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGetNodeRequest"
            }
          }
        ],
        "tags": [
          "Nodes"
        ]
      }
    },
    "/v1/inventory/Nodes/List": {
      "post": {
        "summary": "List Nodes",
        "description": "Returns a list of all Nodes.",
        "operationId": "ListNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryListNodesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryListNodesRequest"
            }
          }
        ],
        "tags": [
          "Nodes"
        ]
      }
    },
    "/v1/inventory/Nodes/Remove": {
      "post": {
        "summary": "Remove Node",
        "description": "Removes Node.",
        "operationId": "RemoveNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryRemoveNodeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryRemoveNodeRequest"
            }
          }
        ],
        "tags": [
          "Nodes"
        ]
      }
    }
  },
  "definitions": {
    "inventoryAddContainerNodeRequest": {
      "type": "object",
      "properties": {
        "node_name": {
          "type": "string",
          "description": "Unique across all Nodes user-defined name."
        },
        "address": {
          "type": "string",
          "description": "Node address (DNS name or IP)."
        },
        "machine_id": {
          "type": "string",
          "description": "Linux machine-id of the Generic Node where this Container Node runs."
        },
        "container_id": {
          "type": "string",
          "description": "Container identifier. If specified, must be a unique Docker container identifier."
        },
        "container_name": {
          "type": "string",
          "description": "Container name."
        },
        "node_model": {
          "type": "string",
          "description": "Node model."
        },
        "region": {
          "type": "string",
          "description": "Node region."
        },
        "az": {
          "type": "string",
          "description": "Node availability zone."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      }
    },
    "inventoryAddContainerNodeResponse": {
      "type": "object",
      "properties": {
        "container": {
          "$ref": "#/definitions/inventoryContainerNode"
        }
      }
    },
    "inventoryAddGenericNodeRequest": {
      "type": "object",
      "properties": {
        "node_name": {
          "type": "string",
          "description": "Unique across all Nodes user-defined name."
        },
        "address": {
          "type": "string",
          "description": "Node address (DNS name or IP)."
        },
        "machine_id": {
          "type": "string",
          "description": "Linux machine-id."
        },
        "distro": {
          "type": "string",
          "description": "Linux distribution name and version."
        },
        "node_model": {
          "type": "string",
          "description": "Node model."
        },
        "region": {
          "type": "string",
          "description": "Node region."
        },
        "az": {
          "type": "string",
          "description": "Node availability zone."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      }
    },
    "inventoryAddGenericNodeResponse": {
      "type": "object",
      "properties": {
        "generic": {
          "$ref": "#/definitions/inventoryGenericNode"
        }
      }
    },
    "inventoryAddRemoteAzureDatabaseNodeRequest": {
      "type": "object",
      "properties": {
        "node_name": {
          "type": "string",
          "description": "Unique across all Nodes user-defined name."
        },
        "address": {
          "type": "string",
          "description": "DB instance identifier."
        },
        "node_model": {
          "type": "string",
          "description": "Node model."
        },
        "region": {
          "type": "string",
          "description": "Node region."
        },
        "az": {
          "type": "string",
          "description": "Node availability zone."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      }
    },
    "inventoryAddRemoteAzureDatabaseNodeResponse": {
      "type": "object",
      "properties": {
        "remote_azure_database": {
          "$ref": "#/definitions/inventoryRemoteAzureDatabaseNode"
        }
      }
    },
    "inventoryAddRemoteNodeRequest": {
      "type": "object",
      "properties": {
        "node_name": {
          "type": "string",
          "description": "Unique across all Nodes user-defined name."
        },
        "address": {
          "type": "string",
          "description": "Node address (DNS name or IP)."
        },
        "node_model": {
          "type": "string",
          "description": "Node model."
        },
        "region": {
          "type": "string",
          "description": "Node region."
        },
        "az": {
          "type": "string",
          "description": "Node availability zone."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      }
    },
    "inventoryAddRemoteNodeResponse": {
      "type": "object",
      "properties": {
        "remote": {
          "$ref": "#/definitions/inventoryRemoteNode"
        }
      }
    },
    "inventoryAddRemoteRDSNodeRequest": {
      "type": "object",
      "properties": {
        "node_name": {
          "type": "string",
          "description": "Unique across all Nodes user-defined name."
        },
        "address": {
          "type": "string",
          "description": "DB instance identifier."
        },
        "node_model": {
          "type": "string",
          "description": "Node model."
        },
        "region": {
          "type": "string",
          "description": "Node region."
        },
        "az": {
          "type": "string",
          "description": "Node availability zone."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      }
    },
    "inventoryAddRemoteRDSNodeResponse": {
      "type": "object",
      "properties": {
        "remote_rds": {
          "$ref": "#/definitions/inventoryRemoteRDSNode"
        }
      }
    },
    "inventoryContainerNode": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "node_name": {
          "type": "string",
          "description": "Unique across all Nodes user-defined name."
        },
        "address": {
          "type": "string",
          "description": "Node address (DNS name or IP)."
        },
        "machine_id": {
          "type": "string",
          "description": "Linux machine-id of the Generic Node where this Container Node runs."
        },
        "container_id": {
          "type": "string",
          "description": "Container identifier. If specified, must be a unique Docker container identifier."
        },
        "container_name": {
          "type": "string",
          "description": "Container name."
        },
        "node_model": {
          "type": "string",
          "description": "Node model."
        },
        "region": {
          "type": "string",
          "description": "Node region."
        },
        "az": {
          "type": "string",
          "description": "Node availability zone."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      },
      "description": "ContainerNode represents a Docker container."
    },
    "inventoryGenericNode": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "node_name": {
          "type": "string",
          "description": "Unique across all Nodes user-defined name."
        },
        "address": {
          "type": "string",
          "description": "Node address (DNS name or IP)."
        },
        "machine_id": {
          "type": "string",
          "description": "Linux machine-id."
        },
        "distro": {
          "type": "string",
          "description": "Linux distribution name and version."
        },
        "node_model": {
          "type": "string",
          "description": "Node model."
        },
        "region": {
          "type": "string",
          "description": "Node region."
        },
        "az": {
          "type": "string",
          "description": "Node availability zone."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      },
      "description": "GenericNode represents a bare metal server or virtual machine."
    },
    "inventoryGetNodeRequest": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        }
      }
    },
    "inventoryGetNodeResponse": {
      "type": "object",
      "properties": {
        "generic": {
          "$ref": "#/definitions/inventoryGenericNode"
        },
        "container": {
          "$ref": "#/definitions/inventoryContainerNode"
        },
        "remote": {
          "$ref": "#/definitions/inventoryRemoteNode"
        },
        "remote_rds": {
          "$ref": "#/definitions/inventoryRemoteRDSNode"
        },
        "remote_azure_database": {
          "$ref": "#/definitions/inventoryRemoteAzureDatabaseNode"
        }
      }
    },
    "inventoryListNodesRequest": {
      "type": "object",
      "properties": {
        "node_type": {
          "$ref": "#/definitions/inventoryNodeType",
          "title": "Do not use yet.\nTODO https://jira.percona.com/browse/PMM-5112"
        }
      }
    },
    "inventoryListNodesResponse": {
      "type": "object",
      "properties": {
        "generic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryGenericNode"
          }
        },
        "container": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryContainerNode"
          }
        },
        "remote": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryRemoteNode"
          }
        },
        "remote_rds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryRemoteRDSNode"
          }
        },
        "remote_azure_database": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/inventoryRemoteAzureDatabaseNode"
          }
        }
      }
    },
    "inventoryNodeType": {
      "type": "string",
      "enum": [
        "NODE_TYPE_INVALID",
        "GENERIC_NODE",
        "CONTAINER_NODE",
        "REMOTE_NODE",
        "REMOTE_RDS_NODE",
        "REMOTE_AZURE_DATABASE_NODE"
      ],
      "default": "NODE_TYPE_INVALID",
      "description": "NodeType describes supported Node types."
    },
    "inventoryRemoteAzureDatabaseNode": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "node_name": {
          "type": "string",
          "description": "Unique across all Nodes user-defined name."
        },
        "address": {
          "type": "string",
          "description": "DB instance identifier."
        },
        "node_model": {
          "type": "string",
          "description": "Node model."
        },
        "region": {
          "type": "string",
          "description": "Node region."
        },
        "az": {
          "type": "string",
          "description": "Node availability zone."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      },
      "description": "RemoteAzureDatabaseNode represents remote AzureDatabase Node. Agents can't run on Remote AzureDatabase Nodes."
    },
    "inventoryRemoteNode": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "node_name": {
          "type": "string",
          "description": "Unique across all Nodes user-defined name."
        },
        "address": {
          "type": "string",
          "description": "Node address (DNS name or IP)."
        },
        "node_model": {
          "type": "string",
          "description": "Node model."
        },
        "region": {
          "type": "string",
          "description": "Node region."
        },
        "az": {
          "type": "string",
          "description": "Node availability zone."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      },
      "description": "RemoteNode represents generic remote Node. It's a node where we don't run pmm-agents. Only external exporters can run on Remote Nodes."
    },
    "inventoryRemoteRDSNode": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "node_name": {
          "type": "string",
          "description": "Unique across all Nodes user-defined name."
        },
        "address": {
          "type": "string",
          "description": "DB instance identifier."
        },
        "node_model": {
          "type": "string",
          "description": "Node model."
        },
        "region": {
          "type": "string",
          "description": "Node region."
        },
        "az": {
          "type": "string",
          "description": "Node availability zone."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      },
      "description": "RemoteRDSNode represents remote RDS Node. Agents can't run on Remote RDS Nodes."
    },
    "inventoryRemoveNodeRequest": {
      "type": "object",
      "properties": {
        "node_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "force": {
          "type": "boolean",
          "description": "Remove node with all dependencies."
        }
      }
    },
    "inventoryRemoveNodeResponse": {
      "type": "object"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
