{
  "swagger": "2.0",
  "info": {
    "title": "inventorypb/agents.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Agents"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/inventory/Agents/AddAzureDatabaseExporter": {
      "post": {
        "summary": "Add Azure Database Exporter",
        "description": "Adds azure_database_exporter Agent.",
        "operationId": "AddAzureDatabaseExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddAzureDatabaseExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddAzureDatabaseExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/AddExternalExporter": {
      "post": {
        "summary": "Add External Exporter",
        "description": "Adds external_exporter Agent.",
        "operationId": "AddExternalExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddExternalExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddExternalExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/AddMongoDBExporter": {
      "post": {
        "summary": "Add MongoDB Exporter",
        "description": "Adds mongodb_exporter Agent.",
        "operationId": "AddMongoDBExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddMongoDBExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddMongoDBExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/AddMySQLdExporter": {
      "post": {
        "summary": "Add mysqld Exporter",
        "description": "Adds mysqld_exporter Agent.",
        "operationId": "AddMySQLdExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddMySQLdExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddMySQLdExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/AddNodeExporter": {
      "post": {
        "summary": "Add Node Exporter",
        "description": "Adds node_exporter Agent.",
        "operationId": "AddNodeExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddNodeExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddNodeExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/AddPMMAgent": {
      "post": {
        "summary": "Add PMM Agent",
        "description": "Adds PMM Agent.",
        "operationId": "AddPMMAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddPMMAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddPMMAgentRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/AddPostgresExporter": {
      "post": {
        "summary": "Add Postgres Exporter",
        "description": "Adds postgres_exporter Agent.",
        "operationId": "AddPostgresExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddPostgresExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddPostgresExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/AddProxySQLExporter": {
      "post": {
        "summary": "Add ProxySQL Exporter",
        "description": "Adds proxysql_exporter Agent.",
        "operationId": "AddProxySQLExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddProxySQLExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddProxySQLExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/AddQANMongoDBProfilerAgent": {
      "post": {
        "summary": "Add 'QAN MongoDB Profiler' Agent",
        "description": "Adds 'Query Analytics MongoDB Profiler' Agent.",
        "operationId": "AddQANMongoDBProfilerAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddQANMongoDBProfilerAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddQANMongoDBProfilerAgentRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/AddQANMySQLPerfSchemaAgent": {
      "post": {
        "summary": "Add 'QAN MySQL PerfSchema' Agent",
        "description": "Adds 'Query Analytics MySQL PerfSchema' Agent.",
        "operationId": "AddQANMySQLPerfSchemaAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddQANMySQLPerfSchemaAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddQANMySQLPerfSchemaAgentRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/AddQANMySQLSlowlogAgent": {
      "post": {
        "summary": "Add 'QAN MySQL Slowlog' Agent",
        "description": "Adds 'Query Analytics MySQL Slowlog' Agent.",
        "operationId": "AddQANMySQLSlowlogAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddQANMySQLSlowlogAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddQANMySQLSlowlogAgentRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/AddQANPostgreSQLPgStatMonitorAgent": {
      "post": {
        "summary": "Add 'QAN PostgreSQL pg_stat_monitor' Agent",
        "description": "Adds 'Query Analytics PostgreSQL pg_stat_monitor' Agent.",
        "operationId": "AddQANPostgreSQLPgStatMonitorAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddQANPostgreSQLPgStatMonitorAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddQANPostgreSQLPgStatMonitorAgentRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/AddQANPostgreSQLPgStatementsAgent": {
      "post": {
        "summary": "Add 'QAN PostgreSQL pg_stat_statements' Agent",
        "description": "Adds 'Query Analytics PostgreSQL pg_stat_statements' Agent.",
        "operationId": "AddQANPostgreSQLPgStatementsAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddQANPostgreSQLPgStatementsAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddQANPostgreSQLPgStatementsAgentRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/AddRDSExporter": {
      "post": {
        "summary": "Add RDS Exporter",
        "description": "Adds rds_exporter Agent.",
        "operationId": "AddRDSExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryAddRDSExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryAddRDSExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/ChangeAzureDatabaseExporter": {
      "post": {
        "summary": "Change Azure Database Exporter",
        "description": "Changes azure_database_exporter Agent.",
        "operationId": "ChangeAzureDatabaseExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryChangeAzureDatabaseExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeAzureDatabaseExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/ChangeExternalExporter": {
      "post": {
        "summary": "Change External Exporter",
        "description": "Changes external_exporter Agent.",
        "operationId": "ChangeExternalExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryChangeExternalExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeExternalExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/ChangeMongoDBExporter": {
      "post": {
        "summary": "Change MongoDB Exporter",
        "description": "Changes mongodb_exporter Agent.",
        "operationId": "ChangeMongoDBExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryChangeMongoDBExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeMongoDBExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/ChangeMySQLdExporter": {
      "post": {
        "summary": "Change mysqld Exporter",
        "description": "Changes mysqld_exporter Agent.",
        "operationId": "ChangeMySQLdExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryChangeMySQLdExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeMySQLdExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/ChangeNodeExporter": {
      "post": {
        "summary": "Change Node Exporter",
        "description": "Changes node_exporter Agent.",
        "operationId": "ChangeNodeExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryChangeNodeExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeNodeExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/ChangePostgresExporter": {
      "post": {
        "summary": "Change Postgres Exporter",
        "description": "Changes postgres_exporter Agent.",
        "operationId": "ChangePostgresExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryChangePostgresExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangePostgresExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/ChangeProxySQLExporter": {
      "post": {
        "summary": "Change ProxySQL Exporter",
        "description": "Changes proxysql_exporter Agent.",
        "operationId": "ChangeProxySQLExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryChangeProxySQLExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeProxySQLExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/ChangeQANMongoDBProfilerAgent": {
      "post": {
        "summary": "Change 'QAN MongoDB Profiler' Agent",
        "description": "Changes 'Query Analytics MongoDB Profiler' Agent.",
        "operationId": "ChangeQANMongoDBProfilerAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryChangeQANMongoDBProfilerAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeQANMongoDBProfilerAgentRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/ChangeQANMySQLPerfSchemaAgent": {
      "post": {
        "summary": "Change 'QAN MySQL PerfSchema' Agent",
        "description": "Changes 'Query Analytics MySQL PerfSchema' Agent.",
        "operationId": "ChangeQANMySQLPerfSchemaAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryChangeQANMySQLPerfSchemaAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeQANMySQLPerfSchemaAgentRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/ChangeQANMySQLSlowlogAgent": {
      "post": {
        "summary": "Change 'QAN MySQL Slowlog' Agent",
        "description": "Changes 'Query Analytics MySQL Slowlog' Agent.",
        "operationId": "ChangeQANMySQLSlowlogAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryChangeQANMySQLSlowlogAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeQANMySQLSlowlogAgentRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/ChangeQANPostgreSQLPgStatMonitorAgent": {
      "post": {
        "summary": "Change 'QAN PostgreSQL pg_stat_monitor' Agent",
        "description": "Changes 'Query Analytics PostgreSQL pg_stat_monitor' Agent.",
        "operationId": "ChangeQANPostgreSQLPgStatMonitorAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryChangeQANPostgreSQLPgStatMonitorAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeQANPostgreSQLPgStatMonitorAgentRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/ChangeQANPostgreSQLPgStatementsAgent": {
      "post": {
        "summary": "Change 'QAN PostgreSQL pg_stat_statements' Agent",
        "description": "Changes 'Query Analytics PostgreSQL pg_stat_statements' Agent.",
        "operationId": "ChangeQANPostgreSQLPgStatementsAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryChangeQANPostgreSQLPgStatementsAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeQANPostgreSQLPgStatementsAgentRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/ChangeRDSExporter": {
      "post": {
        "summary": "Change RDS Exporter",
        "description": "Changes rds_exporter Agent.",
        "operationId": "ChangeRDSExporter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryChangeRDSExporterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryChangeRDSExporterRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/Get": {
      "post": {
        "summary": "Get Agent",
        "description": "Returns a single Agent by ID.",
        "operationId": "GetAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryGetAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGetAgentRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/GetLogs": {
      "post": {
        "summary": "Get Agent logs",
        "description": "Returns Agent logs by ID.",
        "operationId": "GetAgentLogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryGetAgentLogsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryGetAgentLogsRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/List": {
      "post": {
        "summary": "List Agents",
        "description": "Returns a list of all Agents.",
        "operationId": "ListAgents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryListAgentsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryListAgentsRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    },
    "/v1/inventory/Agents/Remove": {
      "post": {
        "summary": "Remove Agent",
        "description": "Removes Agent.",
        "operationId": "RemoveAgent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/inventoryRemoveAgentResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/inventoryRemoveAgentRequest"
            }
          }
        ],
        "tags": [
          "Agents"
        ]
      }
    }
  },
  "definitions": {
    "inventoryAddAzureDatabaseExporterRequest": {
      "type": "object",
      "properties": {
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier."
        },
        "azure_client_id": {
          "type": "string",
          "title": "Azure client ID"
        },
        "azure_client_secret": {
          "type": "string",
          "title": "Azure client secret"
        },
        "azure_tenant_id": {
          "type": "string",
          "title": "Azure tanant ID"
        },
        "azure_subscription_id": {
          "type": "string",
          "title": "Azure subscription ID"
        },
        "azure_resource_group": {
          "type": "string",
          "description": "Azure resource group."
        },
        "azure_database_resource_type": {
          "type": "string",
          "title": "Azure resource type (mysql, maria, postgres)"
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "skip_connection_check": {
          "type": "boolean",
          "description": "Skip connection check."
        },
        "push_metrics": {
          "type": "boolean",
          "description": "Enables push metrics mode for exporter."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      }
    },
    "inventoryAddAzureDatabaseExporterResponse": {
      "type": "object",
      "properties": {
        "azure_database_exporter": {
          "$ref": "#/definitions/inventoryAzureDatabaseExporter"
        }
      }
    },
    "inventoryAddExternalExporterRequest": {
      "type": "object",
      "properties": {
        "runs_on_node_id": {
          "type": "string",
          "description": "The node identifier where this instance is run."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "HTTP basic auth username for collecting metrics."
        },
        "password": {
          "type": "string",
          "description": "HTTP basic auth password for collecting metrics."
        },
        "scheme": {
          "type": "string",
          "description": "Scheme to generate URI to exporter metrics endpoints(default: http)."
        },
        "metrics_path": {
          "type": "string",
          "description": "Path under which metrics are exposed, used to generate URI(default: /metrics)."
        },
        "listen_port": {
          "type": "integer",
          "format": "int64",
          "description": "Listen port for scraping metrics."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "push_metrics": {
          "type": "boolean",
          "description": "Enables push metrics mode for exporter."
        }
      }
    },
    "inventoryAddExternalExporterResponse": {
      "type": "object",
      "properties": {
        "external_exporter": {
          "$ref": "#/definitions/inventoryExternalExporter"
        }
      }
    },
    "inventoryAddMongoDBExporterRequest": {
      "type": "object",
      "properties": {
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "MongoDB username for scraping metrics."
        },
        "password": {
          "type": "string",
          "description": "MongoDB password for scraping metrics."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "tls_certificate_key": {
          "type": "string",
          "description": "Client certificate and key."
        },
        "tls_certificate_key_file_password": {
          "type": "string",
          "description": "Password for decrypting tls_certificate_key."
        },
        "tls_ca": {
          "type": "string",
          "description": "Certificate Authority certificate chain."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "skip_connection_check": {
          "type": "boolean",
          "description": "Skip connection check."
        },
        "push_metrics": {
          "type": "boolean",
          "description": "Enables push metrics mode for exporter."
        },
        "disable_collectors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of collector names to disable in this exporter."
        },
        "authentication_mechanism": {
          "type": "string",
          "description": "Authentication mechanism.\nSee https://docs.mongodb.com/manual/reference/connection-string/#mongodb-urioption-urioption.authMechanism\nfor details."
        },
        "authentication_database": {
          "type": "string",
          "description": "Authentication database."
        },
        "agent_password": {
          "type": "string",
          "description": "Custom password for exporter endpoint /metrics."
        },
        "stats_collections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of colletions to get stats from. Can use *"
        },
        "collections_limit": {
          "type": "integer",
          "format": "int32",
          "title": "Collections limit. Only get Databases and collection stats if the total number of collections in the server\nis less than this value. 0: no limit"
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      }
    },
    "inventoryAddMongoDBExporterResponse": {
      "type": "object",
      "properties": {
        "mongodb_exporter": {
          "$ref": "#/definitions/inventoryMongoDBExporter"
        }
      }
    },
    "inventoryAddMySQLdExporterRequest": {
      "type": "object",
      "properties": {
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "MySQL username for scraping metrics."
        },
        "password": {
          "type": "string",
          "description": "MySQL password for scraping metrics."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "tls_ca": {
          "type": "string",
          "description": "Certificate Authority certificate chain."
        },
        "tls_cert": {
          "type": "string",
          "description": "Client certificate."
        },
        "tls_key": {
          "type": "string",
          "description": "Password for decrypting tls_cert."
        },
        "tablestats_group_table_limit": {
          "type": "integer",
          "format": "int32",
          "description": "Tablestats group collectors will be disabled if there are more than that number of tables.\n0 means tablestats group collectors are always enabled (no limit).\nNegative value means tablestats group collectors are always disabled."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "skip_connection_check": {
          "type": "boolean",
          "description": "Skip connection check."
        },
        "push_metrics": {
          "type": "boolean",
          "description": "Enables push metrics mode for exporter."
        },
        "disable_collectors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of collector names to disable in this exporter."
        },
        "agent_password": {
          "type": "string",
          "description": "Custom password for exporter endpoint /metrics."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      }
    },
    "inventoryAddMySQLdExporterResponse": {
      "type": "object",
      "properties": {
        "mysqld_exporter": {
          "$ref": "#/definitions/inventoryMySQLdExporter"
        },
        "table_count": {
          "type": "integer",
          "format": "int32",
          "description": "Actual table count at the moment of adding."
        }
      }
    },
    "inventoryAddNodeExporterRequest": {
      "type": "object",
      "properties": {
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "push_metrics": {
          "type": "boolean",
          "description": "Enables push metrics mode for exporter."
        },
        "disable_collectors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of collector names to disable in this exporter."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      }
    },
    "inventoryAddNodeExporterResponse": {
      "type": "object",
      "properties": {
        "node_exporter": {
          "$ref": "#/definitions/inventoryNodeExporter"
        }
      }
    },
    "inventoryAddPMMAgentRequest": {
      "type": "object",
      "properties": {
        "runs_on_node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        }
      }
    },
    "inventoryAddPMMAgentResponse": {
      "type": "object",
      "properties": {
        "pmm_agent": {
          "$ref": "#/definitions/inventoryPMMAgent"
        }
      }
    },
    "inventoryAddPostgresExporterRequest": {
      "type": "object",
      "properties": {
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "PostgreSQL username for scraping metrics."
        },
        "password": {
          "type": "string",
          "description": "PostgreSQL password for scraping metrics."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation. Uses sslmode=required instead of verify-full."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "skip_connection_check": {
          "type": "boolean",
          "description": "Skip connection check."
        },
        "push_metrics": {
          "type": "boolean",
          "description": "Enables push metrics mode for exporter."
        },
        "disable_collectors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of collector names to disable in this exporter."
        },
        "tls_ca": {
          "type": "string",
          "description": "TLS CA certificate."
        },
        "tls_cert": {
          "type": "string",
          "description": "TLS Certifcate."
        },
        "tls_key": {
          "type": "string",
          "description": "TLS Certificate Key."
        },
        "agent_password": {
          "type": "string",
          "description": "Custom password for exporter endpoint /metrics."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      }
    },
    "inventoryAddPostgresExporterResponse": {
      "type": "object",
      "properties": {
        "postgres_exporter": {
          "$ref": "#/definitions/inventoryPostgresExporter"
        }
      }
    },
    "inventoryAddProxySQLExporterRequest": {
      "type": "object",
      "properties": {
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "ProxySQL username for scraping metrics."
        },
        "password": {
          "type": "string",
          "description": "ProxySQL password for scraping metrics."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "skip_connection_check": {
          "type": "boolean",
          "description": "Skip connection check."
        },
        "push_metrics": {
          "type": "boolean",
          "description": "Enables push metrics mode for exporter."
        },
        "disable_collectors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of collector names to disable in this exporter."
        },
        "agent_password": {
          "type": "string",
          "description": "Custom password for exporter endpoint /metrics."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      }
    },
    "inventoryAddProxySQLExporterResponse": {
      "type": "object",
      "properties": {
        "proxysql_exporter": {
          "$ref": "#/definitions/inventoryProxySQLExporter"
        }
      }
    },
    "inventoryAddQANMongoDBProfilerAgentRequest": {
      "type": "object",
      "properties": {
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "MongoDB username for getting profile data."
        },
        "password": {
          "type": "string",
          "description": "MongoDB password for getting profile data."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "tls_certificate_key": {
          "type": "string",
          "description": "Client certificate and key."
        },
        "tls_certificate_key_file_password": {
          "type": "string",
          "description": "Password for decrypting tls_certificate_key."
        },
        "tls_ca": {
          "type": "string",
          "description": "Certificate Authority certificate chain."
        },
        "max_query_length": {
          "type": "integer",
          "format": "int32",
          "description": "Limit query length in QAN (default: server-defined; -1: no limit)."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "skip_connection_check": {
          "type": "boolean",
          "description": "Skip connection check."
        },
        "authentication_mechanism": {
          "type": "string",
          "description": "Authentication mechanism.\nSee https://docs.mongodb.com/manual/reference/connection-string/#mongodb-urioption-urioption.authMechanism\nfor details."
        },
        "authentication_database": {
          "type": "string",
          "description": "Authentication database."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      }
    },
    "inventoryAddQANMongoDBProfilerAgentResponse": {
      "type": "object",
      "properties": {
        "qan_mongodb_profiler_agent": {
          "$ref": "#/definitions/inventoryQANMongoDBProfilerAgent"
        }
      }
    },
    "inventoryAddQANMySQLPerfSchemaAgentRequest": {
      "type": "object",
      "properties": {
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "MySQL username for getting performance data."
        },
        "password": {
          "type": "string",
          "description": "MySQL password for getting performance data."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "tls_ca": {
          "type": "string",
          "description": "Certificate Authority certificate chain."
        },
        "tls_cert": {
          "type": "string",
          "description": "Client certificate."
        },
        "tls_key": {
          "type": "string",
          "description": "Password for decrypting tls_cert."
        },
        "max_query_length": {
          "type": "integer",
          "format": "int32",
          "title": "Limit query length in QAN (default: server-defined; -1: no limit)"
        },
        "disable_query_examples": {
          "type": "boolean",
          "description": "Disable query examples."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "skip_connection_check": {
          "type": "boolean",
          "description": "Skip connection check."
        },
        "disable_comments_parsing": {
          "type": "boolean",
          "description": "Disable parsing comments from queries and showing them in QAN."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      }
    },
    "inventoryAddQANMySQLPerfSchemaAgentResponse": {
      "type": "object",
      "properties": {
        "qan_mysql_perfschema_agent": {
          "$ref": "#/definitions/inventoryQANMySQLPerfSchemaAgent"
        }
      }
    },
    "inventoryAddQANMySQLSlowlogAgentRequest": {
      "type": "object",
      "properties": {
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "MySQL username for getting slowlog data."
        },
        "password": {
          "type": "string",
          "description": "MySQL password for getting slowlog data."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "tls_ca": {
          "type": "string",
          "description": "Certificate Authority certificate chain."
        },
        "tls_cert": {
          "type": "string",
          "description": "Client certificate."
        },
        "tls_key": {
          "type": "string",
          "description": "Password for decrypting tls_cert."
        },
        "max_query_length": {
          "type": "integer",
          "format": "int32",
          "description": "Limit query length in QAN (default: server-defined; -1: no limit)."
        },
        "disable_query_examples": {
          "type": "boolean",
          "description": "Disable query examples."
        },
        "max_slowlog_file_size": {
          "type": "string",
          "format": "int64",
          "description": "Rotate slowlog file at this size if \u003e 0.\nUse zero or negative value to disable rotation."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "skip_connection_check": {
          "type": "boolean",
          "description": "Skip connection check."
        },
        "disable_comments_parsing": {
          "type": "boolean",
          "description": "Disable parsing comments from queries and showing them in QAN."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      }
    },
    "inventoryAddQANMySQLSlowlogAgentResponse": {
      "type": "object",
      "properties": {
        "qan_mysql_slowlog_agent": {
          "$ref": "#/definitions/inventoryQANMySQLSlowlogAgent"
        }
      }
    },
    "inventoryAddQANPostgreSQLPgStatMonitorAgentRequest": {
      "type": "object",
      "properties": {
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "PostgreSQL username for getting pg stat monitor data."
        },
        "password": {
          "type": "string",
          "description": "PostgreSQL password for getting pg stat monitor data."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "max_query_length": {
          "type": "integer",
          "format": "int32",
          "description": "Limit query length in QAN (default: server-defined; -1: no limit)."
        },
        "disable_query_examples": {
          "type": "boolean",
          "description": "Disable query examples."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "skip_connection_check": {
          "type": "boolean",
          "description": "Skip connection check."
        },
        "disable_comments_parsing": {
          "type": "boolean",
          "description": "Disable parsing comments from queries and showing them in QAN."
        },
        "tls_ca": {
          "type": "string",
          "description": "TLS CA certificate."
        },
        "tls_cert": {
          "type": "string",
          "description": "TLS Certifcate."
        },
        "tls_key": {
          "type": "string",
          "description": "TLS Certificate Key."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      }
    },
    "inventoryAddQANPostgreSQLPgStatMonitorAgentResponse": {
      "type": "object",
      "properties": {
        "qan_postgresql_pgstatmonitor_agent": {
          "$ref": "#/definitions/inventoryQANPostgreSQLPgStatMonitorAgent"
        }
      }
    },
    "inventoryAddQANPostgreSQLPgStatementsAgentRequest": {
      "type": "object",
      "properties": {
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "PostgreSQL username for getting pg stat statements data."
        },
        "password": {
          "type": "string",
          "description": "PostgreSQL password for getting pg stat statements data."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "skip_connection_check": {
          "type": "boolean",
          "description": "Skip connection check."
        },
        "disable_comments_parsing": {
          "type": "boolean",
          "description": "Disable parsing comments from queries and showing them in QAN."
        },
        "max_query_length": {
          "type": "integer",
          "format": "int32",
          "description": "Limit query length in QAN (default: server-defined; -1: no limit)."
        },
        "tls_ca": {
          "type": "string",
          "description": "TLS CA certificate."
        },
        "tls_cert": {
          "type": "string",
          "description": "TLS Certifcate."
        },
        "tls_key": {
          "type": "string",
          "description": "TLS Certificate Key."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      }
    },
    "inventoryAddQANPostgreSQLPgStatementsAgentResponse": {
      "type": "object",
      "properties": {
        "qan_postgresql_pgstatements_agent": {
          "$ref": "#/definitions/inventoryQANPostgreSQLPgStatementsAgent"
        }
      }
    },
    "inventoryAddRDSExporterRequest": {
      "type": "object",
      "properties": {
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier."
        },
        "aws_access_key": {
          "type": "string",
          "description": "AWS Access Key."
        },
        "aws_secret_key": {
          "type": "string",
          "description": "AWS Secret Key."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "skip_connection_check": {
          "type": "boolean",
          "description": "Skip connection check."
        },
        "disable_basic_metrics": {
          "type": "boolean",
          "description": "Disable basic metrics."
        },
        "disable_enhanced_metrics": {
          "type": "boolean",
          "description": "Disable enhanced metrics."
        },
        "push_metrics": {
          "type": "boolean",
          "description": "Enables push metrics mode for exporter."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      }
    },
    "inventoryAddRDSExporterResponse": {
      "type": "object",
      "properties": {
        "rds_exporter": {
          "$ref": "#/definitions/inventoryRDSExporter"
        }
      }
    },
    "inventoryAgentStatus": {
      "type": "string",
      "enum": [
        "AGENT_STATUS_INVALID",
        "STARTING",
        "RUNNING",
        "WAITING",
        "STOPPING",
        "DONE",
        "UNKNOWN"
      ],
      "default": "AGENT_STATUS_INVALID",
      "description": "AgentStatus represents actual Agent status.\n\n - STARTING: Agent is starting.\n - RUNNING: Agent is running.\n - WAITING: Agent encountered error and will be restarted automatically soon.\n - STOPPING: Agent is stopping.\n - DONE: Agent finished.\n - UNKNOWN: Agent is not connected, we don't know anything about it's state."
    },
    "inventoryAgentType": {
      "type": "string",
      "enum": [
        "AGENT_TYPE_INVALID",
        "PMM_AGENT",
        "VM_AGENT",
        "NODE_EXPORTER",
        "MYSQLD_EXPORTER",
        "MONGODB_EXPORTER",
        "POSTGRES_EXPORTER",
        "PROXYSQL_EXPORTER",
        "QAN_MYSQL_PERFSCHEMA_AGENT",
        "QAN_MYSQL_SLOWLOG_AGENT",
        "QAN_MONGODB_PROFILER_AGENT",
        "QAN_POSTGRESQL_PGSTATEMENTS_AGENT",
        "QAN_POSTGRESQL_PGSTATMONITOR_AGENT",
        "RDS_EXPORTER",
        "EXTERNAL_EXPORTER",
        "AZURE_DATABASE_EXPORTER"
      ],
      "default": "AGENT_TYPE_INVALID",
      "description": "AgentType describes supported Agent types."
    },
    "inventoryAzureDatabaseExporter": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "disabled": {
          "type": "boolean",
          "description": "Desired Agent status: enabled (false) or disabled (true)."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier."
        },
        "azure_database_subscription_id": {
          "type": "string",
          "description": "Azure database subscription ID."
        },
        "azure_database_resource_type": {
          "type": "string",
          "title": "Azure database resource type (mysql, maria, postgres)"
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels.\n\nStatus fields below."
        },
        "status": {
          "$ref": "#/definitions/inventoryAgentStatus",
          "description": "Actual Agent status (the same for several configurations)."
        },
        "listen_port": {
          "type": "integer",
          "format": "int64",
          "description": "Listen port for scraping metrics (the same for several configurations)."
        },
        "push_metrics_enabled": {
          "type": "boolean",
          "description": "True if the exporter operates in push metrics mode."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      },
      "description": "AzureDatabaseExporter runs on Generic or Container Node and exposes RemoteAzure Node metrics."
    },
    "inventoryChangeAzureDatabaseExporterRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/inventoryChangeCommonAgentParams"
        }
      }
    },
    "inventoryChangeAzureDatabaseExporterResponse": {
      "type": "object",
      "properties": {
        "azure_database_exporter": {
          "$ref": "#/definitions/inventoryAzureDatabaseExporter"
        }
      }
    },
    "inventoryChangeCommonAgentParams": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Enable this Agent. Can't be used with disabled."
        },
        "disable": {
          "type": "boolean",
          "description": "Disable this Agent. Can't be used with enabled."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Replace all custom user-assigned labels."
        },
        "remove_custom_labels": {
          "type": "boolean",
          "description": "Remove all custom user-assigned labels."
        },
        "enable_push_metrics": {
          "type": "boolean",
          "description": "Enables push metrics with vmagent, can't be used with disable_push_metrics.\nCan't be used with agent version lower then 2.12 and unsupported agents."
        },
        "disable_push_metrics": {
          "type": "boolean",
          "description": "Disables push metrics, pmm-server starts to pull it, can't be used with enable_push_metrics."
        }
      },
      "description": "ChangeCommonAgentParams contains parameters that can be changed for all Agents."
    },
    "inventoryChangeExternalExporterRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/inventoryChangeCommonAgentParams"
        }
      }
    },
    "inventoryChangeExternalExporterResponse": {
      "type": "object",
      "properties": {
        "external_exporter": {
          "$ref": "#/definitions/inventoryExternalExporter"
        }
      }
    },
    "inventoryChangeMongoDBExporterRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/inventoryChangeCommonAgentParams"
        }
      }
    },
    "inventoryChangeMongoDBExporterResponse": {
      "type": "object",
      "properties": {
        "mongodb_exporter": {
          "$ref": "#/definitions/inventoryMongoDBExporter"
        }
      }
    },
    "inventoryChangeMySQLdExporterRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/inventoryChangeCommonAgentParams"
        }
      }
    },
    "inventoryChangeMySQLdExporterResponse": {
      "type": "object",
      "properties": {
        "mysqld_exporter": {
          "$ref": "#/definitions/inventoryMySQLdExporter"
        }
      }
    },
    "inventoryChangeNodeExporterRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/inventoryChangeCommonAgentParams"
        }
      }
    },
    "inventoryChangeNodeExporterResponse": {
      "type": "object",
      "properties": {
        "node_exporter": {
          "$ref": "#/definitions/inventoryNodeExporter"
        }
      }
    },
    "inventoryChangePostgresExporterRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/inventoryChangeCommonAgentParams"
        }
      }
    },
    "inventoryChangePostgresExporterResponse": {
      "type": "object",
      "properties": {
        "postgres_exporter": {
          "$ref": "#/definitions/inventoryPostgresExporter"
        }
      }
    },
    "inventoryChangeProxySQLExporterRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/inventoryChangeCommonAgentParams"
        }
      }
    },
    "inventoryChangeProxySQLExporterResponse": {
      "type": "object",
      "properties": {
        "proxysql_exporter": {
          "$ref": "#/definitions/inventoryProxySQLExporter"
        }
      }
    },
    "inventoryChangeQANMongoDBProfilerAgentRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/inventoryChangeCommonAgentParams"
        }
      }
    },
    "inventoryChangeQANMongoDBProfilerAgentResponse": {
      "type": "object",
      "properties": {
        "qan_mongodb_profiler_agent": {
          "$ref": "#/definitions/inventoryQANMongoDBProfilerAgent"
        }
      }
    },
    "inventoryChangeQANMySQLPerfSchemaAgentRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/inventoryChangeCommonAgentParams"
        }
      }
    },
    "inventoryChangeQANMySQLPerfSchemaAgentResponse": {
      "type": "object",
      "properties": {
        "qan_mysql_perfschema_agent": {
          "$ref": "#/definitions/inventoryQANMySQLPerfSchemaAgent"
        }
      }
    },
    "inventoryChangeQANMySQLSlowlogAgentRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/inventoryChangeCommonAgentParams"
        }
      }
    },
    "inventoryChangeQANMySQLSlowlogAgentResponse": {
      "type": "object",
      "properties": {
        "qan_mysql_slowlog_agent": {
          "$ref": "#/definitions/inventoryQANMySQLSlowlogAgent"
        }
      }
    },
    "inventoryChangeQANPostgreSQLPgStatMonitorAgentRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/inventoryChangeCommonAgentParams"
        }
      }
    },
    "inventoryChangeQANPostgreSQLPgStatMonitorAgentResponse": {
      "type": "object",
      "properties": {
        "qan_postgresql_pgstatmonitor_agent": {
          "$ref": "#/definitions/inventoryQANPostgreSQLPgStatMonitorAgent"
        }
      }
    },
    "inventoryChangeQANPostgreSQLPgStatementsAgentRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/inventoryChangeCommonAgentParams"
        }
      }
    },
    "inventoryChangeQANPostgreSQLPgStatementsAgentResponse": {
      "type": "object",
      "properties": {
        "qan_postgresql_pgstatements_agent": {
          "$ref": "#/definitions/inventoryQANPostgreSQLPgStatementsAgent"
        }
      }
    },
    "inventoryChangeRDSExporterRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "common": {
          "$ref": "#/definitions/inventoryChangeCommonAgentParams"
        }
      }
    },
    "inventoryChangeRDSExporterResponse": {
      "type": "object",
      "properties": {
        "rds_exporter": {
          "$ref": "#/definitions/inventoryRDSExporter"
        }
      }
    },
    "inventoryExternalExporter": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "runs_on_node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs."
        },
        "disabled": {
          "type": "boolean",
          "description": "If disabled, metrics from this exporter will not be collected."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "HTTP basic auth username for collecting metrics."
        },
        "scheme": {
          "type": "string",
          "description": "Scheme to generate URI to exporter metrics endpoints."
        },
        "metrics_path": {
          "type": "string",
          "description": "Path under which metrics are exposed, used to generate URI."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "listen_port": {
          "type": "integer",
          "format": "int64",
          "description": "Listen port for scraping metrics."
        },
        "push_metrics_enabled": {
          "type": "boolean",
          "description": "True if exporter uses push metrics mode."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        }
      },
      "description": "ExternalExporter runs on any Node type, including Remote Node."
    },
    "inventoryGetAgentLogsRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "title": "is less than this value. 0: no limit"
        }
      }
    },
    "inventoryGetAgentLogsResponse": {
      "type": "object",
      "properties": {
        "logs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "agent_config_log_lines_count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "inventoryGetAgentRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        }
      }
    },
    "inventoryGetAgentResponse": {
      "type": "object",
      "properties": {
        "pmm_agent": {
          "$ref": "#/definitions/inventoryPMMAgent"
        },
        "vmagent": {
          "$ref": "#/definitions/inventoryVMAgent"
        },
        "node_exporter": {
          "$ref": "#/definitions/inventoryNodeExporter"
        },
        "mysqld_exporter": {
          "$ref": "#/definitions/inventoryMySQLdExporter"
        },
        "mongodb_exporter": {
          "$ref": "#/definitions/inventoryMongoDBExporter"
        },
        "postgres_exporter": {
          "$ref": "#/definitions/inventoryPostgresExporter"
        },
        "proxysql_exporter": {
          "$ref": "#/definitions/inventoryProxySQLExporter"
        },
        "qan_mysql_perfschema_agent": {
          "$ref": "#/definitions/inventoryQANMySQLPerfSchemaAgent"
        },
        "qan_mysql_slowlog_agent": {
          "$ref": "#/definitions/inventoryQANMySQLSlowlogAgent"
        },
        "qan_mongodb_profiler_agent": {
          "$ref": "#/definitions/inventoryQANMongoDBProfilerAgent"
        },
        "qan_postgresql_pgstatements_agent": {
          "$ref": "#/definitions/inventoryQANPostgreSQLPgStatementsAgent"
        },
        "qan_postgresql_pgstatmonitor_agent": {
          "$ref": "#/definitions/inventoryQANPostgreSQLPgStatMonitorAgent"
        },
        "rds_exporter": {
          "$ref": "#/definitions/inventoryRDSExporter"
        },
        "external_exporter": {
          "$ref": "#/definitions/inventoryExternalExporter"
        },
        "azure_database_exporter": {
          "$ref": "#/definitions/inventoryAzureDatabaseExporter"
        }
      }
    },
    "inventoryListAgentsRequest": {
      "type": "object",
      "properties": {
        "pmm_agent_id": {
          "type": "string",
          "description": "Return only Agents started by this pmm-agent.\nExactly one of these parameters should be present: pmm_agent_id, node_id, service_id."
        },
        "node_id": {
          "type": "string",
          "description": "Return only Agents that provide insights for that Node.\nExactly one of these parameters should be present: pmm_agent_id, node_id, service_id."
        },
        "service_id": {
          "type": "string",
          "description": "Return only Agents that provide insights for that Service.\nExactly one of these parameters should be present: pmm_agent_id, node_id, service_id."
        },
        "agent_type": {
          "$ref": "#/definitions/inventoryAgentType",
          "description": "Return only agents of a particular type."
        }
      }
    },
    "inventoryListAgentsResponse": {
      "type": "object",
      "properties": {
        "pmm_agent": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryPMMAgent"
          }
        },
        "vm_agent": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryVMAgent"
          }
        },
        "node_exporter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryNodeExporter"
          }
        },
        "mysqld_exporter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryMySQLdExporter"
          }
        },
        "mongodb_exporter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryMongoDBExporter"
          }
        },
        "postgres_exporter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryPostgresExporter"
          }
        },
        "proxysql_exporter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryProxySQLExporter"
          }
        },
        "qan_mysql_perfschema_agent": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryQANMySQLPerfSchemaAgent"
          }
        },
        "qan_mysql_slowlog_agent": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryQANMySQLSlowlogAgent"
          }
        },
        "qan_mongodb_profiler_agent": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryQANMongoDBProfilerAgent"
          }
        },
        "qan_postgresql_pgstatements_agent": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryQANPostgreSQLPgStatementsAgent"
          }
        },
        "qan_postgresql_pgstatmonitor_agent": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryQANPostgreSQLPgStatMonitorAgent"
          }
        },
        "rds_exporter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryRDSExporter"
          }
        },
        "external_exporter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryExternalExporter"
          }
        },
        "azure_database_exporter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/inventoryAzureDatabaseExporter"
          }
        }
      }
    },
    "inventoryLogLevel": {
      "type": "string",
      "enum": [
        "auto",
        "fatal",
        "error",
        "warn",
        "info",
        "debug"
      ],
      "default": "auto",
      "title": "Log level for exporters"
    },
    "inventoryMongoDBExporter": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "disabled": {
          "type": "boolean",
          "description": "Desired Agent status: enabled (false) or disabled (true)."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "MongoDB username for scraping metrics."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "push_metrics_enabled": {
          "type": "boolean",
          "description": "True if exporter uses push metrics mode."
        },
        "disabled_collectors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of disabled collector names.\n\nStatus fields below."
        },
        "status": {
          "$ref": "#/definitions/inventoryAgentStatus",
          "description": "Actual Agent status."
        },
        "listen_port": {
          "type": "integer",
          "format": "int64",
          "description": "Listen port for scraping metrics."
        },
        "stats_collections": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "List of colletions to get stats from. Can use *"
        },
        "collections_limit": {
          "type": "integer",
          "format": "int32",
          "title": "Collections limit. Only get Databases and collection stats if the total number of collections in the server\nis less than this value. 0: no limit"
        },
        "enable_all_collectors": {
          "type": "boolean",
          "description": "Enable All collectors."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      },
      "description": "MongoDBExporter runs on Generic or Container Node and exposes MongoDB Service metrics."
    },
    "inventoryMySQLdExporter": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "disabled": {
          "type": "boolean",
          "description": "Desired Agent status: enabled (false) or disabled (true)."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "MySQL username for scraping metrics."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "tls_ca": {
          "type": "string",
          "description": "Certificate Authority certificate chain."
        },
        "tls_cert": {
          "type": "string",
          "description": "Client certificate."
        },
        "tls_key": {
          "type": "string",
          "description": "Password for decrypting tls_cert."
        },
        "tablestats_group_table_limit": {
          "type": "integer",
          "format": "int32",
          "description": "Tablestats group collectors are disabled if there are more than that number of tables.\n0 means tablestats group collectors are always enabled (no limit).\nNegative value means tablestats group collectors are always disabled."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "push_metrics_enabled": {
          "type": "boolean",
          "description": "True if exporter uses push metrics mode."
        },
        "disabled_collectors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of disabled collector names.\n\nStatus fields below."
        },
        "status": {
          "$ref": "#/definitions/inventoryAgentStatus",
          "description": "Actual Agent status."
        },
        "listen_port": {
          "type": "integer",
          "format": "int64",
          "description": "Listen port for scraping metrics."
        },
        "tablestats_group_disabled": {
          "type": "boolean",
          "description": "True if tablestats group collectors are currently disabled."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      },
      "description": "MySQLdExporter runs on Generic or Container Node and exposes MySQL Service metrics."
    },
    "inventoryNodeExporter": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "disabled": {
          "type": "boolean",
          "description": "Desired Agent status: enabled (false) or disabled (true)."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "push_metrics_enabled": {
          "type": "boolean",
          "description": "True if exporter uses push metrics mode."
        },
        "disabled_collectors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of disabled collector names.\n\nStatus fields below."
        },
        "status": {
          "$ref": "#/definitions/inventoryAgentStatus",
          "description": "Actual Agent status."
        },
        "listen_port": {
          "type": "integer",
          "format": "int64",
          "description": "Listen port for scraping metrics."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      },
      "description": "NodeExporter runs on Generic or Container Node and exposes its metrics."
    },
    "inventoryPMMAgent": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "runs_on_node_id": {
          "type": "string",
          "description": "Node identifier where this instance runs."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels.\n\nStatus fields below."
        },
        "connected": {
          "type": "boolean",
          "description": "True if Agent is running and connected to pmm-managed."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        }
      },
      "description": "PMMAgent runs on Generic or Container Node."
    },
    "inventoryPostgresExporter": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "disabled": {
          "type": "boolean",
          "description": "Desired Agent status: enabled (false) or disabled (true)."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "PostgreSQL username for scraping metrics."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation. Uses sslmode=required instead of verify-full."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "push_metrics_enabled": {
          "type": "boolean",
          "description": "True if exporter uses push metrics mode."
        },
        "disabled_collectors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of disabled collector names."
        },
        "status": {
          "$ref": "#/definitions/inventoryAgentStatus",
          "description": "Actual Agent status."
        },
        "listen_port": {
          "type": "integer",
          "format": "int64",
          "description": "Listen port for scraping metrics."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      },
      "description": "PostgresExporter runs on Generic or Container Node and exposes PostgreSQL Service metrics."
    },
    "inventoryProxySQLExporter": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "disabled": {
          "type": "boolean",
          "description": "Desired Agent status: enabled (false) or disabled (true)."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "ProxySQL username for scraping metrics."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels."
        },
        "push_metrics_enabled": {
          "type": "boolean",
          "description": "True if exporter uses push metrics mode."
        },
        "disabled_collectors": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of disabled collector names.\n\nStatus fields below."
        },
        "status": {
          "$ref": "#/definitions/inventoryAgentStatus",
          "description": "Actual Agent status."
        },
        "listen_port": {
          "type": "integer",
          "format": "int64",
          "description": "Listen port for scraping metrics."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      },
      "description": "ProxySQLExporter runs on Generic or Container Node and exposes ProxySQL Service metrics."
    },
    "inventoryQANMongoDBProfilerAgent": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "disabled": {
          "type": "boolean",
          "description": "Desired Agent status: enabled (false) or disabled (true)."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "MongoDB username for getting profiler data."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "max_query_length": {
          "type": "integer",
          "format": "int32",
          "description": "Limit query length in QAN (default: server-defined; -1: no limit).\n\nTrue if query examples are disabled.\n bool query_examples_disabled = 8; TODO https://jira.percona.com/browse/PMM-4650"
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels.\n\nStatus fields below."
        },
        "status": {
          "$ref": "#/definitions/inventoryAgentStatus",
          "description": "Actual Agent status."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      },
      "description": "QANMongoDBProfilerAgent runs within pmm-agent and sends MongoDB Query Analytics data to the PMM Server."
    },
    "inventoryQANMySQLPerfSchemaAgent": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "disabled": {
          "type": "boolean",
          "description": "Desired Agent status: enabled (false) or disabled (true)."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "MySQL username for getting performance data."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "tls_ca": {
          "type": "string",
          "description": "Certificate Authority certificate chain."
        },
        "tls_cert": {
          "type": "string",
          "description": "Client certificate."
        },
        "tls_key": {
          "type": "string",
          "description": "Password for decrypting tls_cert."
        },
        "disable_comments_parsing": {
          "type": "boolean",
          "description": "Disable parsing comments from queries and showing them in QAN."
        },
        "max_query_length": {
          "type": "integer",
          "format": "int32",
          "description": "Limit query length in QAN (default: server-defined; -1: no limit)."
        },
        "query_examples_disabled": {
          "type": "boolean",
          "description": "True if query examples are disabled."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels.\n\nStatus fields below."
        },
        "status": {
          "$ref": "#/definitions/inventoryAgentStatus",
          "description": "Actual Agent status."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      },
      "description": "QANMySQLPerfSchemaAgent runs within pmm-agent and sends MySQL Query Analytics data to the PMM Server."
    },
    "inventoryQANMySQLSlowlogAgent": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "disabled": {
          "type": "boolean",
          "description": "Desired Agent status: enabled (false) or disabled (true)."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "MySQL username for getting performance data."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "tls_ca": {
          "type": "string",
          "description": "Certificate Authority certificate chain."
        },
        "tls_cert": {
          "type": "string",
          "description": "Client certificate."
        },
        "tls_key": {
          "type": "string",
          "description": "Password for decrypting tls_cert."
        },
        "disable_comments_parsing": {
          "type": "boolean",
          "description": "Disable parsing comments from queries and showing them in QAN."
        },
        "max_query_length": {
          "type": "integer",
          "format": "int32",
          "title": "Limit query length in QAN (default: server-defined; -1: no limit)"
        },
        "query_examples_disabled": {
          "type": "boolean",
          "description": "True if query examples are disabled."
        },
        "max_slowlog_file_size": {
          "type": "string",
          "format": "int64",
          "description": "Slowlog file is rotated at this size if \u003e 0."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels.\n\nStatus fields below."
        },
        "status": {
          "$ref": "#/definitions/inventoryAgentStatus",
          "description": "Actual Agent status."
        },
        "process_exec_path": {
          "type": "string",
          "title": "mod tidy"
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      },
      "description": "QANMySQLSlowlogAgent runs within pmm-agent and sends MySQL Query Analytics data to the PMM Server."
    },
    "inventoryQANPostgreSQLPgStatMonitorAgent": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "disabled": {
          "type": "boolean",
          "description": "Desired Agent status: enabled (false) or disabled (true)."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "PostgreSQL username for getting pg stat monitor data."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "disable_comments_parsing": {
          "type": "boolean",
          "description": "Disable parsing comments from queries and showing them in QAN."
        },
        "max_query_length": {
          "type": "integer",
          "format": "int32",
          "description": "Limit query length in QAN (default: server-defined; -1: no limit)."
        },
        "query_examples_disabled": {
          "type": "boolean",
          "description": "True if query examples are disabled."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels.\n\nStatus fields below."
        },
        "status": {
          "$ref": "#/definitions/inventoryAgentStatus",
          "description": "Actual Agent status."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      },
      "description": "QANPostgreSQLPgStatMonitorAgent runs within pmm-agent and sends PostgreSQL Query Analytics data to the PMM Server."
    },
    "inventoryQANPostgreSQLPgStatementsAgent": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "disabled": {
          "type": "boolean",
          "description": "Desired Agent status: enabled (false) or disabled (true)."
        },
        "service_id": {
          "type": "string",
          "description": "Service identifier."
        },
        "username": {
          "type": "string",
          "description": "PostgreSQL username for getting pg stat statements data."
        },
        "disable_comments_parsing": {
          "type": "boolean",
          "description": "Disable parsing comments from queries and showing them in QAN."
        },
        "max_query_length": {
          "type": "integer",
          "format": "int32",
          "description": "Limit query length in QAN (default: server-defined; -1: no limit)."
        },
        "tls": {
          "type": "boolean",
          "description": "Use TLS for database connections."
        },
        "tls_skip_verify": {
          "type": "boolean",
          "description": "Skip TLS certificate and hostname validation."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels.\n\nStatus fields below."
        },
        "status": {
          "$ref": "#/definitions/inventoryAgentStatus",
          "description": "Actual Agent status."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      },
      "description": "QANPostgreSQLPgStatementsAgent runs within pmm-agent and sends PostgreSQL Query Analytics data to the PMM Server."
    },
    "inventoryRDSExporter": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance."
        },
        "disabled": {
          "type": "boolean",
          "description": "Desired Agent status: enabled (false) or disabled (true)."
        },
        "node_id": {
          "type": "string",
          "description": "Node identifier."
        },
        "aws_access_key": {
          "type": "string",
          "description": "AWS Access Key."
        },
        "custom_labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Custom user-assigned labels.\n\nStatus fields below."
        },
        "status": {
          "$ref": "#/definitions/inventoryAgentStatus",
          "description": "Actual Agent status (the same for several configurations)."
        },
        "listen_port": {
          "type": "integer",
          "format": "int64",
          "description": "Listen port for scraping metrics (the same for several configurations).\n\nMetric collections flags below."
        },
        "basic_metrics_disabled": {
          "type": "boolean",
          "description": "Basic metrics are disabled."
        },
        "enhanced_metrics_disabled": {
          "type": "boolean",
          "description": "Enhanced metrics are disabled."
        },
        "push_metrics_enabled": {
          "type": "boolean",
          "description": "True if exporter uses push metrics mode."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        },
        "log_level": {
          "$ref": "#/definitions/inventoryLogLevel",
          "description": "Log level for exporter."
        }
      },
      "description": "RDSExporter runs on Generic or Container Node and exposes RemoteRDS Node metrics."
    },
    "inventoryRemoveAgentRequest": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string"
        },
        "force": {
          "type": "boolean",
          "description": "Remove agent with all dependencies."
        }
      }
    },
    "inventoryRemoveAgentResponse": {
      "type": "object"
    },
    "inventoryVMAgent": {
      "type": "object",
      "properties": {
        "agent_id": {
          "type": "string",
          "description": "Unique randomly generated instance identifier."
        },
        "pmm_agent_id": {
          "type": "string",
          "description": "The pmm-agent identifier which runs this instance.\n\nStatus fields below."
        },
        "status": {
          "$ref": "#/definitions/inventoryAgentStatus",
          "description": "Actual Agent status."
        },
        "process_exec_path": {
          "type": "string",
          "description": "Path to exec process."
        },
        "listen_port": {
          "type": "integer",
          "format": "int64",
          "description": "Listen port for scraping metrics."
        }
      },
      "description": "VMAgent runs on Generic or Container Node alongside pmm-agent.\nIt scrapes other exporter Agents that are configured with push_metrics_enabled\nand uses Prometheus remote write protocol to push metrics to PMM Server."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
