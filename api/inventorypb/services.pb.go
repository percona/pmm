// Code generated by protoc-gen-go. DO NOT EDIT.
// source: inventorypb/services.proto

package inventorypb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// ServiceType describes supported Service types.
type ServiceType int32

const (
	ServiceType_SERVICE_TYPE_INVALID ServiceType = 0
	ServiceType_MYSQL_SERVICE        ServiceType = 1
	ServiceType_MONGODB_SERVICE      ServiceType = 2
	ServiceType_POSTGRESQL_SERVICE   ServiceType = 3
	ServiceType_PROXYSQL_SERVICE     ServiceType = 4
)

var ServiceType_name = map[int32]string{
	0: "SERVICE_TYPE_INVALID",
	1: "MYSQL_SERVICE",
	2: "MONGODB_SERVICE",
	3: "POSTGRESQL_SERVICE",
	4: "PROXYSQL_SERVICE",
}

var ServiceType_value = map[string]int32{
	"SERVICE_TYPE_INVALID": 0,
	"MYSQL_SERVICE":        1,
	"MONGODB_SERVICE":      2,
	"POSTGRESQL_SERVICE":   3,
	"PROXYSQL_SERVICE":     4,
}

func (x ServiceType) String() string {
	return proto.EnumName(ServiceType_name, int32(x))
}

func (ServiceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{0}
}

// MySQLService represents a generic MySQL instance.
type MySQLService struct {
	// Unique randomly generated instance identifier.
	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Unique across all Services user-defined name.
	ServiceName string `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Node identifier where this instance runs.
	NodeId string `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Access address (DNS name or IP).
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// Access port.
	Port uint32 `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	// Environment name.
	Environment string `protobuf:"bytes,6,opt,name=environment,proto3" json:"environment,omitempty"`
	// Cluster name.
	Cluster string `protobuf:"bytes,7,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Replication set name.
	ReplicationSet string `protobuf:"bytes,8,opt,name=replication_set,json=replicationSet,proto3" json:"replication_set,omitempty"`
	// Custom user-assigned labels.
	CustomLabels         map[string]string `protobuf:"bytes,9,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MySQLService) Reset()         { *m = MySQLService{} }
func (m *MySQLService) String() string { return proto.CompactTextString(m) }
func (*MySQLService) ProtoMessage()    {}
func (*MySQLService) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{0}
}

func (m *MySQLService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MySQLService.Unmarshal(m, b)
}
func (m *MySQLService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MySQLService.Marshal(b, m, deterministic)
}
func (m *MySQLService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MySQLService.Merge(m, src)
}
func (m *MySQLService) XXX_Size() int {
	return xxx_messageInfo_MySQLService.Size(m)
}
func (m *MySQLService) XXX_DiscardUnknown() {
	xxx_messageInfo_MySQLService.DiscardUnknown(m)
}

var xxx_messageInfo_MySQLService proto.InternalMessageInfo

func (m *MySQLService) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *MySQLService) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *MySQLService) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *MySQLService) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MySQLService) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *MySQLService) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *MySQLService) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *MySQLService) GetReplicationSet() string {
	if m != nil {
		return m.ReplicationSet
	}
	return ""
}

func (m *MySQLService) GetCustomLabels() map[string]string {
	if m != nil {
		return m.CustomLabels
	}
	return nil
}

// MongoDBService represents a generic MongoDB instance.
type MongoDBService struct {
	// Unique randomly generated instance identifier.
	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Unique across all Services user-defined name.
	ServiceName string `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Node identifier where this instance runs.
	NodeId string `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Access address (DNS name or IP).
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// Access port.
	Port uint32 `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	// Environment name.
	Environment string `protobuf:"bytes,6,opt,name=environment,proto3" json:"environment,omitempty"`
	// Cluster name.
	Cluster string `protobuf:"bytes,7,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Replication set name.
	ReplicationSet string `protobuf:"bytes,8,opt,name=replication_set,json=replicationSet,proto3" json:"replication_set,omitempty"`
	// Custom user-assigned labels.
	CustomLabels         map[string]string `protobuf:"bytes,9,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MongoDBService) Reset()         { *m = MongoDBService{} }
func (m *MongoDBService) String() string { return proto.CompactTextString(m) }
func (*MongoDBService) ProtoMessage()    {}
func (*MongoDBService) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{1}
}

func (m *MongoDBService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MongoDBService.Unmarshal(m, b)
}
func (m *MongoDBService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MongoDBService.Marshal(b, m, deterministic)
}
func (m *MongoDBService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MongoDBService.Merge(m, src)
}
func (m *MongoDBService) XXX_Size() int {
	return xxx_messageInfo_MongoDBService.Size(m)
}
func (m *MongoDBService) XXX_DiscardUnknown() {
	xxx_messageInfo_MongoDBService.DiscardUnknown(m)
}

var xxx_messageInfo_MongoDBService proto.InternalMessageInfo

func (m *MongoDBService) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *MongoDBService) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *MongoDBService) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *MongoDBService) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MongoDBService) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *MongoDBService) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *MongoDBService) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *MongoDBService) GetReplicationSet() string {
	if m != nil {
		return m.ReplicationSet
	}
	return ""
}

func (m *MongoDBService) GetCustomLabels() map[string]string {
	if m != nil {
		return m.CustomLabels
	}
	return nil
}

// PostgreSQLService represents a generic PostgreSQL instance.
type PostgreSQLService struct {
	// Unique randomly generated instance identifier.
	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Unique across all Services user-defined name.
	ServiceName string `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Node identifier where this instance runs.
	NodeId string `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Access address (DNS name or IP).
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// Access port.
	Port uint32 `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	// Environment name.
	Environment string `protobuf:"bytes,6,opt,name=environment,proto3" json:"environment,omitempty"`
	// Cluster name.
	Cluster string `protobuf:"bytes,7,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Replication set name.
	ReplicationSet string `protobuf:"bytes,8,opt,name=replication_set,json=replicationSet,proto3" json:"replication_set,omitempty"`
	// Custom user-assigned labels.
	CustomLabels         map[string]string `protobuf:"bytes,9,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PostgreSQLService) Reset()         { *m = PostgreSQLService{} }
func (m *PostgreSQLService) String() string { return proto.CompactTextString(m) }
func (*PostgreSQLService) ProtoMessage()    {}
func (*PostgreSQLService) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{2}
}

func (m *PostgreSQLService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostgreSQLService.Unmarshal(m, b)
}
func (m *PostgreSQLService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostgreSQLService.Marshal(b, m, deterministic)
}
func (m *PostgreSQLService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostgreSQLService.Merge(m, src)
}
func (m *PostgreSQLService) XXX_Size() int {
	return xxx_messageInfo_PostgreSQLService.Size(m)
}
func (m *PostgreSQLService) XXX_DiscardUnknown() {
	xxx_messageInfo_PostgreSQLService.DiscardUnknown(m)
}

var xxx_messageInfo_PostgreSQLService proto.InternalMessageInfo

func (m *PostgreSQLService) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *PostgreSQLService) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *PostgreSQLService) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *PostgreSQLService) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *PostgreSQLService) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *PostgreSQLService) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *PostgreSQLService) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *PostgreSQLService) GetReplicationSet() string {
	if m != nil {
		return m.ReplicationSet
	}
	return ""
}

func (m *PostgreSQLService) GetCustomLabels() map[string]string {
	if m != nil {
		return m.CustomLabels
	}
	return nil
}

// ProxySQLService represents a generic ProxySQL instance.
type ProxySQLService struct {
	// Unique randomly generated instance identifier.
	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Unique across all Services user-defined name.
	ServiceName string `protobuf:"bytes,2,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Node identifier where this instance runs.
	NodeId string `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Access address (DNS name or IP).
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	// Access port.
	Port uint32 `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	// Environment name.
	Environment string `protobuf:"bytes,6,opt,name=environment,proto3" json:"environment,omitempty"`
	// Cluster name.
	Cluster string `protobuf:"bytes,7,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Replication set name.
	ReplicationSet string `protobuf:"bytes,8,opt,name=replication_set,json=replicationSet,proto3" json:"replication_set,omitempty"`
	// Custom user-assigned labels.
	CustomLabels         map[string]string `protobuf:"bytes,9,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProxySQLService) Reset()         { *m = ProxySQLService{} }
func (m *ProxySQLService) String() string { return proto.CompactTextString(m) }
func (*ProxySQLService) ProtoMessage()    {}
func (*ProxySQLService) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{3}
}

func (m *ProxySQLService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxySQLService.Unmarshal(m, b)
}
func (m *ProxySQLService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxySQLService.Marshal(b, m, deterministic)
}
func (m *ProxySQLService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxySQLService.Merge(m, src)
}
func (m *ProxySQLService) XXX_Size() int {
	return xxx_messageInfo_ProxySQLService.Size(m)
}
func (m *ProxySQLService) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxySQLService.DiscardUnknown(m)
}

var xxx_messageInfo_ProxySQLService proto.InternalMessageInfo

func (m *ProxySQLService) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *ProxySQLService) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *ProxySQLService) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ProxySQLService) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *ProxySQLService) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ProxySQLService) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *ProxySQLService) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *ProxySQLService) GetReplicationSet() string {
	if m != nil {
		return m.ReplicationSet
	}
	return ""
}

func (m *ProxySQLService) GetCustomLabels() map[string]string {
	if m != nil {
		return m.CustomLabels
	}
	return nil
}

type ListServicesRequest struct {
	// Return only Services running on that Node.
	NodeId string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Do not use yet.
	// TODO https://jira.percona.com/browse/PMM-5112
	ServiceType          ServiceType `protobuf:"varint,2,opt,name=service_type,json=serviceType,proto3,enum=inventory.ServiceType" json:"service_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListServicesRequest) Reset()         { *m = ListServicesRequest{} }
func (m *ListServicesRequest) String() string { return proto.CompactTextString(m) }
func (*ListServicesRequest) ProtoMessage()    {}
func (*ListServicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{4}
}

func (m *ListServicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServicesRequest.Unmarshal(m, b)
}
func (m *ListServicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServicesRequest.Marshal(b, m, deterministic)
}
func (m *ListServicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesRequest.Merge(m, src)
}
func (m *ListServicesRequest) XXX_Size() int {
	return xxx_messageInfo_ListServicesRequest.Size(m)
}
func (m *ListServicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesRequest proto.InternalMessageInfo

func (m *ListServicesRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ListServicesRequest) GetServiceType() ServiceType {
	if m != nil {
		return m.ServiceType
	}
	return ServiceType_SERVICE_TYPE_INVALID
}

type ListServicesResponse struct {
	Mysql                []*MySQLService      `protobuf:"bytes,1,rep,name=mysql,proto3" json:"mysql,omitempty"`
	Mongodb              []*MongoDBService    `protobuf:"bytes,3,rep,name=mongodb,proto3" json:"mongodb,omitempty"`
	Postgresql           []*PostgreSQLService `protobuf:"bytes,4,rep,name=postgresql,proto3" json:"postgresql,omitempty"`
	Proxysql             []*ProxySQLService   `protobuf:"bytes,5,rep,name=proxysql,proto3" json:"proxysql,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListServicesResponse) Reset()         { *m = ListServicesResponse{} }
func (m *ListServicesResponse) String() string { return proto.CompactTextString(m) }
func (*ListServicesResponse) ProtoMessage()    {}
func (*ListServicesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{5}
}

func (m *ListServicesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListServicesResponse.Unmarshal(m, b)
}
func (m *ListServicesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListServicesResponse.Marshal(b, m, deterministic)
}
func (m *ListServicesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListServicesResponse.Merge(m, src)
}
func (m *ListServicesResponse) XXX_Size() int {
	return xxx_messageInfo_ListServicesResponse.Size(m)
}
func (m *ListServicesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListServicesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListServicesResponse proto.InternalMessageInfo

func (m *ListServicesResponse) GetMysql() []*MySQLService {
	if m != nil {
		return m.Mysql
	}
	return nil
}

func (m *ListServicesResponse) GetMongodb() []*MongoDBService {
	if m != nil {
		return m.Mongodb
	}
	return nil
}

func (m *ListServicesResponse) GetPostgresql() []*PostgreSQLService {
	if m != nil {
		return m.Postgresql
	}
	return nil
}

func (m *ListServicesResponse) GetProxysql() []*ProxySQLService {
	if m != nil {
		return m.Proxysql
	}
	return nil
}

type GetServiceRequest struct {
	// Unique randomly generated instance identifier.
	ServiceId            string   `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServiceRequest) Reset()         { *m = GetServiceRequest{} }
func (m *GetServiceRequest) String() string { return proto.CompactTextString(m) }
func (*GetServiceRequest) ProtoMessage()    {}
func (*GetServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{6}
}

func (m *GetServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceRequest.Unmarshal(m, b)
}
func (m *GetServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceRequest.Marshal(b, m, deterministic)
}
func (m *GetServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceRequest.Merge(m, src)
}
func (m *GetServiceRequest) XXX_Size() int {
	return xxx_messageInfo_GetServiceRequest.Size(m)
}
func (m *GetServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceRequest proto.InternalMessageInfo

func (m *GetServiceRequest) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

type GetServiceResponse struct {
	// Types that are valid to be assigned to Service:
	//	*GetServiceResponse_Mysql
	//	*GetServiceResponse_Mongodb
	//	*GetServiceResponse_Postgresql
	//	*GetServiceResponse_Proxysql
	Service              isGetServiceResponse_Service `protobuf_oneof:"service"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *GetServiceResponse) Reset()         { *m = GetServiceResponse{} }
func (m *GetServiceResponse) String() string { return proto.CompactTextString(m) }
func (*GetServiceResponse) ProtoMessage()    {}
func (*GetServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{7}
}

func (m *GetServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServiceResponse.Unmarshal(m, b)
}
func (m *GetServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServiceResponse.Marshal(b, m, deterministic)
}
func (m *GetServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServiceResponse.Merge(m, src)
}
func (m *GetServiceResponse) XXX_Size() int {
	return xxx_messageInfo_GetServiceResponse.Size(m)
}
func (m *GetServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetServiceResponse proto.InternalMessageInfo

type isGetServiceResponse_Service interface {
	isGetServiceResponse_Service()
}

type GetServiceResponse_Mysql struct {
	Mysql *MySQLService `protobuf:"bytes,1,opt,name=mysql,proto3,oneof"`
}

type GetServiceResponse_Mongodb struct {
	Mongodb *MongoDBService `protobuf:"bytes,2,opt,name=mongodb,proto3,oneof"`
}

type GetServiceResponse_Postgresql struct {
	Postgresql *PostgreSQLService `protobuf:"bytes,3,opt,name=postgresql,proto3,oneof"`
}

type GetServiceResponse_Proxysql struct {
	Proxysql *ProxySQLService `protobuf:"bytes,4,opt,name=proxysql,proto3,oneof"`
}

func (*GetServiceResponse_Mysql) isGetServiceResponse_Service() {}

func (*GetServiceResponse_Mongodb) isGetServiceResponse_Service() {}

func (*GetServiceResponse_Postgresql) isGetServiceResponse_Service() {}

func (*GetServiceResponse_Proxysql) isGetServiceResponse_Service() {}

func (m *GetServiceResponse) GetService() isGetServiceResponse_Service {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *GetServiceResponse) GetMysql() *MySQLService {
	if x, ok := m.GetService().(*GetServiceResponse_Mysql); ok {
		return x.Mysql
	}
	return nil
}

func (m *GetServiceResponse) GetMongodb() *MongoDBService {
	if x, ok := m.GetService().(*GetServiceResponse_Mongodb); ok {
		return x.Mongodb
	}
	return nil
}

func (m *GetServiceResponse) GetPostgresql() *PostgreSQLService {
	if x, ok := m.GetService().(*GetServiceResponse_Postgresql); ok {
		return x.Postgresql
	}
	return nil
}

func (m *GetServiceResponse) GetProxysql() *ProxySQLService {
	if x, ok := m.GetService().(*GetServiceResponse_Proxysql); ok {
		return x.Proxysql
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GetServiceResponse) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GetServiceResponse_Mysql)(nil),
		(*GetServiceResponse_Mongodb)(nil),
		(*GetServiceResponse_Postgresql)(nil),
		(*GetServiceResponse_Proxysql)(nil),
	}
}

type AddMySQLServiceRequest struct {
	// Unique across all Services user-defined name. Required.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Node identifier where this instance runs. Required.
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Access address (DNS name or IP). Required.
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Access port. Required.
	Port uint32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// Environment name.
	Environment string `protobuf:"bytes,5,opt,name=environment,proto3" json:"environment,omitempty"`
	// Cluster name.
	Cluster string `protobuf:"bytes,6,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Replication set name.
	ReplicationSet string `protobuf:"bytes,7,opt,name=replication_set,json=replicationSet,proto3" json:"replication_set,omitempty"`
	// Custom user-assigned labels.
	CustomLabels         map[string]string `protobuf:"bytes,8,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AddMySQLServiceRequest) Reset()         { *m = AddMySQLServiceRequest{} }
func (m *AddMySQLServiceRequest) String() string { return proto.CompactTextString(m) }
func (*AddMySQLServiceRequest) ProtoMessage()    {}
func (*AddMySQLServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{8}
}

func (m *AddMySQLServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddMySQLServiceRequest.Unmarshal(m, b)
}
func (m *AddMySQLServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddMySQLServiceRequest.Marshal(b, m, deterministic)
}
func (m *AddMySQLServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddMySQLServiceRequest.Merge(m, src)
}
func (m *AddMySQLServiceRequest) XXX_Size() int {
	return xxx_messageInfo_AddMySQLServiceRequest.Size(m)
}
func (m *AddMySQLServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddMySQLServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddMySQLServiceRequest proto.InternalMessageInfo

func (m *AddMySQLServiceRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *AddMySQLServiceRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *AddMySQLServiceRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddMySQLServiceRequest) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *AddMySQLServiceRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *AddMySQLServiceRequest) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *AddMySQLServiceRequest) GetReplicationSet() string {
	if m != nil {
		return m.ReplicationSet
	}
	return ""
}

func (m *AddMySQLServiceRequest) GetCustomLabels() map[string]string {
	if m != nil {
		return m.CustomLabels
	}
	return nil
}

type AddMySQLServiceResponse struct {
	Mysql                *MySQLService `protobuf:"bytes,1,opt,name=mysql,proto3" json:"mysql,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AddMySQLServiceResponse) Reset()         { *m = AddMySQLServiceResponse{} }
func (m *AddMySQLServiceResponse) String() string { return proto.CompactTextString(m) }
func (*AddMySQLServiceResponse) ProtoMessage()    {}
func (*AddMySQLServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{9}
}

func (m *AddMySQLServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddMySQLServiceResponse.Unmarshal(m, b)
}
func (m *AddMySQLServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddMySQLServiceResponse.Marshal(b, m, deterministic)
}
func (m *AddMySQLServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddMySQLServiceResponse.Merge(m, src)
}
func (m *AddMySQLServiceResponse) XXX_Size() int {
	return xxx_messageInfo_AddMySQLServiceResponse.Size(m)
}
func (m *AddMySQLServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddMySQLServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddMySQLServiceResponse proto.InternalMessageInfo

func (m *AddMySQLServiceResponse) GetMysql() *MySQLService {
	if m != nil {
		return m.Mysql
	}
	return nil
}

type AddMongoDBServiceRequest struct {
	// Unique across all Services user-defined name. Required.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Node identifier where this instance runs. Required.
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Access address (DNS name or IP). Required.
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Access port. Required.
	Port uint32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// Environment name.
	Environment string `protobuf:"bytes,5,opt,name=environment,proto3" json:"environment,omitempty"`
	// Cluster name.
	Cluster string `protobuf:"bytes,6,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Replication set name.
	ReplicationSet string `protobuf:"bytes,7,opt,name=replication_set,json=replicationSet,proto3" json:"replication_set,omitempty"`
	// Custom user-assigned labels.
	CustomLabels         map[string]string `protobuf:"bytes,8,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AddMongoDBServiceRequest) Reset()         { *m = AddMongoDBServiceRequest{} }
func (m *AddMongoDBServiceRequest) String() string { return proto.CompactTextString(m) }
func (*AddMongoDBServiceRequest) ProtoMessage()    {}
func (*AddMongoDBServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{10}
}

func (m *AddMongoDBServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddMongoDBServiceRequest.Unmarshal(m, b)
}
func (m *AddMongoDBServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddMongoDBServiceRequest.Marshal(b, m, deterministic)
}
func (m *AddMongoDBServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddMongoDBServiceRequest.Merge(m, src)
}
func (m *AddMongoDBServiceRequest) XXX_Size() int {
	return xxx_messageInfo_AddMongoDBServiceRequest.Size(m)
}
func (m *AddMongoDBServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddMongoDBServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddMongoDBServiceRequest proto.InternalMessageInfo

func (m *AddMongoDBServiceRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *AddMongoDBServiceRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *AddMongoDBServiceRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddMongoDBServiceRequest) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *AddMongoDBServiceRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *AddMongoDBServiceRequest) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *AddMongoDBServiceRequest) GetReplicationSet() string {
	if m != nil {
		return m.ReplicationSet
	}
	return ""
}

func (m *AddMongoDBServiceRequest) GetCustomLabels() map[string]string {
	if m != nil {
		return m.CustomLabels
	}
	return nil
}

type AddMongoDBServiceResponse struct {
	Mongodb              *MongoDBService `protobuf:"bytes,1,opt,name=mongodb,proto3" json:"mongodb,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AddMongoDBServiceResponse) Reset()         { *m = AddMongoDBServiceResponse{} }
func (m *AddMongoDBServiceResponse) String() string { return proto.CompactTextString(m) }
func (*AddMongoDBServiceResponse) ProtoMessage()    {}
func (*AddMongoDBServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{11}
}

func (m *AddMongoDBServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddMongoDBServiceResponse.Unmarshal(m, b)
}
func (m *AddMongoDBServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddMongoDBServiceResponse.Marshal(b, m, deterministic)
}
func (m *AddMongoDBServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddMongoDBServiceResponse.Merge(m, src)
}
func (m *AddMongoDBServiceResponse) XXX_Size() int {
	return xxx_messageInfo_AddMongoDBServiceResponse.Size(m)
}
func (m *AddMongoDBServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddMongoDBServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddMongoDBServiceResponse proto.InternalMessageInfo

func (m *AddMongoDBServiceResponse) GetMongodb() *MongoDBService {
	if m != nil {
		return m.Mongodb
	}
	return nil
}

type AddPostgreSQLServiceRequest struct {
	// Unique across all Services user-defined name. Required.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Node identifier where this instance runs. Required.
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Access address (DNS name or IP). Required.
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Access port. Required.
	Port uint32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// Environment name.
	Environment string `protobuf:"bytes,5,opt,name=environment,proto3" json:"environment,omitempty"`
	// Cluster name.
	Cluster string `protobuf:"bytes,6,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Replication set name.
	ReplicationSet string `protobuf:"bytes,7,opt,name=replication_set,json=replicationSet,proto3" json:"replication_set,omitempty"`
	// Custom user-assigned labels.
	CustomLabels         map[string]string `protobuf:"bytes,8,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AddPostgreSQLServiceRequest) Reset()         { *m = AddPostgreSQLServiceRequest{} }
func (m *AddPostgreSQLServiceRequest) String() string { return proto.CompactTextString(m) }
func (*AddPostgreSQLServiceRequest) ProtoMessage()    {}
func (*AddPostgreSQLServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{12}
}

func (m *AddPostgreSQLServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPostgreSQLServiceRequest.Unmarshal(m, b)
}
func (m *AddPostgreSQLServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPostgreSQLServiceRequest.Marshal(b, m, deterministic)
}
func (m *AddPostgreSQLServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPostgreSQLServiceRequest.Merge(m, src)
}
func (m *AddPostgreSQLServiceRequest) XXX_Size() int {
	return xxx_messageInfo_AddPostgreSQLServiceRequest.Size(m)
}
func (m *AddPostgreSQLServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPostgreSQLServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPostgreSQLServiceRequest proto.InternalMessageInfo

func (m *AddPostgreSQLServiceRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *AddPostgreSQLServiceRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *AddPostgreSQLServiceRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddPostgreSQLServiceRequest) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *AddPostgreSQLServiceRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *AddPostgreSQLServiceRequest) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *AddPostgreSQLServiceRequest) GetReplicationSet() string {
	if m != nil {
		return m.ReplicationSet
	}
	return ""
}

func (m *AddPostgreSQLServiceRequest) GetCustomLabels() map[string]string {
	if m != nil {
		return m.CustomLabels
	}
	return nil
}

type AddPostgreSQLServiceResponse struct {
	Postgresql           *PostgreSQLService `protobuf:"bytes,1,opt,name=postgresql,proto3" json:"postgresql,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AddPostgreSQLServiceResponse) Reset()         { *m = AddPostgreSQLServiceResponse{} }
func (m *AddPostgreSQLServiceResponse) String() string { return proto.CompactTextString(m) }
func (*AddPostgreSQLServiceResponse) ProtoMessage()    {}
func (*AddPostgreSQLServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{13}
}

func (m *AddPostgreSQLServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPostgreSQLServiceResponse.Unmarshal(m, b)
}
func (m *AddPostgreSQLServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPostgreSQLServiceResponse.Marshal(b, m, deterministic)
}
func (m *AddPostgreSQLServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPostgreSQLServiceResponse.Merge(m, src)
}
func (m *AddPostgreSQLServiceResponse) XXX_Size() int {
	return xxx_messageInfo_AddPostgreSQLServiceResponse.Size(m)
}
func (m *AddPostgreSQLServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPostgreSQLServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddPostgreSQLServiceResponse proto.InternalMessageInfo

func (m *AddPostgreSQLServiceResponse) GetPostgresql() *PostgreSQLService {
	if m != nil {
		return m.Postgresql
	}
	return nil
}

type AddProxySQLServiceRequest struct {
	// Unique across all Services user-defined name. Required.
	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	// Node identifier where this instance runs. Required.
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Access address (DNS name or IP). Required.
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Access port. Required.
	Port uint32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// Environment name.
	Environment string `protobuf:"bytes,5,opt,name=environment,proto3" json:"environment,omitempty"`
	// Cluster name.
	Cluster string `protobuf:"bytes,6,opt,name=cluster,proto3" json:"cluster,omitempty"`
	// Replication set name.
	ReplicationSet string `protobuf:"bytes,7,opt,name=replication_set,json=replicationSet,proto3" json:"replication_set,omitempty"`
	// Custom user-assigned labels.
	CustomLabels         map[string]string `protobuf:"bytes,8,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AddProxySQLServiceRequest) Reset()         { *m = AddProxySQLServiceRequest{} }
func (m *AddProxySQLServiceRequest) String() string { return proto.CompactTextString(m) }
func (*AddProxySQLServiceRequest) ProtoMessage()    {}
func (*AddProxySQLServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{14}
}

func (m *AddProxySQLServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProxySQLServiceRequest.Unmarshal(m, b)
}
func (m *AddProxySQLServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProxySQLServiceRequest.Marshal(b, m, deterministic)
}
func (m *AddProxySQLServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProxySQLServiceRequest.Merge(m, src)
}
func (m *AddProxySQLServiceRequest) XXX_Size() int {
	return xxx_messageInfo_AddProxySQLServiceRequest.Size(m)
}
func (m *AddProxySQLServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProxySQLServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddProxySQLServiceRequest proto.InternalMessageInfo

func (m *AddProxySQLServiceRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *AddProxySQLServiceRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *AddProxySQLServiceRequest) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *AddProxySQLServiceRequest) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *AddProxySQLServiceRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *AddProxySQLServiceRequest) GetCluster() string {
	if m != nil {
		return m.Cluster
	}
	return ""
}

func (m *AddProxySQLServiceRequest) GetReplicationSet() string {
	if m != nil {
		return m.ReplicationSet
	}
	return ""
}

func (m *AddProxySQLServiceRequest) GetCustomLabels() map[string]string {
	if m != nil {
		return m.CustomLabels
	}
	return nil
}

type AddProxySQLServiceResponse struct {
	Proxysql             *ProxySQLService `protobuf:"bytes,1,opt,name=proxysql,proto3" json:"proxysql,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *AddProxySQLServiceResponse) Reset()         { *m = AddProxySQLServiceResponse{} }
func (m *AddProxySQLServiceResponse) String() string { return proto.CompactTextString(m) }
func (*AddProxySQLServiceResponse) ProtoMessage()    {}
func (*AddProxySQLServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{15}
}

func (m *AddProxySQLServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddProxySQLServiceResponse.Unmarshal(m, b)
}
func (m *AddProxySQLServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddProxySQLServiceResponse.Marshal(b, m, deterministic)
}
func (m *AddProxySQLServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddProxySQLServiceResponse.Merge(m, src)
}
func (m *AddProxySQLServiceResponse) XXX_Size() int {
	return xxx_messageInfo_AddProxySQLServiceResponse.Size(m)
}
func (m *AddProxySQLServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddProxySQLServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddProxySQLServiceResponse proto.InternalMessageInfo

func (m *AddProxySQLServiceResponse) GetProxysql() *ProxySQLService {
	if m != nil {
		return m.Proxysql
	}
	return nil
}

type RemoveServiceRequest struct {
	// Unique randomly generated instance identifier. Required.
	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Remove service with all dependencies.
	Force                bool     `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveServiceRequest) Reset()         { *m = RemoveServiceRequest{} }
func (m *RemoveServiceRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveServiceRequest) ProtoMessage()    {}
func (*RemoveServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{16}
}

func (m *RemoveServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveServiceRequest.Unmarshal(m, b)
}
func (m *RemoveServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveServiceRequest.Marshal(b, m, deterministic)
}
func (m *RemoveServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveServiceRequest.Merge(m, src)
}
func (m *RemoveServiceRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveServiceRequest.Size(m)
}
func (m *RemoveServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveServiceRequest proto.InternalMessageInfo

func (m *RemoveServiceRequest) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *RemoveServiceRequest) GetForce() bool {
	if m != nil {
		return m.Force
	}
	return false
}

type RemoveServiceResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveServiceResponse) Reset()         { *m = RemoveServiceResponse{} }
func (m *RemoveServiceResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveServiceResponse) ProtoMessage()    {}
func (*RemoveServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_79dc70e48abe0aa8, []int{17}
}

func (m *RemoveServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveServiceResponse.Unmarshal(m, b)
}
func (m *RemoveServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveServiceResponse.Marshal(b, m, deterministic)
}
func (m *RemoveServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveServiceResponse.Merge(m, src)
}
func (m *RemoveServiceResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveServiceResponse.Size(m)
}
func (m *RemoveServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveServiceResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("inventory.ServiceType", ServiceType_name, ServiceType_value)
	proto.RegisterType((*MySQLService)(nil), "inventory.MySQLService")
	proto.RegisterMapType((map[string]string)(nil), "inventory.MySQLService.CustomLabelsEntry")
	proto.RegisterType((*MongoDBService)(nil), "inventory.MongoDBService")
	proto.RegisterMapType((map[string]string)(nil), "inventory.MongoDBService.CustomLabelsEntry")
	proto.RegisterType((*PostgreSQLService)(nil), "inventory.PostgreSQLService")
	proto.RegisterMapType((map[string]string)(nil), "inventory.PostgreSQLService.CustomLabelsEntry")
	proto.RegisterType((*ProxySQLService)(nil), "inventory.ProxySQLService")
	proto.RegisterMapType((map[string]string)(nil), "inventory.ProxySQLService.CustomLabelsEntry")
	proto.RegisterType((*ListServicesRequest)(nil), "inventory.ListServicesRequest")
	proto.RegisterType((*ListServicesResponse)(nil), "inventory.ListServicesResponse")
	proto.RegisterType((*GetServiceRequest)(nil), "inventory.GetServiceRequest")
	proto.RegisterType((*GetServiceResponse)(nil), "inventory.GetServiceResponse")
	proto.RegisterType((*AddMySQLServiceRequest)(nil), "inventory.AddMySQLServiceRequest")
	proto.RegisterMapType((map[string]string)(nil), "inventory.AddMySQLServiceRequest.CustomLabelsEntry")
	proto.RegisterType((*AddMySQLServiceResponse)(nil), "inventory.AddMySQLServiceResponse")
	proto.RegisterType((*AddMongoDBServiceRequest)(nil), "inventory.AddMongoDBServiceRequest")
	proto.RegisterMapType((map[string]string)(nil), "inventory.AddMongoDBServiceRequest.CustomLabelsEntry")
	proto.RegisterType((*AddMongoDBServiceResponse)(nil), "inventory.AddMongoDBServiceResponse")
	proto.RegisterType((*AddPostgreSQLServiceRequest)(nil), "inventory.AddPostgreSQLServiceRequest")
	proto.RegisterMapType((map[string]string)(nil), "inventory.AddPostgreSQLServiceRequest.CustomLabelsEntry")
	proto.RegisterType((*AddPostgreSQLServiceResponse)(nil), "inventory.AddPostgreSQLServiceResponse")
	proto.RegisterType((*AddProxySQLServiceRequest)(nil), "inventory.AddProxySQLServiceRequest")
	proto.RegisterMapType((map[string]string)(nil), "inventory.AddProxySQLServiceRequest.CustomLabelsEntry")
	proto.RegisterType((*AddProxySQLServiceResponse)(nil), "inventory.AddProxySQLServiceResponse")
	proto.RegisterType((*RemoveServiceRequest)(nil), "inventory.RemoveServiceRequest")
	proto.RegisterType((*RemoveServiceResponse)(nil), "inventory.RemoveServiceResponse")
}

func init() { proto.RegisterFile("inventorypb/services.proto", fileDescriptor_79dc70e48abe0aa8) }

var fileDescriptor_79dc70e48abe0aa8 = []byte{
	// 1278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x58, 0x5f, 0x6f, 0xdb, 0x54,
	0x14, 0x8f, 0xe3, 0xb6, 0x69, 0x4f, 0xdb, 0xb5, 0xbd, 0x0b, 0xab, 0xe7, 0x6d, 0x34, 0xf3, 0xba,
	0xae, 0x2b, 0x4b, 0x2c, 0x36, 0x6d, 0x1a, 0x15, 0x02, 0xda, 0x2d, 0x6a, 0x2b, 0xfa, 0x27, 0x73,
	0xaa, 0x69, 0x1b, 0x4c, 0x91, 0x1b, 0xdf, 0x06, 0x6b, 0x89, 0xaf, 0x67, 0x3b, 0x29, 0x91, 0xe0,
	0x01, 0xc4, 0x23, 0x48, 0xc0, 0x1e, 0xe0, 0x99, 0x07, 0xc4, 0x03, 0xef, 0x7c, 0x10, 0x3e, 0x00,
	0x12, 0xe2, 0x03, 0xf0, 0x11, 0x90, 0xaf, 0xaf, 0x93, 0xeb, 0xc4, 0x4e, 0x2a, 0xa4, 0x3c, 0xe5,
	0x29, 0xb1, 0xef, 0x39, 0xf7, 0xfc, 0xfc, 0xfb, 0x9d, 0xfb, 0xf3, 0x91, 0x41, 0x36, 0xad, 0x16,
	0xb6, 0x3c, 0xe2, 0xb4, 0xed, 0x13, 0xd5, 0xc5, 0x4e, 0xcb, 0xac, 0x62, 0xb7, 0x60, 0x3b, 0xc4,
	0x23, 0x68, 0xa6, 0xb3, 0x26, 0x3f, 0xa8, 0x99, 0xde, 0x67, 0xcd, 0x93, 0x42, 0x95, 0x34, 0xd4,
	0xc6, 0x99, 0xe9, 0xbd, 0x22, 0x67, 0x6a, 0x8d, 0xe4, 0x69, 0x5c, 0xbe, 0xa5, 0xd7, 0x4d, 0x43,
	0xf7, 0x88, 0xe3, 0xaa, 0x9d, 0xbf, 0xc1, 0x16, 0xf2, 0xd5, 0x1a, 0x21, 0xb5, 0x3a, 0x56, 0x75,
	0xdb, 0x54, 0x75, 0xcb, 0x22, 0x9e, 0xee, 0x99, 0xc4, 0x62, 0x05, 0xe4, 0x3b, 0xf4, 0xa7, 0x9a,
	0xaf, 0x61, 0x2b, 0xef, 0x9e, 0xe9, 0xb5, 0x1a, 0x76, 0x54, 0x62, 0xd3, 0x88, 0xfe, 0x68, 0xe5,
	0x3b, 0x11, 0xe6, 0x0e, 0xda, 0xe5, 0x27, 0xfb, 0xe5, 0x00, 0x26, 0xba, 0x06, 0xc0, 0x10, 0x57,
	0x4c, 0x43, 0x12, 0x72, 0xc2, 0xfa, 0x8c, 0x36, 0xc3, 0xee, 0xec, 0x19, 0xe8, 0x3a, 0xcc, 0x85,
	0xcb, 0x96, 0xde, 0xc0, 0x52, 0x9a, 0x06, 0xcc, 0xb2, 0x7b, 0x87, 0x7a, 0x03, 0xa3, 0x65, 0xc8,
	0x58, 0xc4, 0xa0, 0xe9, 0x22, 0x5d, 0x9d, 0xf2, 0x2f, 0xf7, 0x0c, 0x24, 0x41, 0x46, 0x37, 0x0c,
	0x07, 0xbb, 0xae, 0x34, 0x41, 0x17, 0xc2, 0x4b, 0x84, 0x60, 0xc2, 0x26, 0x8e, 0x27, 0x4d, 0xe6,
	0x84, 0xf5, 0x79, 0x8d, 0xfe, 0x47, 0x39, 0x98, 0xc5, 0x56, 0xcb, 0x74, 0x88, 0xd5, 0xc0, 0x96,
	0x27, 0x4d, 0x05, 0x85, 0xb8, 0x5b, 0xfe, 0x7e, 0xd5, 0x7a, 0xd3, 0xf5, 0xb0, 0x23, 0x65, 0x82,
	0xfd, 0xd8, 0x25, 0xba, 0x05, 0x0b, 0x0e, 0xb6, 0xeb, 0x66, 0x95, 0x3e, 0x6b, 0xc5, 0xc5, 0x9e,
	0x34, 0x4d, 0x23, 0x2e, 0x70, 0xb7, 0xcb, 0xd8, 0x43, 0x87, 0x30, 0x5f, 0x6d, 0xba, 0x1e, 0x69,
	0x54, 0xea, 0xfa, 0x09, 0xae, 0xbb, 0xd2, 0x4c, 0x4e, 0x5c, 0x9f, 0xbd, 0x7b, 0xbb, 0xd0, 0x51,
	0xa9, 0xc0, 0xb3, 0x53, 0x78, 0x44, 0x83, 0xf7, 0x69, 0x6c, 0xd1, 0xf2, 0x9c, 0xb6, 0x36, 0x57,
	0xe5, 0x6e, 0xc9, 0x1f, 0xc2, 0x52, 0x5f, 0x08, 0x5a, 0x04, 0xf1, 0x15, 0x6e, 0x33, 0x2e, 0xfd,
	0xbf, 0x28, 0x0b, 0x93, 0x2d, 0xbd, 0xde, 0x0c, 0xe9, 0x0b, 0x2e, 0x36, 0xd3, 0x0f, 0x05, 0xe5,
	0x07, 0x11, 0x2e, 0x1c, 0x10, 0xab, 0x46, 0x1e, 0x6f, 0x8f, 0xa7, 0x22, 0xa5, 0x78, 0x45, 0xde,
	0xe1, 0x15, 0x89, 0xf0, 0x33, 0x7a, 0x4d, 0x7e, 0x12, 0x61, 0xa9, 0x44, 0x5c, 0xaf, 0xe6, 0xe0,
	0xb1, 0x3d, 0x28, 0xe5, 0x78, 0x59, 0x0a, 0x9c, 0x2c, 0x7d, 0x14, 0x8d, 0x5e, 0x99, 0x37, 0x22,
	0x2c, 0x94, 0x1c, 0xf2, 0xf9, 0xf8, 0x1a, 0xd8, 0x93, 0x78, 0x5d, 0xee, 0xf0, 0xba, 0x44, 0x09,
	0x1a, 0xbd, 0x2a, 0x26, 0x5c, 0xdc, 0x37, 0x5d, 0x8f, 0xd5, 0x73, 0x35, 0xfc, 0xba, 0x89, 0x5d,
	0x8f, 0xa7, 0x55, 0x88, 0xd0, 0xfa, 0x5e, 0x57, 0x12, 0xaf, 0x6d, 0x07, 0x1b, 0x5e, 0xb8, 0x7b,
	0x89, 0x7b, 0x04, 0xb6, 0xd5, 0x71, 0xdb, 0xc6, 0x1d, 0xa9, 0xfc, 0x0b, 0xe5, 0x5f, 0x01, 0xb2,
	0xd1, 0x5a, 0xae, 0x4d, 0x2c, 0x17, 0xa3, 0x3c, 0x4c, 0x36, 0xda, 0xee, 0xeb, 0xba, 0x24, 0x50,
	0x3e, 0x96, 0x13, 0x0c, 0x5d, 0x0b, 0xa2, 0xd0, 0x3d, 0xc8, 0x34, 0x7c, 0x57, 0x31, 0x4e, 0x24,
	0x91, 0x26, 0x5c, 0x4e, 0xf4, 0x1b, 0x2d, 0x8c, 0x44, 0xef, 0x03, 0xd8, 0x41, 0xcf, 0xfb, 0x85,
	0x26, 0x68, 0xde, 0xd5, 0x41, 0x07, 0x42, 0xe3, 0xe2, 0xd1, 0x03, 0x98, 0xb6, 0x7d, 0x65, 0xfc,
	0xdc, 0x49, 0x9a, 0x2b, 0x27, 0x8b, 0xa6, 0x75, 0x62, 0x95, 0x4d, 0x58, 0xda, 0xc1, 0xe1, 0x03,
	0x87, 0xdc, 0xde, 0xec, 0x6f, 0xfa, 0xed, 0xa9, 0xbf, 0xff, 0x5a, 0x49, 0x3f, 0x13, 0xb8, 0xe6,
	0x57, 0xbe, 0x4a, 0x03, 0xe2, 0x93, 0x19, 0x59, 0x6a, 0x97, 0x2c, 0x61, 0x00, 0x59, 0xbb, 0xa9,
	0x90, 0xae, 0xfb, 0x5d, 0xba, 0xd2, 0x34, 0x25, 0x99, 0xae, 0xdd, 0x54, 0x97, 0xb0, 0x0f, 0x22,
	0x84, 0x89, 0x34, 0x73, 0x20, 0x61, 0xbb, 0xa9, 0x08, 0x65, 0x0f, 0x39, 0xca, 0x26, 0x68, 0xf6,
	0x00, 0xca, 0x76, 0x53, 0x5d, 0xd2, 0xb6, 0x67, 0x20, 0xc3, 0x58, 0x50, 0x7e, 0x11, 0xe1, 0xd2,
	0x96, 0x61, 0x44, 0xba, 0x80, 0xb1, 0x78, 0xbb, 0xc7, 0x1b, 0xa2, 0x3c, 0x46, 0x3c, 0x62, 0xa5,
	0xdb, 0xcc, 0xe9, 0x48, 0x54, 0xd8, 0xd4, 0xb9, 0xae, 0x57, 0x88, 0x91, 0x80, 0x8e, 0x67, 0xc8,
	0xcc, 0x33, 0xfc, 0x27, 0x99, 0x0f, 0x96, 0x17, 0x53, 0xf1, 0xde, 0x31, 0x39, 0xd0, 0x3b, 0xa6,
	0x86, 0x7a, 0x47, 0x26, 0xd6, 0x3b, 0x9e, 0xf5, 0x7a, 0xc7, 0x34, 0x6d, 0xc3, 0x7b, 0x1c, 0xa7,
	0xf1, 0x44, 0x8d, 0xde, 0x42, 0x76, 0x61, 0xb9, 0xaf, 0x74, 0xff, 0xc9, 0x16, 0x86, 0x9f, 0x6c,
	0xe5, 0x57, 0x11, 0x24, 0x7f, 0xab, 0xe8, 0x19, 0x1e, 0x4f, 0xc1, 0x5f, 0xc4, 0x0b, 0x7e, 0xbf,
	0x47, 0xf0, 0x38, 0xaa, 0x46, 0x2f, 0x79, 0x09, 0x2e, 0xc7, 0x14, 0x67, 0xa2, 0x73, 0xfe, 0x2c,
	0x0c, 0x31, 0x9c, 0x8e, 0xdd, 0x28, 0xbf, 0x8b, 0x70, 0x65, 0xcb, 0x30, 0xfa, 0x6d, 0x78, 0x3c,
	0xd5, 0x7f, 0x19, 0xaf, 0xfe, 0xc3, 0xa8, 0xfa, 0x49, 0x6c, 0x8d, 0xbe, 0x01, 0x3e, 0x85, 0xab,
	0xf1, 0xf5, 0x59, 0x0f, 0x44, 0x5f, 0xb7, 0xc2, 0xf0, 0xb7, 0x07, 0xff, 0xee, 0x50, 0x7e, 0x13,
	0x69, 0x7f, 0xf5, 0xbe, 0x57, 0xc7, 0xb3, 0x15, 0x3e, 0x89, 0x6f, 0x85, 0x07, 0x3d, 0xad, 0x10,
	0xcb, 0xd5, 0xe8, 0x1b, 0xe1, 0x18, 0xe4, 0xb8, 0xea, 0xac, 0x0d, 0xf8, 0xb9, 0x49, 0x18, 0x36,
	0x04, 0x70, 0x73, 0x53, 0x19, 0xb2, 0x1a, 0x6e, 0x90, 0x16, 0xfe, 0x5f, 0xa3, 0x93, 0x0f, 0xf7,
	0x94, 0x38, 0xd5, 0x00, 0xee, 0xb4, 0x16, 0x5c, 0x28, 0xcb, 0xf0, 0x56, 0xcf, 0xa6, 0x01, 0xca,
	0x8d, 0x2f, 0x61, 0x96, 0x1b, 0x5a, 0x91, 0x04, 0xd9, 0x72, 0x51, 0x7b, 0xba, 0xf7, 0xa8, 0x58,
	0x39, 0x7e, 0x5e, 0x2a, 0x56, 0xf6, 0x0e, 0x9f, 0x6e, 0xed, 0xef, 0x3d, 0x5e, 0x4c, 0xa1, 0x25,
	0x98, 0x3f, 0x78, 0x5e, 0x7e, 0xb2, 0x5f, 0x61, 0xeb, 0x8b, 0x02, 0xba, 0x08, 0x0b, 0x07, 0x47,
	0x87, 0x3b, 0x47, 0x8f, 0xb7, 0x3b, 0x37, 0xd3, 0xe8, 0x12, 0xa0, 0xd2, 0x51, 0xf9, 0x78, 0x47,
	0x2b, 0xf2, 0xc1, 0x22, 0xca, 0xc2, 0x62, 0x49, 0x3b, 0x7a, 0x16, 0xd9, 0x62, 0xe2, 0xee, 0x1f,
	0x19, 0x98, 0x0e, 0x67, 0x62, 0x74, 0x06, 0x73, 0xfc, 0x8c, 0x8c, 0xde, 0xe6, 0xf8, 0x8a, 0x19,
	0xd4, 0xe5, 0x95, 0xc4, 0xf5, 0xe0, 0xe1, 0x94, 0xb5, 0xaf, 0xff, 0xfc, 0xe7, 0x4d, 0x3a, 0xa7,
	0x5c, 0x51, 0x5b, 0xef, 0xaa, 0x9d, 0x58, 0x35, 0x8c, 0x53, 0xfd, 0xa4, 0x4d, 0x61, 0x03, 0xd9,
	0x00, 0xdd, 0x69, 0x13, 0xf1, 0x67, 0xb5, 0x6f, 0x82, 0x95, 0xaf, 0x25, 0xac, 0xb2, 0x92, 0x37,
	0x69, 0xc9, 0x15, 0x45, 0x4e, 0x28, 0xb9, 0x83, 0x69, 0xc5, 0x6f, 0x04, 0x58, 0xe8, 0x19, 0x1c,
	0xd0, 0xf5, 0xa1, 0xf3, 0x8c, 0xac, 0x0c, 0x0a, 0x61, 0x08, 0x36, 0x28, 0x82, 0x55, 0x65, 0x25,
	0x01, 0x41, 0x98, 0xe7, 0xc3, 0xf8, 0x56, 0x80, 0xa5, 0xbe, 0x97, 0x19, 0xba, 0x71, 0x8e, 0xf7,
	0xac, 0xbc, 0x3a, 0x38, 0x88, 0x81, 0xb9, 0x43, 0xc1, 0xac, 0x29, 0xd7, 0x07, 0x80, 0x09, 0x32,
	0x7d, 0x38, 0x3f, 0x0b, 0x90, 0x8d, 0xb3, 0x56, 0xb4, 0x76, 0x3e, 0xef, 0x97, 0x6f, 0x0d, 0x8d,
	0x63, 0xb8, 0x54, 0x8a, 0xeb, 0xb6, 0xb2, 0x9a, 0x8c, 0xab, 0x9b, 0xec, 0x43, 0xfb, 0x5e, 0x00,
	0xd4, 0x7f, 0xd8, 0xd1, 0xea, 0x79, 0x9c, 0x48, 0xbe, 0x39, 0x24, 0x8a, 0x81, 0xca, 0x53, 0x50,
	0xb7, 0x14, 0x65, 0x00, 0x28, 0x96, 0xea, 0x43, 0xfa, 0x02, 0xe6, 0x23, 0x67, 0x1a, 0xf1, 0xe7,
	0x21, 0xce, 0x42, 0xe4, 0x5c, 0x72, 0x00, 0x83, 0xb0, 0x4e, 0x21, 0x28, 0xca, 0xb5, 0x04, 0x08,
	0x41, 0xd6, 0xa6, 0xb0, 0xb1, 0xfd, 0xf2, 0xc7, 0xad, 0x03, 0xed, 0x63, 0xc8, 0x18, 0xf8, 0x54,
	0x6f, 0xd6, 0x3d, 0xf4, 0x11, 0xa0, 0x2d, 0x2b, 0x87, 0x1d, 0x87, 0x38, 0x39, 0x87, 0x6d, 0x57,
	0x40, 0x1b, 0xb0, 0x2e, 0xaf, 0xdd, 0x50, 0x0d, 0x7c, 0x6a, 0x5a, 0x66, 0xf0, 0x6d, 0x97, 0xfb,
	0xe6, 0x5c, 0xf4, 0xa3, 0xc3, 0xda, 0x2f, 0x66, 0xb9, 0x95, 0x93, 0x29, 0xfa, 0xd9, 0xf7, 0xde,
	0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xea, 0xf8, 0x12, 0xff, 0xa3, 0x16, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServicesClient is the client API for Services service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServicesClient interface {
	// ListServices returns a list of all Services.
	ListServices(ctx context.Context, in *ListServicesRequest, opts ...grpc.CallOption) (*ListServicesResponse, error)
	// GetService returns a single Service by ID.
	GetService(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*GetServiceResponse, error)
	// AddMySQLService adds MySQL Service.
	AddMySQLService(ctx context.Context, in *AddMySQLServiceRequest, opts ...grpc.CallOption) (*AddMySQLServiceResponse, error)
	// AddMongoDBService adds MongoDB Service.
	AddMongoDBService(ctx context.Context, in *AddMongoDBServiceRequest, opts ...grpc.CallOption) (*AddMongoDBServiceResponse, error)
	// AddPostgreSQLService adds PostgreSQL Service.
	AddPostgreSQLService(ctx context.Context, in *AddPostgreSQLServiceRequest, opts ...grpc.CallOption) (*AddPostgreSQLServiceResponse, error)
	// AddProxySQLService adds ProxySQL Service.
	AddProxySQLService(ctx context.Context, in *AddProxySQLServiceRequest, opts ...grpc.CallOption) (*AddProxySQLServiceResponse, error)
	// RemoveService removes Service.
	RemoveService(ctx context.Context, in *RemoveServiceRequest, opts ...grpc.CallOption) (*RemoveServiceResponse, error)
}

type servicesClient struct {
	cc *grpc.ClientConn
}

func NewServicesClient(cc *grpc.ClientConn) ServicesClient {
	return &servicesClient{cc}
}

func (c *servicesClient) ListServices(ctx context.Context, in *ListServicesRequest, opts ...grpc.CallOption) (*ListServicesResponse, error) {
	out := new(ListServicesResponse)
	err := c.cc.Invoke(ctx, "/inventory.Services/ListServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) GetService(ctx context.Context, in *GetServiceRequest, opts ...grpc.CallOption) (*GetServiceResponse, error) {
	out := new(GetServiceResponse)
	err := c.cc.Invoke(ctx, "/inventory.Services/GetService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) AddMySQLService(ctx context.Context, in *AddMySQLServiceRequest, opts ...grpc.CallOption) (*AddMySQLServiceResponse, error) {
	out := new(AddMySQLServiceResponse)
	err := c.cc.Invoke(ctx, "/inventory.Services/AddMySQLService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) AddMongoDBService(ctx context.Context, in *AddMongoDBServiceRequest, opts ...grpc.CallOption) (*AddMongoDBServiceResponse, error) {
	out := new(AddMongoDBServiceResponse)
	err := c.cc.Invoke(ctx, "/inventory.Services/AddMongoDBService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) AddPostgreSQLService(ctx context.Context, in *AddPostgreSQLServiceRequest, opts ...grpc.CallOption) (*AddPostgreSQLServiceResponse, error) {
	out := new(AddPostgreSQLServiceResponse)
	err := c.cc.Invoke(ctx, "/inventory.Services/AddPostgreSQLService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) AddProxySQLService(ctx context.Context, in *AddProxySQLServiceRequest, opts ...grpc.CallOption) (*AddProxySQLServiceResponse, error) {
	out := new(AddProxySQLServiceResponse)
	err := c.cc.Invoke(ctx, "/inventory.Services/AddProxySQLService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicesClient) RemoveService(ctx context.Context, in *RemoveServiceRequest, opts ...grpc.CallOption) (*RemoveServiceResponse, error) {
	out := new(RemoveServiceResponse)
	err := c.cc.Invoke(ctx, "/inventory.Services/RemoveService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServicesServer is the server API for Services service.
type ServicesServer interface {
	// ListServices returns a list of all Services.
	ListServices(context.Context, *ListServicesRequest) (*ListServicesResponse, error)
	// GetService returns a single Service by ID.
	GetService(context.Context, *GetServiceRequest) (*GetServiceResponse, error)
	// AddMySQLService adds MySQL Service.
	AddMySQLService(context.Context, *AddMySQLServiceRequest) (*AddMySQLServiceResponse, error)
	// AddMongoDBService adds MongoDB Service.
	AddMongoDBService(context.Context, *AddMongoDBServiceRequest) (*AddMongoDBServiceResponse, error)
	// AddPostgreSQLService adds PostgreSQL Service.
	AddPostgreSQLService(context.Context, *AddPostgreSQLServiceRequest) (*AddPostgreSQLServiceResponse, error)
	// AddProxySQLService adds ProxySQL Service.
	AddProxySQLService(context.Context, *AddProxySQLServiceRequest) (*AddProxySQLServiceResponse, error)
	// RemoveService removes Service.
	RemoveService(context.Context, *RemoveServiceRequest) (*RemoveServiceResponse, error)
}

// UnimplementedServicesServer can be embedded to have forward compatible implementations.
type UnimplementedServicesServer struct {
}

func (*UnimplementedServicesServer) ListServices(ctx context.Context, req *ListServicesRequest) (*ListServicesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListServices not implemented")
}
func (*UnimplementedServicesServer) GetService(ctx context.Context, req *GetServiceRequest) (*GetServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetService not implemented")
}
func (*UnimplementedServicesServer) AddMySQLService(ctx context.Context, req *AddMySQLServiceRequest) (*AddMySQLServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddMySQLService not implemented")
}
func (*UnimplementedServicesServer) AddMongoDBService(ctx context.Context, req *AddMongoDBServiceRequest) (*AddMongoDBServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddMongoDBService not implemented")
}
func (*UnimplementedServicesServer) AddPostgreSQLService(ctx context.Context, req *AddPostgreSQLServiceRequest) (*AddPostgreSQLServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPostgreSQLService not implemented")
}
func (*UnimplementedServicesServer) AddProxySQLService(ctx context.Context, req *AddProxySQLServiceRequest) (*AddProxySQLServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProxySQLService not implemented")
}
func (*UnimplementedServicesServer) RemoveService(ctx context.Context, req *RemoveServiceRequest) (*RemoveServiceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveService not implemented")
}

func RegisterServicesServer(s *grpc.Server, srv ServicesServer) {
	s.RegisterService(&_Services_serviceDesc, srv)
}

func _Services_ListServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).ListServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Services/ListServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).ListServices(ctx, req.(*ListServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_GetService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).GetService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Services/GetService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).GetService(ctx, req.(*GetServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_AddMySQLService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddMySQLServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).AddMySQLService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Services/AddMySQLService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).AddMySQLService(ctx, req.(*AddMySQLServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_AddMongoDBService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddMongoDBServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).AddMongoDBService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Services/AddMongoDBService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).AddMongoDBService(ctx, req.(*AddMongoDBServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_AddPostgreSQLService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPostgreSQLServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).AddPostgreSQLService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Services/AddPostgreSQLService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).AddPostgreSQLService(ctx, req.(*AddPostgreSQLServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_AddProxySQLService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProxySQLServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).AddProxySQLService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Services/AddProxySQLService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).AddProxySQLService(ctx, req.(*AddProxySQLServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Services_RemoveService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicesServer).RemoveService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/inventory.Services/RemoveService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicesServer).RemoveService(ctx, req.(*RemoveServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Services_serviceDesc = grpc.ServiceDesc{
	ServiceName: "inventory.Services",
	HandlerType: (*ServicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListServices",
			Handler:    _Services_ListServices_Handler,
		},
		{
			MethodName: "GetService",
			Handler:    _Services_GetService_Handler,
		},
		{
			MethodName: "AddMySQLService",
			Handler:    _Services_AddMySQLService_Handler,
		},
		{
			MethodName: "AddMongoDBService",
			Handler:    _Services_AddMongoDBService_Handler,
		},
		{
			MethodName: "AddPostgreSQLService",
			Handler:    _Services_AddPostgreSQLService_Handler,
		},
		{
			MethodName: "AddProxySQLService",
			Handler:    _Services_AddProxySQLService_Handler,
		},
		{
			MethodName: "RemoveService",
			Handler:    _Services_RemoveService_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "inventorypb/services.proto",
}
