// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: uieventspb/server.proto

package uieventspb

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = proto.Marshal
	_ = fmt.Errorf
	_ = math.Inf
)

func (this *NotificationEvent) Validate() error {
	return nil
}

func (this *FetchingEvent) Validate() error {
	return nil
}

func (this *DashboardUsageEvent) Validate() error {
	return nil
}

func (this *UserFlowEvent) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}

func (this *StoreRequest) Validate() error {
	for _, item := range this.Notifications {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Notifications", err)
			}
		}
	}
	for _, item := range this.Fetching {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Fetching", err)
			}
		}
	}
	for _, item := range this.DashboardUsage {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("DashboardUsage", err)
			}
		}
	}
	for _, item := range this.UserFlowEvents {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("UserFlowEvents", err)
			}
		}
	}
	return nil
}

func (this *StoreResponse) Validate() error {
	return nil
}
