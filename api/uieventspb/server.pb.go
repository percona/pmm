// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: uieventspb/server.proto

package uieventspb

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NotificationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title          string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Text           string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Location       string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	LocationParams string `protobuf:"bytes,4,opt,name=location_params,json=locationParams,proto3" json:"location_params,omitempty"`
}

func (x *NotificationEvent) Reset() {
	*x = NotificationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uieventspb_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationEvent) ProtoMessage() {}

func (x *NotificationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_uieventspb_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationEvent.ProtoReflect.Descriptor instead.
func (*NotificationEvent) Descriptor() ([]byte, []int) {
	return file_uieventspb_server_proto_rawDescGZIP(), []int{0}
}

func (x *NotificationEvent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NotificationEvent) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *NotificationEvent) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *NotificationEvent) GetLocationParams() string {
	if x != nil {
		return x.LocationParams
	}
	return ""
}

type FetchingEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Component      string `protobuf:"bytes,1,opt,name=component,proto3" json:"component,omitempty"`
	LoadTime       int32  `protobuf:"varint,2,opt,name=load_time,json=loadTime,proto3" json:"load_time,omitempty"`
	Location       string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
	LocationParams string `protobuf:"bytes,4,opt,name=location_params,json=locationParams,proto3" json:"location_params,omitempty"`
}

func (x *FetchingEvent) Reset() {
	*x = FetchingEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uieventspb_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchingEvent) ProtoMessage() {}

func (x *FetchingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_uieventspb_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchingEvent.ProtoReflect.Descriptor instead.
func (*FetchingEvent) Descriptor() ([]byte, []int) {
	return file_uieventspb_server_proto_rawDescGZIP(), []int{1}
}

func (x *FetchingEvent) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *FetchingEvent) GetLoadTime() int32 {
	if x != nil {
		return x.LoadTime
	}
	return 0
}

func (x *FetchingEvent) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *FetchingEvent) GetLocationParams() string {
	if x != nil {
		return x.LocationParams
	}
	return ""
}

type DashboardUsageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid            string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Title          string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Tags           []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	LoadTime       int32    `protobuf:"varint,4,opt,name=load_time,json=loadTime,proto3" json:"load_time,omitempty"`
	Location       string   `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	LocationParams string   `protobuf:"bytes,6,opt,name=location_params,json=locationParams,proto3" json:"location_params,omitempty"`
}

func (x *DashboardUsageEvent) Reset() {
	*x = DashboardUsageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uieventspb_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DashboardUsageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardUsageEvent) ProtoMessage() {}

func (x *DashboardUsageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_uieventspb_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardUsageEvent.ProtoReflect.Descriptor instead.
func (*DashboardUsageEvent) Descriptor() ([]byte, []int) {
	return file_uieventspb_server_proto_rawDescGZIP(), []int{2}
}

func (x *DashboardUsageEvent) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *DashboardUsageEvent) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DashboardUsageEvent) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DashboardUsageEvent) GetLoadTime() int32 {
	if x != nil {
		return x.LoadTime
	}
	return 0
}

func (x *DashboardUsageEvent) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *DashboardUsageEvent) GetLocationParams() string {
	if x != nil {
		return x.LocationParams
	}
	return ""
}

type UserFlowEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowId  string            `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	StoryId string            `protobuf:"bytes,2,opt,name=story_id,json=storyId,proto3" json:"story_id,omitempty"`
	Event   string            `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	Params  map[string]string `protobuf:"bytes,4,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UserFlowEvent) Reset() {
	*x = UserFlowEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uieventspb_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserFlowEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserFlowEvent) ProtoMessage() {}

func (x *UserFlowEvent) ProtoReflect() protoreflect.Message {
	mi := &file_uieventspb_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserFlowEvent.ProtoReflect.Descriptor instead.
func (*UserFlowEvent) Descriptor() ([]byte, []int) {
	return file_uieventspb_server_proto_rawDescGZIP(), []int{3}
}

func (x *UserFlowEvent) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *UserFlowEvent) GetStoryId() string {
	if x != nil {
		return x.StoryId
	}
	return ""
}

func (x *UserFlowEvent) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *UserFlowEvent) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type StoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Notifications  []*NotificationEvent   `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	Fetching       []*FetchingEvent       `protobuf:"bytes,2,rep,name=fetching,proto3" json:"fetching,omitempty"`
	DashboardUsage []*DashboardUsageEvent `protobuf:"bytes,3,rep,name=dashboard_usage,json=dashboardUsage,proto3" json:"dashboard_usage,omitempty"`
	UserFlowEvents []*UserFlowEvent       `protobuf:"bytes,4,rep,name=user_flow_events,json=userFlowEvents,proto3" json:"user_flow_events,omitempty"`
}

func (x *StoreRequest) Reset() {
	*x = StoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uieventspb_server_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreRequest) ProtoMessage() {}

func (x *StoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uieventspb_server_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreRequest.ProtoReflect.Descriptor instead.
func (*StoreRequest) Descriptor() ([]byte, []int) {
	return file_uieventspb_server_proto_rawDescGZIP(), []int{4}
}

func (x *StoreRequest) GetNotifications() []*NotificationEvent {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *StoreRequest) GetFetching() []*FetchingEvent {
	if x != nil {
		return x.Fetching
	}
	return nil
}

func (x *StoreRequest) GetDashboardUsage() []*DashboardUsageEvent {
	if x != nil {
		return x.DashboardUsage
	}
	return nil
}

func (x *StoreRequest) GetUserFlowEvents() []*UserFlowEvent {
	if x != nil {
		return x.UserFlowEvents
	}
	return nil
}

type StoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StoreResponse) Reset() {
	*x = StoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uieventspb_server_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreResponse) ProtoMessage() {}

func (x *StoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uieventspb_server_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreResponse.ProtoReflect.Descriptor instead.
func (*StoreResponse) Descriptor() ([]byte, []int) {
	return file_uieventspb_server_proto_rawDescGZIP(), []int{5}
}

var File_uieventspb_server_proto protoreflect.FileDescriptor

var file_uieventspb_server_proto_rawDesc = []byte{
	0x0a, 0x17, 0x75, 0x69, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x70, 0x62, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x75, 0x69, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x11,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x46, 0x65, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x22, 0xb3, 0x01, 0x0a, 0x13, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x55, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x6f, 0x61, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x0d, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c,
	0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f,
	0x77, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x75, 0x69, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x91, 0x02, 0x0a,
	0x0c, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a,
	0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x75, 0x69, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x33, 0x0a, 0x08, 0x66, 0x65, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x69, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x66, 0x65, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x0f, 0x64, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x5f, 0x75, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x75, 0x69, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0e, 0x64,
	0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x41, 0x0a,
	0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x75, 0x69, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x0f, 0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0xb0, 0x01, 0x0a, 0x08, 0x55, 0x49, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0xa3,
	0x01, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x2e, 0x75, 0x69, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x17, 0x2e, 0x75, 0x69, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x92, 0x41, 0x48, 0x12, 0x11,
	0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x20, 0x55, 0x49, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x1a, 0x33, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x73, 0x20, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x20, 0x55, 0x49, 0x20, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x66, 0x75, 0x72, 0x74, 0x68, 0x65, 0x72, 0x20, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22,
	0x13, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x69, 0x2d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x42, 0x82, 0x01, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x75, 0x69, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x61, 0x2f, 0x70, 0x6d, 0x6d, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x75, 0x69, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x55, 0x58,
	0x58, 0xaa, 0x02, 0x08, 0x55, 0x69, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0xca, 0x02, 0x08, 0x55,
	0x69, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0xe2, 0x02, 0x14, 0x55, 0x69, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x08, 0x55, 0x69, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_uieventspb_server_proto_rawDescOnce sync.Once
	file_uieventspb_server_proto_rawDescData = file_uieventspb_server_proto_rawDesc
)

func file_uieventspb_server_proto_rawDescGZIP() []byte {
	file_uieventspb_server_proto_rawDescOnce.Do(func() {
		file_uieventspb_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_uieventspb_server_proto_rawDescData)
	})
	return file_uieventspb_server_proto_rawDescData
}

var (
	file_uieventspb_server_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
	file_uieventspb_server_proto_goTypes  = []interface{}{
		(*NotificationEvent)(nil),   // 0: uievents.NotificationEvent
		(*FetchingEvent)(nil),       // 1: uievents.FetchingEvent
		(*DashboardUsageEvent)(nil), // 2: uievents.DashboardUsageEvent
		(*UserFlowEvent)(nil),       // 3: uievents.UserFlowEvent
		(*StoreRequest)(nil),        // 4: uievents.StoreRequest
		(*StoreResponse)(nil),       // 5: uievents.StoreResponse
		nil,                         // 6: uievents.UserFlowEvent.ParamsEntry
	}
)

var file_uieventspb_server_proto_depIdxs = []int32{
	6, // 0: uievents.UserFlowEvent.params:type_name -> uievents.UserFlowEvent.ParamsEntry
	0, // 1: uievents.StoreRequest.notifications:type_name -> uievents.NotificationEvent
	1, // 2: uievents.StoreRequest.fetching:type_name -> uievents.FetchingEvent
	2, // 3: uievents.StoreRequest.dashboard_usage:type_name -> uievents.DashboardUsageEvent
	3, // 4: uievents.StoreRequest.user_flow_events:type_name -> uievents.UserFlowEvent
	4, // 5: uievents.UIEvents.Store:input_type -> uievents.StoreRequest
	5, // 6: uievents.UIEvents.Store:output_type -> uievents.StoreResponse
	6, // [6:7] is the sub-list for method output_type
	5, // [5:6] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_uieventspb_server_proto_init() }
func file_uieventspb_server_proto_init() {
	if File_uieventspb_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_uieventspb_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uieventspb_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchingEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uieventspb_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DashboardUsageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uieventspb_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserFlowEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uieventspb_server_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uieventspb_server_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uieventspb_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uieventspb_server_proto_goTypes,
		DependencyIndexes: file_uieventspb_server_proto_depIdxs,
		MessageInfos:      file_uieventspb_server_proto_msgTypes,
	}.Build()
	File_uieventspb_server_proto = out.File
	file_uieventspb_server_proto_rawDesc = nil
	file_uieventspb_server_proto_goTypes = nil
	file_uieventspb_server_proto_depIdxs = nil
}
