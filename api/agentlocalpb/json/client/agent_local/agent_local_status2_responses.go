// Code generated by go-swagger; DO NOT EDIT.

package agent_local

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// AgentLocalStatus2Reader is a Reader for the AgentLocalStatus2 structure.
type AgentLocalStatus2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AgentLocalStatus2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAgentLocalStatus2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAgentLocalStatus2Default(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAgentLocalStatus2OK creates a AgentLocalStatus2OK with default headers values
func NewAgentLocalStatus2OK() *AgentLocalStatus2OK {
	return &AgentLocalStatus2OK{}
}

/*AgentLocalStatus2OK handles this case with default header values.

A successful response.
*/
type AgentLocalStatus2OK struct {
	Payload *AgentLocalStatus2OKBody
}

func (o *AgentLocalStatus2OK) Error() string {
	return fmt.Sprintf("[GET /local/Status][%d] agentLocalStatus2Ok  %+v", 200, o.Payload)
}

func (o *AgentLocalStatus2OK) GetPayload() *AgentLocalStatus2OKBody {
	return o.Payload
}

func (o *AgentLocalStatus2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AgentLocalStatus2OKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAgentLocalStatus2Default creates a AgentLocalStatus2Default with default headers values
func NewAgentLocalStatus2Default(code int) *AgentLocalStatus2Default {
	return &AgentLocalStatus2Default{
		_statusCode: code,
	}
}

/*AgentLocalStatus2Default handles this case with default header values.

An unexpected error response.
*/
type AgentLocalStatus2Default struct {
	_statusCode int

	Payload *AgentLocalStatus2DefaultBody
}

// Code gets the status code for the agent local status2 default response
func (o *AgentLocalStatus2Default) Code() int {
	return o._statusCode
}

func (o *AgentLocalStatus2Default) Error() string {
	return fmt.Sprintf("[GET /local/Status][%d] AgentLocal_Status2 default  %+v", o._statusCode, o.Payload)
}

func (o *AgentLocalStatus2Default) GetPayload() *AgentLocalStatus2DefaultBody {
	return o.Payload
}

func (o *AgentLocalStatus2Default) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(AgentLocalStatus2DefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*AgentLocalStatus2DefaultBody agent local status2 default body
swagger:model AgentLocalStatus2DefaultBody
*/
type AgentLocalStatus2DefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this agent local status2 default body
func (o *AgentLocalStatus2DefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AgentLocalStatus2DefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("AgentLocal_Status2 default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *AgentLocalStatus2DefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentLocalStatus2DefaultBody) UnmarshalBinary(b []byte) error {
	var res AgentLocalStatus2DefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AgentLocalStatus2OKBody agent local status2 OK body
swagger:model AgentLocalStatus2OKBody
*/
type AgentLocalStatus2OKBody struct {

	// agent id
	AgentID string `json:"agent_id,omitempty"`

	// runs on node id
	RunsOnNodeID string `json:"runs_on_node_id,omitempty"`

	// agents info
	AgentsInfo []*AgentsInfoItems0 `json:"agents_info"`

	// Config file path if pmm-agent was started with one.
	ConfigFilepath string `json:"config_filepath,omitempty"`

	// PMM Agent version.
	AgentVersion string `json:"agent_version,omitempty"`

	// server info
	ServerInfo *AgentLocalStatus2OKBodyServerInfo `json:"server_info,omitempty"`
}

// Validate validates this agent local status2 OK body
func (o *AgentLocalStatus2OKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAgentsInfo(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateServerInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *AgentLocalStatus2OKBody) validateAgentsInfo(formats strfmt.Registry) error {

	if swag.IsZero(o.AgentsInfo) { // not required
		return nil
	}

	for i := 0; i < len(o.AgentsInfo); i++ {
		if swag.IsZero(o.AgentsInfo[i]) { // not required
			continue
		}

		if o.AgentsInfo[i] != nil {
			if err := o.AgentsInfo[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("agentLocalStatus2Ok" + "." + "agents_info" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *AgentLocalStatus2OKBody) validateServerInfo(formats strfmt.Registry) error {

	if swag.IsZero(o.ServerInfo) { // not required
		return nil
	}

	if o.ServerInfo != nil {
		if err := o.ServerInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("agentLocalStatus2Ok" + "." + "server_info")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *AgentLocalStatus2OKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentLocalStatus2OKBody) UnmarshalBinary(b []byte) error {
	var res AgentLocalStatus2OKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*AgentLocalStatus2OKBodyServerInfo ServerInfo contains information about the PMM Server.
swagger:model AgentLocalStatus2OKBodyServerInfo
*/
type AgentLocalStatus2OKBodyServerInfo struct {

	// PMM Server URL in a form https://HOST:PORT/.
	URL string `json:"url,omitempty"`

	// PMM Server's TLS certificate validation should be skipped if true.
	InsecureTLS bool `json:"insecure_tls,omitempty"`

	// True if pmm-agent is currently connected to the server.
	Connected bool `json:"connected,omitempty"`

	// PMM Server version (if agent is connected).
	Version string `json:"version,omitempty"`

	// Ping time from pmm-agent to pmm-managed (if agent is connected).
	Latency string `json:"latency,omitempty"`

	// Clock drift from PMM Server (if agent is connected).
	ClockDrift string `json:"clock_drift,omitempty"`
}

// Validate validates this agent local status2 OK body server info
func (o *AgentLocalStatus2OKBodyServerInfo) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *AgentLocalStatus2OKBodyServerInfo) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *AgentLocalStatus2OKBodyServerInfo) UnmarshalBinary(b []byte) error {
	var res AgentLocalStatus2OKBodyServerInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
