// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent/qan.proto

package agent

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// QANData represents sent QAN data.
type QANData struct {
	Rows                 []*QANData_Row `protobuf:"bytes,1,rep,name=rows,proto3" json:"rows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *QANData) Reset()         { *m = QANData{} }
func (m *QANData) String() string { return proto.CompactTextString(m) }
func (*QANData) ProtoMessage()    {}
func (*QANData) Descriptor() ([]byte, []int) {
	return fileDescriptor_qan_8f829fd0a7760133, []int{0}
}
func (m *QANData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QANData.Unmarshal(m, b)
}
func (m *QANData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QANData.Marshal(b, m, deterministic)
}
func (dst *QANData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QANData.Merge(dst, src)
}
func (m *QANData) XXX_Size() int {
	return xxx_messageInfo_QANData.Size(m)
}
func (m *QANData) XXX_DiscardUnknown() {
	xxx_messageInfo_QANData.DiscardUnknown(m)
}

var xxx_messageInfo_QANData proto.InternalMessageInfo

func (m *QANData) GetRows() []*QANData_Row {
	if m != nil {
		return m.Rows
	}
	return nil
}

// Row describes a single row of QAN data.
type QANData_Row struct {
	// TODO
	Digest               string   `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
	DigestText           string   `protobuf:"bytes,2,opt,name=digest_text,json=digestText,proto3" json:"digest_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QANData_Row) Reset()         { *m = QANData_Row{} }
func (m *QANData_Row) String() string { return proto.CompactTextString(m) }
func (*QANData_Row) ProtoMessage()    {}
func (*QANData_Row) Descriptor() ([]byte, []int) {
	return fileDescriptor_qan_8f829fd0a7760133, []int{0, 0}
}
func (m *QANData_Row) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QANData_Row.Unmarshal(m, b)
}
func (m *QANData_Row) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QANData_Row.Marshal(b, m, deterministic)
}
func (dst *QANData_Row) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QANData_Row.Merge(dst, src)
}
func (m *QANData_Row) XXX_Size() int {
	return xxx_messageInfo_QANData_Row.Size(m)
}
func (m *QANData_Row) XXX_DiscardUnknown() {
	xxx_messageInfo_QANData_Row.DiscardUnknown(m)
}

var xxx_messageInfo_QANData_Row proto.InternalMessageInfo

func (m *QANData_Row) GetDigest() string {
	if m != nil {
		return m.Digest
	}
	return ""
}

func (m *QANData_Row) GetDigestText() string {
	if m != nil {
		return m.DigestText
	}
	return ""
}

func init() {
	proto.RegisterType((*QANData)(nil), "agent.QANData")
	proto.RegisterType((*QANData_Row)(nil), "agent.QANData.Row")
}

func init() { proto.RegisterFile("agent/qan.proto", fileDescriptor_qan_8f829fd0a7760133) }

var fileDescriptor_qan_8f829fd0a7760133 = []byte{
	// 137 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x4c, 0x4f, 0xcd,
	0x2b, 0xd1, 0x2f, 0x4c, 0xcc, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x0b, 0x28,
	0x15, 0x72, 0xb1, 0x07, 0x3a, 0xfa, 0xb9, 0x24, 0x96, 0x24, 0x0a, 0xa9, 0x71, 0xb1, 0x14, 0xe5,
	0x97, 0x17, 0x4b, 0x30, 0x2a, 0x30, 0x6b, 0x70, 0x1b, 0x09, 0xe9, 0x81, 0x15, 0xe8, 0x41, 0x65,
	0xf5, 0x82, 0xf2, 0xcb, 0x83, 0xc0, 0xf2, 0x52, 0x76, 0x5c, 0xcc, 0x41, 0xf9, 0xe5, 0x42, 0x62,
	0x5c, 0x6c, 0x29, 0x99, 0xe9, 0xa9, 0xc5, 0x25, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x50,
	0x9e, 0x90, 0x3c, 0x17, 0x37, 0x84, 0x15, 0x5f, 0x92, 0x5a, 0x51, 0x22, 0xc1, 0x04, 0x96, 0xe4,
	0x82, 0x08, 0x85, 0xa4, 0x56, 0x94, 0x24, 0xb1, 0x81, 0x1d, 0x60, 0x0c, 0x08, 0x00, 0x00, 0xff,
	0xff, 0x0f, 0xce, 0x16, 0x0e, 0x93, 0x00, 0x00, 0x00,
}
