// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// InventoryGetAgentResponse inventory get agent response
// swagger:model inventoryGetAgentResponse
type InventoryGetAgentResponse struct {

	// external exporter
	ExternalExporter *InventoryExternalExporter `json:"external_exporter,omitempty"`

	// mongodb exporter
	MongodbExporter *InventoryMongoDBExporter `json:"mongodb_exporter,omitempty"`

	// mysqld exporter
	MysqldExporter *InventoryMySqldExporter `json:"mysqld_exporter,omitempty"`

	// node exporter
	NodeExporter *InventoryNodeExporter `json:"node_exporter,omitempty"`

	// pmm agent
	PMMAgent *InventoryPMMAgent `json:"pmm_agent,omitempty"`

	// qan mysql perfschema agent
	QANMysqlPerfschemaAgent *InventoryQANMySQLPerfSchemaAgent `json:"qan_mysql_perfschema_agent,omitempty"`

	// rds exporter
	RDSExporter *InventoryRDSExporter `json:"rds_exporter,omitempty"`
}

// Validate validates this inventory get agent response
func (m *InventoryGetAgentResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExternalExporter(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMongodbExporter(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMysqldExporter(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNodeExporter(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePMMAgent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQANMysqlPerfschemaAgent(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRDSExporter(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *InventoryGetAgentResponse) validateExternalExporter(formats strfmt.Registry) error {

	if swag.IsZero(m.ExternalExporter) { // not required
		return nil
	}

	if m.ExternalExporter != nil {
		if err := m.ExternalExporter.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("external_exporter")
			}
			return err
		}
	}

	return nil
}

func (m *InventoryGetAgentResponse) validateMongodbExporter(formats strfmt.Registry) error {

	if swag.IsZero(m.MongodbExporter) { // not required
		return nil
	}

	if m.MongodbExporter != nil {
		if err := m.MongodbExporter.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("mongodb_exporter")
			}
			return err
		}
	}

	return nil
}

func (m *InventoryGetAgentResponse) validateMysqldExporter(formats strfmt.Registry) error {

	if swag.IsZero(m.MysqldExporter) { // not required
		return nil
	}

	if m.MysqldExporter != nil {
		if err := m.MysqldExporter.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("mysqld_exporter")
			}
			return err
		}
	}

	return nil
}

func (m *InventoryGetAgentResponse) validateNodeExporter(formats strfmt.Registry) error {

	if swag.IsZero(m.NodeExporter) { // not required
		return nil
	}

	if m.NodeExporter != nil {
		if err := m.NodeExporter.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("node_exporter")
			}
			return err
		}
	}

	return nil
}

func (m *InventoryGetAgentResponse) validatePMMAgent(formats strfmt.Registry) error {

	if swag.IsZero(m.PMMAgent) { // not required
		return nil
	}

	if m.PMMAgent != nil {
		if err := m.PMMAgent.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pmm_agent")
			}
			return err
		}
	}

	return nil
}

func (m *InventoryGetAgentResponse) validateQANMysqlPerfschemaAgent(formats strfmt.Registry) error {

	if swag.IsZero(m.QANMysqlPerfschemaAgent) { // not required
		return nil
	}

	if m.QANMysqlPerfschemaAgent != nil {
		if err := m.QANMysqlPerfschemaAgent.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("qan_mysql_perfschema_agent")
			}
			return err
		}
	}

	return nil
}

func (m *InventoryGetAgentResponse) validateRDSExporter(formats strfmt.Registry) error {

	if swag.IsZero(m.RDSExporter) { // not required
		return nil
	}

	if m.RDSExporter != nil {
		if err := m.RDSExporter.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("rds_exporter")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *InventoryGetAgentResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InventoryGetAgentResponse) UnmarshalBinary(b []byte) error {
	var res InventoryGetAgentResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
