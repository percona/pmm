// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// InventoryAddContainerNodeRequest inventory add container node request
// swagger:model inventoryAddContainerNodeRequest
type InventoryAddContainerNodeRequest struct {

	// Custom user-assigned labels.
	CustomLabels map[string]string `json:"custom_labels,omitempty"`

	// Docker container identifier. If specified, must be a unique Docker container identifier.
	DockerContainerID string `json:"docker_container_id,omitempty"`

	// Container name.
	DockerContainerName string `json:"docker_container_name,omitempty"`

	// Linux machine-id of the Generic Node where this Container Node runs. If defined, Generic Node with that machine_id must exist.
	MachineID string `json:"machine_id,omitempty"`

	// Unique across all Nodes user-defined name.
	NodeName string `json:"node_name,omitempty"`
}

// Validate validates this inventory add container node request
func (m *InventoryAddContainerNodeRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *InventoryAddContainerNodeRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *InventoryAddContainerNodeRequest) UnmarshalBinary(b []byte) error {
	var res InventoryAddContainerNodeRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
