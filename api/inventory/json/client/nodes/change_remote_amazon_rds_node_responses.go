// Code generated by go-swagger; DO NOT EDIT.

package nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// ChangeRemoteAmazonRDSNodeReader is a Reader for the ChangeRemoteAmazonRDSNode structure.
type ChangeRemoteAmazonRDSNodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ChangeRemoteAmazonRDSNodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewChangeRemoteAmazonRDSNodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewChangeRemoteAmazonRDSNodeOK creates a ChangeRemoteAmazonRDSNodeOK with default headers values
func NewChangeRemoteAmazonRDSNodeOK() *ChangeRemoteAmazonRDSNodeOK {
	return &ChangeRemoteAmazonRDSNodeOK{}
}

/*ChangeRemoteAmazonRDSNodeOK handles this case with default header values.

(empty)
*/
type ChangeRemoteAmazonRDSNodeOK struct {
	Payload *ChangeRemoteAmazonRDSNodeOKBody
}

func (o *ChangeRemoteAmazonRDSNodeOK) Error() string {
	return fmt.Sprintf("[POST /v1/inventory/Nodes/ChangeRemoteAmazonRDS][%d] changeRemoteAmazonRdsNodeOK  %+v", 200, o.Payload)
}

func (o *ChangeRemoteAmazonRDSNodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ChangeRemoteAmazonRDSNodeOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ChangeRemoteAmazonRDSNodeBody change remote amazon RDS node body
swagger:model ChangeRemoteAmazonRDSNodeBody
*/
type ChangeRemoteAmazonRDSNodeBody struct {

	// DB instance identifier. Unique across all RemoteAmazonRDS Nodes in combination with region.
	Instance string `json:"instance,omitempty"`

	// Unique randomly generated instance identifier.
	NodeID string `json:"node_id,omitempty"`

	// Unique across all Nodes user-defined name.
	NodeName string `json:"node_name,omitempty"`
}

// Validate validates this change remote amazon RDS node body
func (o *ChangeRemoteAmazonRDSNodeBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ChangeRemoteAmazonRDSNodeBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ChangeRemoteAmazonRDSNodeBody) UnmarshalBinary(b []byte) error {
	var res ChangeRemoteAmazonRDSNodeBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ChangeRemoteAmazonRDSNodeOKBody change remote amazon RDS node o k body
swagger:model ChangeRemoteAmazonRDSNodeOKBody
*/
type ChangeRemoteAmazonRDSNodeOKBody struct {

	// remote amazon rds
	RemoteAmazonRDS *ChangeRemoteAmazonRDSNodeOKBodyRemoteAmazonRDS `json:"remote_amazon_rds,omitempty"`
}

// Validate validates this change remote amazon RDS node o k body
func (o *ChangeRemoteAmazonRDSNodeOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRemoteAmazonRDS(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ChangeRemoteAmazonRDSNodeOKBody) validateRemoteAmazonRDS(formats strfmt.Registry) error {

	if swag.IsZero(o.RemoteAmazonRDS) { // not required
		return nil
	}

	if o.RemoteAmazonRDS != nil {
		if err := o.RemoteAmazonRDS.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("changeRemoteAmazonRdsNodeOK" + "." + "remote_amazon_rds")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *ChangeRemoteAmazonRDSNodeOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ChangeRemoteAmazonRDSNodeOKBody) UnmarshalBinary(b []byte) error {
	var res ChangeRemoteAmazonRDSNodeOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ChangeRemoteAmazonRDSNodeOKBodyRemoteAmazonRDS RemoteAmazonRDSNode represents a Remote Node for Amazon RDS. Agents can't run on Remote Nodes.
swagger:model ChangeRemoteAmazonRDSNodeOKBodyRemoteAmazonRDS
*/
type ChangeRemoteAmazonRDSNodeOKBodyRemoteAmazonRDS struct {

	// DB instance identifier. Unique across all RemoteAmazonRDS Nodes in combination with region. Can be changed.
	Instance string `json:"instance,omitempty"`

	// Unique randomly generated instance identifier, can't be changed.
	NodeID string `json:"node_id,omitempty"`

	// Unique across all Nodes user-defined name, can be changed.
	NodeName string `json:"node_name,omitempty"`

	// Unique across all RemoteAmazonRDS Nodes in combination with instance. Can't be changed.
	Region string `json:"region,omitempty"`
}

// Validate validates this change remote amazon RDS node o k body remote amazon RDS
func (o *ChangeRemoteAmazonRDSNodeOKBodyRemoteAmazonRDS) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ChangeRemoteAmazonRDSNodeOKBodyRemoteAmazonRDS) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ChangeRemoteAmazonRDSNodeOKBodyRemoteAmazonRDS) UnmarshalBinary(b []byte) error {
	var res ChangeRemoteAmazonRDSNodeOKBodyRemoteAmazonRDS
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
