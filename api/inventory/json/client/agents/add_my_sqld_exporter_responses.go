// Code generated by go-swagger; DO NOT EDIT.

package agents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/percona/pmm/api/inventory/json/models"
)

// AddMySqldExporterReader is a Reader for the AddMySqldExporter structure.
type AddMySqldExporterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddMySqldExporterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAddMySqldExporterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewAddMySqldExporterDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddMySqldExporterOK creates a AddMySqldExporterOK with default headers values
func NewAddMySqldExporterOK() *AddMySqldExporterOK {
	return &AddMySqldExporterOK{}
}

/*AddMySqldExporterOK handles this case with default header values.

A successful response.
*/
type AddMySqldExporterOK struct {
	Payload *models.InventoryAddMySqldExporterResponse
}

func (o *AddMySqldExporterOK) Error() string {
	return fmt.Sprintf("[POST /v1/inventory/Agents/AddMySQLdExporter][%d] addMySqldExporterOK  %+v", 200, o.Payload)
}

func (o *AddMySqldExporterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InventoryAddMySqldExporterResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddMySqldExporterDefault creates a AddMySqldExporterDefault with default headers values
func NewAddMySqldExporterDefault(code int) *AddMySqldExporterDefault {
	return &AddMySqldExporterDefault{
		_statusCode: code,
	}
}

/*AddMySqldExporterDefault handles this case with default header values.

An error response.
*/
type AddMySqldExporterDefault struct {
	_statusCode int

	Payload *models.ServerErrorResponse
}

// Code gets the status code for the add my sqld exporter default response
func (o *AddMySqldExporterDefault) Code() int {
	return o._statusCode
}

func (o *AddMySqldExporterDefault) Error() string {
	return fmt.Sprintf("[POST /v1/inventory/Agents/AddMySQLdExporter][%d] AddMySQLdExporter default  %+v", o._statusCode, o.Payload)
}

func (o *AddMySqldExporterDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServerErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
