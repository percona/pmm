{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "PMM Server Inventory API",
    "version": "version 0"
  },
  "paths": {
    "/v0/inventory/Agents/AddMySQLdExporter": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "AddMySQLdExporter adds mysqld_exporter Agent.",
        "operationId": "AddMySQLdExporter",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Agent desired status: enabled or disabled.",
                  "type": "boolean",
                  "format": "boolean"
                },
                "host_node_info": {
                  "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                  "type": "object",
                  "properties": {
                    "container_id": {
                      "description": "Docker container ID.",
                      "type": "string"
                    },
                    "container_name": {
                      "description": "Docker container name.",
                      "type": "string"
                    },
                    "kubernetes_pod_name": {
                      "description": "Kubernetes pod name.",
                      "type": "string"
                    },
                    "kubernetes_pod_uid": {
                      "description": "Kubernetes pod UID.",
                      "type": "string"
                    },
                    "node_id": {
                      "description": "Node identifier where Service or Agent runs.",
                      "type": "string"
                    }
                  }
                },
                "password": {
                  "description": "MySQL password for extracting metrics.",
                  "type": "string"
                },
                "service_id": {
                  "description": "Service identifier for which insights are provided by that Agent.",
                  "type": "string"
                },
                "username": {
                  "description": "MySQL username for extracting metrics.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "mysqld_exporter": {
                  "description": "MySQLdExporter represents mysqld_exporter Agent configuration.",
                  "type": "object",
                  "properties": {
                    "disabled": {
                      "description": "Agent desired status: enabled or disabled.",
                      "type": "boolean",
                      "format": "boolean"
                    },
                    "host_node_info": {
                      "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                      "type": "object",
                      "properties": {
                        "container_id": {
                          "description": "Docker container ID.",
                          "type": "string"
                        },
                        "container_name": {
                          "description": "Docker container name.",
                          "type": "string"
                        },
                        "kubernetes_pod_name": {
                          "description": "Kubernetes pod name.",
                          "type": "string"
                        },
                        "kubernetes_pod_uid": {
                          "description": "Kubernetes pod UID.",
                          "type": "string"
                        },
                        "node_id": {
                          "description": "Node identifier where Service or Agent runs.",
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "description": "Unique Agent identifier.",
                      "type": "string"
                    },
                    "listen_port": {
                      "description": "HTTP listen port for exposing metrics.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "running": {
                      "description": "Agent process status: running or not.",
                      "type": "boolean",
                      "format": "boolean"
                    },
                    "service_id": {
                      "description": "Service identifier for which insights are provided by that Agent.",
                      "type": "string"
                    },
                    "username": {
                      "description": "MySQL username for extracting metrics.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Agents/AddNodeExporter": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "AddNodeExporter adds node_exporter Agent.",
        "operationId": "AddNodeExporter",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "disabled": {
                  "description": "Agent desired status: enabled or disabled.",
                  "type": "boolean",
                  "format": "boolean"
                },
                "host_node_info": {
                  "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                  "type": "object",
                  "properties": {
                    "container_id": {
                      "description": "Docker container ID.",
                      "type": "string"
                    },
                    "container_name": {
                      "description": "Docker container name.",
                      "type": "string"
                    },
                    "kubernetes_pod_name": {
                      "description": "Kubernetes pod name.",
                      "type": "string"
                    },
                    "kubernetes_pod_uid": {
                      "description": "Kubernetes pod UID.",
                      "type": "string"
                    },
                    "node_id": {
                      "description": "Node identifier where Service or Agent runs.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "node_exporter": {
                  "description": "NodeExporter represents node_exporter Agent configuration.",
                  "type": "object",
                  "properties": {
                    "disabled": {
                      "description": "Agent desired status: enabled or disabled.",
                      "type": "boolean",
                      "format": "boolean"
                    },
                    "host_node_info": {
                      "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                      "type": "object",
                      "properties": {
                        "container_id": {
                          "description": "Docker container ID.",
                          "type": "string"
                        },
                        "container_name": {
                          "description": "Docker container name.",
                          "type": "string"
                        },
                        "kubernetes_pod_name": {
                          "description": "Kubernetes pod name.",
                          "type": "string"
                        },
                        "kubernetes_pod_uid": {
                          "description": "Kubernetes pod UID.",
                          "type": "string"
                        },
                        "node_id": {
                          "description": "Node identifier where Service or Agent runs.",
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "description": "Unique Agent identifier.",
                      "type": "string"
                    },
                    "listen_port": {
                      "description": "HTTP listen port for exposing metrics.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "running": {
                      "description": "Agent process status: running or not.",
                      "type": "boolean",
                      "format": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Agents/AddPMMAgent": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "AddPMMAgent adds pmm-agent Agent.",
        "operationId": "AddPMMAgent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "host_node_info": {
                  "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                  "type": "object",
                  "properties": {
                    "container_id": {
                      "description": "Docker container ID.",
                      "type": "string"
                    },
                    "container_name": {
                      "description": "Docker container name.",
                      "type": "string"
                    },
                    "kubernetes_pod_name": {
                      "description": "Kubernetes pod name.",
                      "type": "string"
                    },
                    "kubernetes_pod_uid": {
                      "description": "Kubernetes pod UID.",
                      "type": "string"
                    },
                    "node_id": {
                      "description": "Node identifier where Service or Agent runs.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "pmm_agent": {
                  "description": "PMMAgent represent pmm-agent Agent configuration.",
                  "type": "object",
                  "properties": {
                    "host_node_info": {
                      "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                      "type": "object",
                      "properties": {
                        "container_id": {
                          "description": "Docker container ID.",
                          "type": "string"
                        },
                        "container_name": {
                          "description": "Docker container name.",
                          "type": "string"
                        },
                        "kubernetes_pod_name": {
                          "description": "Kubernetes pod name.",
                          "type": "string"
                        },
                        "kubernetes_pod_uid": {
                          "description": "Kubernetes pod UID.",
                          "type": "string"
                        },
                        "node_id": {
                          "description": "Node identifier where Service or Agent runs.",
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "description": "Unique Agent identifier.",
                      "type": "string"
                    },
                    "running": {
                      "description": "Agent process status: running and connected to pmm-managed, or not.",
                      "type": "boolean",
                      "format": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Agents/Disable": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "DisableAgent disables and stops Agent.",
        "operationId": "DisableAgent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique Agent identifier.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v0/inventory/Agents/Enable": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "EnableAgent enables and starts Agent.",
        "operationId": "EnableAgent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique Agent identifier.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v0/inventory/Agents/Get": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "GetAgent returns a single Agent by ID.",
        "operationId": "GetAgent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique Agent identifier.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "mysqld_exporter": {
                  "description": "MySQLdExporter represents mysqld_exporter Agent configuration.",
                  "type": "object",
                  "properties": {
                    "disabled": {
                      "description": "Agent desired status: enabled or disabled.",
                      "type": "boolean",
                      "format": "boolean"
                    },
                    "host_node_info": {
                      "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                      "type": "object",
                      "properties": {
                        "container_id": {
                          "description": "Docker container ID.",
                          "type": "string"
                        },
                        "container_name": {
                          "description": "Docker container name.",
                          "type": "string"
                        },
                        "kubernetes_pod_name": {
                          "description": "Kubernetes pod name.",
                          "type": "string"
                        },
                        "kubernetes_pod_uid": {
                          "description": "Kubernetes pod UID.",
                          "type": "string"
                        },
                        "node_id": {
                          "description": "Node identifier where Service or Agent runs.",
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "description": "Unique Agent identifier.",
                      "type": "string"
                    },
                    "listen_port": {
                      "description": "HTTP listen port for exposing metrics.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "running": {
                      "description": "Agent process status: running or not.",
                      "type": "boolean",
                      "format": "boolean"
                    },
                    "service_id": {
                      "description": "Service identifier for which insights are provided by that Agent.",
                      "type": "string"
                    },
                    "username": {
                      "description": "MySQL username for extracting metrics.",
                      "type": "string"
                    }
                  }
                },
                "node_exporter": {
                  "description": "NodeExporter represents node_exporter Agent configuration.",
                  "type": "object",
                  "properties": {
                    "disabled": {
                      "description": "Agent desired status: enabled or disabled.",
                      "type": "boolean",
                      "format": "boolean"
                    },
                    "host_node_info": {
                      "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                      "type": "object",
                      "properties": {
                        "container_id": {
                          "description": "Docker container ID.",
                          "type": "string"
                        },
                        "container_name": {
                          "description": "Docker container name.",
                          "type": "string"
                        },
                        "kubernetes_pod_name": {
                          "description": "Kubernetes pod name.",
                          "type": "string"
                        },
                        "kubernetes_pod_uid": {
                          "description": "Kubernetes pod UID.",
                          "type": "string"
                        },
                        "node_id": {
                          "description": "Node identifier where Service or Agent runs.",
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "description": "Unique Agent identifier.",
                      "type": "string"
                    },
                    "listen_port": {
                      "description": "HTTP listen port for exposing metrics.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "running": {
                      "description": "Agent process status: running or not.",
                      "type": "boolean",
                      "format": "boolean"
                    }
                  }
                },
                "pmm_agent": {
                  "description": "PMMAgent represent pmm-agent Agent configuration.",
                  "type": "object",
                  "properties": {
                    "host_node_info": {
                      "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                      "type": "object",
                      "properties": {
                        "container_id": {
                          "description": "Docker container ID.",
                          "type": "string"
                        },
                        "container_name": {
                          "description": "Docker container name.",
                          "type": "string"
                        },
                        "kubernetes_pod_name": {
                          "description": "Kubernetes pod name.",
                          "type": "string"
                        },
                        "kubernetes_pod_uid": {
                          "description": "Kubernetes pod UID.",
                          "type": "string"
                        },
                        "node_id": {
                          "description": "Node identifier where Service or Agent runs.",
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "description": "Unique Agent identifier.",
                      "type": "string"
                    },
                    "running": {
                      "description": "Agent process status: running and connected to pmm-managed, or not.",
                      "type": "boolean",
                      "format": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Agents/List": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "ListAgents returns a list of all Agents.",
        "operationId": "ListAgents",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "service_id": {
                  "description": "Return Agents only for that Service.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "mysqld_exporter": {
                  "type": "array",
                  "items": {
                    "description": "MySQLdExporter represents mysqld_exporter Agent configuration.",
                    "type": "object",
                    "properties": {
                      "disabled": {
                        "description": "Agent desired status: enabled or disabled.",
                        "type": "boolean",
                        "format": "boolean"
                      },
                      "host_node_info": {
                        "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                        "type": "object",
                        "properties": {
                          "container_id": {
                            "description": "Docker container ID.",
                            "type": "string"
                          },
                          "container_name": {
                            "description": "Docker container name.",
                            "type": "string"
                          },
                          "kubernetes_pod_name": {
                            "description": "Kubernetes pod name.",
                            "type": "string"
                          },
                          "kubernetes_pod_uid": {
                            "description": "Kubernetes pod UID.",
                            "type": "string"
                          },
                          "node_id": {
                            "description": "Node identifier where Service or Agent runs.",
                            "type": "string"
                          }
                        }
                      },
                      "id": {
                        "description": "Unique Agent identifier.",
                        "type": "string"
                      },
                      "listen_port": {
                        "description": "HTTP listen port for exposing metrics.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "running": {
                        "description": "Agent process status: running or not.",
                        "type": "boolean",
                        "format": "boolean"
                      },
                      "service_id": {
                        "description": "Service identifier for which insights are provided by that Agent.",
                        "type": "string"
                      },
                      "username": {
                        "description": "MySQL username for extracting metrics.",
                        "type": "string"
                      }
                    }
                  }
                },
                "node_exporter": {
                  "type": "array",
                  "items": {
                    "description": "NodeExporter represents node_exporter Agent configuration.",
                    "type": "object",
                    "properties": {
                      "disabled": {
                        "description": "Agent desired status: enabled or disabled.",
                        "type": "boolean",
                        "format": "boolean"
                      },
                      "host_node_info": {
                        "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                        "type": "object",
                        "properties": {
                          "container_id": {
                            "description": "Docker container ID.",
                            "type": "string"
                          },
                          "container_name": {
                            "description": "Docker container name.",
                            "type": "string"
                          },
                          "kubernetes_pod_name": {
                            "description": "Kubernetes pod name.",
                            "type": "string"
                          },
                          "kubernetes_pod_uid": {
                            "description": "Kubernetes pod UID.",
                            "type": "string"
                          },
                          "node_id": {
                            "description": "Node identifier where Service or Agent runs.",
                            "type": "string"
                          }
                        }
                      },
                      "id": {
                        "description": "Unique Agent identifier.",
                        "type": "string"
                      },
                      "listen_port": {
                        "description": "HTTP listen port for exposing metrics.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "running": {
                        "description": "Agent process status: running or not.",
                        "type": "boolean",
                        "format": "boolean"
                      }
                    }
                  }
                },
                "pmm_agent": {
                  "type": "array",
                  "items": {
                    "description": "PMMAgent represent pmm-agent Agent configuration.",
                    "type": "object",
                    "properties": {
                      "host_node_info": {
                        "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                        "type": "object",
                        "properties": {
                          "container_id": {
                            "description": "Docker container ID.",
                            "type": "string"
                          },
                          "container_name": {
                            "description": "Docker container name.",
                            "type": "string"
                          },
                          "kubernetes_pod_name": {
                            "description": "Kubernetes pod name.",
                            "type": "string"
                          },
                          "kubernetes_pod_uid": {
                            "description": "Kubernetes pod UID.",
                            "type": "string"
                          },
                          "node_id": {
                            "description": "Node identifier where Service or Agent runs.",
                            "type": "string"
                          }
                        }
                      },
                      "id": {
                        "description": "Unique Agent identifier.",
                        "type": "string"
                      },
                      "running": {
                        "description": "Agent process status: running and connected to pmm-managed, or not.",
                        "type": "boolean",
                        "format": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Agents/Remove": {
      "post": {
        "tags": [
          "Agents"
        ],
        "summary": "RemoveAgent removes Agent.",
        "operationId": "RemoveAgent",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/AddAmazonRDSRemote": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "AddAmazonRDSRemoteNode adds Amazon (AWS) RDS remote Node.",
        "operationId": "AddAmazonRDSRemoteNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "hostname": {
                  "description": "Hostname. Unique in combination with region.",
                  "type": "string"
                },
                "id": {
                  "description": "Unique Node identifier. Will be generated if empty.",
                  "type": "string"
                },
                "name": {
                  "description": "Unique user-defined Node name.",
                  "type": "string"
                },
                "region": {
                  "description": "AWS region. Unique in combination with hostname.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "amazon_rds_remote": {
                  "description": "AmazonRDSRemoteNode represents Amazon (AWS) RDS remote Node.",
                  "type": "object",
                  "properties": {
                    "hostname": {
                      "description": "Hostname. Unique in combination with region.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Unique Node identifier.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Unique user-defined Node name.",
                      "type": "string"
                    },
                    "region": {
                      "description": "AWS region. Unique in combination with hostname.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/AddGeneric": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "AddGenericNode adds generic Node.",
        "operationId": "AddGenericNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "hostname": {
                  "description": "Hostname. Is not unique. May be empty.",
                  "type": "string"
                },
                "id": {
                  "description": "Unique Node identifier. Will be generated if empty.",
                  "type": "string"
                },
                "name": {
                  "description": "Unique user-defined Node name.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "generic": {
                  "description": "GenericNode represents Node without more specialized type.",
                  "type": "object",
                  "properties": {
                    "hostname": {
                      "description": "Hostname. Is not unique. May be empty.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Unique Node identifier.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Unique user-defined Node name.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/AddRemote": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "AddRemoteNode adds remote Node.",
        "operationId": "AddRemoteNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique Node identifier. Will be generated if empty.",
                  "type": "string"
                },
                "name": {
                  "description": "Unique user-defined Node name.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "remote": {
                  "description": "RemoteNode represents a generic remote Node.\nAgents can't be run on remote Nodes.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Node identifier.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Unique user-defined Node name.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/ChangeAmazonRDSRemote": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "ChangeAmazonRDSRemoteNode changes Amazon (AWS) RDS remote Node.",
        "operationId": "ChangeAmazonRDSRemoteNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique Node identifier.",
                  "type": "string"
                },
                "name": {
                  "description": "Unique user-defined Node name.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "amazon_rds_remote": {
                  "description": "AmazonRDSRemoteNode represents Amazon (AWS) RDS remote Node.",
                  "type": "object",
                  "properties": {
                    "hostname": {
                      "description": "Hostname. Unique in combination with region.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Unique Node identifier.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Unique user-defined Node name.",
                      "type": "string"
                    },
                    "region": {
                      "description": "AWS region. Unique in combination with hostname.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/ChangeGeneric": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "ChangeGenericNode changes generic Node.",
        "operationId": "ChangeGenericNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique Node identifier.",
                  "type": "string"
                },
                "name": {
                  "description": "Unique user-defined Node name.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "generic": {
                  "description": "GenericNode represents Node without more specialized type.",
                  "type": "object",
                  "properties": {
                    "hostname": {
                      "description": "Hostname. Is not unique. May be empty.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Unique Node identifier.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Unique user-defined Node name.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/ChangeRemote": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "ChangeRemoteNode changes remote Node.",
        "operationId": "ChangeRemoteNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique Node identifier.",
                  "type": "string"
                },
                "name": {
                  "description": "Unique user-defined Node name.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "remote": {
                  "description": "RemoteNode represents a generic remote Node.\nAgents can't be run on remote Nodes.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Node identifier.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Unique user-defined Node name.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/Get": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "GetNode returns a single Node by ID.",
        "operationId": "GetNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique Node identifier.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "amazon_rds_remote": {
                  "description": "AmazonRDSRemoteNode represents Amazon (AWS) RDS remote Node.",
                  "type": "object",
                  "properties": {
                    "hostname": {
                      "description": "Hostname. Unique in combination with region.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Unique Node identifier.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Unique user-defined Node name.",
                      "type": "string"
                    },
                    "region": {
                      "description": "AWS region. Unique in combination with hostname.",
                      "type": "string"
                    }
                  }
                },
                "generic": {
                  "description": "GenericNode represents Node without more specialized type.",
                  "type": "object",
                  "properties": {
                    "hostname": {
                      "description": "Hostname. Is not unique. May be empty.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Unique Node identifier.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Unique user-defined Node name.",
                      "type": "string"
                    }
                  }
                },
                "remote": {
                  "description": "RemoteNode represents a generic remote Node.\nAgents can't be run on remote Nodes.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique Node identifier.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Unique user-defined Node name.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/List": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "ListNodes returns a list of all Nodes.",
        "operationId": "ListNodes",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "amazon_rds_remote": {
                  "type": "array",
                  "items": {
                    "description": "AmazonRDSRemoteNode represents Amazon (AWS) RDS remote Node.",
                    "type": "object",
                    "properties": {
                      "hostname": {
                        "description": "Hostname. Unique in combination with region.",
                        "type": "string"
                      },
                      "id": {
                        "description": "Unique Node identifier.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Unique user-defined Node name.",
                        "type": "string"
                      },
                      "region": {
                        "description": "AWS region. Unique in combination with hostname.",
                        "type": "string"
                      }
                    }
                  }
                },
                "generic": {
                  "type": "array",
                  "items": {
                    "description": "GenericNode represents Node without more specialized type.",
                    "type": "object",
                    "properties": {
                      "hostname": {
                        "description": "Hostname. Is not unique. May be empty.",
                        "type": "string"
                      },
                      "id": {
                        "description": "Unique Node identifier.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Unique user-defined Node name.",
                        "type": "string"
                      }
                    }
                  }
                },
                "remote": {
                  "type": "array",
                  "items": {
                    "description": "RemoteNode represents a generic remote Node.\nAgents can't be run on remote Nodes.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Unique Node identifier.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Unique user-defined Node name.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Nodes/Remove": {
      "post": {
        "tags": [
          "Nodes"
        ],
        "summary": "RemoveNode removes Node without any Agents and Services.",
        "operationId": "RemoveNode",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique Node identifier.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    },
    "/v0/inventory/Services/AddMySQL": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "AddMySQLService adds MySQL Service.",
        "operationId": "AddMySQLService",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "address": {
                  "description": "MySQL access address (DNS name or IP address).",
                  "type": "string"
                },
                "host_node_info": {
                  "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                  "type": "object",
                  "properties": {
                    "container_id": {
                      "description": "Docker container ID.",
                      "type": "string"
                    },
                    "container_name": {
                      "description": "Docker container name.",
                      "type": "string"
                    },
                    "kubernetes_pod_name": {
                      "description": "Kubernetes pod name.",
                      "type": "string"
                    },
                    "kubernetes_pod_uid": {
                      "description": "Kubernetes pod UID.",
                      "type": "string"
                    },
                    "node_id": {
                      "description": "Node identifier where Service or Agent runs.",
                      "type": "string"
                    }
                  }
                },
                "name": {
                  "description": "Unique user-defined Service name.",
                  "type": "string"
                },
                "port": {
                  "description": "MySQL access port.",
                  "type": "integer",
                  "format": "int64"
                },
                "unix_socket": {
                  "description": "MySQL access UNIX socket path.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "mysql": {
                  "description": "MySQLService represents MySQL-compatible Service configuration.",
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "MySQL access address (DNS name or IP address).",
                      "type": "string"
                    },
                    "host_node_info": {
                      "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                      "type": "object",
                      "properties": {
                        "container_id": {
                          "description": "Docker container ID.",
                          "type": "string"
                        },
                        "container_name": {
                          "description": "Docker container name.",
                          "type": "string"
                        },
                        "kubernetes_pod_name": {
                          "description": "Kubernetes pod name.",
                          "type": "string"
                        },
                        "kubernetes_pod_uid": {
                          "description": "Kubernetes pod UID.",
                          "type": "string"
                        },
                        "node_id": {
                          "description": "Node identifier where Service or Agent runs.",
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "description": "Unique Service identifier.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Unique user-defined Service name.",
                      "type": "string"
                    },
                    "port": {
                      "description": "MySQL access port.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "unix_socket": {
                      "description": "MySQL access UNIX socket path.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Services/ChangeMySQL": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "ChangeMySQLService changes MySQL Service.",
        "operationId": "ChangeMySQLService",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique Service identifier.",
                  "type": "string"
                },
                "name": {
                  "description": "Unique user-defined Service name.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "mysql": {
                  "description": "MySQLService represents MySQL-compatible Service configuration.",
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "MySQL access address (DNS name or IP address).",
                      "type": "string"
                    },
                    "host_node_info": {
                      "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                      "type": "object",
                      "properties": {
                        "container_id": {
                          "description": "Docker container ID.",
                          "type": "string"
                        },
                        "container_name": {
                          "description": "Docker container name.",
                          "type": "string"
                        },
                        "kubernetes_pod_name": {
                          "description": "Kubernetes pod name.",
                          "type": "string"
                        },
                        "kubernetes_pod_uid": {
                          "description": "Kubernetes pod UID.",
                          "type": "string"
                        },
                        "node_id": {
                          "description": "Node identifier where Service or Agent runs.",
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "description": "Unique Service identifier.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Unique user-defined Service name.",
                      "type": "string"
                    },
                    "port": {
                      "description": "MySQL access port.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "unix_socket": {
                      "description": "MySQL access UNIX socket path.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Services/Get": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "GetService returns a single Service by ID.",
        "operationId": "GetService",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Unique Service identifier.",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "mysql": {
                  "description": "MySQLService represents MySQL-compatible Service configuration.",
                  "type": "object",
                  "properties": {
                    "address": {
                      "description": "MySQL access address (DNS name or IP address).",
                      "type": "string"
                    },
                    "host_node_info": {
                      "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                      "type": "object",
                      "properties": {
                        "container_id": {
                          "description": "Docker container ID.",
                          "type": "string"
                        },
                        "container_name": {
                          "description": "Docker container name.",
                          "type": "string"
                        },
                        "kubernetes_pod_name": {
                          "description": "Kubernetes pod name.",
                          "type": "string"
                        },
                        "kubernetes_pod_uid": {
                          "description": "Kubernetes pod UID.",
                          "type": "string"
                        },
                        "node_id": {
                          "description": "Node identifier where Service or Agent runs.",
                          "type": "string"
                        }
                      }
                    },
                    "id": {
                      "description": "Unique Service identifier.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Unique user-defined Service name.",
                      "type": "string"
                    },
                    "port": {
                      "description": "MySQL access port.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "unix_socket": {
                      "description": "MySQL access UNIX socket path.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Services/List": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "ListServices returns a list of all Services.",
        "operationId": "ListServices",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object",
              "properties": {
                "mysql": {
                  "type": "array",
                  "items": {
                    "description": "MySQLService represents MySQL-compatible Service configuration.",
                    "type": "object",
                    "properties": {
                      "address": {
                        "description": "MySQL access address (DNS name or IP address).",
                        "type": "string"
                      },
                      "host_node_info": {
                        "description": "HostNodeInfo describes the way Service or Agent runs on Node.",
                        "type": "object",
                        "properties": {
                          "container_id": {
                            "description": "Docker container ID.",
                            "type": "string"
                          },
                          "container_name": {
                            "description": "Docker container name.",
                            "type": "string"
                          },
                          "kubernetes_pod_name": {
                            "description": "Kubernetes pod name.",
                            "type": "string"
                          },
                          "kubernetes_pod_uid": {
                            "description": "Kubernetes pod UID.",
                            "type": "string"
                          },
                          "node_id": {
                            "description": "Node identifier where Service or Agent runs.",
                            "type": "string"
                          }
                        }
                      },
                      "id": {
                        "description": "Unique Service identifier.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Unique user-defined Service name.",
                        "type": "string"
                      },
                      "port": {
                        "description": "MySQL access port.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "unix_socket": {
                        "description": "MySQL access UNIX socket path.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v0/inventory/Services/Remove": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "RemoveService removes Service without any Agents.",
        "operationId": "RemoveService",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "(empty)",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  }
}