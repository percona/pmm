// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: inventory/v1/agents.proto

package inventoryv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"

	common "github.com/percona/pmm/api/common"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AgentType describes supported Agent types.
type AgentType int32

const (
	AgentType_AGENT_TYPE_UNSPECIFIED                        AgentType = 0
	AgentType_AGENT_TYPE_PMM_AGENT                          AgentType = 1
	AgentType_AGENT_TYPE_VM_AGENT                           AgentType = 14
	AgentType_AGENT_TYPE_NODE_EXPORTER                      AgentType = 2
	AgentType_AGENT_TYPE_MYSQLD_EXPORTER                    AgentType = 3
	AgentType_AGENT_TYPE_MONGODB_EXPORTER                   AgentType = 4
	AgentType_AGENT_TYPE_POSTGRES_EXPORTER                  AgentType = 5
	AgentType_AGENT_TYPE_PROXYSQL_EXPORTER                  AgentType = 6
	AgentType_AGENT_TYPE_QAN_MYSQL_PERFSCHEMA_AGENT         AgentType = 7
	AgentType_AGENT_TYPE_QAN_MYSQL_SLOWLOG_AGENT            AgentType = 8
	AgentType_AGENT_TYPE_QAN_MONGODB_PROFILER_AGENT         AgentType = 9
	AgentType_AGENT_TYPE_QAN_MONGODB_MONGOLOG_AGENT         AgentType = 18
	AgentType_AGENT_TYPE_QAN_POSTGRESQL_PGSTATEMENTS_AGENT  AgentType = 10
	AgentType_AGENT_TYPE_QAN_POSTGRESQL_PGSTATMONITOR_AGENT AgentType = 13
	AgentType_AGENT_TYPE_EXTERNAL_EXPORTER                  AgentType = 12
	AgentType_AGENT_TYPE_RDS_EXPORTER                       AgentType = 11
	AgentType_AGENT_TYPE_AZURE_DATABASE_EXPORTER            AgentType = 15
	AgentType_AGENT_TYPE_NOMAD_AGENT                        AgentType = 16
)

// Enum value maps for AgentType.
var (
	AgentType_name = map[int32]string{
		0:  "AGENT_TYPE_UNSPECIFIED",
		1:  "AGENT_TYPE_PMM_AGENT",
		14: "AGENT_TYPE_VM_AGENT",
		2:  "AGENT_TYPE_NODE_EXPORTER",
		3:  "AGENT_TYPE_MYSQLD_EXPORTER",
		4:  "AGENT_TYPE_MONGODB_EXPORTER",
		5:  "AGENT_TYPE_POSTGRES_EXPORTER",
		6:  "AGENT_TYPE_PROXYSQL_EXPORTER",
		7:  "AGENT_TYPE_QAN_MYSQL_PERFSCHEMA_AGENT",
		8:  "AGENT_TYPE_QAN_MYSQL_SLOWLOG_AGENT",
		9:  "AGENT_TYPE_QAN_MONGODB_PROFILER_AGENT",
		18: "AGENT_TYPE_QAN_MONGODB_MONGOLOG_AGENT",
		10: "AGENT_TYPE_QAN_POSTGRESQL_PGSTATEMENTS_AGENT",
		13: "AGENT_TYPE_QAN_POSTGRESQL_PGSTATMONITOR_AGENT",
		12: "AGENT_TYPE_EXTERNAL_EXPORTER",
		11: "AGENT_TYPE_RDS_EXPORTER",
		15: "AGENT_TYPE_AZURE_DATABASE_EXPORTER",
		16: "AGENT_TYPE_NOMAD_AGENT",
	}
	AgentType_value = map[string]int32{
		"AGENT_TYPE_UNSPECIFIED":                        0,
		"AGENT_TYPE_PMM_AGENT":                          1,
		"AGENT_TYPE_VM_AGENT":                           14,
		"AGENT_TYPE_NODE_EXPORTER":                      2,
		"AGENT_TYPE_MYSQLD_EXPORTER":                    3,
		"AGENT_TYPE_MONGODB_EXPORTER":                   4,
		"AGENT_TYPE_POSTGRES_EXPORTER":                  5,
		"AGENT_TYPE_PROXYSQL_EXPORTER":                  6,
		"AGENT_TYPE_QAN_MYSQL_PERFSCHEMA_AGENT":         7,
		"AGENT_TYPE_QAN_MYSQL_SLOWLOG_AGENT":            8,
		"AGENT_TYPE_QAN_MONGODB_PROFILER_AGENT":         9,
		"AGENT_TYPE_QAN_MONGODB_MONGOLOG_AGENT":         18,
		"AGENT_TYPE_QAN_POSTGRESQL_PGSTATEMENTS_AGENT":  10,
		"AGENT_TYPE_QAN_POSTGRESQL_PGSTATMONITOR_AGENT": 13,
		"AGENT_TYPE_EXTERNAL_EXPORTER":                  12,
		"AGENT_TYPE_RDS_EXPORTER":                       11,
		"AGENT_TYPE_AZURE_DATABASE_EXPORTER":            15,
		"AGENT_TYPE_NOMAD_AGENT":                        16,
	}
)

func (x AgentType) Enum() *AgentType {
	p := new(AgentType)
	*p = x
	return p
}

func (x AgentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentType) Descriptor() protoreflect.EnumDescriptor {
	return file_inventory_v1_agents_proto_enumTypes[0].Descriptor()
}

func (AgentType) Type() protoreflect.EnumType {
	return &file_inventory_v1_agents_proto_enumTypes[0]
}

func (x AgentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentType.Descriptor instead.
func (AgentType) EnumDescriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{0}
}

// PMMAgent runs on Generic or Container Node.
type PMMAgent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// Node identifier where this instance runs.
	RunsOnNodeId string `protobuf:"bytes,2,opt,name=runs_on_node_id,json=runsOnNodeId,proto3" json:"runs_on_node_id,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,3,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// True if Agent is running and connected to pmm-managed.
	Connected bool `protobuf:"varint,10,opt,name=connected,proto3" json:"connected,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,11,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PMMAgent) Reset() {
	*x = PMMAgent{}
	mi := &file_inventory_v1_agents_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PMMAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PMMAgent) ProtoMessage() {}

func (x *PMMAgent) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PMMAgent.ProtoReflect.Descriptor instead.
func (*PMMAgent) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{0}
}

func (x *PMMAgent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *PMMAgent) GetRunsOnNodeId() string {
	if x != nil {
		return x.RunsOnNodeId
	}
	return ""
}

func (x *PMMAgent) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *PMMAgent) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

func (x *PMMAgent) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

// VMAgent runs on Generic or Container Node alongside pmm-agent.
// It scrapes other exporter Agents that are configured with push_metrics_enabled
// and uses Prometheus remote write protocol to push metrics to PMM Server.
type VMAgent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Actual Agent status.
	Status AgentStatus `protobuf:"varint,10,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,11,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Listen port for scraping metrics.
	ListenPort    uint32 `protobuf:"varint,12,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMAgent) Reset() {
	*x = VMAgent{}
	mi := &file_inventory_v1_agents_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMAgent) ProtoMessage() {}

func (x *VMAgent) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMAgent.ProtoReflect.Descriptor instead.
func (*VMAgent) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{1}
}

func (x *VMAgent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *VMAgent) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *VMAgent) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *VMAgent) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *VMAgent) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

type NomadAgent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Actual Agent status.
	Status AgentStatus `protobuf:"varint,10,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,11,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Listen port for scraping metrics.
	ListenPort    uint32 `protobuf:"varint,12,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NomadAgent) Reset() {
	*x = NomadAgent{}
	mi := &file_inventory_v1_agents_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NomadAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NomadAgent) ProtoMessage() {}

func (x *NomadAgent) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NomadAgent.ProtoReflect.Descriptor instead.
func (*NomadAgent) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{2}
}

func (x *NomadAgent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *NomadAgent) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *NomadAgent) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *NomadAgent) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *NomadAgent) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *NomadAgent) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

// NodeExporter runs on Generic or Container Node and exposes its metrics.
type NodeExporter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,4,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// True if exporter uses push metrics mode.
	PushMetricsEnabled bool `protobuf:"varint,5,opt,name=push_metrics_enabled,json=pushMetricsEnabled,proto3" json:"push_metrics_enabled,omitempty"`
	// List of disabled collector names.
	DisabledCollectors []string `protobuf:"bytes,6,rep,name=disabled_collectors,json=disabledCollectors,proto3" json:"disabled_collectors,omitempty"`
	// Actual Agent status.
	Status AgentStatus `protobuf:"varint,10,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// Listen port for scraping metrics.
	ListenPort uint32 `protobuf:"varint,11,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,12,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,13,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Optionally expose the exporter process on all public interfaces
	ExposeExporter bool `protobuf:"varint,14,opt,name=expose_exporter,json=exposeExporter,proto3" json:"expose_exporter,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,15,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *NodeExporter) Reset() {
	*x = NodeExporter{}
	mi := &file_inventory_v1_agents_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeExporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeExporter) ProtoMessage() {}

func (x *NodeExporter) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeExporter.ProtoReflect.Descriptor instead.
func (*NodeExporter) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{3}
}

func (x *NodeExporter) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *NodeExporter) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *NodeExporter) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *NodeExporter) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *NodeExporter) GetPushMetricsEnabled() bool {
	if x != nil {
		return x.PushMetricsEnabled
	}
	return false
}

func (x *NodeExporter) GetDisabledCollectors() []string {
	if x != nil {
		return x.DisabledCollectors
	}
	return nil
}

func (x *NodeExporter) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *NodeExporter) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *NodeExporter) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *NodeExporter) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *NodeExporter) GetExposeExporter() bool {
	if x != nil {
		return x.ExposeExporter
	}
	return false
}

func (x *NodeExporter) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

// MySQLdExporter runs on Generic or Container Node and exposes MySQL Service metrics.
type MySQLdExporter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// MySQL username for scraping metrics.
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,6,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,7,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Certificate Authority certificate chain.
	TlsCa string `protobuf:"bytes,8,opt,name=tls_ca,json=tlsCa,proto3" json:"tls_ca,omitempty"`
	// Client certificate.
	TlsCert string `protobuf:"bytes,9,opt,name=tls_cert,json=tlsCert,proto3" json:"tls_cert,omitempty"`
	// Password for decrypting tls_cert.
	TlsKey string `protobuf:"bytes,10,opt,name=tls_key,json=tlsKey,proto3" json:"tls_key,omitempty"`
	// Tablestats group collectors are disabled if there are more than that number of tables.
	// 0 means tablestats group collectors are always enabled (no limit).
	// Negative value means tablestats group collectors are always disabled.
	TablestatsGroupTableLimit int32 `protobuf:"varint,11,opt,name=tablestats_group_table_limit,json=tablestatsGroupTableLimit,proto3" json:"tablestats_group_table_limit,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,12,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// True if exporter uses push metrics mode.
	PushMetricsEnabled bool `protobuf:"varint,13,opt,name=push_metrics_enabled,json=pushMetricsEnabled,proto3" json:"push_metrics_enabled,omitempty"`
	// List of disabled collector names.
	DisabledCollectors []string `protobuf:"bytes,14,rep,name=disabled_collectors,json=disabledCollectors,proto3" json:"disabled_collectors,omitempty"`
	// Actual table count at the moment of adding.
	TableCount int32 `protobuf:"varint,15,opt,name=table_count,json=tableCount,proto3" json:"table_count,omitempty"`
	// Actual Agent status.
	Status AgentStatus `protobuf:"varint,20,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// Listen port for scraping metrics.
	ListenPort uint32 `protobuf:"varint,21,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	// True if tablestats group collectors are currently disabled.
	TablestatsGroupDisabled bool `protobuf:"varint,22,opt,name=tablestats_group_disabled,json=tablestatsGroupDisabled,proto3" json:"tablestats_group_disabled,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,23,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,24,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Optionally expose the exporter process on all public interfaces
	ExposeExporter bool `protobuf:"varint,25,opt,name=expose_exporter,json=exposeExporter,proto3" json:"expose_exporter,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,26,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	// Extra DSN parameters for MySQL connection.
	ExtraDsnParams map[string]string `protobuf:"bytes,27,rep,name=extra_dsn_params,json=extraDsnParams,proto3" json:"extra_dsn_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MySQLdExporter) Reset() {
	*x = MySQLdExporter{}
	mi := &file_inventory_v1_agents_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MySQLdExporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySQLdExporter) ProtoMessage() {}

func (x *MySQLdExporter) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySQLdExporter.ProtoReflect.Descriptor instead.
func (*MySQLdExporter) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{4}
}

func (x *MySQLdExporter) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *MySQLdExporter) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *MySQLdExporter) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *MySQLdExporter) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *MySQLdExporter) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MySQLdExporter) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *MySQLdExporter) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *MySQLdExporter) GetTlsCa() string {
	if x != nil {
		return x.TlsCa
	}
	return ""
}

func (x *MySQLdExporter) GetTlsCert() string {
	if x != nil {
		return x.TlsCert
	}
	return ""
}

func (x *MySQLdExporter) GetTlsKey() string {
	if x != nil {
		return x.TlsKey
	}
	return ""
}

func (x *MySQLdExporter) GetTablestatsGroupTableLimit() int32 {
	if x != nil {
		return x.TablestatsGroupTableLimit
	}
	return 0
}

func (x *MySQLdExporter) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *MySQLdExporter) GetPushMetricsEnabled() bool {
	if x != nil {
		return x.PushMetricsEnabled
	}
	return false
}

func (x *MySQLdExporter) GetDisabledCollectors() []string {
	if x != nil {
		return x.DisabledCollectors
	}
	return nil
}

func (x *MySQLdExporter) GetTableCount() int32 {
	if x != nil {
		return x.TableCount
	}
	return 0
}

func (x *MySQLdExporter) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *MySQLdExporter) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *MySQLdExporter) GetTablestatsGroupDisabled() bool {
	if x != nil {
		return x.TablestatsGroupDisabled
	}
	return false
}

func (x *MySQLdExporter) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *MySQLdExporter) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *MySQLdExporter) GetExposeExporter() bool {
	if x != nil {
		return x.ExposeExporter
	}
	return false
}

func (x *MySQLdExporter) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

func (x *MySQLdExporter) GetExtraDsnParams() map[string]string {
	if x != nil {
		return x.ExtraDsnParams
	}
	return nil
}

// MongoDBExporter runs on Generic or Container Node and exposes MongoDB Service metrics.
type MongoDBExporter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// MongoDB username for scraping metrics.
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,6,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,7,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,8,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// True if exporter uses push metrics mode.
	PushMetricsEnabled bool `protobuf:"varint,9,opt,name=push_metrics_enabled,json=pushMetricsEnabled,proto3" json:"push_metrics_enabled,omitempty"`
	// List of disabled collector names.
	DisabledCollectors []string `protobuf:"bytes,10,rep,name=disabled_collectors,json=disabledCollectors,proto3" json:"disabled_collectors,omitempty"`
	// Actual Agent status.
	Status AgentStatus `protobuf:"varint,20,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// Listen port for scraping metrics.
	ListenPort uint32 `protobuf:"varint,21,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	// List of colletions to get stats from. Can use *
	StatsCollections []string `protobuf:"bytes,22,rep,name=stats_collections,json=statsCollections,proto3" json:"stats_collections,omitempty"`
	// Collections limit. Only get Databases and collection stats if the total number of collections in the server
	// is less than this value. 0: no limit
	CollectionsLimit int32 `protobuf:"varint,23,opt,name=collections_limit,json=collectionsLimit,proto3" json:"collections_limit,omitempty"`
	// Enable All collectors.
	EnableAllCollectors bool `protobuf:"varint,24,opt,name=enable_all_collectors,json=enableAllCollectors,proto3" json:"enable_all_collectors,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,25,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,26,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Optionally expose the exporter process on all public interfaces
	ExposeExporter bool `protobuf:"varint,27,opt,name=expose_exporter,json=exposeExporter,proto3" json:"expose_exporter,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,28,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MongoDBExporter) Reset() {
	*x = MongoDBExporter{}
	mi := &file_inventory_v1_agents_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MongoDBExporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MongoDBExporter) ProtoMessage() {}

func (x *MongoDBExporter) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MongoDBExporter.ProtoReflect.Descriptor instead.
func (*MongoDBExporter) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{5}
}

func (x *MongoDBExporter) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *MongoDBExporter) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *MongoDBExporter) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *MongoDBExporter) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *MongoDBExporter) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MongoDBExporter) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *MongoDBExporter) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *MongoDBExporter) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *MongoDBExporter) GetPushMetricsEnabled() bool {
	if x != nil {
		return x.PushMetricsEnabled
	}
	return false
}

func (x *MongoDBExporter) GetDisabledCollectors() []string {
	if x != nil {
		return x.DisabledCollectors
	}
	return nil
}

func (x *MongoDBExporter) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *MongoDBExporter) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *MongoDBExporter) GetStatsCollections() []string {
	if x != nil {
		return x.StatsCollections
	}
	return nil
}

func (x *MongoDBExporter) GetCollectionsLimit() int32 {
	if x != nil {
		return x.CollectionsLimit
	}
	return 0
}

func (x *MongoDBExporter) GetEnableAllCollectors() bool {
	if x != nil {
		return x.EnableAllCollectors
	}
	return false
}

func (x *MongoDBExporter) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *MongoDBExporter) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *MongoDBExporter) GetExposeExporter() bool {
	if x != nil {
		return x.ExposeExporter
	}
	return false
}

func (x *MongoDBExporter) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

// PostgresExporter runs on Generic or Container Node and exposes PostgreSQL Service metrics.
type PostgresExporter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// PostgreSQL username for scraping metrics.
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,6,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation. Uses sslmode=required instead of verify-full.
	TlsSkipVerify bool `protobuf:"varint,7,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,8,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// True if exporter uses push metrics mode.
	PushMetricsEnabled bool `protobuf:"varint,9,opt,name=push_metrics_enabled,json=pushMetricsEnabled,proto3" json:"push_metrics_enabled,omitempty"`
	// List of disabled collector names.
	DisabledCollectors []string `protobuf:"bytes,10,rep,name=disabled_collectors,json=disabledCollectors,proto3" json:"disabled_collectors,omitempty"`
	// Actual Agent status.
	Status AgentStatus `protobuf:"varint,20,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// Listen port for scraping metrics.
	ListenPort uint32 `protobuf:"varint,21,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,22,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,23,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Limit of databases for auto-discovery.
	AutoDiscoveryLimit int32 `protobuf:"varint,24,opt,name=auto_discovery_limit,json=autoDiscoveryLimit,proto3" json:"auto_discovery_limit,omitempty"`
	// Optionally expose the exporter process on all public interfaces
	ExposeExporter bool `protobuf:"varint,25,opt,name=expose_exporter,json=exposeExporter,proto3" json:"expose_exporter,omitempty"`
	// Maximum number of connections that exporter can open to the database instance.
	MaxExporterConnections int32 `protobuf:"varint,26,opt,name=max_exporter_connections,json=maxExporterConnections,proto3" json:"max_exporter_connections,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,27,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *PostgresExporter) Reset() {
	*x = PostgresExporter{}
	mi := &file_inventory_v1_agents_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PostgresExporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostgresExporter) ProtoMessage() {}

func (x *PostgresExporter) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostgresExporter.ProtoReflect.Descriptor instead.
func (*PostgresExporter) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{6}
}

func (x *PostgresExporter) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *PostgresExporter) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *PostgresExporter) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *PostgresExporter) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *PostgresExporter) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PostgresExporter) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *PostgresExporter) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *PostgresExporter) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *PostgresExporter) GetPushMetricsEnabled() bool {
	if x != nil {
		return x.PushMetricsEnabled
	}
	return false
}

func (x *PostgresExporter) GetDisabledCollectors() []string {
	if x != nil {
		return x.DisabledCollectors
	}
	return nil
}

func (x *PostgresExporter) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *PostgresExporter) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *PostgresExporter) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *PostgresExporter) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *PostgresExporter) GetAutoDiscoveryLimit() int32 {
	if x != nil {
		return x.AutoDiscoveryLimit
	}
	return 0
}

func (x *PostgresExporter) GetExposeExporter() bool {
	if x != nil {
		return x.ExposeExporter
	}
	return false
}

func (x *PostgresExporter) GetMaxExporterConnections() int32 {
	if x != nil {
		return x.MaxExporterConnections
	}
	return 0
}

func (x *PostgresExporter) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

// ProxySQLExporter runs on Generic or Container Node and exposes ProxySQL Service metrics.
type ProxySQLExporter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// ProxySQL username for scraping metrics.
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,6,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,7,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,8,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// True if exporter uses push metrics mode.
	PushMetricsEnabled bool `protobuf:"varint,9,opt,name=push_metrics_enabled,json=pushMetricsEnabled,proto3" json:"push_metrics_enabled,omitempty"`
	// List of disabled collector names.
	DisabledCollectors []string `protobuf:"bytes,10,rep,name=disabled_collectors,json=disabledCollectors,proto3" json:"disabled_collectors,omitempty"`
	// Actual Agent status.
	Status AgentStatus `protobuf:"varint,20,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// Listen port for scraping metrics.
	ListenPort uint32 `protobuf:"varint,21,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,22,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,23,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Optionally expose the exporter process on all public interfaces
	ExposeExporter bool `protobuf:"varint,24,opt,name=expose_exporter,json=exposeExporter,proto3" json:"expose_exporter,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,25,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ProxySQLExporter) Reset() {
	*x = ProxySQLExporter{}
	mi := &file_inventory_v1_agents_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProxySQLExporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxySQLExporter) ProtoMessage() {}

func (x *ProxySQLExporter) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxySQLExporter.ProtoReflect.Descriptor instead.
func (*ProxySQLExporter) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{7}
}

func (x *ProxySQLExporter) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ProxySQLExporter) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *ProxySQLExporter) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *ProxySQLExporter) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ProxySQLExporter) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ProxySQLExporter) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *ProxySQLExporter) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *ProxySQLExporter) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ProxySQLExporter) GetPushMetricsEnabled() bool {
	if x != nil {
		return x.PushMetricsEnabled
	}
	return false
}

func (x *ProxySQLExporter) GetDisabledCollectors() []string {
	if x != nil {
		return x.DisabledCollectors
	}
	return nil
}

func (x *ProxySQLExporter) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *ProxySQLExporter) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *ProxySQLExporter) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *ProxySQLExporter) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *ProxySQLExporter) GetExposeExporter() bool {
	if x != nil {
		return x.ExposeExporter
	}
	return false
}

func (x *ProxySQLExporter) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

// QANMySQLPerfSchemaAgent runs within pmm-agent and sends MySQL Query Analytics data to the PMM Server.
type QANMySQLPerfSchemaAgent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// MySQL username for getting performance data.
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,6,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,7,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Certificate Authority certificate chain.
	TlsCa string `protobuf:"bytes,8,opt,name=tls_ca,json=tlsCa,proto3" json:"tls_ca,omitempty"`
	// Client certificate.
	TlsCert string `protobuf:"bytes,9,opt,name=tls_cert,json=tlsCert,proto3" json:"tls_cert,omitempty"`
	// Password for decrypting tls_cert.
	TlsKey string `protobuf:"bytes,10,opt,name=tls_key,json=tlsKey,proto3" json:"tls_key,omitempty"`
	// Disable parsing comments from queries and showing them in QAN.
	DisableCommentsParsing bool `protobuf:"varint,11,opt,name=disable_comments_parsing,json=disableCommentsParsing,proto3" json:"disable_comments_parsing,omitempty"`
	// Limit query length in QAN (default: server-defined; -1: no limit).
	MaxQueryLength int32 `protobuf:"varint,12,opt,name=max_query_length,json=maxQueryLength,proto3" json:"max_query_length,omitempty"`
	// True if query examples are disabled.
	QueryExamplesDisabled bool `protobuf:"varint,13,opt,name=query_examples_disabled,json=queryExamplesDisabled,proto3" json:"query_examples_disabled,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,14,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Actual Agent status.
	Status AgentStatus `protobuf:"varint,20,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,21,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,22,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Extra DSN parameters for MySQL connection.
	ExtraDsnParams map[string]string `protobuf:"bytes,23,rep,name=extra_dsn_params,json=extraDsnParams,proto3" json:"extra_dsn_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QANMySQLPerfSchemaAgent) Reset() {
	*x = QANMySQLPerfSchemaAgent{}
	mi := &file_inventory_v1_agents_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QANMySQLPerfSchemaAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QANMySQLPerfSchemaAgent) ProtoMessage() {}

func (x *QANMySQLPerfSchemaAgent) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QANMySQLPerfSchemaAgent.ProtoReflect.Descriptor instead.
func (*QANMySQLPerfSchemaAgent) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{8}
}

func (x *QANMySQLPerfSchemaAgent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *QANMySQLPerfSchemaAgent) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *QANMySQLPerfSchemaAgent) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *QANMySQLPerfSchemaAgent) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *QANMySQLPerfSchemaAgent) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QANMySQLPerfSchemaAgent) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *QANMySQLPerfSchemaAgent) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *QANMySQLPerfSchemaAgent) GetTlsCa() string {
	if x != nil {
		return x.TlsCa
	}
	return ""
}

func (x *QANMySQLPerfSchemaAgent) GetTlsCert() string {
	if x != nil {
		return x.TlsCert
	}
	return ""
}

func (x *QANMySQLPerfSchemaAgent) GetTlsKey() string {
	if x != nil {
		return x.TlsKey
	}
	return ""
}

func (x *QANMySQLPerfSchemaAgent) GetDisableCommentsParsing() bool {
	if x != nil {
		return x.DisableCommentsParsing
	}
	return false
}

func (x *QANMySQLPerfSchemaAgent) GetMaxQueryLength() int32 {
	if x != nil {
		return x.MaxQueryLength
	}
	return 0
}

func (x *QANMySQLPerfSchemaAgent) GetQueryExamplesDisabled() bool {
	if x != nil {
		return x.QueryExamplesDisabled
	}
	return false
}

func (x *QANMySQLPerfSchemaAgent) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *QANMySQLPerfSchemaAgent) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *QANMySQLPerfSchemaAgent) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *QANMySQLPerfSchemaAgent) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *QANMySQLPerfSchemaAgent) GetExtraDsnParams() map[string]string {
	if x != nil {
		return x.ExtraDsnParams
	}
	return nil
}

// QANMySQLSlowlogAgent runs within pmm-agent and sends MySQL Query Analytics data to the PMM Server.
type QANMySQLSlowlogAgent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// MySQL username for getting performance data.
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,6,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,7,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Certificate Authority certificate chain.
	TlsCa string `protobuf:"bytes,8,opt,name=tls_ca,json=tlsCa,proto3" json:"tls_ca,omitempty"`
	// Client certificate.
	TlsCert string `protobuf:"bytes,9,opt,name=tls_cert,json=tlsCert,proto3" json:"tls_cert,omitempty"`
	// Password for decrypting tls_cert.
	TlsKey string `protobuf:"bytes,10,opt,name=tls_key,json=tlsKey,proto3" json:"tls_key,omitempty"`
	// Disable parsing comments from queries and showing them in QAN.
	DisableCommentsParsing bool `protobuf:"varint,11,opt,name=disable_comments_parsing,json=disableCommentsParsing,proto3" json:"disable_comments_parsing,omitempty"`
	// Limit query length in QAN (default: server-defined; -1: no limit)
	MaxQueryLength int32 `protobuf:"varint,12,opt,name=max_query_length,json=maxQueryLength,proto3" json:"max_query_length,omitempty"`
	// True if query examples are disabled.
	QueryExamplesDisabled bool `protobuf:"varint,13,opt,name=query_examples_disabled,json=queryExamplesDisabled,proto3" json:"query_examples_disabled,omitempty"`
	// Slowlog file is rotated at this size if > 0.
	MaxSlowlogFileSize int64 `protobuf:"varint,14,opt,name=max_slowlog_file_size,json=maxSlowlogFileSize,proto3" json:"max_slowlog_file_size,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,15,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Actual Agent status.
	Status AgentStatus `protobuf:"varint,20,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// mod tidy
	ProcessExecPath string `protobuf:"bytes,21,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,22,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Extra DSN parameters for MySQL connection.
	ExtraDsnParams map[string]string `protobuf:"bytes,23,rep,name=extra_dsn_params,json=extraDsnParams,proto3" json:"extra_dsn_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QANMySQLSlowlogAgent) Reset() {
	*x = QANMySQLSlowlogAgent{}
	mi := &file_inventory_v1_agents_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QANMySQLSlowlogAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QANMySQLSlowlogAgent) ProtoMessage() {}

func (x *QANMySQLSlowlogAgent) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QANMySQLSlowlogAgent.ProtoReflect.Descriptor instead.
func (*QANMySQLSlowlogAgent) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{9}
}

func (x *QANMySQLSlowlogAgent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *QANMySQLSlowlogAgent) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *QANMySQLSlowlogAgent) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *QANMySQLSlowlogAgent) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *QANMySQLSlowlogAgent) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QANMySQLSlowlogAgent) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *QANMySQLSlowlogAgent) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *QANMySQLSlowlogAgent) GetTlsCa() string {
	if x != nil {
		return x.TlsCa
	}
	return ""
}

func (x *QANMySQLSlowlogAgent) GetTlsCert() string {
	if x != nil {
		return x.TlsCert
	}
	return ""
}

func (x *QANMySQLSlowlogAgent) GetTlsKey() string {
	if x != nil {
		return x.TlsKey
	}
	return ""
}

func (x *QANMySQLSlowlogAgent) GetDisableCommentsParsing() bool {
	if x != nil {
		return x.DisableCommentsParsing
	}
	return false
}

func (x *QANMySQLSlowlogAgent) GetMaxQueryLength() int32 {
	if x != nil {
		return x.MaxQueryLength
	}
	return 0
}

func (x *QANMySQLSlowlogAgent) GetQueryExamplesDisabled() bool {
	if x != nil {
		return x.QueryExamplesDisabled
	}
	return false
}

func (x *QANMySQLSlowlogAgent) GetMaxSlowlogFileSize() int64 {
	if x != nil {
		return x.MaxSlowlogFileSize
	}
	return 0
}

func (x *QANMySQLSlowlogAgent) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *QANMySQLSlowlogAgent) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *QANMySQLSlowlogAgent) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *QANMySQLSlowlogAgent) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *QANMySQLSlowlogAgent) GetExtraDsnParams() map[string]string {
	if x != nil {
		return x.ExtraDsnParams
	}
	return nil
}

// QANMongoDBProfilerAgent runs within pmm-agent and sends MongoDB Query Analytics data to the PMM Server.
type QANMongoDBProfilerAgent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// MongoDB username for getting profiler data.
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,6,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,7,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Limit query length in QAN (default: server-defined; -1: no limit).
	MaxQueryLength int32 `protobuf:"varint,9,opt,name=max_query_length,json=maxQueryLength,proto3" json:"max_query_length,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,10,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Actual Agent status.
	Status AgentStatus `protobuf:"varint,20,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,21,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Log level for exporter.
	LogLevel      LogLevel `protobuf:"varint,22,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QANMongoDBProfilerAgent) Reset() {
	*x = QANMongoDBProfilerAgent{}
	mi := &file_inventory_v1_agents_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QANMongoDBProfilerAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QANMongoDBProfilerAgent) ProtoMessage() {}

func (x *QANMongoDBProfilerAgent) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QANMongoDBProfilerAgent.ProtoReflect.Descriptor instead.
func (*QANMongoDBProfilerAgent) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{10}
}

func (x *QANMongoDBProfilerAgent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *QANMongoDBProfilerAgent) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *QANMongoDBProfilerAgent) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *QANMongoDBProfilerAgent) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *QANMongoDBProfilerAgent) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QANMongoDBProfilerAgent) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *QANMongoDBProfilerAgent) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *QANMongoDBProfilerAgent) GetMaxQueryLength() int32 {
	if x != nil {
		return x.MaxQueryLength
	}
	return 0
}

func (x *QANMongoDBProfilerAgent) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *QANMongoDBProfilerAgent) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *QANMongoDBProfilerAgent) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *QANMongoDBProfilerAgent) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

// QANMongoDBMongologAgent runs within pmm-agent and sends MongoDB Query Analytics data to the PMM Server.
type QANMongoDBMongologAgent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// MongoDB username for getting profiler data.
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,6,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,7,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Limit query length in QAN (default: server-defined; -1: no limit).
	MaxQueryLength int32 `protobuf:"varint,9,opt,name=max_query_length,json=maxQueryLength,proto3" json:"max_query_length,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,10,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Actual Agent status.
	Status AgentStatus `protobuf:"varint,20,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,21,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Log level for exporter.
	LogLevel      LogLevel `protobuf:"varint,22,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QANMongoDBMongologAgent) Reset() {
	*x = QANMongoDBMongologAgent{}
	mi := &file_inventory_v1_agents_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QANMongoDBMongologAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QANMongoDBMongologAgent) ProtoMessage() {}

func (x *QANMongoDBMongologAgent) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QANMongoDBMongologAgent.ProtoReflect.Descriptor instead.
func (*QANMongoDBMongologAgent) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{11}
}

func (x *QANMongoDBMongologAgent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *QANMongoDBMongologAgent) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *QANMongoDBMongologAgent) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *QANMongoDBMongologAgent) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *QANMongoDBMongologAgent) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QANMongoDBMongologAgent) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *QANMongoDBMongologAgent) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *QANMongoDBMongologAgent) GetMaxQueryLength() int32 {
	if x != nil {
		return x.MaxQueryLength
	}
	return 0
}

func (x *QANMongoDBMongologAgent) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *QANMongoDBMongologAgent) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *QANMongoDBMongologAgent) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *QANMongoDBMongologAgent) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

// QANPostgreSQLPgStatementsAgent runs within pmm-agent and sends PostgreSQL Query Analytics data to the PMM Server.
type QANPostgreSQLPgStatementsAgent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// PostgreSQL username for getting pg stat statements data.
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	// Disable parsing comments from queries and showing them in QAN.
	DisableCommentsParsing bool `protobuf:"varint,6,opt,name=disable_comments_parsing,json=disableCommentsParsing,proto3" json:"disable_comments_parsing,omitempty"`
	// Limit query length in QAN (default: server-defined; -1: no limit).
	MaxQueryLength int32 `protobuf:"varint,7,opt,name=max_query_length,json=maxQueryLength,proto3" json:"max_query_length,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,8,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,9,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,10,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Actual Agent status.
	Status AgentStatus `protobuf:"varint,20,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,21,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Log level for exporter.
	LogLevel      LogLevel `protobuf:"varint,22,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QANPostgreSQLPgStatementsAgent) Reset() {
	*x = QANPostgreSQLPgStatementsAgent{}
	mi := &file_inventory_v1_agents_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QANPostgreSQLPgStatementsAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QANPostgreSQLPgStatementsAgent) ProtoMessage() {}

func (x *QANPostgreSQLPgStatementsAgent) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QANPostgreSQLPgStatementsAgent.ProtoReflect.Descriptor instead.
func (*QANPostgreSQLPgStatementsAgent) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{12}
}

func (x *QANPostgreSQLPgStatementsAgent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *QANPostgreSQLPgStatementsAgent) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *QANPostgreSQLPgStatementsAgent) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *QANPostgreSQLPgStatementsAgent) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *QANPostgreSQLPgStatementsAgent) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QANPostgreSQLPgStatementsAgent) GetDisableCommentsParsing() bool {
	if x != nil {
		return x.DisableCommentsParsing
	}
	return false
}

func (x *QANPostgreSQLPgStatementsAgent) GetMaxQueryLength() int32 {
	if x != nil {
		return x.MaxQueryLength
	}
	return 0
}

func (x *QANPostgreSQLPgStatementsAgent) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *QANPostgreSQLPgStatementsAgent) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *QANPostgreSQLPgStatementsAgent) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *QANPostgreSQLPgStatementsAgent) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *QANPostgreSQLPgStatementsAgent) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *QANPostgreSQLPgStatementsAgent) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

// QANPostgreSQLPgStatMonitorAgent runs within pmm-agent and sends PostgreSQL Query Analytics data to the PMM Server.
type QANPostgreSQLPgStatMonitorAgent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// PostgreSQL username for getting pg stat monitor data.
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,6,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,7,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Disable parsing comments from queries and showing them in QAN.
	DisableCommentsParsing bool `protobuf:"varint,8,opt,name=disable_comments_parsing,json=disableCommentsParsing,proto3" json:"disable_comments_parsing,omitempty"`
	// Limit query length in QAN (default: server-defined; -1: no limit).
	MaxQueryLength int32 `protobuf:"varint,9,opt,name=max_query_length,json=maxQueryLength,proto3" json:"max_query_length,omitempty"`
	// True if query examples are disabled.
	QueryExamplesDisabled bool `protobuf:"varint,10,opt,name=query_examples_disabled,json=queryExamplesDisabled,proto3" json:"query_examples_disabled,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,11,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Actual Agent status.
	Status AgentStatus `protobuf:"varint,20,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,21,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Log level for exporter.
	LogLevel      LogLevel `protobuf:"varint,22,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QANPostgreSQLPgStatMonitorAgent) Reset() {
	*x = QANPostgreSQLPgStatMonitorAgent{}
	mi := &file_inventory_v1_agents_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QANPostgreSQLPgStatMonitorAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QANPostgreSQLPgStatMonitorAgent) ProtoMessage() {}

func (x *QANPostgreSQLPgStatMonitorAgent) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QANPostgreSQLPgStatMonitorAgent.ProtoReflect.Descriptor instead.
func (*QANPostgreSQLPgStatMonitorAgent) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{13}
}

func (x *QANPostgreSQLPgStatMonitorAgent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *QANPostgreSQLPgStatMonitorAgent) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *QANPostgreSQLPgStatMonitorAgent) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *QANPostgreSQLPgStatMonitorAgent) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *QANPostgreSQLPgStatMonitorAgent) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *QANPostgreSQLPgStatMonitorAgent) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *QANPostgreSQLPgStatMonitorAgent) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *QANPostgreSQLPgStatMonitorAgent) GetDisableCommentsParsing() bool {
	if x != nil {
		return x.DisableCommentsParsing
	}
	return false
}

func (x *QANPostgreSQLPgStatMonitorAgent) GetMaxQueryLength() int32 {
	if x != nil {
		return x.MaxQueryLength
	}
	return 0
}

func (x *QANPostgreSQLPgStatMonitorAgent) GetQueryExamplesDisabled() bool {
	if x != nil {
		return x.QueryExamplesDisabled
	}
	return false
}

func (x *QANPostgreSQLPgStatMonitorAgent) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *QANPostgreSQLPgStatMonitorAgent) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *QANPostgreSQLPgStatMonitorAgent) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *QANPostgreSQLPgStatMonitorAgent) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

// RDSExporter runs on Generic or Container Node and exposes RemoteRDS Node metrics.
type RDSExporter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Node identifier.
	NodeId string `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// AWS Access Key.
	AwsAccessKey string `protobuf:"bytes,5,opt,name=aws_access_key,json=awsAccessKey,proto3" json:"aws_access_key,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,6,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Actual Agent status (the same for several configurations).
	Status AgentStatus `protobuf:"varint,10,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// Listen port for scraping metrics (the same for several configurations).
	ListenPort uint32 `protobuf:"varint,11,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	// Basic metrics are disabled.
	BasicMetricsDisabled bool `protobuf:"varint,20,opt,name=basic_metrics_disabled,json=basicMetricsDisabled,proto3" json:"basic_metrics_disabled,omitempty"`
	// Enhanced metrics are disabled.
	EnhancedMetricsDisabled bool `protobuf:"varint,21,opt,name=enhanced_metrics_disabled,json=enhancedMetricsDisabled,proto3" json:"enhanced_metrics_disabled,omitempty"`
	// True if exporter uses push metrics mode.
	PushMetricsEnabled bool `protobuf:"varint,22,opt,name=push_metrics_enabled,json=pushMetricsEnabled,proto3" json:"push_metrics_enabled,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,23,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,24,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Limit of databases for auto-discovery.
	AutoDiscoveryLimit int32 `protobuf:"varint,25,opt,name=auto_discovery_limit,json=autoDiscoveryLimit,proto3" json:"auto_discovery_limit,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,26,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RDSExporter) Reset() {
	*x = RDSExporter{}
	mi := &file_inventory_v1_agents_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RDSExporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RDSExporter) ProtoMessage() {}

func (x *RDSExporter) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RDSExporter.ProtoReflect.Descriptor instead.
func (*RDSExporter) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{14}
}

func (x *RDSExporter) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *RDSExporter) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *RDSExporter) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *RDSExporter) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *RDSExporter) GetAwsAccessKey() string {
	if x != nil {
		return x.AwsAccessKey
	}
	return ""
}

func (x *RDSExporter) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *RDSExporter) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *RDSExporter) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *RDSExporter) GetBasicMetricsDisabled() bool {
	if x != nil {
		return x.BasicMetricsDisabled
	}
	return false
}

func (x *RDSExporter) GetEnhancedMetricsDisabled() bool {
	if x != nil {
		return x.EnhancedMetricsDisabled
	}
	return false
}

func (x *RDSExporter) GetPushMetricsEnabled() bool {
	if x != nil {
		return x.PushMetricsEnabled
	}
	return false
}

func (x *RDSExporter) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *RDSExporter) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *RDSExporter) GetAutoDiscoveryLimit() int32 {
	if x != nil {
		return x.AutoDiscoveryLimit
	}
	return 0
}

func (x *RDSExporter) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

// ExternalExporter runs on any Node type, including Remote Node.
type ExternalExporter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// Node identifier where this instance runs.
	RunsOnNodeId string `protobuf:"bytes,2,opt,name=runs_on_node_id,json=runsOnNodeId,proto3" json:"runs_on_node_id,omitempty"`
	// If disabled, metrics from this exporter will not be collected.
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,4,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// HTTP basic auth username for collecting metrics.
	Username string `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`
	// Scheme to generate URI to exporter metrics endpoints.
	Scheme string `protobuf:"bytes,6,opt,name=scheme,proto3" json:"scheme,omitempty"`
	// Path under which metrics are exposed, used to generate URI.
	MetricsPath string `protobuf:"bytes,7,opt,name=metrics_path,json=metricsPath,proto3" json:"metrics_path,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,8,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Listen port for scraping metrics.
	ListenPort uint32 `protobuf:"varint,9,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	// True if exporter uses push metrics mode.
	PushMetricsEnabled bool `protobuf:"varint,10,opt,name=push_metrics_enabled,json=pushMetricsEnabled,proto3" json:"push_metrics_enabled,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,11,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,12,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	// Skip TLS certificate and hostname verification.
	TlsSkipVerify bool `protobuf:"varint,13,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalExporter) Reset() {
	*x = ExternalExporter{}
	mi := &file_inventory_v1_agents_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalExporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalExporter) ProtoMessage() {}

func (x *ExternalExporter) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalExporter.ProtoReflect.Descriptor instead.
func (*ExternalExporter) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{15}
}

func (x *ExternalExporter) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ExternalExporter) GetRunsOnNodeId() string {
	if x != nil {
		return x.RunsOnNodeId
	}
	return ""
}

func (x *ExternalExporter) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *ExternalExporter) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ExternalExporter) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ExternalExporter) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *ExternalExporter) GetMetricsPath() string {
	if x != nil {
		return x.MetricsPath
	}
	return ""
}

func (x *ExternalExporter) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ExternalExporter) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *ExternalExporter) GetPushMetricsEnabled() bool {
	if x != nil {
		return x.PushMetricsEnabled
	}
	return false
}

func (x *ExternalExporter) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *ExternalExporter) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

func (x *ExternalExporter) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

// AzureDatabaseExporter runs on Generic or Container Node and exposes RemoteAzure Node metrics.
type AzureDatabaseExporter struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,2,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Desired Agent status: enabled (false) or disabled (true).
	Disabled bool `protobuf:"varint,3,opt,name=disabled,proto3" json:"disabled,omitempty"`
	// Node identifier.
	NodeId string `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Azure database subscription ID.
	AzureDatabaseSubscriptionId string `protobuf:"bytes,5,opt,name=azure_database_subscription_id,json=azureDatabaseSubscriptionId,proto3" json:"azure_database_subscription_id,omitempty"`
	// Azure database resource type (mysql, maria, postgres)
	AzureDatabaseResourceType string `protobuf:"bytes,6,opt,name=azure_database_resource_type,json=azureDatabaseResourceType,proto3" json:"azure_database_resource_type,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,7,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Actual Agent status (the same for several configurations).
	Status AgentStatus `protobuf:"varint,10,opt,name=status,proto3,enum=inventory.v1.AgentStatus" json:"status,omitempty"`
	// Listen port for scraping metrics (the same for several configurations).
	ListenPort uint32 `protobuf:"varint,11,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	// True if the exporter operates in push metrics mode.
	PushMetricsEnabled bool `protobuf:"varint,12,opt,name=push_metrics_enabled,json=pushMetricsEnabled,proto3" json:"push_metrics_enabled,omitempty"`
	// Path to exec process.
	ProcessExecPath string `protobuf:"bytes,13,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,14,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,15,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *AzureDatabaseExporter) Reset() {
	*x = AzureDatabaseExporter{}
	mi := &file_inventory_v1_agents_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzureDatabaseExporter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureDatabaseExporter) ProtoMessage() {}

func (x *AzureDatabaseExporter) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureDatabaseExporter.ProtoReflect.Descriptor instead.
func (*AzureDatabaseExporter) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{16}
}

func (x *AzureDatabaseExporter) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AzureDatabaseExporter) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *AzureDatabaseExporter) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

func (x *AzureDatabaseExporter) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *AzureDatabaseExporter) GetAzureDatabaseSubscriptionId() string {
	if x != nil {
		return x.AzureDatabaseSubscriptionId
	}
	return ""
}

func (x *AzureDatabaseExporter) GetAzureDatabaseResourceType() string {
	if x != nil {
		return x.AzureDatabaseResourceType
	}
	return ""
}

func (x *AzureDatabaseExporter) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AzureDatabaseExporter) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNSPECIFIED
}

func (x *AzureDatabaseExporter) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *AzureDatabaseExporter) GetPushMetricsEnabled() bool {
	if x != nil {
		return x.PushMetricsEnabled
	}
	return false
}

func (x *AzureDatabaseExporter) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

func (x *AzureDatabaseExporter) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *AzureDatabaseExporter) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

// ChangeCommonAgentParams contains parameters that can be changed for all Agents.
type ChangeCommonAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeCommonAgentParams) Reset() {
	*x = ChangeCommonAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeCommonAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeCommonAgentParams) ProtoMessage() {}

func (x *ChangeCommonAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeCommonAgentParams.ProtoReflect.Descriptor instead.
func (*ChangeCommonAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{17}
}

func (x *ChangeCommonAgentParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangeCommonAgentParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangeCommonAgentParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangeCommonAgentParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type ListAgentsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Return only Agents started by this pmm-agent.
	// Exactly one of these parameters should be present: pmm_agent_id, node_id, service_id.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Return only Agents that provide insights for that Node.
	// Exactly one of these parameters should be present: pmm_agent_id, node_id, service_id.
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Return only Agents that provide insights for that Service.
	// Exactly one of these parameters should be present: pmm_agent_id, node_id, service_id.
	ServiceId string `protobuf:"bytes,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Return only agents of a particular type.
	AgentType     AgentType `protobuf:"varint,4,opt,name=agent_type,json=agentType,proto3,enum=inventory.v1.AgentType" json:"agent_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAgentsRequest) Reset() {
	*x = ListAgentsRequest{}
	mi := &file_inventory_v1_agents_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAgentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentsRequest) ProtoMessage() {}

func (x *ListAgentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentsRequest.ProtoReflect.Descriptor instead.
func (*ListAgentsRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{18}
}

func (x *ListAgentsRequest) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *ListAgentsRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ListAgentsRequest) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ListAgentsRequest) GetAgentType() AgentType {
	if x != nil {
		return x.AgentType
	}
	return AgentType_AGENT_TYPE_UNSPECIFIED
}

type ListAgentsResponse struct {
	state                           protoimpl.MessageState             `protogen:"open.v1"`
	PmmAgent                        []*PMMAgent                        `protobuf:"bytes,1,rep,name=pmm_agent,json=pmmAgent,proto3" json:"pmm_agent,omitempty"`
	VmAgent                         []*VMAgent                         `protobuf:"bytes,2,rep,name=vm_agent,json=vmAgent,proto3" json:"vm_agent,omitempty"`
	NodeExporter                    []*NodeExporter                    `protobuf:"bytes,3,rep,name=node_exporter,json=nodeExporter,proto3" json:"node_exporter,omitempty"`
	MysqldExporter                  []*MySQLdExporter                  `protobuf:"bytes,4,rep,name=mysqld_exporter,json=mysqldExporter,proto3" json:"mysqld_exporter,omitempty"`
	MongodbExporter                 []*MongoDBExporter                 `protobuf:"bytes,5,rep,name=mongodb_exporter,json=mongodbExporter,proto3" json:"mongodb_exporter,omitempty"`
	PostgresExporter                []*PostgresExporter                `protobuf:"bytes,6,rep,name=postgres_exporter,json=postgresExporter,proto3" json:"postgres_exporter,omitempty"`
	ProxysqlExporter                []*ProxySQLExporter                `protobuf:"bytes,7,rep,name=proxysql_exporter,json=proxysqlExporter,proto3" json:"proxysql_exporter,omitempty"`
	QanMysqlPerfschemaAgent         []*QANMySQLPerfSchemaAgent         `protobuf:"bytes,8,rep,name=qan_mysql_perfschema_agent,json=qanMysqlPerfschemaAgent,proto3" json:"qan_mysql_perfschema_agent,omitempty"`
	QanMysqlSlowlogAgent            []*QANMySQLSlowlogAgent            `protobuf:"bytes,9,rep,name=qan_mysql_slowlog_agent,json=qanMysqlSlowlogAgent,proto3" json:"qan_mysql_slowlog_agent,omitempty"`
	QanMongodbProfilerAgent         []*QANMongoDBProfilerAgent         `protobuf:"bytes,10,rep,name=qan_mongodb_profiler_agent,json=qanMongodbProfilerAgent,proto3" json:"qan_mongodb_profiler_agent,omitempty"`
	QanMongodbMongologAgent         []*QANMongoDBMongologAgent         `protobuf:"bytes,18,rep,name=qan_mongodb_mongolog_agent,json=qanMongodbMongologAgent,proto3" json:"qan_mongodb_mongolog_agent,omitempty"`
	QanPostgresqlPgstatementsAgent  []*QANPostgreSQLPgStatementsAgent  `protobuf:"bytes,11,rep,name=qan_postgresql_pgstatements_agent,json=qanPostgresqlPgstatementsAgent,proto3" json:"qan_postgresql_pgstatements_agent,omitempty"`
	QanPostgresqlPgstatmonitorAgent []*QANPostgreSQLPgStatMonitorAgent `protobuf:"bytes,12,rep,name=qan_postgresql_pgstatmonitor_agent,json=qanPostgresqlPgstatmonitorAgent,proto3" json:"qan_postgresql_pgstatmonitor_agent,omitempty"`
	ExternalExporter                []*ExternalExporter                `protobuf:"bytes,13,rep,name=external_exporter,json=externalExporter,proto3" json:"external_exporter,omitempty"`
	RdsExporter                     []*RDSExporter                     `protobuf:"bytes,14,rep,name=rds_exporter,json=rdsExporter,proto3" json:"rds_exporter,omitempty"`
	AzureDatabaseExporter           []*AzureDatabaseExporter           `protobuf:"bytes,15,rep,name=azure_database_exporter,json=azureDatabaseExporter,proto3" json:"azure_database_exporter,omitempty"`
	NomadAgent                      []*NomadAgent                      `protobuf:"bytes,16,rep,name=nomad_agent,json=nomadAgent,proto3" json:"nomad_agent,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *ListAgentsResponse) Reset() {
	*x = ListAgentsResponse{}
	mi := &file_inventory_v1_agents_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAgentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAgentsResponse) ProtoMessage() {}

func (x *ListAgentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAgentsResponse.ProtoReflect.Descriptor instead.
func (*ListAgentsResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{19}
}

func (x *ListAgentsResponse) GetPmmAgent() []*PMMAgent {
	if x != nil {
		return x.PmmAgent
	}
	return nil
}

func (x *ListAgentsResponse) GetVmAgent() []*VMAgent {
	if x != nil {
		return x.VmAgent
	}
	return nil
}

func (x *ListAgentsResponse) GetNodeExporter() []*NodeExporter {
	if x != nil {
		return x.NodeExporter
	}
	return nil
}

func (x *ListAgentsResponse) GetMysqldExporter() []*MySQLdExporter {
	if x != nil {
		return x.MysqldExporter
	}
	return nil
}

func (x *ListAgentsResponse) GetMongodbExporter() []*MongoDBExporter {
	if x != nil {
		return x.MongodbExporter
	}
	return nil
}

func (x *ListAgentsResponse) GetPostgresExporter() []*PostgresExporter {
	if x != nil {
		return x.PostgresExporter
	}
	return nil
}

func (x *ListAgentsResponse) GetProxysqlExporter() []*ProxySQLExporter {
	if x != nil {
		return x.ProxysqlExporter
	}
	return nil
}

func (x *ListAgentsResponse) GetQanMysqlPerfschemaAgent() []*QANMySQLPerfSchemaAgent {
	if x != nil {
		return x.QanMysqlPerfschemaAgent
	}
	return nil
}

func (x *ListAgentsResponse) GetQanMysqlSlowlogAgent() []*QANMySQLSlowlogAgent {
	if x != nil {
		return x.QanMysqlSlowlogAgent
	}
	return nil
}

func (x *ListAgentsResponse) GetQanMongodbProfilerAgent() []*QANMongoDBProfilerAgent {
	if x != nil {
		return x.QanMongodbProfilerAgent
	}
	return nil
}

func (x *ListAgentsResponse) GetQanMongodbMongologAgent() []*QANMongoDBMongologAgent {
	if x != nil {
		return x.QanMongodbMongologAgent
	}
	return nil
}

func (x *ListAgentsResponse) GetQanPostgresqlPgstatementsAgent() []*QANPostgreSQLPgStatementsAgent {
	if x != nil {
		return x.QanPostgresqlPgstatementsAgent
	}
	return nil
}

func (x *ListAgentsResponse) GetQanPostgresqlPgstatmonitorAgent() []*QANPostgreSQLPgStatMonitorAgent {
	if x != nil {
		return x.QanPostgresqlPgstatmonitorAgent
	}
	return nil
}

func (x *ListAgentsResponse) GetExternalExporter() []*ExternalExporter {
	if x != nil {
		return x.ExternalExporter
	}
	return nil
}

func (x *ListAgentsResponse) GetRdsExporter() []*RDSExporter {
	if x != nil {
		return x.RdsExporter
	}
	return nil
}

func (x *ListAgentsResponse) GetAzureDatabaseExporter() []*AzureDatabaseExporter {
	if x != nil {
		return x.AzureDatabaseExporter
	}
	return nil
}

func (x *ListAgentsResponse) GetNomadAgent() []*NomadAgent {
	if x != nil {
		return x.NomadAgent
	}
	return nil
}

type GetAgentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId       string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAgentRequest) Reset() {
	*x = GetAgentRequest{}
	mi := &file_inventory_v1_agents_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentRequest) ProtoMessage() {}

func (x *GetAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentRequest.ProtoReflect.Descriptor instead.
func (*GetAgentRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{20}
}

func (x *GetAgentRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

type GetAgentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Agent:
	//
	//	*GetAgentResponse_PmmAgent
	//	*GetAgentResponse_Vmagent
	//	*GetAgentResponse_NodeExporter
	//	*GetAgentResponse_MysqldExporter
	//	*GetAgentResponse_MongodbExporter
	//	*GetAgentResponse_PostgresExporter
	//	*GetAgentResponse_ProxysqlExporter
	//	*GetAgentResponse_QanMysqlPerfschemaAgent
	//	*GetAgentResponse_QanMysqlSlowlogAgent
	//	*GetAgentResponse_QanMongodbProfilerAgent
	//	*GetAgentResponse_QanMongodbMongologAgent
	//	*GetAgentResponse_QanPostgresqlPgstatementsAgent
	//	*GetAgentResponse_QanPostgresqlPgstatmonitorAgent
	//	*GetAgentResponse_ExternalExporter
	//	*GetAgentResponse_RdsExporter
	//	*GetAgentResponse_AzureDatabaseExporter
	//	*GetAgentResponse_NomadAgent
	Agent         isGetAgentResponse_Agent `protobuf_oneof:"agent"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAgentResponse) Reset() {
	*x = GetAgentResponse{}
	mi := &file_inventory_v1_agents_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentResponse) ProtoMessage() {}

func (x *GetAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentResponse.ProtoReflect.Descriptor instead.
func (*GetAgentResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{21}
}

func (x *GetAgentResponse) GetAgent() isGetAgentResponse_Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *GetAgentResponse) GetPmmAgent() *PMMAgent {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_PmmAgent); ok {
			return x.PmmAgent
		}
	}
	return nil
}

func (x *GetAgentResponse) GetVmagent() *VMAgent {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_Vmagent); ok {
			return x.Vmagent
		}
	}
	return nil
}

func (x *GetAgentResponse) GetNodeExporter() *NodeExporter {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_NodeExporter); ok {
			return x.NodeExporter
		}
	}
	return nil
}

func (x *GetAgentResponse) GetMysqldExporter() *MySQLdExporter {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_MysqldExporter); ok {
			return x.MysqldExporter
		}
	}
	return nil
}

func (x *GetAgentResponse) GetMongodbExporter() *MongoDBExporter {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_MongodbExporter); ok {
			return x.MongodbExporter
		}
	}
	return nil
}

func (x *GetAgentResponse) GetPostgresExporter() *PostgresExporter {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_PostgresExporter); ok {
			return x.PostgresExporter
		}
	}
	return nil
}

func (x *GetAgentResponse) GetProxysqlExporter() *ProxySQLExporter {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_ProxysqlExporter); ok {
			return x.ProxysqlExporter
		}
	}
	return nil
}

func (x *GetAgentResponse) GetQanMysqlPerfschemaAgent() *QANMySQLPerfSchemaAgent {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_QanMysqlPerfschemaAgent); ok {
			return x.QanMysqlPerfschemaAgent
		}
	}
	return nil
}

func (x *GetAgentResponse) GetQanMysqlSlowlogAgent() *QANMySQLSlowlogAgent {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_QanMysqlSlowlogAgent); ok {
			return x.QanMysqlSlowlogAgent
		}
	}
	return nil
}

func (x *GetAgentResponse) GetQanMongodbProfilerAgent() *QANMongoDBProfilerAgent {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_QanMongodbProfilerAgent); ok {
			return x.QanMongodbProfilerAgent
		}
	}
	return nil
}

func (x *GetAgentResponse) GetQanMongodbMongologAgent() *QANMongoDBMongologAgent {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_QanMongodbMongologAgent); ok {
			return x.QanMongodbMongologAgent
		}
	}
	return nil
}

func (x *GetAgentResponse) GetQanPostgresqlPgstatementsAgent() *QANPostgreSQLPgStatementsAgent {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_QanPostgresqlPgstatementsAgent); ok {
			return x.QanPostgresqlPgstatementsAgent
		}
	}
	return nil
}

func (x *GetAgentResponse) GetQanPostgresqlPgstatmonitorAgent() *QANPostgreSQLPgStatMonitorAgent {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_QanPostgresqlPgstatmonitorAgent); ok {
			return x.QanPostgresqlPgstatmonitorAgent
		}
	}
	return nil
}

func (x *GetAgentResponse) GetExternalExporter() *ExternalExporter {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_ExternalExporter); ok {
			return x.ExternalExporter
		}
	}
	return nil
}

func (x *GetAgentResponse) GetRdsExporter() *RDSExporter {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_RdsExporter); ok {
			return x.RdsExporter
		}
	}
	return nil
}

func (x *GetAgentResponse) GetAzureDatabaseExporter() *AzureDatabaseExporter {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_AzureDatabaseExporter); ok {
			return x.AzureDatabaseExporter
		}
	}
	return nil
}

func (x *GetAgentResponse) GetNomadAgent() *NomadAgent {
	if x != nil {
		if x, ok := x.Agent.(*GetAgentResponse_NomadAgent); ok {
			return x.NomadAgent
		}
	}
	return nil
}

type isGetAgentResponse_Agent interface {
	isGetAgentResponse_Agent()
}

type GetAgentResponse_PmmAgent struct {
	PmmAgent *PMMAgent `protobuf:"bytes,1,opt,name=pmm_agent,json=pmmAgent,proto3,oneof"`
}

type GetAgentResponse_Vmagent struct {
	Vmagent *VMAgent `protobuf:"bytes,2,opt,name=vmagent,proto3,oneof"`
}

type GetAgentResponse_NodeExporter struct {
	NodeExporter *NodeExporter `protobuf:"bytes,3,opt,name=node_exporter,json=nodeExporter,proto3,oneof"`
}

type GetAgentResponse_MysqldExporter struct {
	MysqldExporter *MySQLdExporter `protobuf:"bytes,4,opt,name=mysqld_exporter,json=mysqldExporter,proto3,oneof"`
}

type GetAgentResponse_MongodbExporter struct {
	MongodbExporter *MongoDBExporter `protobuf:"bytes,5,opt,name=mongodb_exporter,json=mongodbExporter,proto3,oneof"`
}

type GetAgentResponse_PostgresExporter struct {
	PostgresExporter *PostgresExporter `protobuf:"bytes,6,opt,name=postgres_exporter,json=postgresExporter,proto3,oneof"`
}

type GetAgentResponse_ProxysqlExporter struct {
	ProxysqlExporter *ProxySQLExporter `protobuf:"bytes,7,opt,name=proxysql_exporter,json=proxysqlExporter,proto3,oneof"`
}

type GetAgentResponse_QanMysqlPerfschemaAgent struct {
	QanMysqlPerfschemaAgent *QANMySQLPerfSchemaAgent `protobuf:"bytes,8,opt,name=qan_mysql_perfschema_agent,json=qanMysqlPerfschemaAgent,proto3,oneof"`
}

type GetAgentResponse_QanMysqlSlowlogAgent struct {
	QanMysqlSlowlogAgent *QANMySQLSlowlogAgent `protobuf:"bytes,9,opt,name=qan_mysql_slowlog_agent,json=qanMysqlSlowlogAgent,proto3,oneof"`
}

type GetAgentResponse_QanMongodbProfilerAgent struct {
	QanMongodbProfilerAgent *QANMongoDBProfilerAgent `protobuf:"bytes,10,opt,name=qan_mongodb_profiler_agent,json=qanMongodbProfilerAgent,proto3,oneof"`
}

type GetAgentResponse_QanMongodbMongologAgent struct {
	QanMongodbMongologAgent *QANMongoDBMongologAgent `protobuf:"bytes,18,opt,name=qan_mongodb_mongolog_agent,json=qanMongodbMongologAgent,proto3,oneof"`
}

type GetAgentResponse_QanPostgresqlPgstatementsAgent struct {
	QanPostgresqlPgstatementsAgent *QANPostgreSQLPgStatementsAgent `protobuf:"bytes,11,opt,name=qan_postgresql_pgstatements_agent,json=qanPostgresqlPgstatementsAgent,proto3,oneof"`
}

type GetAgentResponse_QanPostgresqlPgstatmonitorAgent struct {
	QanPostgresqlPgstatmonitorAgent *QANPostgreSQLPgStatMonitorAgent `protobuf:"bytes,12,opt,name=qan_postgresql_pgstatmonitor_agent,json=qanPostgresqlPgstatmonitorAgent,proto3,oneof"`
}

type GetAgentResponse_ExternalExporter struct {
	ExternalExporter *ExternalExporter `protobuf:"bytes,13,opt,name=external_exporter,json=externalExporter,proto3,oneof"`
}

type GetAgentResponse_RdsExporter struct {
	RdsExporter *RDSExporter `protobuf:"bytes,14,opt,name=rds_exporter,json=rdsExporter,proto3,oneof"`
}

type GetAgentResponse_AzureDatabaseExporter struct {
	AzureDatabaseExporter *AzureDatabaseExporter `protobuf:"bytes,15,opt,name=azure_database_exporter,json=azureDatabaseExporter,proto3,oneof"`
}

type GetAgentResponse_NomadAgent struct {
	NomadAgent *NomadAgent `protobuf:"bytes,16,opt,name=nomad_agent,json=nomadAgent,proto3,oneof"`
}

func (*GetAgentResponse_PmmAgent) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_Vmagent) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_NodeExporter) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_MysqldExporter) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_MongodbExporter) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_PostgresExporter) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_ProxysqlExporter) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_QanMysqlPerfschemaAgent) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_QanMysqlSlowlogAgent) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_QanMongodbProfilerAgent) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_QanMongodbMongologAgent) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_QanPostgresqlPgstatementsAgent) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_QanPostgresqlPgstatmonitorAgent) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_ExternalExporter) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_RdsExporter) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_AzureDatabaseExporter) isGetAgentResponse_Agent() {}

func (*GetAgentResponse_NomadAgent) isGetAgentResponse_Agent() {}

type GetAgentLogsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique randomly generated instance identifier.
	AgentId string `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// Limit the number of log lines to this value. Pass 0 for no limit.
	Limit         uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAgentLogsRequest) Reset() {
	*x = GetAgentLogsRequest{}
	mi := &file_inventory_v1_agents_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgentLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentLogsRequest) ProtoMessage() {}

func (x *GetAgentLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentLogsRequest.ProtoReflect.Descriptor instead.
func (*GetAgentLogsRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{22}
}

func (x *GetAgentLogsRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *GetAgentLogsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetAgentLogsResponse struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Logs                     []string               `protobuf:"bytes,1,rep,name=logs,proto3" json:"logs,omitempty"`
	AgentConfigLogLinesCount uint32                 `protobuf:"varint,2,opt,name=agent_config_log_lines_count,json=agentConfigLogLinesCount,proto3" json:"agent_config_log_lines_count,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *GetAgentLogsResponse) Reset() {
	*x = GetAgentLogsResponse{}
	mi := &file_inventory_v1_agents_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAgentLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAgentLogsResponse) ProtoMessage() {}

func (x *GetAgentLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAgentLogsResponse.ProtoReflect.Descriptor instead.
func (*GetAgentLogsResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{23}
}

func (x *GetAgentLogsResponse) GetLogs() []string {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *GetAgentLogsResponse) GetAgentConfigLogLinesCount() uint32 {
	if x != nil {
		return x.AgentConfigLogLinesCount
	}
	return 0
}

type AddAgentRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Agent:
	//
	//	*AddAgentRequest_PmmAgent
	//	*AddAgentRequest_NodeExporter
	//	*AddAgentRequest_MysqldExporter
	//	*AddAgentRequest_MongodbExporter
	//	*AddAgentRequest_PostgresExporter
	//	*AddAgentRequest_ProxysqlExporter
	//	*AddAgentRequest_ExternalExporter
	//	*AddAgentRequest_RdsExporter
	//	*AddAgentRequest_AzureDatabaseExporter
	//	*AddAgentRequest_QanMysqlPerfschemaAgent
	//	*AddAgentRequest_QanMysqlSlowlogAgent
	//	*AddAgentRequest_QanMongodbProfilerAgent
	//	*AddAgentRequest_QanMongodbMongologAgent
	//	*AddAgentRequest_QanPostgresqlPgstatementsAgent
	//	*AddAgentRequest_QanPostgresqlPgstatmonitorAgent
	Agent         isAddAgentRequest_Agent `protobuf_oneof:"agent"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAgentRequest) Reset() {
	*x = AddAgentRequest{}
	mi := &file_inventory_v1_agents_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAgentRequest) ProtoMessage() {}

func (x *AddAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAgentRequest.ProtoReflect.Descriptor instead.
func (*AddAgentRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{24}
}

func (x *AddAgentRequest) GetAgent() isAddAgentRequest_Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *AddAgentRequest) GetPmmAgent() *AddPMMAgentParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_PmmAgent); ok {
			return x.PmmAgent
		}
	}
	return nil
}

func (x *AddAgentRequest) GetNodeExporter() *AddNodeExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_NodeExporter); ok {
			return x.NodeExporter
		}
	}
	return nil
}

func (x *AddAgentRequest) GetMysqldExporter() *AddMySQLdExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_MysqldExporter); ok {
			return x.MysqldExporter
		}
	}
	return nil
}

func (x *AddAgentRequest) GetMongodbExporter() *AddMongoDBExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_MongodbExporter); ok {
			return x.MongodbExporter
		}
	}
	return nil
}

func (x *AddAgentRequest) GetPostgresExporter() *AddPostgresExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_PostgresExporter); ok {
			return x.PostgresExporter
		}
	}
	return nil
}

func (x *AddAgentRequest) GetProxysqlExporter() *AddProxySQLExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_ProxysqlExporter); ok {
			return x.ProxysqlExporter
		}
	}
	return nil
}

func (x *AddAgentRequest) GetExternalExporter() *AddExternalExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_ExternalExporter); ok {
			return x.ExternalExporter
		}
	}
	return nil
}

func (x *AddAgentRequest) GetRdsExporter() *AddRDSExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_RdsExporter); ok {
			return x.RdsExporter
		}
	}
	return nil
}

func (x *AddAgentRequest) GetAzureDatabaseExporter() *AddAzureDatabaseExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_AzureDatabaseExporter); ok {
			return x.AzureDatabaseExporter
		}
	}
	return nil
}

func (x *AddAgentRequest) GetQanMysqlPerfschemaAgent() *AddQANMySQLPerfSchemaAgentParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_QanMysqlPerfschemaAgent); ok {
			return x.QanMysqlPerfschemaAgent
		}
	}
	return nil
}

func (x *AddAgentRequest) GetQanMysqlSlowlogAgent() *AddQANMySQLSlowlogAgentParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_QanMysqlSlowlogAgent); ok {
			return x.QanMysqlSlowlogAgent
		}
	}
	return nil
}

func (x *AddAgentRequest) GetQanMongodbProfilerAgent() *AddQANMongoDBProfilerAgentParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_QanMongodbProfilerAgent); ok {
			return x.QanMongodbProfilerAgent
		}
	}
	return nil
}

func (x *AddAgentRequest) GetQanMongodbMongologAgent() *AddQANMongoDBMongologAgentParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_QanMongodbMongologAgent); ok {
			return x.QanMongodbMongologAgent
		}
	}
	return nil
}

func (x *AddAgentRequest) GetQanPostgresqlPgstatementsAgent() *AddQANPostgreSQLPgStatementsAgentParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_QanPostgresqlPgstatementsAgent); ok {
			return x.QanPostgresqlPgstatementsAgent
		}
	}
	return nil
}

func (x *AddAgentRequest) GetQanPostgresqlPgstatmonitorAgent() *AddQANPostgreSQLPgStatMonitorAgentParams {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentRequest_QanPostgresqlPgstatmonitorAgent); ok {
			return x.QanPostgresqlPgstatmonitorAgent
		}
	}
	return nil
}

type isAddAgentRequest_Agent interface {
	isAddAgentRequest_Agent()
}

type AddAgentRequest_PmmAgent struct {
	PmmAgent *AddPMMAgentParams `protobuf:"bytes,1,opt,name=pmm_agent,json=pmmAgent,proto3,oneof"`
}

type AddAgentRequest_NodeExporter struct {
	NodeExporter *AddNodeExporterParams `protobuf:"bytes,2,opt,name=node_exporter,json=nodeExporter,proto3,oneof"`
}

type AddAgentRequest_MysqldExporter struct {
	MysqldExporter *AddMySQLdExporterParams `protobuf:"bytes,3,opt,name=mysqld_exporter,json=mysqldExporter,proto3,oneof"`
}

type AddAgentRequest_MongodbExporter struct {
	MongodbExporter *AddMongoDBExporterParams `protobuf:"bytes,4,opt,name=mongodb_exporter,json=mongodbExporter,proto3,oneof"`
}

type AddAgentRequest_PostgresExporter struct {
	PostgresExporter *AddPostgresExporterParams `protobuf:"bytes,5,opt,name=postgres_exporter,json=postgresExporter,proto3,oneof"`
}

type AddAgentRequest_ProxysqlExporter struct {
	ProxysqlExporter *AddProxySQLExporterParams `protobuf:"bytes,6,opt,name=proxysql_exporter,json=proxysqlExporter,proto3,oneof"`
}

type AddAgentRequest_ExternalExporter struct {
	ExternalExporter *AddExternalExporterParams `protobuf:"bytes,7,opt,name=external_exporter,json=externalExporter,proto3,oneof"`
}

type AddAgentRequest_RdsExporter struct {
	RdsExporter *AddRDSExporterParams `protobuf:"bytes,8,opt,name=rds_exporter,json=rdsExporter,proto3,oneof"`
}

type AddAgentRequest_AzureDatabaseExporter struct {
	AzureDatabaseExporter *AddAzureDatabaseExporterParams `protobuf:"bytes,9,opt,name=azure_database_exporter,json=azureDatabaseExporter,proto3,oneof"`
}

type AddAgentRequest_QanMysqlPerfschemaAgent struct {
	QanMysqlPerfschemaAgent *AddQANMySQLPerfSchemaAgentParams `protobuf:"bytes,10,opt,name=qan_mysql_perfschema_agent,json=qanMysqlPerfschemaAgent,proto3,oneof"`
}

type AddAgentRequest_QanMysqlSlowlogAgent struct {
	QanMysqlSlowlogAgent *AddQANMySQLSlowlogAgentParams `protobuf:"bytes,11,opt,name=qan_mysql_slowlog_agent,json=qanMysqlSlowlogAgent,proto3,oneof"`
}

type AddAgentRequest_QanMongodbProfilerAgent struct {
	QanMongodbProfilerAgent *AddQANMongoDBProfilerAgentParams `protobuf:"bytes,12,opt,name=qan_mongodb_profiler_agent,json=qanMongodbProfilerAgent,proto3,oneof"`
}

type AddAgentRequest_QanMongodbMongologAgent struct {
	QanMongodbMongologAgent *AddQANMongoDBMongologAgentParams `protobuf:"bytes,16,opt,name=qan_mongodb_mongolog_agent,json=qanMongodbMongologAgent,proto3,oneof"`
}

type AddAgentRequest_QanPostgresqlPgstatementsAgent struct {
	QanPostgresqlPgstatementsAgent *AddQANPostgreSQLPgStatementsAgentParams `protobuf:"bytes,13,opt,name=qan_postgresql_pgstatements_agent,json=qanPostgresqlPgstatementsAgent,proto3,oneof"`
}

type AddAgentRequest_QanPostgresqlPgstatmonitorAgent struct {
	QanPostgresqlPgstatmonitorAgent *AddQANPostgreSQLPgStatMonitorAgentParams `protobuf:"bytes,14,opt,name=qan_postgresql_pgstatmonitor_agent,json=qanPostgresqlPgstatmonitorAgent,proto3,oneof"`
}

func (*AddAgentRequest_PmmAgent) isAddAgentRequest_Agent() {}

func (*AddAgentRequest_NodeExporter) isAddAgentRequest_Agent() {}

func (*AddAgentRequest_MysqldExporter) isAddAgentRequest_Agent() {}

func (*AddAgentRequest_MongodbExporter) isAddAgentRequest_Agent() {}

func (*AddAgentRequest_PostgresExporter) isAddAgentRequest_Agent() {}

func (*AddAgentRequest_ProxysqlExporter) isAddAgentRequest_Agent() {}

func (*AddAgentRequest_ExternalExporter) isAddAgentRequest_Agent() {}

func (*AddAgentRequest_RdsExporter) isAddAgentRequest_Agent() {}

func (*AddAgentRequest_AzureDatabaseExporter) isAddAgentRequest_Agent() {}

func (*AddAgentRequest_QanMysqlPerfschemaAgent) isAddAgentRequest_Agent() {}

func (*AddAgentRequest_QanMysqlSlowlogAgent) isAddAgentRequest_Agent() {}

func (*AddAgentRequest_QanMongodbProfilerAgent) isAddAgentRequest_Agent() {}

func (*AddAgentRequest_QanMongodbMongologAgent) isAddAgentRequest_Agent() {}

func (*AddAgentRequest_QanPostgresqlPgstatementsAgent) isAddAgentRequest_Agent() {}

func (*AddAgentRequest_QanPostgresqlPgstatmonitorAgent) isAddAgentRequest_Agent() {}

type AddAgentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Agent:
	//
	//	*AddAgentResponse_PmmAgent
	//	*AddAgentResponse_NodeExporter
	//	*AddAgentResponse_MysqldExporter
	//	*AddAgentResponse_MongodbExporter
	//	*AddAgentResponse_PostgresExporter
	//	*AddAgentResponse_ProxysqlExporter
	//	*AddAgentResponse_ExternalExporter
	//	*AddAgentResponse_RdsExporter
	//	*AddAgentResponse_AzureDatabaseExporter
	//	*AddAgentResponse_QanMysqlPerfschemaAgent
	//	*AddAgentResponse_QanMysqlSlowlogAgent
	//	*AddAgentResponse_QanMongodbProfilerAgent
	//	*AddAgentResponse_QanMongodbMongologAgent
	//	*AddAgentResponse_QanPostgresqlPgstatementsAgent
	//	*AddAgentResponse_QanPostgresqlPgstatmonitorAgent
	Agent         isAddAgentResponse_Agent `protobuf_oneof:"agent"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAgentResponse) Reset() {
	*x = AddAgentResponse{}
	mi := &file_inventory_v1_agents_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAgentResponse) ProtoMessage() {}

func (x *AddAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAgentResponse.ProtoReflect.Descriptor instead.
func (*AddAgentResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{25}
}

func (x *AddAgentResponse) GetAgent() isAddAgentResponse_Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *AddAgentResponse) GetPmmAgent() *PMMAgent {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_PmmAgent); ok {
			return x.PmmAgent
		}
	}
	return nil
}

func (x *AddAgentResponse) GetNodeExporter() *NodeExporter {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_NodeExporter); ok {
			return x.NodeExporter
		}
	}
	return nil
}

func (x *AddAgentResponse) GetMysqldExporter() *MySQLdExporter {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_MysqldExporter); ok {
			return x.MysqldExporter
		}
	}
	return nil
}

func (x *AddAgentResponse) GetMongodbExporter() *MongoDBExporter {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_MongodbExporter); ok {
			return x.MongodbExporter
		}
	}
	return nil
}

func (x *AddAgentResponse) GetPostgresExporter() *PostgresExporter {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_PostgresExporter); ok {
			return x.PostgresExporter
		}
	}
	return nil
}

func (x *AddAgentResponse) GetProxysqlExporter() *ProxySQLExporter {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_ProxysqlExporter); ok {
			return x.ProxysqlExporter
		}
	}
	return nil
}

func (x *AddAgentResponse) GetExternalExporter() *ExternalExporter {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_ExternalExporter); ok {
			return x.ExternalExporter
		}
	}
	return nil
}

func (x *AddAgentResponse) GetRdsExporter() *RDSExporter {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_RdsExporter); ok {
			return x.RdsExporter
		}
	}
	return nil
}

func (x *AddAgentResponse) GetAzureDatabaseExporter() *AzureDatabaseExporter {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_AzureDatabaseExporter); ok {
			return x.AzureDatabaseExporter
		}
	}
	return nil
}

func (x *AddAgentResponse) GetQanMysqlPerfschemaAgent() *QANMySQLPerfSchemaAgent {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_QanMysqlPerfschemaAgent); ok {
			return x.QanMysqlPerfschemaAgent
		}
	}
	return nil
}

func (x *AddAgentResponse) GetQanMysqlSlowlogAgent() *QANMySQLSlowlogAgent {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_QanMysqlSlowlogAgent); ok {
			return x.QanMysqlSlowlogAgent
		}
	}
	return nil
}

func (x *AddAgentResponse) GetQanMongodbProfilerAgent() *QANMongoDBProfilerAgent {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_QanMongodbProfilerAgent); ok {
			return x.QanMongodbProfilerAgent
		}
	}
	return nil
}

func (x *AddAgentResponse) GetQanMongodbMongologAgent() *QANMongoDBMongologAgent {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_QanMongodbMongologAgent); ok {
			return x.QanMongodbMongologAgent
		}
	}
	return nil
}

func (x *AddAgentResponse) GetQanPostgresqlPgstatementsAgent() *QANPostgreSQLPgStatementsAgent {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_QanPostgresqlPgstatementsAgent); ok {
			return x.QanPostgresqlPgstatementsAgent
		}
	}
	return nil
}

func (x *AddAgentResponse) GetQanPostgresqlPgstatmonitorAgent() *QANPostgreSQLPgStatMonitorAgent {
	if x != nil {
		if x, ok := x.Agent.(*AddAgentResponse_QanPostgresqlPgstatmonitorAgent); ok {
			return x.QanPostgresqlPgstatmonitorAgent
		}
	}
	return nil
}

type isAddAgentResponse_Agent interface {
	isAddAgentResponse_Agent()
}

type AddAgentResponse_PmmAgent struct {
	PmmAgent *PMMAgent `protobuf:"bytes,1,opt,name=pmm_agent,json=pmmAgent,proto3,oneof"`
}

type AddAgentResponse_NodeExporter struct {
	NodeExporter *NodeExporter `protobuf:"bytes,2,opt,name=node_exporter,json=nodeExporter,proto3,oneof"`
}

type AddAgentResponse_MysqldExporter struct {
	MysqldExporter *MySQLdExporter `protobuf:"bytes,3,opt,name=mysqld_exporter,json=mysqldExporter,proto3,oneof"`
}

type AddAgentResponse_MongodbExporter struct {
	MongodbExporter *MongoDBExporter `protobuf:"bytes,4,opt,name=mongodb_exporter,json=mongodbExporter,proto3,oneof"`
}

type AddAgentResponse_PostgresExporter struct {
	PostgresExporter *PostgresExporter `protobuf:"bytes,5,opt,name=postgres_exporter,json=postgresExporter,proto3,oneof"`
}

type AddAgentResponse_ProxysqlExporter struct {
	ProxysqlExporter *ProxySQLExporter `protobuf:"bytes,6,opt,name=proxysql_exporter,json=proxysqlExporter,proto3,oneof"`
}

type AddAgentResponse_ExternalExporter struct {
	ExternalExporter *ExternalExporter `protobuf:"bytes,7,opt,name=external_exporter,json=externalExporter,proto3,oneof"`
}

type AddAgentResponse_RdsExporter struct {
	RdsExporter *RDSExporter `protobuf:"bytes,8,opt,name=rds_exporter,json=rdsExporter,proto3,oneof"`
}

type AddAgentResponse_AzureDatabaseExporter struct {
	AzureDatabaseExporter *AzureDatabaseExporter `protobuf:"bytes,9,opt,name=azure_database_exporter,json=azureDatabaseExporter,proto3,oneof"`
}

type AddAgentResponse_QanMysqlPerfschemaAgent struct {
	QanMysqlPerfschemaAgent *QANMySQLPerfSchemaAgent `protobuf:"bytes,10,opt,name=qan_mysql_perfschema_agent,json=qanMysqlPerfschemaAgent,proto3,oneof"`
}

type AddAgentResponse_QanMysqlSlowlogAgent struct {
	QanMysqlSlowlogAgent *QANMySQLSlowlogAgent `protobuf:"bytes,11,opt,name=qan_mysql_slowlog_agent,json=qanMysqlSlowlogAgent,proto3,oneof"`
}

type AddAgentResponse_QanMongodbProfilerAgent struct {
	QanMongodbProfilerAgent *QANMongoDBProfilerAgent `protobuf:"bytes,12,opt,name=qan_mongodb_profiler_agent,json=qanMongodbProfilerAgent,proto3,oneof"`
}

type AddAgentResponse_QanMongodbMongologAgent struct {
	QanMongodbMongologAgent *QANMongoDBMongologAgent `protobuf:"bytes,16,opt,name=qan_mongodb_mongolog_agent,json=qanMongodbMongologAgent,proto3,oneof"`
}

type AddAgentResponse_QanPostgresqlPgstatementsAgent struct {
	QanPostgresqlPgstatementsAgent *QANPostgreSQLPgStatementsAgent `protobuf:"bytes,13,opt,name=qan_postgresql_pgstatements_agent,json=qanPostgresqlPgstatementsAgent,proto3,oneof"`
}

type AddAgentResponse_QanPostgresqlPgstatmonitorAgent struct {
	QanPostgresqlPgstatmonitorAgent *QANPostgreSQLPgStatMonitorAgent `protobuf:"bytes,14,opt,name=qan_postgresql_pgstatmonitor_agent,json=qanPostgresqlPgstatmonitorAgent,proto3,oneof"`
}

func (*AddAgentResponse_PmmAgent) isAddAgentResponse_Agent() {}

func (*AddAgentResponse_NodeExporter) isAddAgentResponse_Agent() {}

func (*AddAgentResponse_MysqldExporter) isAddAgentResponse_Agent() {}

func (*AddAgentResponse_MongodbExporter) isAddAgentResponse_Agent() {}

func (*AddAgentResponse_PostgresExporter) isAddAgentResponse_Agent() {}

func (*AddAgentResponse_ProxysqlExporter) isAddAgentResponse_Agent() {}

func (*AddAgentResponse_ExternalExporter) isAddAgentResponse_Agent() {}

func (*AddAgentResponse_RdsExporter) isAddAgentResponse_Agent() {}

func (*AddAgentResponse_AzureDatabaseExporter) isAddAgentResponse_Agent() {}

func (*AddAgentResponse_QanMysqlPerfschemaAgent) isAddAgentResponse_Agent() {}

func (*AddAgentResponse_QanMysqlSlowlogAgent) isAddAgentResponse_Agent() {}

func (*AddAgentResponse_QanMongodbProfilerAgent) isAddAgentResponse_Agent() {}

func (*AddAgentResponse_QanMongodbMongologAgent) isAddAgentResponse_Agent() {}

func (*AddAgentResponse_QanPostgresqlPgstatementsAgent) isAddAgentResponse_Agent() {}

func (*AddAgentResponse_QanPostgresqlPgstatmonitorAgent) isAddAgentResponse_Agent() {}

type ChangeAgentRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	AgentId string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// Types that are valid to be assigned to Agent:
	//
	//	*ChangeAgentRequest_NodeExporter
	//	*ChangeAgentRequest_MysqldExporter
	//	*ChangeAgentRequest_MongodbExporter
	//	*ChangeAgentRequest_PostgresExporter
	//	*ChangeAgentRequest_ProxysqlExporter
	//	*ChangeAgentRequest_ExternalExporter
	//	*ChangeAgentRequest_RdsExporter
	//	*ChangeAgentRequest_AzureDatabaseExporter
	//	*ChangeAgentRequest_QanMysqlPerfschemaAgent
	//	*ChangeAgentRequest_QanMysqlSlowlogAgent
	//	*ChangeAgentRequest_QanMongodbProfilerAgent
	//	*ChangeAgentRequest_QanMongodbMongologAgent
	//	*ChangeAgentRequest_QanPostgresqlPgstatementsAgent
	//	*ChangeAgentRequest_QanPostgresqlPgstatmonitorAgent
	//	*ChangeAgentRequest_NomadAgent
	Agent         isChangeAgentRequest_Agent `protobuf_oneof:"agent"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeAgentRequest) Reset() {
	*x = ChangeAgentRequest{}
	mi := &file_inventory_v1_agents_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAgentRequest) ProtoMessage() {}

func (x *ChangeAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAgentRequest.ProtoReflect.Descriptor instead.
func (*ChangeAgentRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{26}
}

func (x *ChangeAgentRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ChangeAgentRequest) GetAgent() isChangeAgentRequest_Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *ChangeAgentRequest) GetNodeExporter() *ChangeNodeExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_NodeExporter); ok {
			return x.NodeExporter
		}
	}
	return nil
}

func (x *ChangeAgentRequest) GetMysqldExporter() *ChangeMySQLdExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_MysqldExporter); ok {
			return x.MysqldExporter
		}
	}
	return nil
}

func (x *ChangeAgentRequest) GetMongodbExporter() *ChangeMongoDBExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_MongodbExporter); ok {
			return x.MongodbExporter
		}
	}
	return nil
}

func (x *ChangeAgentRequest) GetPostgresExporter() *ChangePostgresExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_PostgresExporter); ok {
			return x.PostgresExporter
		}
	}
	return nil
}

func (x *ChangeAgentRequest) GetProxysqlExporter() *ChangeProxySQLExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_ProxysqlExporter); ok {
			return x.ProxysqlExporter
		}
	}
	return nil
}

func (x *ChangeAgentRequest) GetExternalExporter() *ChangeExternalExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_ExternalExporter); ok {
			return x.ExternalExporter
		}
	}
	return nil
}

func (x *ChangeAgentRequest) GetRdsExporter() *ChangeRDSExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_RdsExporter); ok {
			return x.RdsExporter
		}
	}
	return nil
}

func (x *ChangeAgentRequest) GetAzureDatabaseExporter() *ChangeAzureDatabaseExporterParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_AzureDatabaseExporter); ok {
			return x.AzureDatabaseExporter
		}
	}
	return nil
}

func (x *ChangeAgentRequest) GetQanMysqlPerfschemaAgent() *ChangeQANMySQLPerfSchemaAgentParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_QanMysqlPerfschemaAgent); ok {
			return x.QanMysqlPerfschemaAgent
		}
	}
	return nil
}

func (x *ChangeAgentRequest) GetQanMysqlSlowlogAgent() *ChangeQANMySQLSlowlogAgentParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_QanMysqlSlowlogAgent); ok {
			return x.QanMysqlSlowlogAgent
		}
	}
	return nil
}

func (x *ChangeAgentRequest) GetQanMongodbProfilerAgent() *ChangeQANMongoDBProfilerAgentParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_QanMongodbProfilerAgent); ok {
			return x.QanMongodbProfilerAgent
		}
	}
	return nil
}

func (x *ChangeAgentRequest) GetQanMongodbMongologAgent() *ChangeQANMongoDBMongologAgentParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_QanMongodbMongologAgent); ok {
			return x.QanMongodbMongologAgent
		}
	}
	return nil
}

func (x *ChangeAgentRequest) GetQanPostgresqlPgstatementsAgent() *ChangeQANPostgreSQLPgStatementsAgentParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_QanPostgresqlPgstatementsAgent); ok {
			return x.QanPostgresqlPgstatementsAgent
		}
	}
	return nil
}

func (x *ChangeAgentRequest) GetQanPostgresqlPgstatmonitorAgent() *ChangeQANPostgreSQLPgStatMonitorAgentParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_QanPostgresqlPgstatmonitorAgent); ok {
			return x.QanPostgresqlPgstatmonitorAgent
		}
	}
	return nil
}

func (x *ChangeAgentRequest) GetNomadAgent() *ChangeNomadAgentParams {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentRequest_NomadAgent); ok {
			return x.NomadAgent
		}
	}
	return nil
}

type isChangeAgentRequest_Agent interface {
	isChangeAgentRequest_Agent()
}

type ChangeAgentRequest_NodeExporter struct {
	NodeExporter *ChangeNodeExporterParams `protobuf:"bytes,2,opt,name=node_exporter,json=nodeExporter,proto3,oneof"`
}

type ChangeAgentRequest_MysqldExporter struct {
	MysqldExporter *ChangeMySQLdExporterParams `protobuf:"bytes,3,opt,name=mysqld_exporter,json=mysqldExporter,proto3,oneof"`
}

type ChangeAgentRequest_MongodbExporter struct {
	MongodbExporter *ChangeMongoDBExporterParams `protobuf:"bytes,4,opt,name=mongodb_exporter,json=mongodbExporter,proto3,oneof"`
}

type ChangeAgentRequest_PostgresExporter struct {
	PostgresExporter *ChangePostgresExporterParams `protobuf:"bytes,5,opt,name=postgres_exporter,json=postgresExporter,proto3,oneof"`
}

type ChangeAgentRequest_ProxysqlExporter struct {
	ProxysqlExporter *ChangeProxySQLExporterParams `protobuf:"bytes,6,opt,name=proxysql_exporter,json=proxysqlExporter,proto3,oneof"`
}

type ChangeAgentRequest_ExternalExporter struct {
	ExternalExporter *ChangeExternalExporterParams `protobuf:"bytes,7,opt,name=external_exporter,json=externalExporter,proto3,oneof"`
}

type ChangeAgentRequest_RdsExporter struct {
	RdsExporter *ChangeRDSExporterParams `protobuf:"bytes,8,opt,name=rds_exporter,json=rdsExporter,proto3,oneof"`
}

type ChangeAgentRequest_AzureDatabaseExporter struct {
	AzureDatabaseExporter *ChangeAzureDatabaseExporterParams `protobuf:"bytes,9,opt,name=azure_database_exporter,json=azureDatabaseExporter,proto3,oneof"`
}

type ChangeAgentRequest_QanMysqlPerfschemaAgent struct {
	QanMysqlPerfschemaAgent *ChangeQANMySQLPerfSchemaAgentParams `protobuf:"bytes,10,opt,name=qan_mysql_perfschema_agent,json=qanMysqlPerfschemaAgent,proto3,oneof"`
}

type ChangeAgentRequest_QanMysqlSlowlogAgent struct {
	QanMysqlSlowlogAgent *ChangeQANMySQLSlowlogAgentParams `protobuf:"bytes,11,opt,name=qan_mysql_slowlog_agent,json=qanMysqlSlowlogAgent,proto3,oneof"`
}

type ChangeAgentRequest_QanMongodbProfilerAgent struct {
	QanMongodbProfilerAgent *ChangeQANMongoDBProfilerAgentParams `protobuf:"bytes,12,opt,name=qan_mongodb_profiler_agent,json=qanMongodbProfilerAgent,proto3,oneof"`
}

type ChangeAgentRequest_QanMongodbMongologAgent struct {
	QanMongodbMongologAgent *ChangeQANMongoDBMongologAgentParams `protobuf:"bytes,17,opt,name=qan_mongodb_mongolog_agent,json=qanMongodbMongologAgent,proto3,oneof"`
}

type ChangeAgentRequest_QanPostgresqlPgstatementsAgent struct {
	QanPostgresqlPgstatementsAgent *ChangeQANPostgreSQLPgStatementsAgentParams `protobuf:"bytes,13,opt,name=qan_postgresql_pgstatements_agent,json=qanPostgresqlPgstatementsAgent,proto3,oneof"`
}

type ChangeAgentRequest_QanPostgresqlPgstatmonitorAgent struct {
	QanPostgresqlPgstatmonitorAgent *ChangeQANPostgreSQLPgStatMonitorAgentParams `protobuf:"bytes,14,opt,name=qan_postgresql_pgstatmonitor_agent,json=qanPostgresqlPgstatmonitorAgent,proto3,oneof"`
}

type ChangeAgentRequest_NomadAgent struct {
	NomadAgent *ChangeNomadAgentParams `protobuf:"bytes,15,opt,name=nomad_agent,json=nomadAgent,proto3,oneof"`
}

func (*ChangeAgentRequest_NodeExporter) isChangeAgentRequest_Agent() {}

func (*ChangeAgentRequest_MysqldExporter) isChangeAgentRequest_Agent() {}

func (*ChangeAgentRequest_MongodbExporter) isChangeAgentRequest_Agent() {}

func (*ChangeAgentRequest_PostgresExporter) isChangeAgentRequest_Agent() {}

func (*ChangeAgentRequest_ProxysqlExporter) isChangeAgentRequest_Agent() {}

func (*ChangeAgentRequest_ExternalExporter) isChangeAgentRequest_Agent() {}

func (*ChangeAgentRequest_RdsExporter) isChangeAgentRequest_Agent() {}

func (*ChangeAgentRequest_AzureDatabaseExporter) isChangeAgentRequest_Agent() {}

func (*ChangeAgentRequest_QanMysqlPerfschemaAgent) isChangeAgentRequest_Agent() {}

func (*ChangeAgentRequest_QanMysqlSlowlogAgent) isChangeAgentRequest_Agent() {}

func (*ChangeAgentRequest_QanMongodbProfilerAgent) isChangeAgentRequest_Agent() {}

func (*ChangeAgentRequest_QanMongodbMongologAgent) isChangeAgentRequest_Agent() {}

func (*ChangeAgentRequest_QanPostgresqlPgstatementsAgent) isChangeAgentRequest_Agent() {}

func (*ChangeAgentRequest_QanPostgresqlPgstatmonitorAgent) isChangeAgentRequest_Agent() {}

func (*ChangeAgentRequest_NomadAgent) isChangeAgentRequest_Agent() {}

type ChangeAgentResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Agent:
	//
	//	*ChangeAgentResponse_NodeExporter
	//	*ChangeAgentResponse_MysqldExporter
	//	*ChangeAgentResponse_MongodbExporter
	//	*ChangeAgentResponse_PostgresExporter
	//	*ChangeAgentResponse_ProxysqlExporter
	//	*ChangeAgentResponse_ExternalExporter
	//	*ChangeAgentResponse_RdsExporter
	//	*ChangeAgentResponse_AzureDatabaseExporter
	//	*ChangeAgentResponse_QanMysqlPerfschemaAgent
	//	*ChangeAgentResponse_QanMysqlSlowlogAgent
	//	*ChangeAgentResponse_QanMongodbProfilerAgent
	//	*ChangeAgentResponse_QanMongodbMongologAgent
	//	*ChangeAgentResponse_QanPostgresqlPgstatementsAgent
	//	*ChangeAgentResponse_QanPostgresqlPgstatmonitorAgent
	//	*ChangeAgentResponse_NomadAgent
	Agent         isChangeAgentResponse_Agent `protobuf_oneof:"agent"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeAgentResponse) Reset() {
	*x = ChangeAgentResponse{}
	mi := &file_inventory_v1_agents_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAgentResponse) ProtoMessage() {}

func (x *ChangeAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAgentResponse.ProtoReflect.Descriptor instead.
func (*ChangeAgentResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{27}
}

func (x *ChangeAgentResponse) GetAgent() isChangeAgentResponse_Agent {
	if x != nil {
		return x.Agent
	}
	return nil
}

func (x *ChangeAgentResponse) GetNodeExporter() *NodeExporter {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_NodeExporter); ok {
			return x.NodeExporter
		}
	}
	return nil
}

func (x *ChangeAgentResponse) GetMysqldExporter() *MySQLdExporter {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_MysqldExporter); ok {
			return x.MysqldExporter
		}
	}
	return nil
}

func (x *ChangeAgentResponse) GetMongodbExporter() *MongoDBExporter {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_MongodbExporter); ok {
			return x.MongodbExporter
		}
	}
	return nil
}

func (x *ChangeAgentResponse) GetPostgresExporter() *PostgresExporter {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_PostgresExporter); ok {
			return x.PostgresExporter
		}
	}
	return nil
}

func (x *ChangeAgentResponse) GetProxysqlExporter() *ProxySQLExporter {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_ProxysqlExporter); ok {
			return x.ProxysqlExporter
		}
	}
	return nil
}

func (x *ChangeAgentResponse) GetExternalExporter() *ExternalExporter {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_ExternalExporter); ok {
			return x.ExternalExporter
		}
	}
	return nil
}

func (x *ChangeAgentResponse) GetRdsExporter() *RDSExporter {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_RdsExporter); ok {
			return x.RdsExporter
		}
	}
	return nil
}

func (x *ChangeAgentResponse) GetAzureDatabaseExporter() *AzureDatabaseExporter {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_AzureDatabaseExporter); ok {
			return x.AzureDatabaseExporter
		}
	}
	return nil
}

func (x *ChangeAgentResponse) GetQanMysqlPerfschemaAgent() *QANMySQLPerfSchemaAgent {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_QanMysqlPerfschemaAgent); ok {
			return x.QanMysqlPerfschemaAgent
		}
	}
	return nil
}

func (x *ChangeAgentResponse) GetQanMysqlSlowlogAgent() *QANMySQLSlowlogAgent {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_QanMysqlSlowlogAgent); ok {
			return x.QanMysqlSlowlogAgent
		}
	}
	return nil
}

func (x *ChangeAgentResponse) GetQanMongodbProfilerAgent() *QANMongoDBProfilerAgent {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_QanMongodbProfilerAgent); ok {
			return x.QanMongodbProfilerAgent
		}
	}
	return nil
}

func (x *ChangeAgentResponse) GetQanMongodbMongologAgent() *QANMongoDBMongologAgent {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_QanMongodbMongologAgent); ok {
			return x.QanMongodbMongologAgent
		}
	}
	return nil
}

func (x *ChangeAgentResponse) GetQanPostgresqlPgstatementsAgent() *QANPostgreSQLPgStatementsAgent {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_QanPostgresqlPgstatementsAgent); ok {
			return x.QanPostgresqlPgstatementsAgent
		}
	}
	return nil
}

func (x *ChangeAgentResponse) GetQanPostgresqlPgstatmonitorAgent() *QANPostgreSQLPgStatMonitorAgent {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_QanPostgresqlPgstatmonitorAgent); ok {
			return x.QanPostgresqlPgstatmonitorAgent
		}
	}
	return nil
}

func (x *ChangeAgentResponse) GetNomadAgent() *NomadAgent {
	if x != nil {
		if x, ok := x.Agent.(*ChangeAgentResponse_NomadAgent); ok {
			return x.NomadAgent
		}
	}
	return nil
}

type isChangeAgentResponse_Agent interface {
	isChangeAgentResponse_Agent()
}

type ChangeAgentResponse_NodeExporter struct {
	NodeExporter *NodeExporter `protobuf:"bytes,2,opt,name=node_exporter,json=nodeExporter,proto3,oneof"`
}

type ChangeAgentResponse_MysqldExporter struct {
	MysqldExporter *MySQLdExporter `protobuf:"bytes,3,opt,name=mysqld_exporter,json=mysqldExporter,proto3,oneof"`
}

type ChangeAgentResponse_MongodbExporter struct {
	MongodbExporter *MongoDBExporter `protobuf:"bytes,4,opt,name=mongodb_exporter,json=mongodbExporter,proto3,oneof"`
}

type ChangeAgentResponse_PostgresExporter struct {
	PostgresExporter *PostgresExporter `protobuf:"bytes,5,opt,name=postgres_exporter,json=postgresExporter,proto3,oneof"`
}

type ChangeAgentResponse_ProxysqlExporter struct {
	ProxysqlExporter *ProxySQLExporter `protobuf:"bytes,6,opt,name=proxysql_exporter,json=proxysqlExporter,proto3,oneof"`
}

type ChangeAgentResponse_ExternalExporter struct {
	ExternalExporter *ExternalExporter `protobuf:"bytes,7,opt,name=external_exporter,json=externalExporter,proto3,oneof"`
}

type ChangeAgentResponse_RdsExporter struct {
	RdsExporter *RDSExporter `protobuf:"bytes,8,opt,name=rds_exporter,json=rdsExporter,proto3,oneof"`
}

type ChangeAgentResponse_AzureDatabaseExporter struct {
	AzureDatabaseExporter *AzureDatabaseExporter `protobuf:"bytes,9,opt,name=azure_database_exporter,json=azureDatabaseExporter,proto3,oneof"`
}

type ChangeAgentResponse_QanMysqlPerfschemaAgent struct {
	QanMysqlPerfschemaAgent *QANMySQLPerfSchemaAgent `protobuf:"bytes,10,opt,name=qan_mysql_perfschema_agent,json=qanMysqlPerfschemaAgent,proto3,oneof"`
}

type ChangeAgentResponse_QanMysqlSlowlogAgent struct {
	QanMysqlSlowlogAgent *QANMySQLSlowlogAgent `protobuf:"bytes,11,opt,name=qan_mysql_slowlog_agent,json=qanMysqlSlowlogAgent,proto3,oneof"`
}

type ChangeAgentResponse_QanMongodbProfilerAgent struct {
	QanMongodbProfilerAgent *QANMongoDBProfilerAgent `protobuf:"bytes,12,opt,name=qan_mongodb_profiler_agent,json=qanMongodbProfilerAgent,proto3,oneof"`
}

type ChangeAgentResponse_QanMongodbMongologAgent struct {
	QanMongodbMongologAgent *QANMongoDBMongologAgent `protobuf:"bytes,17,opt,name=qan_mongodb_mongolog_agent,json=qanMongodbMongologAgent,proto3,oneof"`
}

type ChangeAgentResponse_QanPostgresqlPgstatementsAgent struct {
	QanPostgresqlPgstatementsAgent *QANPostgreSQLPgStatementsAgent `protobuf:"bytes,13,opt,name=qan_postgresql_pgstatements_agent,json=qanPostgresqlPgstatementsAgent,proto3,oneof"`
}

type ChangeAgentResponse_QanPostgresqlPgstatmonitorAgent struct {
	QanPostgresqlPgstatmonitorAgent *QANPostgreSQLPgStatMonitorAgent `protobuf:"bytes,14,opt,name=qan_postgresql_pgstatmonitor_agent,json=qanPostgresqlPgstatmonitorAgent,proto3,oneof"`
}

type ChangeAgentResponse_NomadAgent struct {
	NomadAgent *NomadAgent `protobuf:"bytes,15,opt,name=nomad_agent,json=nomadAgent,proto3,oneof"`
}

func (*ChangeAgentResponse_NodeExporter) isChangeAgentResponse_Agent() {}

func (*ChangeAgentResponse_MysqldExporter) isChangeAgentResponse_Agent() {}

func (*ChangeAgentResponse_MongodbExporter) isChangeAgentResponse_Agent() {}

func (*ChangeAgentResponse_PostgresExporter) isChangeAgentResponse_Agent() {}

func (*ChangeAgentResponse_ProxysqlExporter) isChangeAgentResponse_Agent() {}

func (*ChangeAgentResponse_ExternalExporter) isChangeAgentResponse_Agent() {}

func (*ChangeAgentResponse_RdsExporter) isChangeAgentResponse_Agent() {}

func (*ChangeAgentResponse_AzureDatabaseExporter) isChangeAgentResponse_Agent() {}

func (*ChangeAgentResponse_QanMysqlPerfschemaAgent) isChangeAgentResponse_Agent() {}

func (*ChangeAgentResponse_QanMysqlSlowlogAgent) isChangeAgentResponse_Agent() {}

func (*ChangeAgentResponse_QanMongodbProfilerAgent) isChangeAgentResponse_Agent() {}

func (*ChangeAgentResponse_QanMongodbMongologAgent) isChangeAgentResponse_Agent() {}

func (*ChangeAgentResponse_QanPostgresqlPgstatementsAgent) isChangeAgentResponse_Agent() {}

func (*ChangeAgentResponse_QanPostgresqlPgstatmonitorAgent) isChangeAgentResponse_Agent() {}

func (*ChangeAgentResponse_NomadAgent) isChangeAgentResponse_Agent() {}

type AddPMMAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Node identifier where this instance runs.
	RunsOnNodeId string `protobuf:"bytes,1,opt,name=runs_on_node_id,json=runsOnNodeId,proto3" json:"runs_on_node_id,omitempty"`
	// Custom user-assigned labels.
	CustomLabels  map[string]string `protobuf:"bytes,2,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddPMMAgentParams) Reset() {
	*x = AddPMMAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPMMAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPMMAgentParams) ProtoMessage() {}

func (x *AddPMMAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPMMAgentParams.ProtoReflect.Descriptor instead.
func (*AddPMMAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{28}
}

func (x *AddPMMAgentParams) GetRunsOnNodeId() string {
	if x != nil {
		return x.RunsOnNodeId
	}
	return ""
}

func (x *AddPMMAgentParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

type AddNodeExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,2,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Enables push metrics mode for exporter.
	PushMetrics bool `protobuf:"varint,3,opt,name=push_metrics,json=pushMetrics,proto3" json:"push_metrics,omitempty"`
	// List of collector names to disable in this exporter.
	DisableCollectors []string `protobuf:"bytes,4,rep,name=disable_collectors,json=disableCollectors,proto3" json:"disable_collectors,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,5,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Expose the node_exporter process on all public interfaces
	ExposeExporter bool `protobuf:"varint,6,opt,name=expose_exporter,json=exposeExporter,proto3" json:"expose_exporter,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddNodeExporterParams) Reset() {
	*x = AddNodeExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddNodeExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddNodeExporterParams) ProtoMessage() {}

func (x *AddNodeExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddNodeExporterParams.ProtoReflect.Descriptor instead.
func (*AddNodeExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{29}
}

func (x *AddNodeExporterParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *AddNodeExporterParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddNodeExporterParams) GetPushMetrics() bool {
	if x != nil {
		return x.PushMetrics
	}
	return false
}

func (x *AddNodeExporterParams) GetDisableCollectors() []string {
	if x != nil {
		return x.DisableCollectors
	}
	return nil
}

func (x *AddNodeExporterParams) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *AddNodeExporterParams) GetExposeExporter() bool {
	if x != nil {
		return x.ExposeExporter
	}
	return false
}

type ChangeNodeExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeNodeExporterParams) Reset() {
	*x = ChangeNodeExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeNodeExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNodeExporterParams) ProtoMessage() {}

func (x *ChangeNodeExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNodeExporterParams.ProtoReflect.Descriptor instead.
func (*ChangeNodeExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{30}
}

func (x *ChangeNodeExporterParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangeNodeExporterParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangeNodeExporterParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangeNodeExporterParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type AddMySQLdExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// MySQL username for scraping metrics.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// MySQL password for scraping metrics.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,5,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,6,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Certificate Authority certificate chain.
	TlsCa string `protobuf:"bytes,7,opt,name=tls_ca,json=tlsCa,proto3" json:"tls_ca,omitempty"`
	// Client certificate.
	TlsCert string `protobuf:"bytes,8,opt,name=tls_cert,json=tlsCert,proto3" json:"tls_cert,omitempty"`
	// Password for decrypting tls_cert.
	TlsKey string `protobuf:"bytes,9,opt,name=tls_key,json=tlsKey,proto3" json:"tls_key,omitempty"`
	// Tablestats group collectors will be disabled if there are more than that number of tables.
	// 0 means tablestats group collectors are always enabled (no limit).
	// Negative value means tablestats group collectors are always disabled.
	TablestatsGroupTableLimit int32 `protobuf:"varint,10,opt,name=tablestats_group_table_limit,json=tablestatsGroupTableLimit,proto3" json:"tablestats_group_table_limit,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,11,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Skip connection check.
	SkipConnectionCheck bool `protobuf:"varint,12,opt,name=skip_connection_check,json=skipConnectionCheck,proto3" json:"skip_connection_check,omitempty"`
	// Enables push metrics mode for exporter.
	PushMetrics bool `protobuf:"varint,13,opt,name=push_metrics,json=pushMetrics,proto3" json:"push_metrics,omitempty"`
	// List of collector names to disable in this exporter.
	DisableCollectors []string `protobuf:"bytes,14,rep,name=disable_collectors,json=disableCollectors,proto3" json:"disable_collectors,omitempty"`
	// Custom password for exporter endpoint /metrics.
	AgentPassword string `protobuf:"bytes,15,opt,name=agent_password,json=agentPassword,proto3" json:"agent_password,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,16,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Optionally expose the exporter process on all public interfaces
	ExposeExporter bool `protobuf:"varint,17,opt,name=expose_exporter,json=exposeExporter,proto3" json:"expose_exporter,omitempty"`
	// Extra DSN parameters for MySQL connection.
	ExtraDsnParams map[string]string `protobuf:"bytes,18,rep,name=extra_dsn_params,json=extraDsnParams,proto3" json:"extra_dsn_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddMySQLdExporterParams) Reset() {
	*x = AddMySQLdExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMySQLdExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMySQLdExporterParams) ProtoMessage() {}

func (x *AddMySQLdExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMySQLdExporterParams.ProtoReflect.Descriptor instead.
func (*AddMySQLdExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{31}
}

func (x *AddMySQLdExporterParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *AddMySQLdExporterParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AddMySQLdExporterParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddMySQLdExporterParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddMySQLdExporterParams) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *AddMySQLdExporterParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *AddMySQLdExporterParams) GetTlsCa() string {
	if x != nil {
		return x.TlsCa
	}
	return ""
}

func (x *AddMySQLdExporterParams) GetTlsCert() string {
	if x != nil {
		return x.TlsCert
	}
	return ""
}

func (x *AddMySQLdExporterParams) GetTlsKey() string {
	if x != nil {
		return x.TlsKey
	}
	return ""
}

func (x *AddMySQLdExporterParams) GetTablestatsGroupTableLimit() int32 {
	if x != nil {
		return x.TablestatsGroupTableLimit
	}
	return 0
}

func (x *AddMySQLdExporterParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddMySQLdExporterParams) GetSkipConnectionCheck() bool {
	if x != nil {
		return x.SkipConnectionCheck
	}
	return false
}

func (x *AddMySQLdExporterParams) GetPushMetrics() bool {
	if x != nil {
		return x.PushMetrics
	}
	return false
}

func (x *AddMySQLdExporterParams) GetDisableCollectors() []string {
	if x != nil {
		return x.DisableCollectors
	}
	return nil
}

func (x *AddMySQLdExporterParams) GetAgentPassword() string {
	if x != nil {
		return x.AgentPassword
	}
	return ""
}

func (x *AddMySQLdExporterParams) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *AddMySQLdExporterParams) GetExposeExporter() bool {
	if x != nil {
		return x.ExposeExporter
	}
	return false
}

func (x *AddMySQLdExporterParams) GetExtraDsnParams() map[string]string {
	if x != nil {
		return x.ExtraDsnParams
	}
	return nil
}

type ChangeMySQLdExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeMySQLdExporterParams) Reset() {
	*x = ChangeMySQLdExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeMySQLdExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMySQLdExporterParams) ProtoMessage() {}

func (x *ChangeMySQLdExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMySQLdExporterParams.ProtoReflect.Descriptor instead.
func (*ChangeMySQLdExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{32}
}

func (x *ChangeMySQLdExporterParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangeMySQLdExporterParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangeMySQLdExporterParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangeMySQLdExporterParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type AddMongoDBExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// MongoDB username for scraping metrics.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// MongoDB password for scraping metrics.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,5,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,6,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Client certificate and key.
	TlsCertificateKey string `protobuf:"bytes,7,opt,name=tls_certificate_key,json=tlsCertificateKey,proto3" json:"tls_certificate_key,omitempty"`
	// Password for decrypting tls_certificate_key.
	TlsCertificateKeyFilePassword string `protobuf:"bytes,8,opt,name=tls_certificate_key_file_password,json=tlsCertificateKeyFilePassword,proto3" json:"tls_certificate_key_file_password,omitempty"`
	// Certificate Authority certificate chain.
	TlsCa string `protobuf:"bytes,9,opt,name=tls_ca,json=tlsCa,proto3" json:"tls_ca,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,10,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Skip connection check.
	SkipConnectionCheck bool `protobuf:"varint,11,opt,name=skip_connection_check,json=skipConnectionCheck,proto3" json:"skip_connection_check,omitempty"`
	// Enables push metrics mode for exporter.
	PushMetrics bool `protobuf:"varint,12,opt,name=push_metrics,json=pushMetrics,proto3" json:"push_metrics,omitempty"`
	// List of collector names to disable in this exporter.
	DisableCollectors []string `protobuf:"bytes,13,rep,name=disable_collectors,json=disableCollectors,proto3" json:"disable_collectors,omitempty"`
	// Authentication mechanism.
	// See https://docs.mongodb.com/manual/reference/connection-string/#mongodb-urioption-urioption.authMechanism
	// for details.
	AuthenticationMechanism string `protobuf:"bytes,14,opt,name=authentication_mechanism,json=authenticationMechanism,proto3" json:"authentication_mechanism,omitempty"`
	// Authentication database.
	AuthenticationDatabase string `protobuf:"bytes,15,opt,name=authentication_database,json=authenticationDatabase,proto3" json:"authentication_database,omitempty"`
	// Custom password for exporter endpoint /metrics.
	AgentPassword string `protobuf:"bytes,16,opt,name=agent_password,json=agentPassword,proto3" json:"agent_password,omitempty"`
	// List of colletions to get stats from. Can use *
	StatsCollections []string `protobuf:"bytes,17,rep,name=stats_collections,json=statsCollections,proto3" json:"stats_collections,omitempty"`
	// Collections limit. Only get Databases and collection stats if the total number of collections in the server
	// is less than this value. 0: no limit
	CollectionsLimit int32 `protobuf:"varint,18,opt,name=collections_limit,json=collectionsLimit,proto3" json:"collections_limit,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,19,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Optionally expose the exporter process on all public interfaces
	ExposeExporter bool `protobuf:"varint,20,opt,name=expose_exporter,json=exposeExporter,proto3" json:"expose_exporter,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddMongoDBExporterParams) Reset() {
	*x = AddMongoDBExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddMongoDBExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMongoDBExporterParams) ProtoMessage() {}

func (x *AddMongoDBExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMongoDBExporterParams.ProtoReflect.Descriptor instead.
func (*AddMongoDBExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{33}
}

func (x *AddMongoDBExporterParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *AddMongoDBExporterParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AddMongoDBExporterParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddMongoDBExporterParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddMongoDBExporterParams) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *AddMongoDBExporterParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *AddMongoDBExporterParams) GetTlsCertificateKey() string {
	if x != nil {
		return x.TlsCertificateKey
	}
	return ""
}

func (x *AddMongoDBExporterParams) GetTlsCertificateKeyFilePassword() string {
	if x != nil {
		return x.TlsCertificateKeyFilePassword
	}
	return ""
}

func (x *AddMongoDBExporterParams) GetTlsCa() string {
	if x != nil {
		return x.TlsCa
	}
	return ""
}

func (x *AddMongoDBExporterParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddMongoDBExporterParams) GetSkipConnectionCheck() bool {
	if x != nil {
		return x.SkipConnectionCheck
	}
	return false
}

func (x *AddMongoDBExporterParams) GetPushMetrics() bool {
	if x != nil {
		return x.PushMetrics
	}
	return false
}

func (x *AddMongoDBExporterParams) GetDisableCollectors() []string {
	if x != nil {
		return x.DisableCollectors
	}
	return nil
}

func (x *AddMongoDBExporterParams) GetAuthenticationMechanism() string {
	if x != nil {
		return x.AuthenticationMechanism
	}
	return ""
}

func (x *AddMongoDBExporterParams) GetAuthenticationDatabase() string {
	if x != nil {
		return x.AuthenticationDatabase
	}
	return ""
}

func (x *AddMongoDBExporterParams) GetAgentPassword() string {
	if x != nil {
		return x.AgentPassword
	}
	return ""
}

func (x *AddMongoDBExporterParams) GetStatsCollections() []string {
	if x != nil {
		return x.StatsCollections
	}
	return nil
}

func (x *AddMongoDBExporterParams) GetCollectionsLimit() int32 {
	if x != nil {
		return x.CollectionsLimit
	}
	return 0
}

func (x *AddMongoDBExporterParams) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *AddMongoDBExporterParams) GetExposeExporter() bool {
	if x != nil {
		return x.ExposeExporter
	}
	return false
}

type ChangeMongoDBExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeMongoDBExporterParams) Reset() {
	*x = ChangeMongoDBExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeMongoDBExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeMongoDBExporterParams) ProtoMessage() {}

func (x *ChangeMongoDBExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeMongoDBExporterParams.ProtoReflect.Descriptor instead.
func (*ChangeMongoDBExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{34}
}

func (x *ChangeMongoDBExporterParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangeMongoDBExporterParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangeMongoDBExporterParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangeMongoDBExporterParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type AddPostgresExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// PostgreSQL username for scraping metrics.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// PostgreSQL password for scraping metrics.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,5,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation. Uses sslmode=required instead of verify-full.
	TlsSkipVerify bool `protobuf:"varint,6,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,7,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Skip connection check.
	SkipConnectionCheck bool `protobuf:"varint,8,opt,name=skip_connection_check,json=skipConnectionCheck,proto3" json:"skip_connection_check,omitempty"`
	// Enables push metrics mode for exporter.
	PushMetrics bool `protobuf:"varint,9,opt,name=push_metrics,json=pushMetrics,proto3" json:"push_metrics,omitempty"`
	// List of collector names to disable in this exporter.
	DisableCollectors []string `protobuf:"bytes,10,rep,name=disable_collectors,json=disableCollectors,proto3" json:"disable_collectors,omitempty"`
	// TLS CA certificate.
	TlsCa string `protobuf:"bytes,11,opt,name=tls_ca,json=tlsCa,proto3" json:"tls_ca,omitempty"`
	// TLS Certifcate.
	TlsCert string `protobuf:"bytes,12,opt,name=tls_cert,json=tlsCert,proto3" json:"tls_cert,omitempty"`
	// TLS Certificate Key.
	TlsKey string `protobuf:"bytes,13,opt,name=tls_key,json=tlsKey,proto3" json:"tls_key,omitempty"`
	// Custom password for exporter endpoint /metrics.
	AgentPassword string `protobuf:"bytes,14,opt,name=agent_password,json=agentPassword,proto3" json:"agent_password,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,15,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Limit of databases for auto-discovery.
	AutoDiscoveryLimit int32 `protobuf:"varint,16,opt,name=auto_discovery_limit,json=autoDiscoveryLimit,proto3" json:"auto_discovery_limit,omitempty"`
	// Optionally expose the exporter process on all public interfaces
	ExposeExporter bool `protobuf:"varint,17,opt,name=expose_exporter,json=exposeExporter,proto3" json:"expose_exporter,omitempty"`
	// Maximum number of connections that exporter can open to the database instance.
	MaxExporterConnections int32 `protobuf:"varint,18,opt,name=max_exporter_connections,json=maxExporterConnections,proto3" json:"max_exporter_connections,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *AddPostgresExporterParams) Reset() {
	*x = AddPostgresExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddPostgresExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPostgresExporterParams) ProtoMessage() {}

func (x *AddPostgresExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPostgresExporterParams.ProtoReflect.Descriptor instead.
func (*AddPostgresExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{35}
}

func (x *AddPostgresExporterParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *AddPostgresExporterParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AddPostgresExporterParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddPostgresExporterParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddPostgresExporterParams) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *AddPostgresExporterParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *AddPostgresExporterParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddPostgresExporterParams) GetSkipConnectionCheck() bool {
	if x != nil {
		return x.SkipConnectionCheck
	}
	return false
}

func (x *AddPostgresExporterParams) GetPushMetrics() bool {
	if x != nil {
		return x.PushMetrics
	}
	return false
}

func (x *AddPostgresExporterParams) GetDisableCollectors() []string {
	if x != nil {
		return x.DisableCollectors
	}
	return nil
}

func (x *AddPostgresExporterParams) GetTlsCa() string {
	if x != nil {
		return x.TlsCa
	}
	return ""
}

func (x *AddPostgresExporterParams) GetTlsCert() string {
	if x != nil {
		return x.TlsCert
	}
	return ""
}

func (x *AddPostgresExporterParams) GetTlsKey() string {
	if x != nil {
		return x.TlsKey
	}
	return ""
}

func (x *AddPostgresExporterParams) GetAgentPassword() string {
	if x != nil {
		return x.AgentPassword
	}
	return ""
}

func (x *AddPostgresExporterParams) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *AddPostgresExporterParams) GetAutoDiscoveryLimit() int32 {
	if x != nil {
		return x.AutoDiscoveryLimit
	}
	return 0
}

func (x *AddPostgresExporterParams) GetExposeExporter() bool {
	if x != nil {
		return x.ExposeExporter
	}
	return false
}

func (x *AddPostgresExporterParams) GetMaxExporterConnections() int32 {
	if x != nil {
		return x.MaxExporterConnections
	}
	return 0
}

type ChangePostgresExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangePostgresExporterParams) Reset() {
	*x = ChangePostgresExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangePostgresExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangePostgresExporterParams) ProtoMessage() {}

func (x *ChangePostgresExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangePostgresExporterParams.ProtoReflect.Descriptor instead.
func (*ChangePostgresExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{36}
}

func (x *ChangePostgresExporterParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangePostgresExporterParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangePostgresExporterParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangePostgresExporterParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type AddProxySQLExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// ProxySQL username for scraping metrics.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// ProxySQL password for scraping metrics.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,5,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,6,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,7,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Skip connection check.
	SkipConnectionCheck bool `protobuf:"varint,8,opt,name=skip_connection_check,json=skipConnectionCheck,proto3" json:"skip_connection_check,omitempty"`
	// Enables push metrics mode for exporter.
	PushMetrics bool `protobuf:"varint,9,opt,name=push_metrics,json=pushMetrics,proto3" json:"push_metrics,omitempty"`
	// List of collector names to disable in this exporter.
	DisableCollectors []string `protobuf:"bytes,10,rep,name=disable_collectors,json=disableCollectors,proto3" json:"disable_collectors,omitempty"`
	// Custom password for exporter endpoint /metrics.
	AgentPassword string `protobuf:"bytes,11,opt,name=agent_password,json=agentPassword,proto3" json:"agent_password,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,12,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Optionally expose the exporter process on all public interfaces
	ExposeExporter bool `protobuf:"varint,13,opt,name=expose_exporter,json=exposeExporter,proto3" json:"expose_exporter,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddProxySQLExporterParams) Reset() {
	*x = AddProxySQLExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddProxySQLExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProxySQLExporterParams) ProtoMessage() {}

func (x *AddProxySQLExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProxySQLExporterParams.ProtoReflect.Descriptor instead.
func (*AddProxySQLExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{37}
}

func (x *AddProxySQLExporterParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *AddProxySQLExporterParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AddProxySQLExporterParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddProxySQLExporterParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddProxySQLExporterParams) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *AddProxySQLExporterParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *AddProxySQLExporterParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddProxySQLExporterParams) GetSkipConnectionCheck() bool {
	if x != nil {
		return x.SkipConnectionCheck
	}
	return false
}

func (x *AddProxySQLExporterParams) GetPushMetrics() bool {
	if x != nil {
		return x.PushMetrics
	}
	return false
}

func (x *AddProxySQLExporterParams) GetDisableCollectors() []string {
	if x != nil {
		return x.DisableCollectors
	}
	return nil
}

func (x *AddProxySQLExporterParams) GetAgentPassword() string {
	if x != nil {
		return x.AgentPassword
	}
	return ""
}

func (x *AddProxySQLExporterParams) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *AddProxySQLExporterParams) GetExposeExporter() bool {
	if x != nil {
		return x.ExposeExporter
	}
	return false
}

type ChangeProxySQLExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeProxySQLExporterParams) Reset() {
	*x = ChangeProxySQLExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeProxySQLExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeProxySQLExporterParams) ProtoMessage() {}

func (x *ChangeProxySQLExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeProxySQLExporterParams.ProtoReflect.Descriptor instead.
func (*ChangeProxySQLExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{38}
}

func (x *ChangeProxySQLExporterParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangeProxySQLExporterParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangeProxySQLExporterParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangeProxySQLExporterParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type AddQANMySQLPerfSchemaAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// MySQL username for getting performance data.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// MySQL password for getting performance data.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,5,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,6,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Certificate Authority certificate chain.
	TlsCa string `protobuf:"bytes,7,opt,name=tls_ca,json=tlsCa,proto3" json:"tls_ca,omitempty"`
	// Client certificate.
	TlsCert string `protobuf:"bytes,8,opt,name=tls_cert,json=tlsCert,proto3" json:"tls_cert,omitempty"`
	// Password for decrypting tls_cert.
	TlsKey string `protobuf:"bytes,9,opt,name=tls_key,json=tlsKey,proto3" json:"tls_key,omitempty"`
	// Limit query length in QAN (default: server-defined; -1: no limit)
	MaxQueryLength int32 `protobuf:"varint,10,opt,name=max_query_length,json=maxQueryLength,proto3" json:"max_query_length,omitempty"`
	// Disable query examples.
	DisableQueryExamples bool `protobuf:"varint,11,opt,name=disable_query_examples,json=disableQueryExamples,proto3" json:"disable_query_examples,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,12,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Skip connection check.
	SkipConnectionCheck bool `protobuf:"varint,13,opt,name=skip_connection_check,json=skipConnectionCheck,proto3" json:"skip_connection_check,omitempty"`
	// Disable parsing comments from queries and showing them in QAN.
	DisableCommentsParsing bool `protobuf:"varint,14,opt,name=disable_comments_parsing,json=disableCommentsParsing,proto3" json:"disable_comments_parsing,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,15,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Extra DSN parameters for MySQL connection.
	ExtraDsnParams map[string]string `protobuf:"bytes,16,rep,name=extra_dsn_params,json=extraDsnParams,proto3" json:"extra_dsn_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddQANMySQLPerfSchemaAgentParams) Reset() {
	*x = AddQANMySQLPerfSchemaAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddQANMySQLPerfSchemaAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddQANMySQLPerfSchemaAgentParams) ProtoMessage() {}

func (x *AddQANMySQLPerfSchemaAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddQANMySQLPerfSchemaAgentParams.ProtoReflect.Descriptor instead.
func (*AddQANMySQLPerfSchemaAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{39}
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetTlsCa() string {
	if x != nil {
		return x.TlsCa
	}
	return ""
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetTlsCert() string {
	if x != nil {
		return x.TlsCert
	}
	return ""
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetTlsKey() string {
	if x != nil {
		return x.TlsKey
	}
	return ""
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetMaxQueryLength() int32 {
	if x != nil {
		return x.MaxQueryLength
	}
	return 0
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetDisableQueryExamples() bool {
	if x != nil {
		return x.DisableQueryExamples
	}
	return false
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetSkipConnectionCheck() bool {
	if x != nil {
		return x.SkipConnectionCheck
	}
	return false
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetDisableCommentsParsing() bool {
	if x != nil {
		return x.DisableCommentsParsing
	}
	return false
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *AddQANMySQLPerfSchemaAgentParams) GetExtraDsnParams() map[string]string {
	if x != nil {
		return x.ExtraDsnParams
	}
	return nil
}

type ChangeQANMySQLPerfSchemaAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeQANMySQLPerfSchemaAgentParams) Reset() {
	*x = ChangeQANMySQLPerfSchemaAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeQANMySQLPerfSchemaAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeQANMySQLPerfSchemaAgentParams) ProtoMessage() {}

func (x *ChangeQANMySQLPerfSchemaAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeQANMySQLPerfSchemaAgentParams.ProtoReflect.Descriptor instead.
func (*ChangeQANMySQLPerfSchemaAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{40}
}

func (x *ChangeQANMySQLPerfSchemaAgentParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangeQANMySQLPerfSchemaAgentParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangeQANMySQLPerfSchemaAgentParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangeQANMySQLPerfSchemaAgentParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type AddQANMySQLSlowlogAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// MySQL username for getting slowlog data.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// MySQL password for getting slowlog data.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,5,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,6,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Certificate Authority certificate chain.
	TlsCa string `protobuf:"bytes,7,opt,name=tls_ca,json=tlsCa,proto3" json:"tls_ca,omitempty"`
	// Client certificate.
	TlsCert string `protobuf:"bytes,8,opt,name=tls_cert,json=tlsCert,proto3" json:"tls_cert,omitempty"`
	// Password for decrypting tls_cert.
	TlsKey string `protobuf:"bytes,9,opt,name=tls_key,json=tlsKey,proto3" json:"tls_key,omitempty"`
	// Limit query length in QAN (default: server-defined; -1: no limit).
	MaxQueryLength int32 `protobuf:"varint,10,opt,name=max_query_length,json=maxQueryLength,proto3" json:"max_query_length,omitempty"`
	// Disable query examples.
	DisableQueryExamples bool `protobuf:"varint,11,opt,name=disable_query_examples,json=disableQueryExamples,proto3" json:"disable_query_examples,omitempty"`
	// Rotate slowlog file at this size if > 0.
	// Use zero or negative value to disable rotation.
	MaxSlowlogFileSize int64 `protobuf:"varint,12,opt,name=max_slowlog_file_size,json=maxSlowlogFileSize,proto3" json:"max_slowlog_file_size,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,13,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Skip connection check.
	SkipConnectionCheck bool `protobuf:"varint,14,opt,name=skip_connection_check,json=skipConnectionCheck,proto3" json:"skip_connection_check,omitempty"`
	// Disable parsing comments from queries and showing them in QAN.
	DisableCommentsParsing bool `protobuf:"varint,15,opt,name=disable_comments_parsing,json=disableCommentsParsing,proto3" json:"disable_comments_parsing,omitempty"`
	// Log level for exporter.
	LogLevel LogLevel `protobuf:"varint,16,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	// Extra DSN parameters for MySQL connection.
	ExtraDsnParams map[string]string `protobuf:"bytes,17,rep,name=extra_dsn_params,json=extraDsnParams,proto3" json:"extra_dsn_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AddQANMySQLSlowlogAgentParams) Reset() {
	*x = AddQANMySQLSlowlogAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddQANMySQLSlowlogAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddQANMySQLSlowlogAgentParams) ProtoMessage() {}

func (x *AddQANMySQLSlowlogAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddQANMySQLSlowlogAgentParams.ProtoReflect.Descriptor instead.
func (*AddQANMySQLSlowlogAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{41}
}

func (x *AddQANMySQLSlowlogAgentParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *AddQANMySQLSlowlogAgentParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AddQANMySQLSlowlogAgentParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddQANMySQLSlowlogAgentParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddQANMySQLSlowlogAgentParams) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *AddQANMySQLSlowlogAgentParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *AddQANMySQLSlowlogAgentParams) GetTlsCa() string {
	if x != nil {
		return x.TlsCa
	}
	return ""
}

func (x *AddQANMySQLSlowlogAgentParams) GetTlsCert() string {
	if x != nil {
		return x.TlsCert
	}
	return ""
}

func (x *AddQANMySQLSlowlogAgentParams) GetTlsKey() string {
	if x != nil {
		return x.TlsKey
	}
	return ""
}

func (x *AddQANMySQLSlowlogAgentParams) GetMaxQueryLength() int32 {
	if x != nil {
		return x.MaxQueryLength
	}
	return 0
}

func (x *AddQANMySQLSlowlogAgentParams) GetDisableQueryExamples() bool {
	if x != nil {
		return x.DisableQueryExamples
	}
	return false
}

func (x *AddQANMySQLSlowlogAgentParams) GetMaxSlowlogFileSize() int64 {
	if x != nil {
		return x.MaxSlowlogFileSize
	}
	return 0
}

func (x *AddQANMySQLSlowlogAgentParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddQANMySQLSlowlogAgentParams) GetSkipConnectionCheck() bool {
	if x != nil {
		return x.SkipConnectionCheck
	}
	return false
}

func (x *AddQANMySQLSlowlogAgentParams) GetDisableCommentsParsing() bool {
	if x != nil {
		return x.DisableCommentsParsing
	}
	return false
}

func (x *AddQANMySQLSlowlogAgentParams) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *AddQANMySQLSlowlogAgentParams) GetExtraDsnParams() map[string]string {
	if x != nil {
		return x.ExtraDsnParams
	}
	return nil
}

type ChangeQANMySQLSlowlogAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeQANMySQLSlowlogAgentParams) Reset() {
	*x = ChangeQANMySQLSlowlogAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeQANMySQLSlowlogAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeQANMySQLSlowlogAgentParams) ProtoMessage() {}

func (x *ChangeQANMySQLSlowlogAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeQANMySQLSlowlogAgentParams.ProtoReflect.Descriptor instead.
func (*ChangeQANMySQLSlowlogAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{42}
}

func (x *ChangeQANMySQLSlowlogAgentParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangeQANMySQLSlowlogAgentParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangeQANMySQLSlowlogAgentParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangeQANMySQLSlowlogAgentParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type AddQANMongoDBProfilerAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// MongoDB username for getting profile data.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// MongoDB password for getting profile data.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,5,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,6,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Client certificate and key.
	TlsCertificateKey string `protobuf:"bytes,7,opt,name=tls_certificate_key,json=tlsCertificateKey,proto3" json:"tls_certificate_key,omitempty"`
	// Password for decrypting tls_certificate_key.
	TlsCertificateKeyFilePassword string `protobuf:"bytes,8,opt,name=tls_certificate_key_file_password,json=tlsCertificateKeyFilePassword,proto3" json:"tls_certificate_key_file_password,omitempty"`
	// Certificate Authority certificate chain.
	TlsCa string `protobuf:"bytes,9,opt,name=tls_ca,json=tlsCa,proto3" json:"tls_ca,omitempty"`
	// Limit query length in QAN (default: server-defined; -1: no limit).
	MaxQueryLength int32 `protobuf:"varint,10,opt,name=max_query_length,json=maxQueryLength,proto3" json:"max_query_length,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,11,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Skip connection check.
	SkipConnectionCheck bool `protobuf:"varint,12,opt,name=skip_connection_check,json=skipConnectionCheck,proto3" json:"skip_connection_check,omitempty"`
	// Authentication mechanism.
	// See https://docs.mongodb.com/manual/reference/connection-string/#mongodb-urioption-urioption.authMechanism
	// for details.
	AuthenticationMechanism string `protobuf:"bytes,13,opt,name=authentication_mechanism,json=authenticationMechanism,proto3" json:"authentication_mechanism,omitempty"`
	// Authentication database.
	AuthenticationDatabase string `protobuf:"bytes,14,opt,name=authentication_database,json=authenticationDatabase,proto3" json:"authentication_database,omitempty"`
	// Log level for exporter.
	LogLevel      LogLevel `protobuf:"varint,15,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddQANMongoDBProfilerAgentParams) Reset() {
	*x = AddQANMongoDBProfilerAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddQANMongoDBProfilerAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddQANMongoDBProfilerAgentParams) ProtoMessage() {}

func (x *AddQANMongoDBProfilerAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddQANMongoDBProfilerAgentParams.ProtoReflect.Descriptor instead.
func (*AddQANMongoDBProfilerAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{43}
}

func (x *AddQANMongoDBProfilerAgentParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *AddQANMongoDBProfilerAgentParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AddQANMongoDBProfilerAgentParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddQANMongoDBProfilerAgentParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddQANMongoDBProfilerAgentParams) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *AddQANMongoDBProfilerAgentParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *AddQANMongoDBProfilerAgentParams) GetTlsCertificateKey() string {
	if x != nil {
		return x.TlsCertificateKey
	}
	return ""
}

func (x *AddQANMongoDBProfilerAgentParams) GetTlsCertificateKeyFilePassword() string {
	if x != nil {
		return x.TlsCertificateKeyFilePassword
	}
	return ""
}

func (x *AddQANMongoDBProfilerAgentParams) GetTlsCa() string {
	if x != nil {
		return x.TlsCa
	}
	return ""
}

func (x *AddQANMongoDBProfilerAgentParams) GetMaxQueryLength() int32 {
	if x != nil {
		return x.MaxQueryLength
	}
	return 0
}

func (x *AddQANMongoDBProfilerAgentParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddQANMongoDBProfilerAgentParams) GetSkipConnectionCheck() bool {
	if x != nil {
		return x.SkipConnectionCheck
	}
	return false
}

func (x *AddQANMongoDBProfilerAgentParams) GetAuthenticationMechanism() string {
	if x != nil {
		return x.AuthenticationMechanism
	}
	return ""
}

func (x *AddQANMongoDBProfilerAgentParams) GetAuthenticationDatabase() string {
	if x != nil {
		return x.AuthenticationDatabase
	}
	return ""
}

func (x *AddQANMongoDBProfilerAgentParams) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

type ChangeQANMongoDBProfilerAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeQANMongoDBProfilerAgentParams) Reset() {
	*x = ChangeQANMongoDBProfilerAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeQANMongoDBProfilerAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeQANMongoDBProfilerAgentParams) ProtoMessage() {}

func (x *ChangeQANMongoDBProfilerAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeQANMongoDBProfilerAgentParams.ProtoReflect.Descriptor instead.
func (*ChangeQANMongoDBProfilerAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{44}
}

func (x *ChangeQANMongoDBProfilerAgentParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangeQANMongoDBProfilerAgentParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangeQANMongoDBProfilerAgentParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangeQANMongoDBProfilerAgentParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type AddQANMongoDBMongologAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// MongoDB username for getting profile data.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// MongoDB password for getting profile data.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,5,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,6,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Client certificate and key.
	TlsCertificateKey string `protobuf:"bytes,7,opt,name=tls_certificate_key,json=tlsCertificateKey,proto3" json:"tls_certificate_key,omitempty"`
	// Password for decrypting tls_certificate_key.
	TlsCertificateKeyFilePassword string `protobuf:"bytes,8,opt,name=tls_certificate_key_file_password,json=tlsCertificateKeyFilePassword,proto3" json:"tls_certificate_key_file_password,omitempty"`
	// Certificate Authority certificate chain.
	TlsCa string `protobuf:"bytes,9,opt,name=tls_ca,json=tlsCa,proto3" json:"tls_ca,omitempty"`
	// Limit query length in QAN (default: server-defined; -1: no limit).
	MaxQueryLength int32 `protobuf:"varint,10,opt,name=max_query_length,json=maxQueryLength,proto3" json:"max_query_length,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,11,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Skip connection check.
	SkipConnectionCheck bool `protobuf:"varint,12,opt,name=skip_connection_check,json=skipConnectionCheck,proto3" json:"skip_connection_check,omitempty"`
	// Authentication mechanism.
	// See https://docs.mongodb.com/manual/reference/connection-string/#mongodb-urioption-urioption.authMechanism
	// for details.
	AuthenticationMechanism string `protobuf:"bytes,13,opt,name=authentication_mechanism,json=authenticationMechanism,proto3" json:"authentication_mechanism,omitempty"`
	// Authentication database.
	AuthenticationDatabase string `protobuf:"bytes,14,opt,name=authentication_database,json=authenticationDatabase,proto3" json:"authentication_database,omitempty"`
	// Log level for exporter.
	LogLevel      LogLevel `protobuf:"varint,15,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddQANMongoDBMongologAgentParams) Reset() {
	*x = AddQANMongoDBMongologAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddQANMongoDBMongologAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddQANMongoDBMongologAgentParams) ProtoMessage() {}

func (x *AddQANMongoDBMongologAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddQANMongoDBMongologAgentParams.ProtoReflect.Descriptor instead.
func (*AddQANMongoDBMongologAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{45}
}

func (x *AddQANMongoDBMongologAgentParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *AddQANMongoDBMongologAgentParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AddQANMongoDBMongologAgentParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddQANMongoDBMongologAgentParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddQANMongoDBMongologAgentParams) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *AddQANMongoDBMongologAgentParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *AddQANMongoDBMongologAgentParams) GetTlsCertificateKey() string {
	if x != nil {
		return x.TlsCertificateKey
	}
	return ""
}

func (x *AddQANMongoDBMongologAgentParams) GetTlsCertificateKeyFilePassword() string {
	if x != nil {
		return x.TlsCertificateKeyFilePassword
	}
	return ""
}

func (x *AddQANMongoDBMongologAgentParams) GetTlsCa() string {
	if x != nil {
		return x.TlsCa
	}
	return ""
}

func (x *AddQANMongoDBMongologAgentParams) GetMaxQueryLength() int32 {
	if x != nil {
		return x.MaxQueryLength
	}
	return 0
}

func (x *AddQANMongoDBMongologAgentParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddQANMongoDBMongologAgentParams) GetSkipConnectionCheck() bool {
	if x != nil {
		return x.SkipConnectionCheck
	}
	return false
}

func (x *AddQANMongoDBMongologAgentParams) GetAuthenticationMechanism() string {
	if x != nil {
		return x.AuthenticationMechanism
	}
	return ""
}

func (x *AddQANMongoDBMongologAgentParams) GetAuthenticationDatabase() string {
	if x != nil {
		return x.AuthenticationDatabase
	}
	return ""
}

func (x *AddQANMongoDBMongologAgentParams) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

type ChangeQANMongoDBMongologAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeQANMongoDBMongologAgentParams) Reset() {
	*x = ChangeQANMongoDBMongologAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeQANMongoDBMongologAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeQANMongoDBMongologAgentParams) ProtoMessage() {}

func (x *ChangeQANMongoDBMongologAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeQANMongoDBMongologAgentParams.ProtoReflect.Descriptor instead.
func (*ChangeQANMongoDBMongologAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{46}
}

func (x *ChangeQANMongoDBMongologAgentParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangeQANMongoDBMongologAgentParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangeQANMongoDBMongologAgentParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangeQANMongoDBMongologAgentParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type AddQANPostgreSQLPgStatementsAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// PostgreSQL username for getting pg stat statements data.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// PostgreSQL password for getting pg stat statements data.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,5,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,6,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,7,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Skip connection check.
	SkipConnectionCheck bool `protobuf:"varint,8,opt,name=skip_connection_check,json=skipConnectionCheck,proto3" json:"skip_connection_check,omitempty"`
	// Disable parsing comments from queries and showing them in QAN.
	DisableCommentsParsing bool `protobuf:"varint,9,opt,name=disable_comments_parsing,json=disableCommentsParsing,proto3" json:"disable_comments_parsing,omitempty"`
	// Limit query length in QAN (default: server-defined; -1: no limit).
	MaxQueryLength int32 `protobuf:"varint,10,opt,name=max_query_length,json=maxQueryLength,proto3" json:"max_query_length,omitempty"`
	// TLS CA certificate.
	TlsCa string `protobuf:"bytes,11,opt,name=tls_ca,json=tlsCa,proto3" json:"tls_ca,omitempty"`
	// TLS Certifcate.
	TlsCert string `protobuf:"bytes,12,opt,name=tls_cert,json=tlsCert,proto3" json:"tls_cert,omitempty"`
	// TLS Certificate Key.
	TlsKey string `protobuf:"bytes,13,opt,name=tls_key,json=tlsKey,proto3" json:"tls_key,omitempty"`
	// Log level for exporter.
	LogLevel      LogLevel `protobuf:"varint,14,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) Reset() {
	*x = AddQANPostgreSQLPgStatementsAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddQANPostgreSQLPgStatementsAgentParams) ProtoMessage() {}

func (x *AddQANPostgreSQLPgStatementsAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddQANPostgreSQLPgStatementsAgentParams.ProtoReflect.Descriptor instead.
func (*AddQANPostgreSQLPgStatementsAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{47}
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) GetSkipConnectionCheck() bool {
	if x != nil {
		return x.SkipConnectionCheck
	}
	return false
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) GetDisableCommentsParsing() bool {
	if x != nil {
		return x.DisableCommentsParsing
	}
	return false
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) GetMaxQueryLength() int32 {
	if x != nil {
		return x.MaxQueryLength
	}
	return 0
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) GetTlsCa() string {
	if x != nil {
		return x.TlsCa
	}
	return ""
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) GetTlsCert() string {
	if x != nil {
		return x.TlsCert
	}
	return ""
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) GetTlsKey() string {
	if x != nil {
		return x.TlsKey
	}
	return ""
}

func (x *AddQANPostgreSQLPgStatementsAgentParams) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

type ChangeQANPostgreSQLPgStatementsAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeQANPostgreSQLPgStatementsAgentParams) Reset() {
	*x = ChangeQANPostgreSQLPgStatementsAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeQANPostgreSQLPgStatementsAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeQANPostgreSQLPgStatementsAgentParams) ProtoMessage() {}

func (x *ChangeQANPostgreSQLPgStatementsAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeQANPostgreSQLPgStatementsAgentParams.ProtoReflect.Descriptor instead.
func (*ChangeQANPostgreSQLPgStatementsAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{48}
}

func (x *ChangeQANPostgreSQLPgStatementsAgentParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangeQANPostgreSQLPgStatementsAgentParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangeQANPostgreSQLPgStatementsAgentParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangeQANPostgreSQLPgStatementsAgentParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type AddQANPostgreSQLPgStatMonitorAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// PostgreSQL username for getting pg stat monitor data.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// PostgreSQL password for getting pg stat monitor data.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Use TLS for database connections.
	Tls bool `protobuf:"varint,5,opt,name=tls,proto3" json:"tls,omitempty"`
	// Skip TLS certificate and hostname validation.
	TlsSkipVerify bool `protobuf:"varint,6,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	// Limit query length in QAN (default: server-defined; -1: no limit).
	MaxQueryLength int32 `protobuf:"varint,7,opt,name=max_query_length,json=maxQueryLength,proto3" json:"max_query_length,omitempty"`
	// Disable query examples.
	DisableQueryExamples bool `protobuf:"varint,8,opt,name=disable_query_examples,json=disableQueryExamples,proto3" json:"disable_query_examples,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,9,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Skip connection check.
	SkipConnectionCheck bool `protobuf:"varint,10,opt,name=skip_connection_check,json=skipConnectionCheck,proto3" json:"skip_connection_check,omitempty"`
	// Disable parsing comments from queries and showing them in QAN.
	DisableCommentsParsing bool `protobuf:"varint,11,opt,name=disable_comments_parsing,json=disableCommentsParsing,proto3" json:"disable_comments_parsing,omitempty"`
	// TLS CA certificate.
	TlsCa string `protobuf:"bytes,12,opt,name=tls_ca,json=tlsCa,proto3" json:"tls_ca,omitempty"`
	// TLS Certifcate.
	TlsCert string `protobuf:"bytes,13,opt,name=tls_cert,json=tlsCert,proto3" json:"tls_cert,omitempty"`
	// TLS Certificate Key.
	TlsKey string `protobuf:"bytes,14,opt,name=tls_key,json=tlsKey,proto3" json:"tls_key,omitempty"`
	// Log level for exporter.
	LogLevel      LogLevel `protobuf:"varint,15,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) Reset() {
	*x = AddQANPostgreSQLPgStatMonitorAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddQANPostgreSQLPgStatMonitorAgentParams) ProtoMessage() {}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddQANPostgreSQLPgStatMonitorAgentParams.ProtoReflect.Descriptor instead.
func (*AddQANPostgreSQLPgStatMonitorAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{49}
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetMaxQueryLength() int32 {
	if x != nil {
		return x.MaxQueryLength
	}
	return 0
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetDisableQueryExamples() bool {
	if x != nil {
		return x.DisableQueryExamples
	}
	return false
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetSkipConnectionCheck() bool {
	if x != nil {
		return x.SkipConnectionCheck
	}
	return false
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetDisableCommentsParsing() bool {
	if x != nil {
		return x.DisableCommentsParsing
	}
	return false
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetTlsCa() string {
	if x != nil {
		return x.TlsCa
	}
	return ""
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetTlsCert() string {
	if x != nil {
		return x.TlsCert
	}
	return ""
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetTlsKey() string {
	if x != nil {
		return x.TlsKey
	}
	return ""
}

func (x *AddQANPostgreSQLPgStatMonitorAgentParams) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

type ChangeQANPostgreSQLPgStatMonitorAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeQANPostgreSQLPgStatMonitorAgentParams) Reset() {
	*x = ChangeQANPostgreSQLPgStatMonitorAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeQANPostgreSQLPgStatMonitorAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeQANPostgreSQLPgStatMonitorAgentParams) ProtoMessage() {}

func (x *ChangeQANPostgreSQLPgStatMonitorAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeQANPostgreSQLPgStatMonitorAgentParams.ProtoReflect.Descriptor instead.
func (*ChangeQANPostgreSQLPgStatMonitorAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{50}
}

func (x *ChangeQANPostgreSQLPgStatMonitorAgentParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangeQANPostgreSQLPgStatMonitorAgentParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangeQANPostgreSQLPgStatMonitorAgentParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangeQANPostgreSQLPgStatMonitorAgentParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type AddRDSExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Node identifier.
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// AWS Access Key.
	AwsAccessKey string `protobuf:"bytes,3,opt,name=aws_access_key,json=awsAccessKey,proto3" json:"aws_access_key,omitempty"`
	// AWS Secret Key.
	AwsSecretKey string `protobuf:"bytes,4,opt,name=aws_secret_key,json=awsSecretKey,proto3" json:"aws_secret_key,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,5,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Skip connection check.
	SkipConnectionCheck bool `protobuf:"varint,6,opt,name=skip_connection_check,json=skipConnectionCheck,proto3" json:"skip_connection_check,omitempty"`
	// Disable basic metrics.
	DisableBasicMetrics bool `protobuf:"varint,7,opt,name=disable_basic_metrics,json=disableBasicMetrics,proto3" json:"disable_basic_metrics,omitempty"`
	// Disable enhanced metrics.
	DisableEnhancedMetrics bool `protobuf:"varint,8,opt,name=disable_enhanced_metrics,json=disableEnhancedMetrics,proto3" json:"disable_enhanced_metrics,omitempty"`
	// Enables push metrics mode for exporter.
	PushMetrics bool `protobuf:"varint,9,opt,name=push_metrics,json=pushMetrics,proto3" json:"push_metrics,omitempty"`
	// Log level for exporter.
	LogLevel      LogLevel `protobuf:"varint,10,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRDSExporterParams) Reset() {
	*x = AddRDSExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRDSExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRDSExporterParams) ProtoMessage() {}

func (x *AddRDSExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRDSExporterParams.ProtoReflect.Descriptor instead.
func (*AddRDSExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{51}
}

func (x *AddRDSExporterParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *AddRDSExporterParams) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *AddRDSExporterParams) GetAwsAccessKey() string {
	if x != nil {
		return x.AwsAccessKey
	}
	return ""
}

func (x *AddRDSExporterParams) GetAwsSecretKey() string {
	if x != nil {
		return x.AwsSecretKey
	}
	return ""
}

func (x *AddRDSExporterParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddRDSExporterParams) GetSkipConnectionCheck() bool {
	if x != nil {
		return x.SkipConnectionCheck
	}
	return false
}

func (x *AddRDSExporterParams) GetDisableBasicMetrics() bool {
	if x != nil {
		return x.DisableBasicMetrics
	}
	return false
}

func (x *AddRDSExporterParams) GetDisableEnhancedMetrics() bool {
	if x != nil {
		return x.DisableEnhancedMetrics
	}
	return false
}

func (x *AddRDSExporterParams) GetPushMetrics() bool {
	if x != nil {
		return x.PushMetrics
	}
	return false
}

func (x *AddRDSExporterParams) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

type ChangeRDSExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeRDSExporterParams) Reset() {
	*x = ChangeRDSExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeRDSExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeRDSExporterParams) ProtoMessage() {}

func (x *ChangeRDSExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeRDSExporterParams.ProtoReflect.Descriptor instead.
func (*ChangeRDSExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{52}
}

func (x *ChangeRDSExporterParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangeRDSExporterParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangeRDSExporterParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangeRDSExporterParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type AddExternalExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The node identifier where this instance is run.
	RunsOnNodeId string `protobuf:"bytes,1,opt,name=runs_on_node_id,json=runsOnNodeId,proto3" json:"runs_on_node_id,omitempty"`
	// Service identifier.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// HTTP basic auth username for collecting metrics.
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	// HTTP basic auth password for collecting metrics.
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	// Scheme to generate URI to exporter metrics endpoints(default: http).
	Scheme string `protobuf:"bytes,6,opt,name=scheme,proto3" json:"scheme,omitempty"`
	// Path under which metrics are exposed, used to generate URI(default: /metrics).
	MetricsPath string `protobuf:"bytes,7,opt,name=metrics_path,json=metricsPath,proto3" json:"metrics_path,omitempty"`
	// Listen port for scraping metrics.
	ListenPort uint32 `protobuf:"varint,8,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,10,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Enables push metrics mode for exporter.
	PushMetrics bool `protobuf:"varint,11,opt,name=push_metrics,json=pushMetrics,proto3" json:"push_metrics,omitempty"`
	// Skip TLS certificate and hostname verification.
	TlsSkipVerify bool `protobuf:"varint,12,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddExternalExporterParams) Reset() {
	*x = AddExternalExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddExternalExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddExternalExporterParams) ProtoMessage() {}

func (x *AddExternalExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddExternalExporterParams.ProtoReflect.Descriptor instead.
func (*AddExternalExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{53}
}

func (x *AddExternalExporterParams) GetRunsOnNodeId() string {
	if x != nil {
		return x.RunsOnNodeId
	}
	return ""
}

func (x *AddExternalExporterParams) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *AddExternalExporterParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddExternalExporterParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AddExternalExporterParams) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *AddExternalExporterParams) GetMetricsPath() string {
	if x != nil {
		return x.MetricsPath
	}
	return ""
}

func (x *AddExternalExporterParams) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *AddExternalExporterParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddExternalExporterParams) GetPushMetrics() bool {
	if x != nil {
		return x.PushMetrics
	}
	return false
}

func (x *AddExternalExporterParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

type ChangeExternalExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeExternalExporterParams) Reset() {
	*x = ChangeExternalExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeExternalExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeExternalExporterParams) ProtoMessage() {}

func (x *ChangeExternalExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeExternalExporterParams.ProtoReflect.Descriptor instead.
func (*ChangeExternalExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{54}
}

func (x *ChangeExternalExporterParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangeExternalExporterParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangeExternalExporterParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangeExternalExporterParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type AddAzureDatabaseExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The pmm-agent identifier which runs this instance.
	PmmAgentId string `protobuf:"bytes,1,opt,name=pmm_agent_id,json=pmmAgentId,proto3" json:"pmm_agent_id,omitempty"`
	// Node identifier.
	NodeId string `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Azure client ID
	AzureClientId string `protobuf:"bytes,3,opt,name=azure_client_id,json=azureClientId,proto3" json:"azure_client_id,omitempty"`
	// Azure client secret
	AzureClientSecret string `protobuf:"bytes,4,opt,name=azure_client_secret,json=azureClientSecret,proto3" json:"azure_client_secret,omitempty"`
	// Azure tanant ID
	AzureTenantId string `protobuf:"bytes,5,opt,name=azure_tenant_id,json=azureTenantId,proto3" json:"azure_tenant_id,omitempty"`
	// Azure subscription ID
	AzureSubscriptionId string `protobuf:"bytes,6,opt,name=azure_subscription_id,json=azureSubscriptionId,proto3" json:"azure_subscription_id,omitempty"`
	// Azure resource group.
	AzureResourceGroup string `protobuf:"bytes,7,opt,name=azure_resource_group,json=azureResourceGroup,proto3" json:"azure_resource_group,omitempty"`
	// Azure resource type (mysql, maria, postgres)
	AzureDatabaseResourceType string `protobuf:"bytes,8,opt,name=azure_database_resource_type,json=azureDatabaseResourceType,proto3" json:"azure_database_resource_type,omitempty"`
	// Custom user-assigned labels.
	CustomLabels map[string]string `protobuf:"bytes,9,rep,name=custom_labels,json=customLabels,proto3" json:"custom_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Skip connection check.
	SkipConnectionCheck bool `protobuf:"varint,10,opt,name=skip_connection_check,json=skipConnectionCheck,proto3" json:"skip_connection_check,omitempty"`
	// Enables push metrics mode for exporter.
	PushMetrics bool `protobuf:"varint,11,opt,name=push_metrics,json=pushMetrics,proto3" json:"push_metrics,omitempty"`
	// Log level for exporter.
	LogLevel      LogLevel `protobuf:"varint,12,opt,name=log_level,json=logLevel,proto3,enum=inventory.v1.LogLevel" json:"log_level,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddAzureDatabaseExporterParams) Reset() {
	*x = AddAzureDatabaseExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddAzureDatabaseExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAzureDatabaseExporterParams) ProtoMessage() {}

func (x *AddAzureDatabaseExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAzureDatabaseExporterParams.ProtoReflect.Descriptor instead.
func (*AddAzureDatabaseExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{55}
}

func (x *AddAzureDatabaseExporterParams) GetPmmAgentId() string {
	if x != nil {
		return x.PmmAgentId
	}
	return ""
}

func (x *AddAzureDatabaseExporterParams) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *AddAzureDatabaseExporterParams) GetAzureClientId() string {
	if x != nil {
		return x.AzureClientId
	}
	return ""
}

func (x *AddAzureDatabaseExporterParams) GetAzureClientSecret() string {
	if x != nil {
		return x.AzureClientSecret
	}
	return ""
}

func (x *AddAzureDatabaseExporterParams) GetAzureTenantId() string {
	if x != nil {
		return x.AzureTenantId
	}
	return ""
}

func (x *AddAzureDatabaseExporterParams) GetAzureSubscriptionId() string {
	if x != nil {
		return x.AzureSubscriptionId
	}
	return ""
}

func (x *AddAzureDatabaseExporterParams) GetAzureResourceGroup() string {
	if x != nil {
		return x.AzureResourceGroup
	}
	return ""
}

func (x *AddAzureDatabaseExporterParams) GetAzureDatabaseResourceType() string {
	if x != nil {
		return x.AzureDatabaseResourceType
	}
	return ""
}

func (x *AddAzureDatabaseExporterParams) GetCustomLabels() map[string]string {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *AddAzureDatabaseExporterParams) GetSkipConnectionCheck() bool {
	if x != nil {
		return x.SkipConnectionCheck
	}
	return false
}

func (x *AddAzureDatabaseExporterParams) GetPushMetrics() bool {
	if x != nil {
		return x.PushMetrics
	}
	return false
}

func (x *AddAzureDatabaseExporterParams) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

type ChangeAzureDatabaseExporterParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	// Replace all custom user-assigned labels.
	CustomLabels *common.StringMap `protobuf:"bytes,2,opt,name=custom_labels,json=customLabels,proto3,oneof" json:"custom_labels,omitempty"`
	// Enables push metrics with vmagent.
	EnablePushMetrics *bool `protobuf:"varint,3,opt,name=enable_push_metrics,json=enablePushMetrics,proto3,oneof" json:"enable_push_metrics,omitempty"`
	// Metrics resolution for this agent.
	MetricsResolutions *common.MetricsResolutions `protobuf:"bytes,4,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ChangeAzureDatabaseExporterParams) Reset() {
	*x = ChangeAzureDatabaseExporterParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeAzureDatabaseExporterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeAzureDatabaseExporterParams) ProtoMessage() {}

func (x *ChangeAzureDatabaseExporterParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeAzureDatabaseExporterParams.ProtoReflect.Descriptor instead.
func (*ChangeAzureDatabaseExporterParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{56}
}

func (x *ChangeAzureDatabaseExporterParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

func (x *ChangeAzureDatabaseExporterParams) GetCustomLabels() *common.StringMap {
	if x != nil {
		return x.CustomLabels
	}
	return nil
}

func (x *ChangeAzureDatabaseExporterParams) GetEnablePushMetrics() bool {
	if x != nil && x.EnablePushMetrics != nil {
		return *x.EnablePushMetrics
	}
	return false
}

func (x *ChangeAzureDatabaseExporterParams) GetMetricsResolutions() *common.MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

type ChangeNomadAgentParams struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Enable this Agent. Agents are enabled by default when they get added.
	Enable        *bool `protobuf:"varint,1,opt,name=enable,proto3,oneof" json:"enable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeNomadAgentParams) Reset() {
	*x = ChangeNomadAgentParams{}
	mi := &file_inventory_v1_agents_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeNomadAgentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeNomadAgentParams) ProtoMessage() {}

func (x *ChangeNomadAgentParams) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeNomadAgentParams.ProtoReflect.Descriptor instead.
func (*ChangeNomadAgentParams) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{57}
}

func (x *ChangeNomadAgentParams) GetEnable() bool {
	if x != nil && x.Enable != nil {
		return *x.Enable
	}
	return false
}

type RemoveAgentRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	AgentId string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	// Remove agent with all dependencies.
	Force         bool `protobuf:"varint,2,opt,name=force,proto3" json:"force,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAgentRequest) Reset() {
	*x = RemoveAgentRequest{}
	mi := &file_inventory_v1_agents_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAgentRequest) ProtoMessage() {}

func (x *RemoveAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAgentRequest.ProtoReflect.Descriptor instead.
func (*RemoveAgentRequest) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{58}
}

func (x *RemoveAgentRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *RemoveAgentRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type RemoveAgentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveAgentResponse) Reset() {
	*x = RemoveAgentResponse{}
	mi := &file_inventory_v1_agents_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveAgentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveAgentResponse) ProtoMessage() {}

func (x *RemoveAgentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_inventory_v1_agents_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveAgentResponse.ProtoReflect.Descriptor instead.
func (*RemoveAgentResponse) Descriptor() ([]byte, []int) {
	return file_inventory_v1_agents_proto_rawDescGZIP(), []int{59}
}

var File_inventory_v1_agents_proto protoreflect.FileDescriptor

const file_inventory_v1_agents_proto_rawDesc = "" +
	"\n" +
	"\x19inventory/v1/agents.proto\x12\finventory.v1\x1a\x13common/common.proto\x1a common/metrics_resolutions.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1finventory/v1/agent_status.proto\x1a\x1cinventory/v1/log_level.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x17validate/validate.proto\"\xa6\x02\n" +
	"\bPMMAgent\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12%\n" +
	"\x0fruns_on_node_id\x18\x02 \x01(\tR\frunsOnNodeId\x12M\n" +
	"\rcustom_labels\x18\x03 \x03(\v2(.inventory.v1.PMMAgent.CustomLabelsEntryR\fcustomLabels\x12\x1c\n" +
	"\tconnected\x18\n" +
	" \x01(\bR\tconnected\x12*\n" +
	"\x11process_exec_path\x18\v \x01(\tR\x0fprocessExecPath\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc6\x01\n" +
	"\aVMAgent\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x121\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12*\n" +
	"\x11process_exec_path\x18\v \x01(\tR\x0fprocessExecPath\x12\x1f\n" +
	"\vlisten_port\x18\f \x01(\rR\n" +
	"listenPort\"\xeb\x01\n" +
	"\n" +
	"NomadAgent\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x121\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12*\n" +
	"\x11process_exec_path\x18\v \x01(\tR\x0fprocessExecPath\x12\x1f\n" +
	"\vlisten_port\x18\f \x01(\rR\n" +
	"listenPortJ\x04\b\x04\x10\x05\"\x89\x05\n" +
	"\fNodeExporter\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x12Q\n" +
	"\rcustom_labels\x18\x04 \x03(\v2,.inventory.v1.NodeExporter.CustomLabelsEntryR\fcustomLabels\x120\n" +
	"\x14push_metrics_enabled\x18\x05 \x01(\bR\x12pushMetricsEnabled\x12/\n" +
	"\x13disabled_collectors\x18\x06 \x03(\tR\x12disabledCollectors\x121\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12\x1f\n" +
	"\vlisten_port\x18\v \x01(\rR\n" +
	"listenPort\x12*\n" +
	"\x11process_exec_path\x18\f \x01(\tR\x0fprocessExecPath\x123\n" +
	"\tlog_level\x18\r \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x12'\n" +
	"\x0fexpose_exporter\x18\x0e \x01(\bR\x0eexposeExporter\x12K\n" +
	"\x13metrics_resolutions\x18\x0f \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutions\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8a\t\n" +
	"\x0eMySQLdExporter\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x12\x1d\n" +
	"\n" +
	"service_id\x18\x04 \x01(\tR\tserviceId\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x10\n" +
	"\x03tls\x18\x06 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\a \x01(\bR\rtlsSkipVerify\x12\x15\n" +
	"\x06tls_ca\x18\b \x01(\tR\x05tlsCa\x12\x19\n" +
	"\btls_cert\x18\t \x01(\tR\atlsCert\x12\x17\n" +
	"\atls_key\x18\n" +
	" \x01(\tR\x06tlsKey\x12?\n" +
	"\x1ctablestats_group_table_limit\x18\v \x01(\x05R\x19tablestatsGroupTableLimit\x12S\n" +
	"\rcustom_labels\x18\f \x03(\v2..inventory.v1.MySQLdExporter.CustomLabelsEntryR\fcustomLabels\x120\n" +
	"\x14push_metrics_enabled\x18\r \x01(\bR\x12pushMetricsEnabled\x12/\n" +
	"\x13disabled_collectors\x18\x0e \x03(\tR\x12disabledCollectors\x12\x1f\n" +
	"\vtable_count\x18\x0f \x01(\x05R\n" +
	"tableCount\x121\n" +
	"\x06status\x18\x14 \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12\x1f\n" +
	"\vlisten_port\x18\x15 \x01(\rR\n" +
	"listenPort\x12:\n" +
	"\x19tablestats_group_disabled\x18\x16 \x01(\bR\x17tablestatsGroupDisabled\x12*\n" +
	"\x11process_exec_path\x18\x17 \x01(\tR\x0fprocessExecPath\x123\n" +
	"\tlog_level\x18\x18 \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x12'\n" +
	"\x0fexpose_exporter\x18\x19 \x01(\bR\x0eexposeExporter\x12K\n" +
	"\x13metrics_resolutions\x18\x1a \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutions\x12Z\n" +
	"\x10extra_dsn_params\x18\x1b \x03(\v20.inventory.v1.MySQLdExporter.ExtraDsnParamsEntryR\x0eextraDsnParams\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aA\n" +
	"\x13ExtraDsnParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x92\a\n" +
	"\x0fMongoDBExporter\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x12\x1d\n" +
	"\n" +
	"service_id\x18\x04 \x01(\tR\tserviceId\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x10\n" +
	"\x03tls\x18\x06 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\a \x01(\bR\rtlsSkipVerify\x12T\n" +
	"\rcustom_labels\x18\b \x03(\v2/.inventory.v1.MongoDBExporter.CustomLabelsEntryR\fcustomLabels\x120\n" +
	"\x14push_metrics_enabled\x18\t \x01(\bR\x12pushMetricsEnabled\x12/\n" +
	"\x13disabled_collectors\x18\n" +
	" \x03(\tR\x12disabledCollectors\x121\n" +
	"\x06status\x18\x14 \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12\x1f\n" +
	"\vlisten_port\x18\x15 \x01(\rR\n" +
	"listenPort\x12+\n" +
	"\x11stats_collections\x18\x16 \x03(\tR\x10statsCollections\x12+\n" +
	"\x11collections_limit\x18\x17 \x01(\x05R\x10collectionsLimit\x122\n" +
	"\x15enable_all_collectors\x18\x18 \x01(\bR\x13enableAllCollectors\x12*\n" +
	"\x11process_exec_path\x18\x19 \x01(\tR\x0fprocessExecPath\x123\n" +
	"\tlog_level\x18\x1a \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x12'\n" +
	"\x0fexpose_exporter\x18\x1b \x01(\bR\x0eexposeExporter\x12K\n" +
	"\x13metrics_resolutions\x18\x1c \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutions\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf2\x06\n" +
	"\x10PostgresExporter\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x12\x1d\n" +
	"\n" +
	"service_id\x18\x04 \x01(\tR\tserviceId\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x10\n" +
	"\x03tls\x18\x06 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\a \x01(\bR\rtlsSkipVerify\x12U\n" +
	"\rcustom_labels\x18\b \x03(\v20.inventory.v1.PostgresExporter.CustomLabelsEntryR\fcustomLabels\x120\n" +
	"\x14push_metrics_enabled\x18\t \x01(\bR\x12pushMetricsEnabled\x12/\n" +
	"\x13disabled_collectors\x18\n" +
	" \x03(\tR\x12disabledCollectors\x121\n" +
	"\x06status\x18\x14 \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12\x1f\n" +
	"\vlisten_port\x18\x15 \x01(\rR\n" +
	"listenPort\x12*\n" +
	"\x11process_exec_path\x18\x16 \x01(\tR\x0fprocessExecPath\x123\n" +
	"\tlog_level\x18\x17 \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x120\n" +
	"\x14auto_discovery_limit\x18\x18 \x01(\x05R\x12autoDiscoveryLimit\x12'\n" +
	"\x0fexpose_exporter\x18\x19 \x01(\bR\x0eexposeExporter\x128\n" +
	"\x18max_exporter_connections\x18\x1a \x01(\x05R\x16maxExporterConnections\x12K\n" +
	"\x13metrics_resolutions\x18\x1b \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutions\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x86\x06\n" +
	"\x10ProxySQLExporter\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x12\x1d\n" +
	"\n" +
	"service_id\x18\x04 \x01(\tR\tserviceId\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x10\n" +
	"\x03tls\x18\x06 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\a \x01(\bR\rtlsSkipVerify\x12U\n" +
	"\rcustom_labels\x18\b \x03(\v20.inventory.v1.ProxySQLExporter.CustomLabelsEntryR\fcustomLabels\x120\n" +
	"\x14push_metrics_enabled\x18\t \x01(\bR\x12pushMetricsEnabled\x12/\n" +
	"\x13disabled_collectors\x18\n" +
	" \x03(\tR\x12disabledCollectors\x121\n" +
	"\x06status\x18\x14 \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12\x1f\n" +
	"\vlisten_port\x18\x15 \x01(\rR\n" +
	"listenPort\x12*\n" +
	"\x11process_exec_path\x18\x16 \x01(\tR\x0fprocessExecPath\x123\n" +
	"\tlog_level\x18\x17 \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x12'\n" +
	"\x0fexpose_exporter\x18\x18 \x01(\bR\x0eexposeExporter\x12K\n" +
	"\x13metrics_resolutions\x18\x19 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutions\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa9\a\n" +
	"\x17QANMySQLPerfSchemaAgent\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x12\x1d\n" +
	"\n" +
	"service_id\x18\x04 \x01(\tR\tserviceId\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x10\n" +
	"\x03tls\x18\x06 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\a \x01(\bR\rtlsSkipVerify\x12\x15\n" +
	"\x06tls_ca\x18\b \x01(\tR\x05tlsCa\x12\x19\n" +
	"\btls_cert\x18\t \x01(\tR\atlsCert\x12\x17\n" +
	"\atls_key\x18\n" +
	" \x01(\tR\x06tlsKey\x128\n" +
	"\x18disable_comments_parsing\x18\v \x01(\bR\x16disableCommentsParsing\x12(\n" +
	"\x10max_query_length\x18\f \x01(\x05R\x0emaxQueryLength\x126\n" +
	"\x17query_examples_disabled\x18\r \x01(\bR\x15queryExamplesDisabled\x12\\\n" +
	"\rcustom_labels\x18\x0e \x03(\v27.inventory.v1.QANMySQLPerfSchemaAgent.CustomLabelsEntryR\fcustomLabels\x121\n" +
	"\x06status\x18\x14 \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12*\n" +
	"\x11process_exec_path\x18\x15 \x01(\tR\x0fprocessExecPath\x123\n" +
	"\tlog_level\x18\x16 \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x12c\n" +
	"\x10extra_dsn_params\x18\x17 \x03(\v29.inventory.v1.QANMySQLPerfSchemaAgent.ExtraDsnParamsEntryR\x0eextraDsnParams\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aA\n" +
	"\x13ExtraDsnParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd3\a\n" +
	"\x14QANMySQLSlowlogAgent\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x12\x1d\n" +
	"\n" +
	"service_id\x18\x04 \x01(\tR\tserviceId\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x10\n" +
	"\x03tls\x18\x06 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\a \x01(\bR\rtlsSkipVerify\x12\x15\n" +
	"\x06tls_ca\x18\b \x01(\tR\x05tlsCa\x12\x19\n" +
	"\btls_cert\x18\t \x01(\tR\atlsCert\x12\x17\n" +
	"\atls_key\x18\n" +
	" \x01(\tR\x06tlsKey\x128\n" +
	"\x18disable_comments_parsing\x18\v \x01(\bR\x16disableCommentsParsing\x12(\n" +
	"\x10max_query_length\x18\f \x01(\x05R\x0emaxQueryLength\x126\n" +
	"\x17query_examples_disabled\x18\r \x01(\bR\x15queryExamplesDisabled\x121\n" +
	"\x15max_slowlog_file_size\x18\x0e \x01(\x03R\x12maxSlowlogFileSize\x12Y\n" +
	"\rcustom_labels\x18\x0f \x03(\v24.inventory.v1.QANMySQLSlowlogAgent.CustomLabelsEntryR\fcustomLabels\x121\n" +
	"\x06status\x18\x14 \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12*\n" +
	"\x11process_exec_path\x18\x15 \x01(\tR\x0fprocessExecPath\x123\n" +
	"\tlog_level\x18\x16 \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x12`\n" +
	"\x10extra_dsn_params\x18\x17 \x03(\v26.inventory.v1.QANMySQLSlowlogAgent.ExtraDsnParamsEntryR\x0eextraDsnParams\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aA\n" +
	"\x13ExtraDsnParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe3\x04\n" +
	"\x17QANMongoDBProfilerAgent\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x12\x1d\n" +
	"\n" +
	"service_id\x18\x04 \x01(\tR\tserviceId\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x10\n" +
	"\x03tls\x18\x06 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\a \x01(\bR\rtlsSkipVerify\x12(\n" +
	"\x10max_query_length\x18\t \x01(\x05R\x0emaxQueryLength\x12\\\n" +
	"\rcustom_labels\x18\n" +
	" \x03(\v27.inventory.v1.QANMongoDBProfilerAgent.CustomLabelsEntryR\fcustomLabels\x121\n" +
	"\x06status\x18\x14 \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12*\n" +
	"\x11process_exec_path\x18\x15 \x01(\tR\x0fprocessExecPath\x123\n" +
	"\tlog_level\x18\x16 \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x04\b\b\x10\tR\x17query_examples_disabled\"\xe3\x04\n" +
	"\x17QANMongoDBMongologAgent\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x12\x1d\n" +
	"\n" +
	"service_id\x18\x04 \x01(\tR\tserviceId\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x10\n" +
	"\x03tls\x18\x06 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\a \x01(\bR\rtlsSkipVerify\x12(\n" +
	"\x10max_query_length\x18\t \x01(\x05R\x0emaxQueryLength\x12\\\n" +
	"\rcustom_labels\x18\n" +
	" \x03(\v27.inventory.v1.QANMongoDBMongologAgent.CustomLabelsEntryR\fcustomLabels\x121\n" +
	"\x06status\x18\x14 \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12*\n" +
	"\x11process_exec_path\x18\x15 \x01(\tR\x0fprocessExecPath\x123\n" +
	"\tlog_level\x18\x16 \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01J\x04\b\b\x10\tR\x17query_examples_disabled\"\x8c\x05\n" +
	"\x1eQANPostgreSQLPgStatementsAgent\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x12\x1d\n" +
	"\n" +
	"service_id\x18\x04 \x01(\tR\tserviceId\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x128\n" +
	"\x18disable_comments_parsing\x18\x06 \x01(\bR\x16disableCommentsParsing\x12(\n" +
	"\x10max_query_length\x18\a \x01(\x05R\x0emaxQueryLength\x12\x10\n" +
	"\x03tls\x18\b \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\t \x01(\bR\rtlsSkipVerify\x12c\n" +
	"\rcustom_labels\x18\n" +
	" \x03(\v2>.inventory.v1.QANPostgreSQLPgStatementsAgent.CustomLabelsEntryR\fcustomLabels\x121\n" +
	"\x06status\x18\x14 \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12*\n" +
	"\x11process_exec_path\x18\x15 \x01(\tR\x0fprocessExecPath\x123\n" +
	"\tlog_level\x18\x16 \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc6\x05\n" +
	"\x1fQANPostgreSQLPgStatMonitorAgent\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x12\x1d\n" +
	"\n" +
	"service_id\x18\x04 \x01(\tR\tserviceId\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x10\n" +
	"\x03tls\x18\x06 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\a \x01(\bR\rtlsSkipVerify\x128\n" +
	"\x18disable_comments_parsing\x18\b \x01(\bR\x16disableCommentsParsing\x12(\n" +
	"\x10max_query_length\x18\t \x01(\x05R\x0emaxQueryLength\x126\n" +
	"\x17query_examples_disabled\x18\n" +
	" \x01(\bR\x15queryExamplesDisabled\x12d\n" +
	"\rcustom_labels\x18\v \x03(\v2?.inventory.v1.QANPostgreSQLPgStatMonitorAgent.CustomLabelsEntryR\fcustomLabels\x121\n" +
	"\x06status\x18\x14 \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12*\n" +
	"\x11process_exec_path\x18\x15 \x01(\tR\x0fprocessExecPath\x123\n" +
	"\tlog_level\x18\x16 \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x90\x06\n" +
	"\vRDSExporter\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x12\x17\n" +
	"\anode_id\x18\x04 \x01(\tR\x06nodeId\x12$\n" +
	"\x0eaws_access_key\x18\x05 \x01(\tR\fawsAccessKey\x12P\n" +
	"\rcustom_labels\x18\x06 \x03(\v2+.inventory.v1.RDSExporter.CustomLabelsEntryR\fcustomLabels\x121\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12\x1f\n" +
	"\vlisten_port\x18\v \x01(\rR\n" +
	"listenPort\x124\n" +
	"\x16basic_metrics_disabled\x18\x14 \x01(\bR\x14basicMetricsDisabled\x12:\n" +
	"\x19enhanced_metrics_disabled\x18\x15 \x01(\bR\x17enhancedMetricsDisabled\x120\n" +
	"\x14push_metrics_enabled\x18\x16 \x01(\bR\x12pushMetricsEnabled\x12*\n" +
	"\x11process_exec_path\x18\x17 \x01(\tR\x0fprocessExecPath\x123\n" +
	"\tlog_level\x18\x18 \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x120\n" +
	"\x14auto_discovery_limit\x18\x19 \x01(\x05R\x12autoDiscoveryLimit\x12K\n" +
	"\x13metrics_resolutions\x18\x1a \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutions\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf2\x04\n" +
	"\x10ExternalExporter\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12%\n" +
	"\x0fruns_on_node_id\x18\x02 \x01(\tR\frunsOnNodeId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x12\x1d\n" +
	"\n" +
	"service_id\x18\x04 \x01(\tR\tserviceId\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x16\n" +
	"\x06scheme\x18\x06 \x01(\tR\x06scheme\x12!\n" +
	"\fmetrics_path\x18\a \x01(\tR\vmetricsPath\x12U\n" +
	"\rcustom_labels\x18\b \x03(\v20.inventory.v1.ExternalExporter.CustomLabelsEntryR\fcustomLabels\x12\x1f\n" +
	"\vlisten_port\x18\t \x01(\rR\n" +
	"listenPort\x120\n" +
	"\x14push_metrics_enabled\x18\n" +
	" \x01(\bR\x12pushMetricsEnabled\x12*\n" +
	"\x11process_exec_path\x18\v \x01(\tR\x0fprocessExecPath\x12K\n" +
	"\x13metrics_resolutions\x18\f \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutions\x12&\n" +
	"\x0ftls_skip_verify\x18\r \x01(\bR\rtlsSkipVerify\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe0\x05\n" +
	"\x15AzureDatabaseExporter\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12 \n" +
	"\fpmm_agent_id\x18\x02 \x01(\tR\n" +
	"pmmAgentId\x12\x1a\n" +
	"\bdisabled\x18\x03 \x01(\bR\bdisabled\x12\x17\n" +
	"\anode_id\x18\x04 \x01(\tR\x06nodeId\x12C\n" +
	"\x1eazure_database_subscription_id\x18\x05 \x01(\tR\x1bazureDatabaseSubscriptionId\x12?\n" +
	"\x1cazure_database_resource_type\x18\x06 \x01(\tR\x19azureDatabaseResourceType\x12Z\n" +
	"\rcustom_labels\x18\a \x03(\v25.inventory.v1.AzureDatabaseExporter.CustomLabelsEntryR\fcustomLabels\x121\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2\x19.inventory.v1.AgentStatusR\x06status\x12\x1f\n" +
	"\vlisten_port\x18\v \x01(\rR\n" +
	"listenPort\x120\n" +
	"\x14push_metrics_enabled\x18\f \x01(\bR\x12pushMetricsEnabled\x12*\n" +
	"\x11process_exec_path\x18\r \x01(\tR\x0fprocessExecPath\x123\n" +
	"\tlog_level\x18\x0e \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x12K\n" +
	"\x13metrics_resolutions\x18\x0f \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutions\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaa\x02\n" +
	"\x17ChangeCommonAgentParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"\xa5\x01\n" +
	"\x11ListAgentsRequest\x12 \n" +
	"\fpmm_agent_id\x18\x01 \x01(\tR\n" +
	"pmmAgentId\x12\x17\n" +
	"\anode_id\x18\x02 \x01(\tR\x06nodeId\x12\x1d\n" +
	"\n" +
	"service_id\x18\x03 \x01(\tR\tserviceId\x126\n" +
	"\n" +
	"agent_type\x18\x04 \x01(\x0e2\x17.inventory.v1.AgentTypeR\tagentType\"\x86\v\n" +
	"\x12ListAgentsResponse\x123\n" +
	"\tpmm_agent\x18\x01 \x03(\v2\x16.inventory.v1.PMMAgentR\bpmmAgent\x120\n" +
	"\bvm_agent\x18\x02 \x03(\v2\x15.inventory.v1.VMAgentR\avmAgent\x12?\n" +
	"\rnode_exporter\x18\x03 \x03(\v2\x1a.inventory.v1.NodeExporterR\fnodeExporter\x12E\n" +
	"\x0fmysqld_exporter\x18\x04 \x03(\v2\x1c.inventory.v1.MySQLdExporterR\x0emysqldExporter\x12H\n" +
	"\x10mongodb_exporter\x18\x05 \x03(\v2\x1d.inventory.v1.MongoDBExporterR\x0fmongodbExporter\x12K\n" +
	"\x11postgres_exporter\x18\x06 \x03(\v2\x1e.inventory.v1.PostgresExporterR\x10postgresExporter\x12K\n" +
	"\x11proxysql_exporter\x18\a \x03(\v2\x1e.inventory.v1.ProxySQLExporterR\x10proxysqlExporter\x12b\n" +
	"\x1aqan_mysql_perfschema_agent\x18\b \x03(\v2%.inventory.v1.QANMySQLPerfSchemaAgentR\x17qanMysqlPerfschemaAgent\x12Y\n" +
	"\x17qan_mysql_slowlog_agent\x18\t \x03(\v2\".inventory.v1.QANMySQLSlowlogAgentR\x14qanMysqlSlowlogAgent\x12b\n" +
	"\x1aqan_mongodb_profiler_agent\x18\n" +
	" \x03(\v2%.inventory.v1.QANMongoDBProfilerAgentR\x17qanMongodbProfilerAgent\x12b\n" +
	"\x1aqan_mongodb_mongolog_agent\x18\x12 \x03(\v2%.inventory.v1.QANMongoDBMongologAgentR\x17qanMongodbMongologAgent\x12w\n" +
	"!qan_postgresql_pgstatements_agent\x18\v \x03(\v2,.inventory.v1.QANPostgreSQLPgStatementsAgentR\x1eqanPostgresqlPgstatementsAgent\x12z\n" +
	"\"qan_postgresql_pgstatmonitor_agent\x18\f \x03(\v2-.inventory.v1.QANPostgreSQLPgStatMonitorAgentR\x1fqanPostgresqlPgstatmonitorAgent\x12K\n" +
	"\x11external_exporter\x18\r \x03(\v2\x1e.inventory.v1.ExternalExporterR\x10externalExporter\x12<\n" +
	"\frds_exporter\x18\x0e \x03(\v2\x19.inventory.v1.RDSExporterR\vrdsExporter\x12[\n" +
	"\x17azure_database_exporter\x18\x0f \x03(\v2#.inventory.v1.AzureDatabaseExporterR\x15azureDatabaseExporter\x129\n" +
	"\vnomad_agent\x18\x10 \x03(\v2\x18.inventory.v1.NomadAgentR\n" +
	"nomadAgent\"5\n" +
	"\x0fGetAgentRequest\x12\"\n" +
	"\bagent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10$R\aagentId\"\xae\v\n" +
	"\x10GetAgentResponse\x125\n" +
	"\tpmm_agent\x18\x01 \x01(\v2\x16.inventory.v1.PMMAgentH\x00R\bpmmAgent\x121\n" +
	"\avmagent\x18\x02 \x01(\v2\x15.inventory.v1.VMAgentH\x00R\avmagent\x12A\n" +
	"\rnode_exporter\x18\x03 \x01(\v2\x1a.inventory.v1.NodeExporterH\x00R\fnodeExporter\x12G\n" +
	"\x0fmysqld_exporter\x18\x04 \x01(\v2\x1c.inventory.v1.MySQLdExporterH\x00R\x0emysqldExporter\x12J\n" +
	"\x10mongodb_exporter\x18\x05 \x01(\v2\x1d.inventory.v1.MongoDBExporterH\x00R\x0fmongodbExporter\x12M\n" +
	"\x11postgres_exporter\x18\x06 \x01(\v2\x1e.inventory.v1.PostgresExporterH\x00R\x10postgresExporter\x12M\n" +
	"\x11proxysql_exporter\x18\a \x01(\v2\x1e.inventory.v1.ProxySQLExporterH\x00R\x10proxysqlExporter\x12d\n" +
	"\x1aqan_mysql_perfschema_agent\x18\b \x01(\v2%.inventory.v1.QANMySQLPerfSchemaAgentH\x00R\x17qanMysqlPerfschemaAgent\x12[\n" +
	"\x17qan_mysql_slowlog_agent\x18\t \x01(\v2\".inventory.v1.QANMySQLSlowlogAgentH\x00R\x14qanMysqlSlowlogAgent\x12d\n" +
	"\x1aqan_mongodb_profiler_agent\x18\n" +
	" \x01(\v2%.inventory.v1.QANMongoDBProfilerAgentH\x00R\x17qanMongodbProfilerAgent\x12d\n" +
	"\x1aqan_mongodb_mongolog_agent\x18\x12 \x01(\v2%.inventory.v1.QANMongoDBMongologAgentH\x00R\x17qanMongodbMongologAgent\x12y\n" +
	"!qan_postgresql_pgstatements_agent\x18\v \x01(\v2,.inventory.v1.QANPostgreSQLPgStatementsAgentH\x00R\x1eqanPostgresqlPgstatementsAgent\x12|\n" +
	"\"qan_postgresql_pgstatmonitor_agent\x18\f \x01(\v2-.inventory.v1.QANPostgreSQLPgStatMonitorAgentH\x00R\x1fqanPostgresqlPgstatmonitorAgent\x12M\n" +
	"\x11external_exporter\x18\r \x01(\v2\x1e.inventory.v1.ExternalExporterH\x00R\x10externalExporter\x12>\n" +
	"\frds_exporter\x18\x0e \x01(\v2\x19.inventory.v1.RDSExporterH\x00R\vrdsExporter\x12]\n" +
	"\x17azure_database_exporter\x18\x0f \x01(\v2#.inventory.v1.AzureDatabaseExporterH\x00R\x15azureDatabaseExporter\x12;\n" +
	"\vnomad_agent\x18\x10 \x01(\v2\x18.inventory.v1.NomadAgentH\x00R\n" +
	"nomadAgentB\a\n" +
	"\x05agent\"O\n" +
	"\x13GetAgentLogsRequest\x12\"\n" +
	"\bagent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10$R\aagentId\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\"j\n" +
	"\x14GetAgentLogsResponse\x12\x12\n" +
	"\x04logs\x18\x01 \x03(\tR\x04logs\x12>\n" +
	"\x1cagent_config_log_lines_count\x18\x02 \x01(\rR\x18agentConfigLogLinesCount\"\xc6\v\n" +
	"\x0fAddAgentRequest\x12>\n" +
	"\tpmm_agent\x18\x01 \x01(\v2\x1f.inventory.v1.AddPMMAgentParamsH\x00R\bpmmAgent\x12J\n" +
	"\rnode_exporter\x18\x02 \x01(\v2#.inventory.v1.AddNodeExporterParamsH\x00R\fnodeExporter\x12P\n" +
	"\x0fmysqld_exporter\x18\x03 \x01(\v2%.inventory.v1.AddMySQLdExporterParamsH\x00R\x0emysqldExporter\x12S\n" +
	"\x10mongodb_exporter\x18\x04 \x01(\v2&.inventory.v1.AddMongoDBExporterParamsH\x00R\x0fmongodbExporter\x12V\n" +
	"\x11postgres_exporter\x18\x05 \x01(\v2'.inventory.v1.AddPostgresExporterParamsH\x00R\x10postgresExporter\x12V\n" +
	"\x11proxysql_exporter\x18\x06 \x01(\v2'.inventory.v1.AddProxySQLExporterParamsH\x00R\x10proxysqlExporter\x12V\n" +
	"\x11external_exporter\x18\a \x01(\v2'.inventory.v1.AddExternalExporterParamsH\x00R\x10externalExporter\x12G\n" +
	"\frds_exporter\x18\b \x01(\v2\".inventory.v1.AddRDSExporterParamsH\x00R\vrdsExporter\x12f\n" +
	"\x17azure_database_exporter\x18\t \x01(\v2,.inventory.v1.AddAzureDatabaseExporterParamsH\x00R\x15azureDatabaseExporter\x12m\n" +
	"\x1aqan_mysql_perfschema_agent\x18\n" +
	" \x01(\v2..inventory.v1.AddQANMySQLPerfSchemaAgentParamsH\x00R\x17qanMysqlPerfschemaAgent\x12d\n" +
	"\x17qan_mysql_slowlog_agent\x18\v \x01(\v2+.inventory.v1.AddQANMySQLSlowlogAgentParamsH\x00R\x14qanMysqlSlowlogAgent\x12m\n" +
	"\x1aqan_mongodb_profiler_agent\x18\f \x01(\v2..inventory.v1.AddQANMongoDBProfilerAgentParamsH\x00R\x17qanMongodbProfilerAgent\x12m\n" +
	"\x1aqan_mongodb_mongolog_agent\x18\x10 \x01(\v2..inventory.v1.AddQANMongoDBMongologAgentParamsH\x00R\x17qanMongodbMongologAgent\x12\x82\x01\n" +
	"!qan_postgresql_pgstatements_agent\x18\r \x01(\v25.inventory.v1.AddQANPostgreSQLPgStatementsAgentParamsH\x00R\x1eqanPostgresqlPgstatementsAgent\x12\x85\x01\n" +
	"\"qan_postgresql_pgstatmonitor_agent\x18\x0e \x01(\v26.inventory.v1.AddQANPostgreSQLPgStatMonitorAgentParamsH\x00R\x1fqanPostgresqlPgstatmonitorAgentB\a\n" +
	"\x05agent\"\xbe\n" +
	"\n" +
	"\x10AddAgentResponse\x125\n" +
	"\tpmm_agent\x18\x01 \x01(\v2\x16.inventory.v1.PMMAgentH\x00R\bpmmAgent\x12A\n" +
	"\rnode_exporter\x18\x02 \x01(\v2\x1a.inventory.v1.NodeExporterH\x00R\fnodeExporter\x12G\n" +
	"\x0fmysqld_exporter\x18\x03 \x01(\v2\x1c.inventory.v1.MySQLdExporterH\x00R\x0emysqldExporter\x12J\n" +
	"\x10mongodb_exporter\x18\x04 \x01(\v2\x1d.inventory.v1.MongoDBExporterH\x00R\x0fmongodbExporter\x12M\n" +
	"\x11postgres_exporter\x18\x05 \x01(\v2\x1e.inventory.v1.PostgresExporterH\x00R\x10postgresExporter\x12M\n" +
	"\x11proxysql_exporter\x18\x06 \x01(\v2\x1e.inventory.v1.ProxySQLExporterH\x00R\x10proxysqlExporter\x12M\n" +
	"\x11external_exporter\x18\a \x01(\v2\x1e.inventory.v1.ExternalExporterH\x00R\x10externalExporter\x12>\n" +
	"\frds_exporter\x18\b \x01(\v2\x19.inventory.v1.RDSExporterH\x00R\vrdsExporter\x12]\n" +
	"\x17azure_database_exporter\x18\t \x01(\v2#.inventory.v1.AzureDatabaseExporterH\x00R\x15azureDatabaseExporter\x12d\n" +
	"\x1aqan_mysql_perfschema_agent\x18\n" +
	" \x01(\v2%.inventory.v1.QANMySQLPerfSchemaAgentH\x00R\x17qanMysqlPerfschemaAgent\x12[\n" +
	"\x17qan_mysql_slowlog_agent\x18\v \x01(\v2\".inventory.v1.QANMySQLSlowlogAgentH\x00R\x14qanMysqlSlowlogAgent\x12d\n" +
	"\x1aqan_mongodb_profiler_agent\x18\f \x01(\v2%.inventory.v1.QANMongoDBProfilerAgentH\x00R\x17qanMongodbProfilerAgent\x12d\n" +
	"\x1aqan_mongodb_mongolog_agent\x18\x10 \x01(\v2%.inventory.v1.QANMongoDBMongologAgentH\x00R\x17qanMongodbMongologAgent\x12y\n" +
	"!qan_postgresql_pgstatements_agent\x18\r \x01(\v2,.inventory.v1.QANPostgreSQLPgStatementsAgentH\x00R\x1eqanPostgresqlPgstatementsAgent\x12|\n" +
	"\"qan_postgresql_pgstatmonitor_agent\x18\x0e \x01(\v2-.inventory.v1.QANPostgreSQLPgStatMonitorAgentH\x00R\x1fqanPostgresqlPgstatmonitorAgentB\a\n" +
	"\x05agent\"\xa0\f\n" +
	"\x12ChangeAgentRequest\x12\"\n" +
	"\bagent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\aagentId\x12M\n" +
	"\rnode_exporter\x18\x02 \x01(\v2&.inventory.v1.ChangeNodeExporterParamsH\x00R\fnodeExporter\x12S\n" +
	"\x0fmysqld_exporter\x18\x03 \x01(\v2(.inventory.v1.ChangeMySQLdExporterParamsH\x00R\x0emysqldExporter\x12V\n" +
	"\x10mongodb_exporter\x18\x04 \x01(\v2).inventory.v1.ChangeMongoDBExporterParamsH\x00R\x0fmongodbExporter\x12Y\n" +
	"\x11postgres_exporter\x18\x05 \x01(\v2*.inventory.v1.ChangePostgresExporterParamsH\x00R\x10postgresExporter\x12Y\n" +
	"\x11proxysql_exporter\x18\x06 \x01(\v2*.inventory.v1.ChangeProxySQLExporterParamsH\x00R\x10proxysqlExporter\x12Y\n" +
	"\x11external_exporter\x18\a \x01(\v2*.inventory.v1.ChangeExternalExporterParamsH\x00R\x10externalExporter\x12J\n" +
	"\frds_exporter\x18\b \x01(\v2%.inventory.v1.ChangeRDSExporterParamsH\x00R\vrdsExporter\x12i\n" +
	"\x17azure_database_exporter\x18\t \x01(\v2/.inventory.v1.ChangeAzureDatabaseExporterParamsH\x00R\x15azureDatabaseExporter\x12p\n" +
	"\x1aqan_mysql_perfschema_agent\x18\n" +
	" \x01(\v21.inventory.v1.ChangeQANMySQLPerfSchemaAgentParamsH\x00R\x17qanMysqlPerfschemaAgent\x12g\n" +
	"\x17qan_mysql_slowlog_agent\x18\v \x01(\v2..inventory.v1.ChangeQANMySQLSlowlogAgentParamsH\x00R\x14qanMysqlSlowlogAgent\x12p\n" +
	"\x1aqan_mongodb_profiler_agent\x18\f \x01(\v21.inventory.v1.ChangeQANMongoDBProfilerAgentParamsH\x00R\x17qanMongodbProfilerAgent\x12p\n" +
	"\x1aqan_mongodb_mongolog_agent\x18\x11 \x01(\v21.inventory.v1.ChangeQANMongoDBMongologAgentParamsH\x00R\x17qanMongodbMongologAgent\x12\x85\x01\n" +
	"!qan_postgresql_pgstatements_agent\x18\r \x01(\v28.inventory.v1.ChangeQANPostgreSQLPgStatementsAgentParamsH\x00R\x1eqanPostgresqlPgstatementsAgent\x12\x88\x01\n" +
	"\"qan_postgresql_pgstatmonitor_agent\x18\x0e \x01(\v29.inventory.v1.ChangeQANPostgreSQLPgStatMonitorAgentParamsH\x00R\x1fqanPostgresqlPgstatmonitorAgent\x12G\n" +
	"\vnomad_agent\x18\x0f \x01(\v2$.inventory.v1.ChangeNomadAgentParamsH\x00R\n" +
	"nomadAgentB\a\n" +
	"\x05agent\"\xc7\n" +
	"\n" +
	"\x13ChangeAgentResponse\x12A\n" +
	"\rnode_exporter\x18\x02 \x01(\v2\x1a.inventory.v1.NodeExporterH\x00R\fnodeExporter\x12G\n" +
	"\x0fmysqld_exporter\x18\x03 \x01(\v2\x1c.inventory.v1.MySQLdExporterH\x00R\x0emysqldExporter\x12J\n" +
	"\x10mongodb_exporter\x18\x04 \x01(\v2\x1d.inventory.v1.MongoDBExporterH\x00R\x0fmongodbExporter\x12M\n" +
	"\x11postgres_exporter\x18\x05 \x01(\v2\x1e.inventory.v1.PostgresExporterH\x00R\x10postgresExporter\x12M\n" +
	"\x11proxysql_exporter\x18\x06 \x01(\v2\x1e.inventory.v1.ProxySQLExporterH\x00R\x10proxysqlExporter\x12M\n" +
	"\x11external_exporter\x18\a \x01(\v2\x1e.inventory.v1.ExternalExporterH\x00R\x10externalExporter\x12>\n" +
	"\frds_exporter\x18\b \x01(\v2\x19.inventory.v1.RDSExporterH\x00R\vrdsExporter\x12]\n" +
	"\x17azure_database_exporter\x18\t \x01(\v2#.inventory.v1.AzureDatabaseExporterH\x00R\x15azureDatabaseExporter\x12d\n" +
	"\x1aqan_mysql_perfschema_agent\x18\n" +
	" \x01(\v2%.inventory.v1.QANMySQLPerfSchemaAgentH\x00R\x17qanMysqlPerfschemaAgent\x12[\n" +
	"\x17qan_mysql_slowlog_agent\x18\v \x01(\v2\".inventory.v1.QANMySQLSlowlogAgentH\x00R\x14qanMysqlSlowlogAgent\x12d\n" +
	"\x1aqan_mongodb_profiler_agent\x18\f \x01(\v2%.inventory.v1.QANMongoDBProfilerAgentH\x00R\x17qanMongodbProfilerAgent\x12d\n" +
	"\x1aqan_mongodb_mongolog_agent\x18\x11 \x01(\v2%.inventory.v1.QANMongoDBMongologAgentH\x00R\x17qanMongodbMongologAgent\x12y\n" +
	"!qan_postgresql_pgstatements_agent\x18\r \x01(\v2,.inventory.v1.QANPostgreSQLPgStatementsAgentH\x00R\x1eqanPostgresqlPgstatementsAgent\x12|\n" +
	"\"qan_postgresql_pgstatmonitor_agent\x18\x0e \x01(\v2-.inventory.v1.QANPostgreSQLPgStatMonitorAgentH\x00R\x1fqanPostgresqlPgstatmonitorAgent\x12;\n" +
	"\vnomad_agent\x18\x0f \x01(\v2\x18.inventory.v1.NomadAgentH\x00R\n" +
	"nomadAgentB\a\n" +
	"\x05agent\"\xdc\x01\n" +
	"\x11AddPMMAgentParams\x12.\n" +
	"\x0fruns_on_node_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\frunsOnNodeId\x12V\n" +
	"\rcustom_labels\x18\x02 \x03(\v21.inventory.v1.AddPMMAgentParams.CustomLabelsEntryR\fcustomLabels\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8f\x03\n" +
	"\x15AddNodeExporterParams\x12)\n" +
	"\fpmm_agent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"pmmAgentId\x12Z\n" +
	"\rcustom_labels\x18\x02 \x03(\v25.inventory.v1.AddNodeExporterParams.CustomLabelsEntryR\fcustomLabels\x12!\n" +
	"\fpush_metrics\x18\x03 \x01(\bR\vpushMetrics\x12-\n" +
	"\x12disable_collectors\x18\x04 \x03(\tR\x11disableCollectors\x123\n" +
	"\tlog_level\x18\x05 \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x12'\n" +
	"\x0fexpose_exporter\x18\x06 \x01(\bR\x0eexposeExporter\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xab\x02\n" +
	"\x18ChangeNodeExporterParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"\xc5\a\n" +
	"\x17AddMySQLdExporterParams\x12)\n" +
	"\fpmm_agent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"pmmAgentId\x12&\n" +
	"\n" +
	"service_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\tserviceId\x12#\n" +
	"\busername\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x10\n" +
	"\x03tls\x18\x05 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\x06 \x01(\bR\rtlsSkipVerify\x12\x15\n" +
	"\x06tls_ca\x18\a \x01(\tR\x05tlsCa\x12\x19\n" +
	"\btls_cert\x18\b \x01(\tR\atlsCert\x12\x17\n" +
	"\atls_key\x18\t \x01(\tR\x06tlsKey\x12?\n" +
	"\x1ctablestats_group_table_limit\x18\n" +
	" \x01(\x05R\x19tablestatsGroupTableLimit\x12\\\n" +
	"\rcustom_labels\x18\v \x03(\v27.inventory.v1.AddMySQLdExporterParams.CustomLabelsEntryR\fcustomLabels\x122\n" +
	"\x15skip_connection_check\x18\f \x01(\bR\x13skipConnectionCheck\x12!\n" +
	"\fpush_metrics\x18\r \x01(\bR\vpushMetrics\x12-\n" +
	"\x12disable_collectors\x18\x0e \x03(\tR\x11disableCollectors\x12%\n" +
	"\x0eagent_password\x18\x0f \x01(\tR\ragentPassword\x123\n" +
	"\tlog_level\x18\x10 \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x12'\n" +
	"\x0fexpose_exporter\x18\x11 \x01(\bR\x0eexposeExporter\x12c\n" +
	"\x10extra_dsn_params\x18\x12 \x03(\v29.inventory.v1.AddMySQLdExporterParams.ExtraDsnParamsEntryR\x0eextraDsnParams\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aA\n" +
	"\x13ExtraDsnParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xad\x02\n" +
	"\x1aChangeMySQLdExporterParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"\xe9\a\n" +
	"\x18AddMongoDBExporterParams\x12)\n" +
	"\fpmm_agent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"pmmAgentId\x12&\n" +
	"\n" +
	"service_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\tserviceId\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x10\n" +
	"\x03tls\x18\x05 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\x06 \x01(\bR\rtlsSkipVerify\x12.\n" +
	"\x13tls_certificate_key\x18\a \x01(\tR\x11tlsCertificateKey\x12H\n" +
	"!tls_certificate_key_file_password\x18\b \x01(\tR\x1dtlsCertificateKeyFilePassword\x12\x15\n" +
	"\x06tls_ca\x18\t \x01(\tR\x05tlsCa\x12]\n" +
	"\rcustom_labels\x18\n" +
	" \x03(\v28.inventory.v1.AddMongoDBExporterParams.CustomLabelsEntryR\fcustomLabels\x122\n" +
	"\x15skip_connection_check\x18\v \x01(\bR\x13skipConnectionCheck\x12!\n" +
	"\fpush_metrics\x18\f \x01(\bR\vpushMetrics\x12-\n" +
	"\x12disable_collectors\x18\r \x03(\tR\x11disableCollectors\x129\n" +
	"\x18authentication_mechanism\x18\x0e \x01(\tR\x17authenticationMechanism\x127\n" +
	"\x17authentication_database\x18\x0f \x01(\tR\x16authenticationDatabase\x12%\n" +
	"\x0eagent_password\x18\x10 \x01(\tR\ragentPassword\x12+\n" +
	"\x11stats_collections\x18\x11 \x03(\tR\x10statsCollections\x12+\n" +
	"\x11collections_limit\x18\x12 \x01(\x05R\x10collectionsLimit\x123\n" +
	"\tlog_level\x18\x13 \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x12'\n" +
	"\x0fexpose_exporter\x18\x14 \x01(\bR\x0eexposeExporter\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xae\x02\n" +
	"\x1bChangeMongoDBExporterParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"\xcc\x06\n" +
	"\x19AddPostgresExporterParams\x12)\n" +
	"\fpmm_agent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"pmmAgentId\x12&\n" +
	"\n" +
	"service_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\tserviceId\x12#\n" +
	"\busername\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x10\n" +
	"\x03tls\x18\x05 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\x06 \x01(\bR\rtlsSkipVerify\x12^\n" +
	"\rcustom_labels\x18\a \x03(\v29.inventory.v1.AddPostgresExporterParams.CustomLabelsEntryR\fcustomLabels\x122\n" +
	"\x15skip_connection_check\x18\b \x01(\bR\x13skipConnectionCheck\x12!\n" +
	"\fpush_metrics\x18\t \x01(\bR\vpushMetrics\x12-\n" +
	"\x12disable_collectors\x18\n" +
	" \x03(\tR\x11disableCollectors\x12\x15\n" +
	"\x06tls_ca\x18\v \x01(\tR\x05tlsCa\x12\x19\n" +
	"\btls_cert\x18\f \x01(\tR\atlsCert\x12\x17\n" +
	"\atls_key\x18\r \x01(\tR\x06tlsKey\x12%\n" +
	"\x0eagent_password\x18\x0e \x01(\tR\ragentPassword\x123\n" +
	"\tlog_level\x18\x0f \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x120\n" +
	"\x14auto_discovery_limit\x18\x10 \x01(\x05R\x12autoDiscoveryLimit\x12'\n" +
	"\x0fexpose_exporter\x18\x11 \x01(\bR\x0eexposeExporter\x128\n" +
	"\x18max_exporter_connections\x18\x12 \x01(\x05R\x16maxExporterConnections\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaf\x02\n" +
	"\x1cChangePostgresExporterParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"\x95\x05\n" +
	"\x19AddProxySQLExporterParams\x12)\n" +
	"\fpmm_agent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"pmmAgentId\x12&\n" +
	"\n" +
	"service_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\tserviceId\x12#\n" +
	"\busername\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x10\n" +
	"\x03tls\x18\x05 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\x06 \x01(\bR\rtlsSkipVerify\x12^\n" +
	"\rcustom_labels\x18\a \x03(\v29.inventory.v1.AddProxySQLExporterParams.CustomLabelsEntryR\fcustomLabels\x122\n" +
	"\x15skip_connection_check\x18\b \x01(\bR\x13skipConnectionCheck\x12!\n" +
	"\fpush_metrics\x18\t \x01(\bR\vpushMetrics\x12-\n" +
	"\x12disable_collectors\x18\n" +
	" \x03(\tR\x11disableCollectors\x12%\n" +
	"\x0eagent_password\x18\v \x01(\tR\ragentPassword\x123\n" +
	"\tlog_level\x18\f \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x12'\n" +
	"\x0fexpose_exporter\x18\r \x01(\bR\x0eexposeExporter\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaf\x02\n" +
	"\x1cChangeProxySQLExporterParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"\x97\a\n" +
	" AddQANMySQLPerfSchemaAgentParams\x12)\n" +
	"\fpmm_agent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"pmmAgentId\x12&\n" +
	"\n" +
	"service_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\tserviceId\x12#\n" +
	"\busername\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x10\n" +
	"\x03tls\x18\x05 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\x06 \x01(\bR\rtlsSkipVerify\x12\x15\n" +
	"\x06tls_ca\x18\a \x01(\tR\x05tlsCa\x12\x19\n" +
	"\btls_cert\x18\b \x01(\tR\atlsCert\x12\x17\n" +
	"\atls_key\x18\t \x01(\tR\x06tlsKey\x12(\n" +
	"\x10max_query_length\x18\n" +
	" \x01(\x05R\x0emaxQueryLength\x124\n" +
	"\x16disable_query_examples\x18\v \x01(\bR\x14disableQueryExamples\x12e\n" +
	"\rcustom_labels\x18\f \x03(\v2@.inventory.v1.AddQANMySQLPerfSchemaAgentParams.CustomLabelsEntryR\fcustomLabels\x122\n" +
	"\x15skip_connection_check\x18\r \x01(\bR\x13skipConnectionCheck\x128\n" +
	"\x18disable_comments_parsing\x18\x0e \x01(\bR\x16disableCommentsParsing\x123\n" +
	"\tlog_level\x18\x0f \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x12l\n" +
	"\x10extra_dsn_params\x18\x10 \x03(\v2B.inventory.v1.AddQANMySQLPerfSchemaAgentParams.ExtraDsnParamsEntryR\x0eextraDsnParams\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aA\n" +
	"\x13ExtraDsnParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb6\x02\n" +
	"#ChangeQANMySQLPerfSchemaAgentParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"\xc1\a\n" +
	"\x1dAddQANMySQLSlowlogAgentParams\x12)\n" +
	"\fpmm_agent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"pmmAgentId\x12&\n" +
	"\n" +
	"service_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\tserviceId\x12#\n" +
	"\busername\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x10\n" +
	"\x03tls\x18\x05 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\x06 \x01(\bR\rtlsSkipVerify\x12\x15\n" +
	"\x06tls_ca\x18\a \x01(\tR\x05tlsCa\x12\x19\n" +
	"\btls_cert\x18\b \x01(\tR\atlsCert\x12\x17\n" +
	"\atls_key\x18\t \x01(\tR\x06tlsKey\x12(\n" +
	"\x10max_query_length\x18\n" +
	" \x01(\x05R\x0emaxQueryLength\x124\n" +
	"\x16disable_query_examples\x18\v \x01(\bR\x14disableQueryExamples\x121\n" +
	"\x15max_slowlog_file_size\x18\f \x01(\x03R\x12maxSlowlogFileSize\x12b\n" +
	"\rcustom_labels\x18\r \x03(\v2=.inventory.v1.AddQANMySQLSlowlogAgentParams.CustomLabelsEntryR\fcustomLabels\x122\n" +
	"\x15skip_connection_check\x18\x0e \x01(\bR\x13skipConnectionCheck\x128\n" +
	"\x18disable_comments_parsing\x18\x0f \x01(\bR\x16disableCommentsParsing\x123\n" +
	"\tlog_level\x18\x10 \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x12i\n" +
	"\x10extra_dsn_params\x18\x11 \x03(\v2?.inventory.v1.AddQANMySQLSlowlogAgentParams.ExtraDsnParamsEntryR\x0eextraDsnParams\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aA\n" +
	"\x13ExtraDsnParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb3\x02\n" +
	" ChangeQANMySQLSlowlogAgentParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"\xa7\x06\n" +
	" AddQANMongoDBProfilerAgentParams\x12)\n" +
	"\fpmm_agent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"pmmAgentId\x12&\n" +
	"\n" +
	"service_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\tserviceId\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x10\n" +
	"\x03tls\x18\x05 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\x06 \x01(\bR\rtlsSkipVerify\x12.\n" +
	"\x13tls_certificate_key\x18\a \x01(\tR\x11tlsCertificateKey\x12H\n" +
	"!tls_certificate_key_file_password\x18\b \x01(\tR\x1dtlsCertificateKeyFilePassword\x12\x15\n" +
	"\x06tls_ca\x18\t \x01(\tR\x05tlsCa\x12(\n" +
	"\x10max_query_length\x18\n" +
	" \x01(\x05R\x0emaxQueryLength\x12e\n" +
	"\rcustom_labels\x18\v \x03(\v2@.inventory.v1.AddQANMongoDBProfilerAgentParams.CustomLabelsEntryR\fcustomLabels\x122\n" +
	"\x15skip_connection_check\x18\f \x01(\bR\x13skipConnectionCheck\x129\n" +
	"\x18authentication_mechanism\x18\r \x01(\tR\x17authenticationMechanism\x127\n" +
	"\x17authentication_database\x18\x0e \x01(\tR\x16authenticationDatabase\x123\n" +
	"\tlog_level\x18\x0f \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb6\x02\n" +
	"#ChangeQANMongoDBProfilerAgentParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"\xa7\x06\n" +
	" AddQANMongoDBMongologAgentParams\x12)\n" +
	"\fpmm_agent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"pmmAgentId\x12&\n" +
	"\n" +
	"service_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\tserviceId\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x10\n" +
	"\x03tls\x18\x05 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\x06 \x01(\bR\rtlsSkipVerify\x12.\n" +
	"\x13tls_certificate_key\x18\a \x01(\tR\x11tlsCertificateKey\x12H\n" +
	"!tls_certificate_key_file_password\x18\b \x01(\tR\x1dtlsCertificateKeyFilePassword\x12\x15\n" +
	"\x06tls_ca\x18\t \x01(\tR\x05tlsCa\x12(\n" +
	"\x10max_query_length\x18\n" +
	" \x01(\x05R\x0emaxQueryLength\x12e\n" +
	"\rcustom_labels\x18\v \x03(\v2@.inventory.v1.AddQANMongoDBMongologAgentParams.CustomLabelsEntryR\fcustomLabels\x122\n" +
	"\x15skip_connection_check\x18\f \x01(\bR\x13skipConnectionCheck\x129\n" +
	"\x18authentication_mechanism\x18\r \x01(\tR\x17authenticationMechanism\x127\n" +
	"\x17authentication_database\x18\x0e \x01(\tR\x16authenticationDatabase\x123\n" +
	"\tlog_level\x18\x0f \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb6\x02\n" +
	"#ChangeQANMongoDBMongologAgentParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"\xbe\x05\n" +
	"'AddQANPostgreSQLPgStatementsAgentParams\x12)\n" +
	"\fpmm_agent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"pmmAgentId\x12&\n" +
	"\n" +
	"service_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\tserviceId\x12#\n" +
	"\busername\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x10\n" +
	"\x03tls\x18\x05 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\x06 \x01(\bR\rtlsSkipVerify\x12l\n" +
	"\rcustom_labels\x18\a \x03(\v2G.inventory.v1.AddQANPostgreSQLPgStatementsAgentParams.CustomLabelsEntryR\fcustomLabels\x122\n" +
	"\x15skip_connection_check\x18\b \x01(\bR\x13skipConnectionCheck\x128\n" +
	"\x18disable_comments_parsing\x18\t \x01(\bR\x16disableCommentsParsing\x12(\n" +
	"\x10max_query_length\x18\n" +
	" \x01(\x05R\x0emaxQueryLength\x12\x15\n" +
	"\x06tls_ca\x18\v \x01(\tR\x05tlsCa\x12\x19\n" +
	"\btls_cert\x18\f \x01(\tR\atlsCert\x12\x17\n" +
	"\atls_key\x18\r \x01(\tR\x06tlsKey\x123\n" +
	"\tlog_level\x18\x0e \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbd\x02\n" +
	"*ChangeQANPostgreSQLPgStatementsAgentParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"\xf6\x05\n" +
	"(AddQANPostgreSQLPgStatMonitorAgentParams\x12)\n" +
	"\fpmm_agent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"pmmAgentId\x12&\n" +
	"\n" +
	"service_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\tserviceId\x12#\n" +
	"\busername\x18\x03 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x10\n" +
	"\x03tls\x18\x05 \x01(\bR\x03tls\x12&\n" +
	"\x0ftls_skip_verify\x18\x06 \x01(\bR\rtlsSkipVerify\x12(\n" +
	"\x10max_query_length\x18\a \x01(\x05R\x0emaxQueryLength\x124\n" +
	"\x16disable_query_examples\x18\b \x01(\bR\x14disableQueryExamples\x12m\n" +
	"\rcustom_labels\x18\t \x03(\v2H.inventory.v1.AddQANPostgreSQLPgStatMonitorAgentParams.CustomLabelsEntryR\fcustomLabels\x122\n" +
	"\x15skip_connection_check\x18\n" +
	" \x01(\bR\x13skipConnectionCheck\x128\n" +
	"\x18disable_comments_parsing\x18\v \x01(\bR\x16disableCommentsParsing\x12\x15\n" +
	"\x06tls_ca\x18\f \x01(\tR\x05tlsCa\x12\x19\n" +
	"\btls_cert\x18\r \x01(\tR\atlsCert\x12\x17\n" +
	"\atls_key\x18\x0e \x01(\tR\x06tlsKey\x123\n" +
	"\tlog_level\x18\x0f \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbe\x02\n" +
	"+ChangeQANPostgreSQLPgStatMonitorAgentParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"\xc5\x04\n" +
	"\x14AddRDSExporterParams\x12)\n" +
	"\fpmm_agent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"pmmAgentId\x12 \n" +
	"\anode_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x06nodeId\x12$\n" +
	"\x0eaws_access_key\x18\x03 \x01(\tR\fawsAccessKey\x12$\n" +
	"\x0eaws_secret_key\x18\x04 \x01(\tR\fawsSecretKey\x12Y\n" +
	"\rcustom_labels\x18\x05 \x03(\v24.inventory.v1.AddRDSExporterParams.CustomLabelsEntryR\fcustomLabels\x122\n" +
	"\x15skip_connection_check\x18\x06 \x01(\bR\x13skipConnectionCheck\x122\n" +
	"\x15disable_basic_metrics\x18\a \x01(\bR\x13disableBasicMetrics\x128\n" +
	"\x18disable_enhanced_metrics\x18\b \x01(\bR\x16disableEnhancedMetrics\x12!\n" +
	"\fpush_metrics\x18\t \x01(\bR\vpushMetrics\x123\n" +
	"\tlog_level\x18\n" +
	" \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaa\x02\n" +
	"\x17ChangeRDSExporterParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"\xf7\x03\n" +
	"\x19AddExternalExporterParams\x12.\n" +
	"\x0fruns_on_node_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\frunsOnNodeId\x12\x1d\n" +
	"\n" +
	"service_id\x18\x02 \x01(\tR\tserviceId\x12\x1a\n" +
	"\busername\x18\x03 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x16\n" +
	"\x06scheme\x18\x06 \x01(\tR\x06scheme\x12!\n" +
	"\fmetrics_path\x18\a \x01(\tR\vmetricsPath\x12,\n" +
	"\vlisten_port\x18\b \x01(\rB\v\xfaB\b*\x06\x10\x80\x80\x04 \x00R\n" +
	"listenPort\x12^\n" +
	"\rcustom_labels\x18\n" +
	" \x03(\v29.inventory.v1.AddExternalExporterParams.CustomLabelsEntryR\fcustomLabels\x12!\n" +
	"\fpush_metrics\x18\v \x01(\bR\vpushMetrics\x12&\n" +
	"\x0ftls_skip_verify\x18\f \x01(\bR\rtlsSkipVerify\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaf\x02\n" +
	"\x1cChangeExternalExporterParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"\xcf\x05\n" +
	"\x1eAddAzureDatabaseExporterParams\x12)\n" +
	"\fpmm_agent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\n" +
	"pmmAgentId\x12 \n" +
	"\anode_id\x18\x02 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x06nodeId\x12&\n" +
	"\x0fazure_client_id\x18\x03 \x01(\tR\razureClientId\x12.\n" +
	"\x13azure_client_secret\x18\x04 \x01(\tR\x11azureClientSecret\x12&\n" +
	"\x0fazure_tenant_id\x18\x05 \x01(\tR\razureTenantId\x122\n" +
	"\x15azure_subscription_id\x18\x06 \x01(\tR\x13azureSubscriptionId\x120\n" +
	"\x14azure_resource_group\x18\a \x01(\tR\x12azureResourceGroup\x12H\n" +
	"\x1cazure_database_resource_type\x18\b \x01(\tB\a\xfaB\x04r\x02\x10\x01R\x19azureDatabaseResourceType\x12c\n" +
	"\rcustom_labels\x18\t \x03(\v2>.inventory.v1.AddAzureDatabaseExporterParams.CustomLabelsEntryR\fcustomLabels\x122\n" +
	"\x15skip_connection_check\x18\n" +
	" \x01(\bR\x13skipConnectionCheck\x12!\n" +
	"\fpush_metrics\x18\v \x01(\bR\vpushMetrics\x123\n" +
	"\tlog_level\x18\f \x01(\x0e2\x16.inventory.v1.LogLevelR\blogLevel\x1a?\n" +
	"\x11CustomLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb4\x02\n" +
	"!ChangeAzureDatabaseExporterParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01\x12;\n" +
	"\rcustom_labels\x18\x02 \x01(\v2\x11.common.StringMapH\x01R\fcustomLabels\x88\x01\x01\x123\n" +
	"\x13enable_push_metrics\x18\x03 \x01(\bH\x02R\x11enablePushMetrics\x88\x01\x01\x12K\n" +
	"\x13metrics_resolutions\x18\x04 \x01(\v2\x1a.common.MetricsResolutionsR\x12metricsResolutionsB\t\n" +
	"\a_enableB\x10\n" +
	"\x0e_custom_labelsB\x16\n" +
	"\x14_enable_push_metrics\"@\n" +
	"\x16ChangeNomadAgentParams\x12\x1b\n" +
	"\x06enable\x18\x01 \x01(\bH\x00R\x06enable\x88\x01\x01B\t\n" +
	"\a_enable\"N\n" +
	"\x12RemoveAgentRequest\x12\"\n" +
	"\bagent_id\x18\x01 \x01(\tB\a\xfaB\x04r\x02\x10\x01R\aagentId\x12\x14\n" +
	"\x05force\x18\x02 \x01(\bR\x05force\"\x15\n" +
	"\x13RemoveAgentResponse*\x8e\x05\n" +
	"\tAgentType\x12\x1a\n" +
	"\x16AGENT_TYPE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14AGENT_TYPE_PMM_AGENT\x10\x01\x12\x17\n" +
	"\x13AGENT_TYPE_VM_AGENT\x10\x0e\x12\x1c\n" +
	"\x18AGENT_TYPE_NODE_EXPORTER\x10\x02\x12\x1e\n" +
	"\x1aAGENT_TYPE_MYSQLD_EXPORTER\x10\x03\x12\x1f\n" +
	"\x1bAGENT_TYPE_MONGODB_EXPORTER\x10\x04\x12 \n" +
	"\x1cAGENT_TYPE_POSTGRES_EXPORTER\x10\x05\x12 \n" +
	"\x1cAGENT_TYPE_PROXYSQL_EXPORTER\x10\x06\x12)\n" +
	"%AGENT_TYPE_QAN_MYSQL_PERFSCHEMA_AGENT\x10\a\x12&\n" +
	"\"AGENT_TYPE_QAN_MYSQL_SLOWLOG_AGENT\x10\b\x12)\n" +
	"%AGENT_TYPE_QAN_MONGODB_PROFILER_AGENT\x10\t\x12)\n" +
	"%AGENT_TYPE_QAN_MONGODB_MONGOLOG_AGENT\x10\x12\x120\n" +
	",AGENT_TYPE_QAN_POSTGRESQL_PGSTATEMENTS_AGENT\x10\n" +
	"\x121\n" +
	"-AGENT_TYPE_QAN_POSTGRESQL_PGSTATMONITOR_AGENT\x10\r\x12 \n" +
	"\x1cAGENT_TYPE_EXTERNAL_EXPORTER\x10\f\x12\x1b\n" +
	"\x17AGENT_TYPE_RDS_EXPORTER\x10\v\x12&\n" +
	"\"AGENT_TYPE_AZURE_DATABASE_EXPORTER\x10\x0f\x12\x1a\n" +
	"\x16AGENT_TYPE_NOMAD_AGENT\x10\x102\x83\t\n" +
	"\rAgentsService\x12\x9c\x01\n" +
	"\n" +
	"ListAgents\x12\x1f.inventory.v1.ListAgentsRequest\x1a .inventory.v1.ListAgentsResponse\"K\x92A,\x12\vList Agents\x1a\x1dReturns a list of all Agents.\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/inventory/agents\x12\x9f\x01\n" +
	"\bGetAgent\x12\x1d.inventory.v1.GetAgentRequest\x1a\x1e.inventory.v1.GetAgentResponse\"T\x92A*\x12\tGet Agent\x1a\x1dReturns a single Agent by ID.\x82\xd3\xe4\x93\x02!\x12\x1f/v1/inventory/agents/{agent_id}\x12\xb1\x01\n" +
	"\fGetAgentLogs\x12!.inventory.v1.GetAgentLogsRequest\x1a\".inventory.v1.GetAgentLogsResponse\"Z\x92A+\x12\x0eGet Agent logs\x1a\x19Returns Agent logs by ID.\x82\xd3\xe4\x93\x02&\x12$/v1/inventory/agents/{agent_id}/logs\x12\xce\x01\n" +
	"\bAddAgent\x12\x1d.inventory.v1.AddAgentRequest\x1a\x1e.inventory.v1.AddAgentResponse\"\x82\x01\x92A`\x12\x19Add an Agent to Inventory\x1aCAdds an Agent to Inventory. Only one agent at a time can be passed.\x82\xd3\xe4\x93\x02\x19:\x01*\"\x14/v1/inventory/agents\x12\xe8\x01\n" +
	"\vChangeAgent\x12 .inventory.v1.ChangeAgentRequest\x1a!.inventory.v1.ChangeAgentResponse\"\x93\x01\x92Af\x12\x1cUpdate an Agent in Inventory\x1aFUpdates an Agent in Inventory. Only one agent at a time can be passed.\x82\xd3\xe4\x93\x02$:\x01*\x1a\x1f/v1/inventory/agents/{agent_id}\x12\xc0\x01\n" +
	"\vRemoveAgent\x12 .inventory.v1.RemoveAgentRequest\x1a!.inventory.v1.RemoveAgentResponse\"l\x92AB\x12\x1eRemove an Agent from Inventory\x1a Removes an Agent from Inventory.\x82\xd3\xe4\x93\x02!*\x1f/v1/inventory/agents/{agent_id}B\xa5\x01\n" +
	"\x10com.inventory.v1B\vAgentsProtoP\x01Z3github.com/percona/pmm/api/inventory/v1;inventoryv1\xa2\x02\x03IXX\xaa\x02\fInventory.V1\xca\x02\fInventory\\V1\xe2\x02\x18Inventory\\V1\\GPBMetadata\xea\x02\rInventory::V1b\x06proto3"

var (
	file_inventory_v1_agents_proto_rawDescOnce sync.Once
	file_inventory_v1_agents_proto_rawDescData []byte
)

func file_inventory_v1_agents_proto_rawDescGZIP() []byte {
	file_inventory_v1_agents_proto_rawDescOnce.Do(func() {
		file_inventory_v1_agents_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_inventory_v1_agents_proto_rawDesc), len(file_inventory_v1_agents_proto_rawDesc)))
	})
	return file_inventory_v1_agents_proto_rawDescData
}

var (
	file_inventory_v1_agents_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_inventory_v1_agents_proto_msgTypes  = make([]protoimpl.MessageInfo, 96)
	file_inventory_v1_agents_proto_goTypes   = []any{
		(AgentType)(0),                                      // 0: inventory.v1.AgentType
		(*PMMAgent)(nil),                                    // 1: inventory.v1.PMMAgent
		(*VMAgent)(nil),                                     // 2: inventory.v1.VMAgent
		(*NomadAgent)(nil),                                  // 3: inventory.v1.NomadAgent
		(*NodeExporter)(nil),                                // 4: inventory.v1.NodeExporter
		(*MySQLdExporter)(nil),                              // 5: inventory.v1.MySQLdExporter
		(*MongoDBExporter)(nil),                             // 6: inventory.v1.MongoDBExporter
		(*PostgresExporter)(nil),                            // 7: inventory.v1.PostgresExporter
		(*ProxySQLExporter)(nil),                            // 8: inventory.v1.ProxySQLExporter
		(*QANMySQLPerfSchemaAgent)(nil),                     // 9: inventory.v1.QANMySQLPerfSchemaAgent
		(*QANMySQLSlowlogAgent)(nil),                        // 10: inventory.v1.QANMySQLSlowlogAgent
		(*QANMongoDBProfilerAgent)(nil),                     // 11: inventory.v1.QANMongoDBProfilerAgent
		(*QANMongoDBMongologAgent)(nil),                     // 12: inventory.v1.QANMongoDBMongologAgent
		(*QANPostgreSQLPgStatementsAgent)(nil),              // 13: inventory.v1.QANPostgreSQLPgStatementsAgent
		(*QANPostgreSQLPgStatMonitorAgent)(nil),             // 14: inventory.v1.QANPostgreSQLPgStatMonitorAgent
		(*RDSExporter)(nil),                                 // 15: inventory.v1.RDSExporter
		(*ExternalExporter)(nil),                            // 16: inventory.v1.ExternalExporter
		(*AzureDatabaseExporter)(nil),                       // 17: inventory.v1.AzureDatabaseExporter
		(*ChangeCommonAgentParams)(nil),                     // 18: inventory.v1.ChangeCommonAgentParams
		(*ListAgentsRequest)(nil),                           // 19: inventory.v1.ListAgentsRequest
		(*ListAgentsResponse)(nil),                          // 20: inventory.v1.ListAgentsResponse
		(*GetAgentRequest)(nil),                             // 21: inventory.v1.GetAgentRequest
		(*GetAgentResponse)(nil),                            // 22: inventory.v1.GetAgentResponse
		(*GetAgentLogsRequest)(nil),                         // 23: inventory.v1.GetAgentLogsRequest
		(*GetAgentLogsResponse)(nil),                        // 24: inventory.v1.GetAgentLogsResponse
		(*AddAgentRequest)(nil),                             // 25: inventory.v1.AddAgentRequest
		(*AddAgentResponse)(nil),                            // 26: inventory.v1.AddAgentResponse
		(*ChangeAgentRequest)(nil),                          // 27: inventory.v1.ChangeAgentRequest
		(*ChangeAgentResponse)(nil),                         // 28: inventory.v1.ChangeAgentResponse
		(*AddPMMAgentParams)(nil),                           // 29: inventory.v1.AddPMMAgentParams
		(*AddNodeExporterParams)(nil),                       // 30: inventory.v1.AddNodeExporterParams
		(*ChangeNodeExporterParams)(nil),                    // 31: inventory.v1.ChangeNodeExporterParams
		(*AddMySQLdExporterParams)(nil),                     // 32: inventory.v1.AddMySQLdExporterParams
		(*ChangeMySQLdExporterParams)(nil),                  // 33: inventory.v1.ChangeMySQLdExporterParams
		(*AddMongoDBExporterParams)(nil),                    // 34: inventory.v1.AddMongoDBExporterParams
		(*ChangeMongoDBExporterParams)(nil),                 // 35: inventory.v1.ChangeMongoDBExporterParams
		(*AddPostgresExporterParams)(nil),                   // 36: inventory.v1.AddPostgresExporterParams
		(*ChangePostgresExporterParams)(nil),                // 37: inventory.v1.ChangePostgresExporterParams
		(*AddProxySQLExporterParams)(nil),                   // 38: inventory.v1.AddProxySQLExporterParams
		(*ChangeProxySQLExporterParams)(nil),                // 39: inventory.v1.ChangeProxySQLExporterParams
		(*AddQANMySQLPerfSchemaAgentParams)(nil),            // 40: inventory.v1.AddQANMySQLPerfSchemaAgentParams
		(*ChangeQANMySQLPerfSchemaAgentParams)(nil),         // 41: inventory.v1.ChangeQANMySQLPerfSchemaAgentParams
		(*AddQANMySQLSlowlogAgentParams)(nil),               // 42: inventory.v1.AddQANMySQLSlowlogAgentParams
		(*ChangeQANMySQLSlowlogAgentParams)(nil),            // 43: inventory.v1.ChangeQANMySQLSlowlogAgentParams
		(*AddQANMongoDBProfilerAgentParams)(nil),            // 44: inventory.v1.AddQANMongoDBProfilerAgentParams
		(*ChangeQANMongoDBProfilerAgentParams)(nil),         // 45: inventory.v1.ChangeQANMongoDBProfilerAgentParams
		(*AddQANMongoDBMongologAgentParams)(nil),            // 46: inventory.v1.AddQANMongoDBMongologAgentParams
		(*ChangeQANMongoDBMongologAgentParams)(nil),         // 47: inventory.v1.ChangeQANMongoDBMongologAgentParams
		(*AddQANPostgreSQLPgStatementsAgentParams)(nil),     // 48: inventory.v1.AddQANPostgreSQLPgStatementsAgentParams
		(*ChangeQANPostgreSQLPgStatementsAgentParams)(nil),  // 49: inventory.v1.ChangeQANPostgreSQLPgStatementsAgentParams
		(*AddQANPostgreSQLPgStatMonitorAgentParams)(nil),    // 50: inventory.v1.AddQANPostgreSQLPgStatMonitorAgentParams
		(*ChangeQANPostgreSQLPgStatMonitorAgentParams)(nil), // 51: inventory.v1.ChangeQANPostgreSQLPgStatMonitorAgentParams
		(*AddRDSExporterParams)(nil),                        // 52: inventory.v1.AddRDSExporterParams
		(*ChangeRDSExporterParams)(nil),                     // 53: inventory.v1.ChangeRDSExporterParams
		(*AddExternalExporterParams)(nil),                   // 54: inventory.v1.AddExternalExporterParams
		(*ChangeExternalExporterParams)(nil),                // 55: inventory.v1.ChangeExternalExporterParams
		(*AddAzureDatabaseExporterParams)(nil),              // 56: inventory.v1.AddAzureDatabaseExporterParams
		(*ChangeAzureDatabaseExporterParams)(nil),           // 57: inventory.v1.ChangeAzureDatabaseExporterParams
		(*ChangeNomadAgentParams)(nil),                      // 58: inventory.v1.ChangeNomadAgentParams
		(*RemoveAgentRequest)(nil),                          // 59: inventory.v1.RemoveAgentRequest
		(*RemoveAgentResponse)(nil),                         // 60: inventory.v1.RemoveAgentResponse
		nil,                                                 // 61: inventory.v1.PMMAgent.CustomLabelsEntry
		nil,                                                 // 62: inventory.v1.NodeExporter.CustomLabelsEntry
		nil,                                                 // 63: inventory.v1.MySQLdExporter.CustomLabelsEntry
		nil,                                                 // 64: inventory.v1.MySQLdExporter.ExtraDsnParamsEntry
		nil,                                                 // 65: inventory.v1.MongoDBExporter.CustomLabelsEntry
		nil,                                                 // 66: inventory.v1.PostgresExporter.CustomLabelsEntry
		nil,                                                 // 67: inventory.v1.ProxySQLExporter.CustomLabelsEntry
		nil,                                                 // 68: inventory.v1.QANMySQLPerfSchemaAgent.CustomLabelsEntry
		nil,                                                 // 69: inventory.v1.QANMySQLPerfSchemaAgent.ExtraDsnParamsEntry
		nil,                                                 // 70: inventory.v1.QANMySQLSlowlogAgent.CustomLabelsEntry
		nil,                                                 // 71: inventory.v1.QANMySQLSlowlogAgent.ExtraDsnParamsEntry
		nil,                                                 // 72: inventory.v1.QANMongoDBProfilerAgent.CustomLabelsEntry
		nil,                                                 // 73: inventory.v1.QANMongoDBMongologAgent.CustomLabelsEntry
		nil,                                                 // 74: inventory.v1.QANPostgreSQLPgStatementsAgent.CustomLabelsEntry
		nil,                                                 // 75: inventory.v1.QANPostgreSQLPgStatMonitorAgent.CustomLabelsEntry
		nil,                                                 // 76: inventory.v1.RDSExporter.CustomLabelsEntry
		nil,                                                 // 77: inventory.v1.ExternalExporter.CustomLabelsEntry
		nil,                                                 // 78: inventory.v1.AzureDatabaseExporter.CustomLabelsEntry
		nil,                                                 // 79: inventory.v1.AddPMMAgentParams.CustomLabelsEntry
		nil,                                                 // 80: inventory.v1.AddNodeExporterParams.CustomLabelsEntry
		nil,                                                 // 81: inventory.v1.AddMySQLdExporterParams.CustomLabelsEntry
		nil,                                                 // 82: inventory.v1.AddMySQLdExporterParams.ExtraDsnParamsEntry
		nil,                                                 // 83: inventory.v1.AddMongoDBExporterParams.CustomLabelsEntry
		nil,                                                 // 84: inventory.v1.AddPostgresExporterParams.CustomLabelsEntry
		nil,                                                 // 85: inventory.v1.AddProxySQLExporterParams.CustomLabelsEntry
		nil,                                                 // 86: inventory.v1.AddQANMySQLPerfSchemaAgentParams.CustomLabelsEntry
		nil,                                                 // 87: inventory.v1.AddQANMySQLPerfSchemaAgentParams.ExtraDsnParamsEntry
		nil,                                                 // 88: inventory.v1.AddQANMySQLSlowlogAgentParams.CustomLabelsEntry
		nil,                                                 // 89: inventory.v1.AddQANMySQLSlowlogAgentParams.ExtraDsnParamsEntry
		nil,                                                 // 90: inventory.v1.AddQANMongoDBProfilerAgentParams.CustomLabelsEntry
		nil,                                                 // 91: inventory.v1.AddQANMongoDBMongologAgentParams.CustomLabelsEntry
		nil,                                                 // 92: inventory.v1.AddQANPostgreSQLPgStatementsAgentParams.CustomLabelsEntry
		nil,                                                 // 93: inventory.v1.AddQANPostgreSQLPgStatMonitorAgentParams.CustomLabelsEntry
		nil,                                                 // 94: inventory.v1.AddRDSExporterParams.CustomLabelsEntry
		nil,                                                 // 95: inventory.v1.AddExternalExporterParams.CustomLabelsEntry
		nil,                                                 // 96: inventory.v1.AddAzureDatabaseExporterParams.CustomLabelsEntry
		(AgentStatus)(0),                                    // 97: inventory.v1.AgentStatus
		(LogLevel)(0),                                       // 98: inventory.v1.LogLevel
		(*common.MetricsResolutions)(nil),                   // 99: common.MetricsResolutions
		(*common.StringMap)(nil),                            // 100: common.StringMap
	}
)

var file_inventory_v1_agents_proto_depIdxs = []int32{
	61,  // 0: inventory.v1.PMMAgent.custom_labels:type_name -> inventory.v1.PMMAgent.CustomLabelsEntry
	97,  // 1: inventory.v1.VMAgent.status:type_name -> inventory.v1.AgentStatus
	97,  // 2: inventory.v1.NomadAgent.status:type_name -> inventory.v1.AgentStatus
	62,  // 3: inventory.v1.NodeExporter.custom_labels:type_name -> inventory.v1.NodeExporter.CustomLabelsEntry
	97,  // 4: inventory.v1.NodeExporter.status:type_name -> inventory.v1.AgentStatus
	98,  // 5: inventory.v1.NodeExporter.log_level:type_name -> inventory.v1.LogLevel
	99,  // 6: inventory.v1.NodeExporter.metrics_resolutions:type_name -> common.MetricsResolutions
	63,  // 7: inventory.v1.MySQLdExporter.custom_labels:type_name -> inventory.v1.MySQLdExporter.CustomLabelsEntry
	97,  // 8: inventory.v1.MySQLdExporter.status:type_name -> inventory.v1.AgentStatus
	98,  // 9: inventory.v1.MySQLdExporter.log_level:type_name -> inventory.v1.LogLevel
	99,  // 10: inventory.v1.MySQLdExporter.metrics_resolutions:type_name -> common.MetricsResolutions
	64,  // 11: inventory.v1.MySQLdExporter.extra_dsn_params:type_name -> inventory.v1.MySQLdExporter.ExtraDsnParamsEntry
	65,  // 12: inventory.v1.MongoDBExporter.custom_labels:type_name -> inventory.v1.MongoDBExporter.CustomLabelsEntry
	97,  // 13: inventory.v1.MongoDBExporter.status:type_name -> inventory.v1.AgentStatus
	98,  // 14: inventory.v1.MongoDBExporter.log_level:type_name -> inventory.v1.LogLevel
	99,  // 15: inventory.v1.MongoDBExporter.metrics_resolutions:type_name -> common.MetricsResolutions
	66,  // 16: inventory.v1.PostgresExporter.custom_labels:type_name -> inventory.v1.PostgresExporter.CustomLabelsEntry
	97,  // 17: inventory.v1.PostgresExporter.status:type_name -> inventory.v1.AgentStatus
	98,  // 18: inventory.v1.PostgresExporter.log_level:type_name -> inventory.v1.LogLevel
	99,  // 19: inventory.v1.PostgresExporter.metrics_resolutions:type_name -> common.MetricsResolutions
	67,  // 20: inventory.v1.ProxySQLExporter.custom_labels:type_name -> inventory.v1.ProxySQLExporter.CustomLabelsEntry
	97,  // 21: inventory.v1.ProxySQLExporter.status:type_name -> inventory.v1.AgentStatus
	98,  // 22: inventory.v1.ProxySQLExporter.log_level:type_name -> inventory.v1.LogLevel
	99,  // 23: inventory.v1.ProxySQLExporter.metrics_resolutions:type_name -> common.MetricsResolutions
	68,  // 24: inventory.v1.QANMySQLPerfSchemaAgent.custom_labels:type_name -> inventory.v1.QANMySQLPerfSchemaAgent.CustomLabelsEntry
	97,  // 25: inventory.v1.QANMySQLPerfSchemaAgent.status:type_name -> inventory.v1.AgentStatus
	98,  // 26: inventory.v1.QANMySQLPerfSchemaAgent.log_level:type_name -> inventory.v1.LogLevel
	69,  // 27: inventory.v1.QANMySQLPerfSchemaAgent.extra_dsn_params:type_name -> inventory.v1.QANMySQLPerfSchemaAgent.ExtraDsnParamsEntry
	70,  // 28: inventory.v1.QANMySQLSlowlogAgent.custom_labels:type_name -> inventory.v1.QANMySQLSlowlogAgent.CustomLabelsEntry
	97,  // 29: inventory.v1.QANMySQLSlowlogAgent.status:type_name -> inventory.v1.AgentStatus
	98,  // 30: inventory.v1.QANMySQLSlowlogAgent.log_level:type_name -> inventory.v1.LogLevel
	71,  // 31: inventory.v1.QANMySQLSlowlogAgent.extra_dsn_params:type_name -> inventory.v1.QANMySQLSlowlogAgent.ExtraDsnParamsEntry
	72,  // 32: inventory.v1.QANMongoDBProfilerAgent.custom_labels:type_name -> inventory.v1.QANMongoDBProfilerAgent.CustomLabelsEntry
	97,  // 33: inventory.v1.QANMongoDBProfilerAgent.status:type_name -> inventory.v1.AgentStatus
	98,  // 34: inventory.v1.QANMongoDBProfilerAgent.log_level:type_name -> inventory.v1.LogLevel
	73,  // 35: inventory.v1.QANMongoDBMongologAgent.custom_labels:type_name -> inventory.v1.QANMongoDBMongologAgent.CustomLabelsEntry
	97,  // 36: inventory.v1.QANMongoDBMongologAgent.status:type_name -> inventory.v1.AgentStatus
	98,  // 37: inventory.v1.QANMongoDBMongologAgent.log_level:type_name -> inventory.v1.LogLevel
	74,  // 38: inventory.v1.QANPostgreSQLPgStatementsAgent.custom_labels:type_name -> inventory.v1.QANPostgreSQLPgStatementsAgent.CustomLabelsEntry
	97,  // 39: inventory.v1.QANPostgreSQLPgStatementsAgent.status:type_name -> inventory.v1.AgentStatus
	98,  // 40: inventory.v1.QANPostgreSQLPgStatementsAgent.log_level:type_name -> inventory.v1.LogLevel
	75,  // 41: inventory.v1.QANPostgreSQLPgStatMonitorAgent.custom_labels:type_name -> inventory.v1.QANPostgreSQLPgStatMonitorAgent.CustomLabelsEntry
	97,  // 42: inventory.v1.QANPostgreSQLPgStatMonitorAgent.status:type_name -> inventory.v1.AgentStatus
	98,  // 43: inventory.v1.QANPostgreSQLPgStatMonitorAgent.log_level:type_name -> inventory.v1.LogLevel
	76,  // 44: inventory.v1.RDSExporter.custom_labels:type_name -> inventory.v1.RDSExporter.CustomLabelsEntry
	97,  // 45: inventory.v1.RDSExporter.status:type_name -> inventory.v1.AgentStatus
	98,  // 46: inventory.v1.RDSExporter.log_level:type_name -> inventory.v1.LogLevel
	99,  // 47: inventory.v1.RDSExporter.metrics_resolutions:type_name -> common.MetricsResolutions
	77,  // 48: inventory.v1.ExternalExporter.custom_labels:type_name -> inventory.v1.ExternalExporter.CustomLabelsEntry
	99,  // 49: inventory.v1.ExternalExporter.metrics_resolutions:type_name -> common.MetricsResolutions
	78,  // 50: inventory.v1.AzureDatabaseExporter.custom_labels:type_name -> inventory.v1.AzureDatabaseExporter.CustomLabelsEntry
	97,  // 51: inventory.v1.AzureDatabaseExporter.status:type_name -> inventory.v1.AgentStatus
	98,  // 52: inventory.v1.AzureDatabaseExporter.log_level:type_name -> inventory.v1.LogLevel
	99,  // 53: inventory.v1.AzureDatabaseExporter.metrics_resolutions:type_name -> common.MetricsResolutions
	100, // 54: inventory.v1.ChangeCommonAgentParams.custom_labels:type_name -> common.StringMap
	99,  // 55: inventory.v1.ChangeCommonAgentParams.metrics_resolutions:type_name -> common.MetricsResolutions
	0,   // 56: inventory.v1.ListAgentsRequest.agent_type:type_name -> inventory.v1.AgentType
	1,   // 57: inventory.v1.ListAgentsResponse.pmm_agent:type_name -> inventory.v1.PMMAgent
	2,   // 58: inventory.v1.ListAgentsResponse.vm_agent:type_name -> inventory.v1.VMAgent
	4,   // 59: inventory.v1.ListAgentsResponse.node_exporter:type_name -> inventory.v1.NodeExporter
	5,   // 60: inventory.v1.ListAgentsResponse.mysqld_exporter:type_name -> inventory.v1.MySQLdExporter
	6,   // 61: inventory.v1.ListAgentsResponse.mongodb_exporter:type_name -> inventory.v1.MongoDBExporter
	7,   // 62: inventory.v1.ListAgentsResponse.postgres_exporter:type_name -> inventory.v1.PostgresExporter
	8,   // 63: inventory.v1.ListAgentsResponse.proxysql_exporter:type_name -> inventory.v1.ProxySQLExporter
	9,   // 64: inventory.v1.ListAgentsResponse.qan_mysql_perfschema_agent:type_name -> inventory.v1.QANMySQLPerfSchemaAgent
	10,  // 65: inventory.v1.ListAgentsResponse.qan_mysql_slowlog_agent:type_name -> inventory.v1.QANMySQLSlowlogAgent
	11,  // 66: inventory.v1.ListAgentsResponse.qan_mongodb_profiler_agent:type_name -> inventory.v1.QANMongoDBProfilerAgent
	12,  // 67: inventory.v1.ListAgentsResponse.qan_mongodb_mongolog_agent:type_name -> inventory.v1.QANMongoDBMongologAgent
	13,  // 68: inventory.v1.ListAgentsResponse.qan_postgresql_pgstatements_agent:type_name -> inventory.v1.QANPostgreSQLPgStatementsAgent
	14,  // 69: inventory.v1.ListAgentsResponse.qan_postgresql_pgstatmonitor_agent:type_name -> inventory.v1.QANPostgreSQLPgStatMonitorAgent
	16,  // 70: inventory.v1.ListAgentsResponse.external_exporter:type_name -> inventory.v1.ExternalExporter
	15,  // 71: inventory.v1.ListAgentsResponse.rds_exporter:type_name -> inventory.v1.RDSExporter
	17,  // 72: inventory.v1.ListAgentsResponse.azure_database_exporter:type_name -> inventory.v1.AzureDatabaseExporter
	3,   // 73: inventory.v1.ListAgentsResponse.nomad_agent:type_name -> inventory.v1.NomadAgent
	1,   // 74: inventory.v1.GetAgentResponse.pmm_agent:type_name -> inventory.v1.PMMAgent
	2,   // 75: inventory.v1.GetAgentResponse.vmagent:type_name -> inventory.v1.VMAgent
	4,   // 76: inventory.v1.GetAgentResponse.node_exporter:type_name -> inventory.v1.NodeExporter
	5,   // 77: inventory.v1.GetAgentResponse.mysqld_exporter:type_name -> inventory.v1.MySQLdExporter
	6,   // 78: inventory.v1.GetAgentResponse.mongodb_exporter:type_name -> inventory.v1.MongoDBExporter
	7,   // 79: inventory.v1.GetAgentResponse.postgres_exporter:type_name -> inventory.v1.PostgresExporter
	8,   // 80: inventory.v1.GetAgentResponse.proxysql_exporter:type_name -> inventory.v1.ProxySQLExporter
	9,   // 81: inventory.v1.GetAgentResponse.qan_mysql_perfschema_agent:type_name -> inventory.v1.QANMySQLPerfSchemaAgent
	10,  // 82: inventory.v1.GetAgentResponse.qan_mysql_slowlog_agent:type_name -> inventory.v1.QANMySQLSlowlogAgent
	11,  // 83: inventory.v1.GetAgentResponse.qan_mongodb_profiler_agent:type_name -> inventory.v1.QANMongoDBProfilerAgent
	12,  // 84: inventory.v1.GetAgentResponse.qan_mongodb_mongolog_agent:type_name -> inventory.v1.QANMongoDBMongologAgent
	13,  // 85: inventory.v1.GetAgentResponse.qan_postgresql_pgstatements_agent:type_name -> inventory.v1.QANPostgreSQLPgStatementsAgent
	14,  // 86: inventory.v1.GetAgentResponse.qan_postgresql_pgstatmonitor_agent:type_name -> inventory.v1.QANPostgreSQLPgStatMonitorAgent
	16,  // 87: inventory.v1.GetAgentResponse.external_exporter:type_name -> inventory.v1.ExternalExporter
	15,  // 88: inventory.v1.GetAgentResponse.rds_exporter:type_name -> inventory.v1.RDSExporter
	17,  // 89: inventory.v1.GetAgentResponse.azure_database_exporter:type_name -> inventory.v1.AzureDatabaseExporter
	3,   // 90: inventory.v1.GetAgentResponse.nomad_agent:type_name -> inventory.v1.NomadAgent
	29,  // 91: inventory.v1.AddAgentRequest.pmm_agent:type_name -> inventory.v1.AddPMMAgentParams
	30,  // 92: inventory.v1.AddAgentRequest.node_exporter:type_name -> inventory.v1.AddNodeExporterParams
	32,  // 93: inventory.v1.AddAgentRequest.mysqld_exporter:type_name -> inventory.v1.AddMySQLdExporterParams
	34,  // 94: inventory.v1.AddAgentRequest.mongodb_exporter:type_name -> inventory.v1.AddMongoDBExporterParams
	36,  // 95: inventory.v1.AddAgentRequest.postgres_exporter:type_name -> inventory.v1.AddPostgresExporterParams
	38,  // 96: inventory.v1.AddAgentRequest.proxysql_exporter:type_name -> inventory.v1.AddProxySQLExporterParams
	54,  // 97: inventory.v1.AddAgentRequest.external_exporter:type_name -> inventory.v1.AddExternalExporterParams
	52,  // 98: inventory.v1.AddAgentRequest.rds_exporter:type_name -> inventory.v1.AddRDSExporterParams
	56,  // 99: inventory.v1.AddAgentRequest.azure_database_exporter:type_name -> inventory.v1.AddAzureDatabaseExporterParams
	40,  // 100: inventory.v1.AddAgentRequest.qan_mysql_perfschema_agent:type_name -> inventory.v1.AddQANMySQLPerfSchemaAgentParams
	42,  // 101: inventory.v1.AddAgentRequest.qan_mysql_slowlog_agent:type_name -> inventory.v1.AddQANMySQLSlowlogAgentParams
	44,  // 102: inventory.v1.AddAgentRequest.qan_mongodb_profiler_agent:type_name -> inventory.v1.AddQANMongoDBProfilerAgentParams
	46,  // 103: inventory.v1.AddAgentRequest.qan_mongodb_mongolog_agent:type_name -> inventory.v1.AddQANMongoDBMongologAgentParams
	48,  // 104: inventory.v1.AddAgentRequest.qan_postgresql_pgstatements_agent:type_name -> inventory.v1.AddQANPostgreSQLPgStatementsAgentParams
	50,  // 105: inventory.v1.AddAgentRequest.qan_postgresql_pgstatmonitor_agent:type_name -> inventory.v1.AddQANPostgreSQLPgStatMonitorAgentParams
	1,   // 106: inventory.v1.AddAgentResponse.pmm_agent:type_name -> inventory.v1.PMMAgent
	4,   // 107: inventory.v1.AddAgentResponse.node_exporter:type_name -> inventory.v1.NodeExporter
	5,   // 108: inventory.v1.AddAgentResponse.mysqld_exporter:type_name -> inventory.v1.MySQLdExporter
	6,   // 109: inventory.v1.AddAgentResponse.mongodb_exporter:type_name -> inventory.v1.MongoDBExporter
	7,   // 110: inventory.v1.AddAgentResponse.postgres_exporter:type_name -> inventory.v1.PostgresExporter
	8,   // 111: inventory.v1.AddAgentResponse.proxysql_exporter:type_name -> inventory.v1.ProxySQLExporter
	16,  // 112: inventory.v1.AddAgentResponse.external_exporter:type_name -> inventory.v1.ExternalExporter
	15,  // 113: inventory.v1.AddAgentResponse.rds_exporter:type_name -> inventory.v1.RDSExporter
	17,  // 114: inventory.v1.AddAgentResponse.azure_database_exporter:type_name -> inventory.v1.AzureDatabaseExporter
	9,   // 115: inventory.v1.AddAgentResponse.qan_mysql_perfschema_agent:type_name -> inventory.v1.QANMySQLPerfSchemaAgent
	10,  // 116: inventory.v1.AddAgentResponse.qan_mysql_slowlog_agent:type_name -> inventory.v1.QANMySQLSlowlogAgent
	11,  // 117: inventory.v1.AddAgentResponse.qan_mongodb_profiler_agent:type_name -> inventory.v1.QANMongoDBProfilerAgent
	12,  // 118: inventory.v1.AddAgentResponse.qan_mongodb_mongolog_agent:type_name -> inventory.v1.QANMongoDBMongologAgent
	13,  // 119: inventory.v1.AddAgentResponse.qan_postgresql_pgstatements_agent:type_name -> inventory.v1.QANPostgreSQLPgStatementsAgent
	14,  // 120: inventory.v1.AddAgentResponse.qan_postgresql_pgstatmonitor_agent:type_name -> inventory.v1.QANPostgreSQLPgStatMonitorAgent
	31,  // 121: inventory.v1.ChangeAgentRequest.node_exporter:type_name -> inventory.v1.ChangeNodeExporterParams
	33,  // 122: inventory.v1.ChangeAgentRequest.mysqld_exporter:type_name -> inventory.v1.ChangeMySQLdExporterParams
	35,  // 123: inventory.v1.ChangeAgentRequest.mongodb_exporter:type_name -> inventory.v1.ChangeMongoDBExporterParams
	37,  // 124: inventory.v1.ChangeAgentRequest.postgres_exporter:type_name -> inventory.v1.ChangePostgresExporterParams
	39,  // 125: inventory.v1.ChangeAgentRequest.proxysql_exporter:type_name -> inventory.v1.ChangeProxySQLExporterParams
	55,  // 126: inventory.v1.ChangeAgentRequest.external_exporter:type_name -> inventory.v1.ChangeExternalExporterParams
	53,  // 127: inventory.v1.ChangeAgentRequest.rds_exporter:type_name -> inventory.v1.ChangeRDSExporterParams
	57,  // 128: inventory.v1.ChangeAgentRequest.azure_database_exporter:type_name -> inventory.v1.ChangeAzureDatabaseExporterParams
	41,  // 129: inventory.v1.ChangeAgentRequest.qan_mysql_perfschema_agent:type_name -> inventory.v1.ChangeQANMySQLPerfSchemaAgentParams
	43,  // 130: inventory.v1.ChangeAgentRequest.qan_mysql_slowlog_agent:type_name -> inventory.v1.ChangeQANMySQLSlowlogAgentParams
	45,  // 131: inventory.v1.ChangeAgentRequest.qan_mongodb_profiler_agent:type_name -> inventory.v1.ChangeQANMongoDBProfilerAgentParams
	47,  // 132: inventory.v1.ChangeAgentRequest.qan_mongodb_mongolog_agent:type_name -> inventory.v1.ChangeQANMongoDBMongologAgentParams
	49,  // 133: inventory.v1.ChangeAgentRequest.qan_postgresql_pgstatements_agent:type_name -> inventory.v1.ChangeQANPostgreSQLPgStatementsAgentParams
	51,  // 134: inventory.v1.ChangeAgentRequest.qan_postgresql_pgstatmonitor_agent:type_name -> inventory.v1.ChangeQANPostgreSQLPgStatMonitorAgentParams
	58,  // 135: inventory.v1.ChangeAgentRequest.nomad_agent:type_name -> inventory.v1.ChangeNomadAgentParams
	4,   // 136: inventory.v1.ChangeAgentResponse.node_exporter:type_name -> inventory.v1.NodeExporter
	5,   // 137: inventory.v1.ChangeAgentResponse.mysqld_exporter:type_name -> inventory.v1.MySQLdExporter
	6,   // 138: inventory.v1.ChangeAgentResponse.mongodb_exporter:type_name -> inventory.v1.MongoDBExporter
	7,   // 139: inventory.v1.ChangeAgentResponse.postgres_exporter:type_name -> inventory.v1.PostgresExporter
	8,   // 140: inventory.v1.ChangeAgentResponse.proxysql_exporter:type_name -> inventory.v1.ProxySQLExporter
	16,  // 141: inventory.v1.ChangeAgentResponse.external_exporter:type_name -> inventory.v1.ExternalExporter
	15,  // 142: inventory.v1.ChangeAgentResponse.rds_exporter:type_name -> inventory.v1.RDSExporter
	17,  // 143: inventory.v1.ChangeAgentResponse.azure_database_exporter:type_name -> inventory.v1.AzureDatabaseExporter
	9,   // 144: inventory.v1.ChangeAgentResponse.qan_mysql_perfschema_agent:type_name -> inventory.v1.QANMySQLPerfSchemaAgent
	10,  // 145: inventory.v1.ChangeAgentResponse.qan_mysql_slowlog_agent:type_name -> inventory.v1.QANMySQLSlowlogAgent
	11,  // 146: inventory.v1.ChangeAgentResponse.qan_mongodb_profiler_agent:type_name -> inventory.v1.QANMongoDBProfilerAgent
	12,  // 147: inventory.v1.ChangeAgentResponse.qan_mongodb_mongolog_agent:type_name -> inventory.v1.QANMongoDBMongologAgent
	13,  // 148: inventory.v1.ChangeAgentResponse.qan_postgresql_pgstatements_agent:type_name -> inventory.v1.QANPostgreSQLPgStatementsAgent
	14,  // 149: inventory.v1.ChangeAgentResponse.qan_postgresql_pgstatmonitor_agent:type_name -> inventory.v1.QANPostgreSQLPgStatMonitorAgent
	3,   // 150: inventory.v1.ChangeAgentResponse.nomad_agent:type_name -> inventory.v1.NomadAgent
	79,  // 151: inventory.v1.AddPMMAgentParams.custom_labels:type_name -> inventory.v1.AddPMMAgentParams.CustomLabelsEntry
	80,  // 152: inventory.v1.AddNodeExporterParams.custom_labels:type_name -> inventory.v1.AddNodeExporterParams.CustomLabelsEntry
	98,  // 153: inventory.v1.AddNodeExporterParams.log_level:type_name -> inventory.v1.LogLevel
	100, // 154: inventory.v1.ChangeNodeExporterParams.custom_labels:type_name -> common.StringMap
	99,  // 155: inventory.v1.ChangeNodeExporterParams.metrics_resolutions:type_name -> common.MetricsResolutions
	81,  // 156: inventory.v1.AddMySQLdExporterParams.custom_labels:type_name -> inventory.v1.AddMySQLdExporterParams.CustomLabelsEntry
	98,  // 157: inventory.v1.AddMySQLdExporterParams.log_level:type_name -> inventory.v1.LogLevel
	82,  // 158: inventory.v1.AddMySQLdExporterParams.extra_dsn_params:type_name -> inventory.v1.AddMySQLdExporterParams.ExtraDsnParamsEntry
	100, // 159: inventory.v1.ChangeMySQLdExporterParams.custom_labels:type_name -> common.StringMap
	99,  // 160: inventory.v1.ChangeMySQLdExporterParams.metrics_resolutions:type_name -> common.MetricsResolutions
	83,  // 161: inventory.v1.AddMongoDBExporterParams.custom_labels:type_name -> inventory.v1.AddMongoDBExporterParams.CustomLabelsEntry
	98,  // 162: inventory.v1.AddMongoDBExporterParams.log_level:type_name -> inventory.v1.LogLevel
	100, // 163: inventory.v1.ChangeMongoDBExporterParams.custom_labels:type_name -> common.StringMap
	99,  // 164: inventory.v1.ChangeMongoDBExporterParams.metrics_resolutions:type_name -> common.MetricsResolutions
	84,  // 165: inventory.v1.AddPostgresExporterParams.custom_labels:type_name -> inventory.v1.AddPostgresExporterParams.CustomLabelsEntry
	98,  // 166: inventory.v1.AddPostgresExporterParams.log_level:type_name -> inventory.v1.LogLevel
	100, // 167: inventory.v1.ChangePostgresExporterParams.custom_labels:type_name -> common.StringMap
	99,  // 168: inventory.v1.ChangePostgresExporterParams.metrics_resolutions:type_name -> common.MetricsResolutions
	85,  // 169: inventory.v1.AddProxySQLExporterParams.custom_labels:type_name -> inventory.v1.AddProxySQLExporterParams.CustomLabelsEntry
	98,  // 170: inventory.v1.AddProxySQLExporterParams.log_level:type_name -> inventory.v1.LogLevel
	100, // 171: inventory.v1.ChangeProxySQLExporterParams.custom_labels:type_name -> common.StringMap
	99,  // 172: inventory.v1.ChangeProxySQLExporterParams.metrics_resolutions:type_name -> common.MetricsResolutions
	86,  // 173: inventory.v1.AddQANMySQLPerfSchemaAgentParams.custom_labels:type_name -> inventory.v1.AddQANMySQLPerfSchemaAgentParams.CustomLabelsEntry
	98,  // 174: inventory.v1.AddQANMySQLPerfSchemaAgentParams.log_level:type_name -> inventory.v1.LogLevel
	87,  // 175: inventory.v1.AddQANMySQLPerfSchemaAgentParams.extra_dsn_params:type_name -> inventory.v1.AddQANMySQLPerfSchemaAgentParams.ExtraDsnParamsEntry
	100, // 176: inventory.v1.ChangeQANMySQLPerfSchemaAgentParams.custom_labels:type_name -> common.StringMap
	99,  // 177: inventory.v1.ChangeQANMySQLPerfSchemaAgentParams.metrics_resolutions:type_name -> common.MetricsResolutions
	88,  // 178: inventory.v1.AddQANMySQLSlowlogAgentParams.custom_labels:type_name -> inventory.v1.AddQANMySQLSlowlogAgentParams.CustomLabelsEntry
	98,  // 179: inventory.v1.AddQANMySQLSlowlogAgentParams.log_level:type_name -> inventory.v1.LogLevel
	89,  // 180: inventory.v1.AddQANMySQLSlowlogAgentParams.extra_dsn_params:type_name -> inventory.v1.AddQANMySQLSlowlogAgentParams.ExtraDsnParamsEntry
	100, // 181: inventory.v1.ChangeQANMySQLSlowlogAgentParams.custom_labels:type_name -> common.StringMap
	99,  // 182: inventory.v1.ChangeQANMySQLSlowlogAgentParams.metrics_resolutions:type_name -> common.MetricsResolutions
	90,  // 183: inventory.v1.AddQANMongoDBProfilerAgentParams.custom_labels:type_name -> inventory.v1.AddQANMongoDBProfilerAgentParams.CustomLabelsEntry
	98,  // 184: inventory.v1.AddQANMongoDBProfilerAgentParams.log_level:type_name -> inventory.v1.LogLevel
	100, // 185: inventory.v1.ChangeQANMongoDBProfilerAgentParams.custom_labels:type_name -> common.StringMap
	99,  // 186: inventory.v1.ChangeQANMongoDBProfilerAgentParams.metrics_resolutions:type_name -> common.MetricsResolutions
	91,  // 187: inventory.v1.AddQANMongoDBMongologAgentParams.custom_labels:type_name -> inventory.v1.AddQANMongoDBMongologAgentParams.CustomLabelsEntry
	98,  // 188: inventory.v1.AddQANMongoDBMongologAgentParams.log_level:type_name -> inventory.v1.LogLevel
	100, // 189: inventory.v1.ChangeQANMongoDBMongologAgentParams.custom_labels:type_name -> common.StringMap
	99,  // 190: inventory.v1.ChangeQANMongoDBMongologAgentParams.metrics_resolutions:type_name -> common.MetricsResolutions
	92,  // 191: inventory.v1.AddQANPostgreSQLPgStatementsAgentParams.custom_labels:type_name -> inventory.v1.AddQANPostgreSQLPgStatementsAgentParams.CustomLabelsEntry
	98,  // 192: inventory.v1.AddQANPostgreSQLPgStatementsAgentParams.log_level:type_name -> inventory.v1.LogLevel
	100, // 193: inventory.v1.ChangeQANPostgreSQLPgStatementsAgentParams.custom_labels:type_name -> common.StringMap
	99,  // 194: inventory.v1.ChangeQANPostgreSQLPgStatementsAgentParams.metrics_resolutions:type_name -> common.MetricsResolutions
	93,  // 195: inventory.v1.AddQANPostgreSQLPgStatMonitorAgentParams.custom_labels:type_name -> inventory.v1.AddQANPostgreSQLPgStatMonitorAgentParams.CustomLabelsEntry
	98,  // 196: inventory.v1.AddQANPostgreSQLPgStatMonitorAgentParams.log_level:type_name -> inventory.v1.LogLevel
	100, // 197: inventory.v1.ChangeQANPostgreSQLPgStatMonitorAgentParams.custom_labels:type_name -> common.StringMap
	99,  // 198: inventory.v1.ChangeQANPostgreSQLPgStatMonitorAgentParams.metrics_resolutions:type_name -> common.MetricsResolutions
	94,  // 199: inventory.v1.AddRDSExporterParams.custom_labels:type_name -> inventory.v1.AddRDSExporterParams.CustomLabelsEntry
	98,  // 200: inventory.v1.AddRDSExporterParams.log_level:type_name -> inventory.v1.LogLevel
	100, // 201: inventory.v1.ChangeRDSExporterParams.custom_labels:type_name -> common.StringMap
	99,  // 202: inventory.v1.ChangeRDSExporterParams.metrics_resolutions:type_name -> common.MetricsResolutions
	95,  // 203: inventory.v1.AddExternalExporterParams.custom_labels:type_name -> inventory.v1.AddExternalExporterParams.CustomLabelsEntry
	100, // 204: inventory.v1.ChangeExternalExporterParams.custom_labels:type_name -> common.StringMap
	99,  // 205: inventory.v1.ChangeExternalExporterParams.metrics_resolutions:type_name -> common.MetricsResolutions
	96,  // 206: inventory.v1.AddAzureDatabaseExporterParams.custom_labels:type_name -> inventory.v1.AddAzureDatabaseExporterParams.CustomLabelsEntry
	98,  // 207: inventory.v1.AddAzureDatabaseExporterParams.log_level:type_name -> inventory.v1.LogLevel
	100, // 208: inventory.v1.ChangeAzureDatabaseExporterParams.custom_labels:type_name -> common.StringMap
	99,  // 209: inventory.v1.ChangeAzureDatabaseExporterParams.metrics_resolutions:type_name -> common.MetricsResolutions
	19,  // 210: inventory.v1.AgentsService.ListAgents:input_type -> inventory.v1.ListAgentsRequest
	21,  // 211: inventory.v1.AgentsService.GetAgent:input_type -> inventory.v1.GetAgentRequest
	23,  // 212: inventory.v1.AgentsService.GetAgentLogs:input_type -> inventory.v1.GetAgentLogsRequest
	25,  // 213: inventory.v1.AgentsService.AddAgent:input_type -> inventory.v1.AddAgentRequest
	27,  // 214: inventory.v1.AgentsService.ChangeAgent:input_type -> inventory.v1.ChangeAgentRequest
	59,  // 215: inventory.v1.AgentsService.RemoveAgent:input_type -> inventory.v1.RemoveAgentRequest
	20,  // 216: inventory.v1.AgentsService.ListAgents:output_type -> inventory.v1.ListAgentsResponse
	22,  // 217: inventory.v1.AgentsService.GetAgent:output_type -> inventory.v1.GetAgentResponse
	24,  // 218: inventory.v1.AgentsService.GetAgentLogs:output_type -> inventory.v1.GetAgentLogsResponse
	26,  // 219: inventory.v1.AgentsService.AddAgent:output_type -> inventory.v1.AddAgentResponse
	28,  // 220: inventory.v1.AgentsService.ChangeAgent:output_type -> inventory.v1.ChangeAgentResponse
	60,  // 221: inventory.v1.AgentsService.RemoveAgent:output_type -> inventory.v1.RemoveAgentResponse
	216, // [216:222] is the sub-list for method output_type
	210, // [210:216] is the sub-list for method input_type
	210, // [210:210] is the sub-list for extension type_name
	210, // [210:210] is the sub-list for extension extendee
	0,   // [0:210] is the sub-list for field type_name
}

func init() { file_inventory_v1_agents_proto_init() }
func file_inventory_v1_agents_proto_init() {
	if File_inventory_v1_agents_proto != nil {
		return
	}
	file_inventory_v1_agent_status_proto_init()
	file_inventory_v1_log_level_proto_init()
	file_inventory_v1_agents_proto_msgTypes[17].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[21].OneofWrappers = []any{
		(*GetAgentResponse_PmmAgent)(nil),
		(*GetAgentResponse_Vmagent)(nil),
		(*GetAgentResponse_NodeExporter)(nil),
		(*GetAgentResponse_MysqldExporter)(nil),
		(*GetAgentResponse_MongodbExporter)(nil),
		(*GetAgentResponse_PostgresExporter)(nil),
		(*GetAgentResponse_ProxysqlExporter)(nil),
		(*GetAgentResponse_QanMysqlPerfschemaAgent)(nil),
		(*GetAgentResponse_QanMysqlSlowlogAgent)(nil),
		(*GetAgentResponse_QanMongodbProfilerAgent)(nil),
		(*GetAgentResponse_QanMongodbMongologAgent)(nil),
		(*GetAgentResponse_QanPostgresqlPgstatementsAgent)(nil),
		(*GetAgentResponse_QanPostgresqlPgstatmonitorAgent)(nil),
		(*GetAgentResponse_ExternalExporter)(nil),
		(*GetAgentResponse_RdsExporter)(nil),
		(*GetAgentResponse_AzureDatabaseExporter)(nil),
		(*GetAgentResponse_NomadAgent)(nil),
	}
	file_inventory_v1_agents_proto_msgTypes[24].OneofWrappers = []any{
		(*AddAgentRequest_PmmAgent)(nil),
		(*AddAgentRequest_NodeExporter)(nil),
		(*AddAgentRequest_MysqldExporter)(nil),
		(*AddAgentRequest_MongodbExporter)(nil),
		(*AddAgentRequest_PostgresExporter)(nil),
		(*AddAgentRequest_ProxysqlExporter)(nil),
		(*AddAgentRequest_ExternalExporter)(nil),
		(*AddAgentRequest_RdsExporter)(nil),
		(*AddAgentRequest_AzureDatabaseExporter)(nil),
		(*AddAgentRequest_QanMysqlPerfschemaAgent)(nil),
		(*AddAgentRequest_QanMysqlSlowlogAgent)(nil),
		(*AddAgentRequest_QanMongodbProfilerAgent)(nil),
		(*AddAgentRequest_QanMongodbMongologAgent)(nil),
		(*AddAgentRequest_QanPostgresqlPgstatementsAgent)(nil),
		(*AddAgentRequest_QanPostgresqlPgstatmonitorAgent)(nil),
	}
	file_inventory_v1_agents_proto_msgTypes[25].OneofWrappers = []any{
		(*AddAgentResponse_PmmAgent)(nil),
		(*AddAgentResponse_NodeExporter)(nil),
		(*AddAgentResponse_MysqldExporter)(nil),
		(*AddAgentResponse_MongodbExporter)(nil),
		(*AddAgentResponse_PostgresExporter)(nil),
		(*AddAgentResponse_ProxysqlExporter)(nil),
		(*AddAgentResponse_ExternalExporter)(nil),
		(*AddAgentResponse_RdsExporter)(nil),
		(*AddAgentResponse_AzureDatabaseExporter)(nil),
		(*AddAgentResponse_QanMysqlPerfschemaAgent)(nil),
		(*AddAgentResponse_QanMysqlSlowlogAgent)(nil),
		(*AddAgentResponse_QanMongodbProfilerAgent)(nil),
		(*AddAgentResponse_QanMongodbMongologAgent)(nil),
		(*AddAgentResponse_QanPostgresqlPgstatementsAgent)(nil),
		(*AddAgentResponse_QanPostgresqlPgstatmonitorAgent)(nil),
	}
	file_inventory_v1_agents_proto_msgTypes[26].OneofWrappers = []any{
		(*ChangeAgentRequest_NodeExporter)(nil),
		(*ChangeAgentRequest_MysqldExporter)(nil),
		(*ChangeAgentRequest_MongodbExporter)(nil),
		(*ChangeAgentRequest_PostgresExporter)(nil),
		(*ChangeAgentRequest_ProxysqlExporter)(nil),
		(*ChangeAgentRequest_ExternalExporter)(nil),
		(*ChangeAgentRequest_RdsExporter)(nil),
		(*ChangeAgentRequest_AzureDatabaseExporter)(nil),
		(*ChangeAgentRequest_QanMysqlPerfschemaAgent)(nil),
		(*ChangeAgentRequest_QanMysqlSlowlogAgent)(nil),
		(*ChangeAgentRequest_QanMongodbProfilerAgent)(nil),
		(*ChangeAgentRequest_QanMongodbMongologAgent)(nil),
		(*ChangeAgentRequest_QanPostgresqlPgstatementsAgent)(nil),
		(*ChangeAgentRequest_QanPostgresqlPgstatmonitorAgent)(nil),
		(*ChangeAgentRequest_NomadAgent)(nil),
	}
	file_inventory_v1_agents_proto_msgTypes[27].OneofWrappers = []any{
		(*ChangeAgentResponse_NodeExporter)(nil),
		(*ChangeAgentResponse_MysqldExporter)(nil),
		(*ChangeAgentResponse_MongodbExporter)(nil),
		(*ChangeAgentResponse_PostgresExporter)(nil),
		(*ChangeAgentResponse_ProxysqlExporter)(nil),
		(*ChangeAgentResponse_ExternalExporter)(nil),
		(*ChangeAgentResponse_RdsExporter)(nil),
		(*ChangeAgentResponse_AzureDatabaseExporter)(nil),
		(*ChangeAgentResponse_QanMysqlPerfschemaAgent)(nil),
		(*ChangeAgentResponse_QanMysqlSlowlogAgent)(nil),
		(*ChangeAgentResponse_QanMongodbProfilerAgent)(nil),
		(*ChangeAgentResponse_QanMongodbMongologAgent)(nil),
		(*ChangeAgentResponse_QanPostgresqlPgstatementsAgent)(nil),
		(*ChangeAgentResponse_QanPostgresqlPgstatmonitorAgent)(nil),
		(*ChangeAgentResponse_NomadAgent)(nil),
	}
	file_inventory_v1_agents_proto_msgTypes[30].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[32].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[34].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[36].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[38].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[40].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[42].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[44].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[46].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[48].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[50].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[52].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[54].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[56].OneofWrappers = []any{}
	file_inventory_v1_agents_proto_msgTypes[57].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_inventory_v1_agents_proto_rawDesc), len(file_inventory_v1_agents_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   96,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_inventory_v1_agents_proto_goTypes,
		DependencyIndexes: file_inventory_v1_agents_proto_depIdxs,
		EnumInfos:         file_inventory_v1_agents_proto_enumTypes,
		MessageInfos:      file_inventory_v1_agents_proto_msgTypes,
	}.Build()
	File_inventory_v1_agents_proto = out.File
	file_inventory_v1_agents_proto_goTypes = nil
	file_inventory_v1_agents_proto_depIdxs = nil
}
