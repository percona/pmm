// Code generated by go-swagger; DO NOT EDIT.

package agents_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAgentLogsParams creates a new GetAgentLogsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAgentLogsParams() *GetAgentLogsParams {
	return &GetAgentLogsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAgentLogsParamsWithTimeout creates a new GetAgentLogsParams object
// with the ability to set a timeout on a request.
func NewGetAgentLogsParamsWithTimeout(timeout time.Duration) *GetAgentLogsParams {
	return &GetAgentLogsParams{
		timeout: timeout,
	}
}

// NewGetAgentLogsParamsWithContext creates a new GetAgentLogsParams object
// with the ability to set a context for a request.
func NewGetAgentLogsParamsWithContext(ctx context.Context) *GetAgentLogsParams {
	return &GetAgentLogsParams{
		Context: ctx,
	}
}

// NewGetAgentLogsParamsWithHTTPClient creates a new GetAgentLogsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAgentLogsParamsWithHTTPClient(client *http.Client) *GetAgentLogsParams {
	return &GetAgentLogsParams{
		HTTPClient: client,
	}
}

/*
GetAgentLogsParams contains all the parameters to send to the API endpoint

	for the get agent logs operation.

	Typically these are written to a http.Request.
*/
type GetAgentLogsParams struct {
	/* AgentID.

	   Unique randomly generated instance identifier.
	*/
	AgentID string

	/* Limit.

	   Limit the number of log lines to this value. Pass 0 for no limit.

	   Format: int64
	*/
	Limit *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get agent logs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAgentLogsParams) WithDefaults() *GetAgentLogsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get agent logs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAgentLogsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get agent logs params
func (o *GetAgentLogsParams) WithTimeout(timeout time.Duration) *GetAgentLogsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get agent logs params
func (o *GetAgentLogsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get agent logs params
func (o *GetAgentLogsParams) WithContext(ctx context.Context) *GetAgentLogsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get agent logs params
func (o *GetAgentLogsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get agent logs params
func (o *GetAgentLogsParams) WithHTTPClient(client *http.Client) *GetAgentLogsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get agent logs params
func (o *GetAgentLogsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAgentID adds the agentID to the get agent logs params
func (o *GetAgentLogsParams) WithAgentID(agentID string) *GetAgentLogsParams {
	o.SetAgentID(agentID)
	return o
}

// SetAgentID adds the agentId to the get agent logs params
func (o *GetAgentLogsParams) SetAgentID(agentID string) {
	o.AgentID = agentID
}

// WithLimit adds the limit to the get agent logs params
func (o *GetAgentLogsParams) WithLimit(limit *int64) *GetAgentLogsParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get agent logs params
func (o *GetAgentLogsParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WriteToRequest writes these params to a swagger request
func (o *GetAgentLogsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {
	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param agent_id
	if err := r.SetPathParam("agent_id", o.AgentID); err != nil {
		return err
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
