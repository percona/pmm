// Code generated by go-swagger; DO NOT EDIT.

package services_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewListServicesParams creates a new ListServicesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListServicesParams() *ListServicesParams {
	return &ListServicesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListServicesParamsWithTimeout creates a new ListServicesParams object
// with the ability to set a timeout on a request.
func NewListServicesParamsWithTimeout(timeout time.Duration) *ListServicesParams {
	return &ListServicesParams{
		timeout: timeout,
	}
}

// NewListServicesParamsWithContext creates a new ListServicesParams object
// with the ability to set a context for a request.
func NewListServicesParamsWithContext(ctx context.Context) *ListServicesParams {
	return &ListServicesParams{
		Context: ctx,
	}
}

// NewListServicesParamsWithHTTPClient creates a new ListServicesParams object
// with the ability to set a custom HTTPClient for a request.
func NewListServicesParamsWithHTTPClient(client *http.Client) *ListServicesParams {
	return &ListServicesParams{
		HTTPClient: client,
	}
}

/*
ListServicesParams contains all the parameters to send to the API endpoint

	for the list services operation.

	Typically these are written to a http.Request.
*/
type ListServicesParams struct {
	/* ExternalGroup.

	   Return only services in this external group.
	*/
	ExternalGroup *string

	/* NodeID.

	   Return only Services running on that Node.
	*/
	NodeID *string

	/* ServiceType.

	   Return only services filtered by service type.

	   Default: "SERVICE_TYPE_UNSPECIFIED"
	*/
	ServiceType *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list services params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListServicesParams) WithDefaults() *ListServicesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list services params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListServicesParams) SetDefaults() {
	serviceTypeDefault := string("SERVICE_TYPE_UNSPECIFIED")

	val := ListServicesParams{
		ServiceType: &serviceTypeDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the list services params
func (o *ListServicesParams) WithTimeout(timeout time.Duration) *ListServicesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list services params
func (o *ListServicesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list services params
func (o *ListServicesParams) WithContext(ctx context.Context) *ListServicesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list services params
func (o *ListServicesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list services params
func (o *ListServicesParams) WithHTTPClient(client *http.Client) *ListServicesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list services params
func (o *ListServicesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithExternalGroup adds the externalGroup to the list services params
func (o *ListServicesParams) WithExternalGroup(externalGroup *string) *ListServicesParams {
	o.SetExternalGroup(externalGroup)
	return o
}

// SetExternalGroup adds the externalGroup to the list services params
func (o *ListServicesParams) SetExternalGroup(externalGroup *string) {
	o.ExternalGroup = externalGroup
}

// WithNodeID adds the nodeID to the list services params
func (o *ListServicesParams) WithNodeID(nodeID *string) *ListServicesParams {
	o.SetNodeID(nodeID)
	return o
}

// SetNodeID adds the nodeId to the list services params
func (o *ListServicesParams) SetNodeID(nodeID *string) {
	o.NodeID = nodeID
}

// WithServiceType adds the serviceType to the list services params
func (o *ListServicesParams) WithServiceType(serviceType *string) *ListServicesParams {
	o.SetServiceType(serviceType)
	return o
}

// SetServiceType adds the serviceType to the list services params
func (o *ListServicesParams) SetServiceType(serviceType *string) {
	o.ServiceType = serviceType
}

// WriteToRequest writes these params to a swagger request
func (o *ListServicesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {
	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ExternalGroup != nil {

		// query param external_group
		var qrExternalGroup string

		if o.ExternalGroup != nil {
			qrExternalGroup = *o.ExternalGroup
		}
		qExternalGroup := qrExternalGroup
		if qExternalGroup != "" {
			if err := r.SetQueryParam("external_group", qExternalGroup); err != nil {
				return err
			}
		}
	}

	if o.NodeID != nil {

		// query param node_id
		var qrNodeID string

		if o.NodeID != nil {
			qrNodeID = *o.NodeID
		}
		qNodeID := qrNodeID
		if qNodeID != "" {
			if err := r.SetQueryParam("node_id", qNodeID); err != nil {
				return err
			}
		}
	}

	if o.ServiceType != nil {

		// query param service_type
		var qrServiceType string

		if o.ServiceType != nil {
			qrServiceType = *o.ServiceType
		}
		qServiceType := qrServiceType
		if qServiceType != "" {
			if err := r.SetQueryParam("service_type", qServiceType); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
