syntax = "proto3";

package agent;

option go_package = "agentpb";

import "agentpb/collector.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "inventorypb/agent_status.proto";
import "inventorypb/agents.proto";
import "inventorypb/services.proto";

// Ping is a AgentMessage/ServerMessage for checking connectivity, latency and clock drift.
message Ping {}

// Pong is an AgentMessage/ServerMessage with current time for measuring clock drift.
message Pong {
  google.protobuf.Timestamp current_time = 1;
}

// QANCollectRequest is an AgentMessage for sending QAN data for qan-api.
message QANCollectRequest {
  repeated MetricsBucket metrics_bucket = 1;
}

// QANCollectResponse is a ServerMessage for QAN data acceptance.
message QANCollectResponse {}

// StateChangedRequest is an AgentMessage describing actual agent status.
message StateChangedRequest {
  string agent_id = 1;
  inventory.AgentStatus status = 2;
  uint32 listen_port = 3;
}

// StateChangedResponse is a ServerMessage for StateChangedRequest acceptance.
message StateChangedResponse {}

// SetStateRequest is a ServerMessage asking pmm-agent to run agents according to desired state.
message SetStateRequest {
  // AgentProcess describes desired configuration of a single agent process started by pmm-agent.
  message AgentProcess {
    inventory.AgentType type = 1;
    string template_left_delim = 2;
    string template_right_delim = 3;
    repeated string args = 4;
    repeated string env = 5;
    map<string, string> text_files = 6;
    repeated string redact_words = 7;
  }
  map<string, AgentProcess> agent_processes = 1;
  // BuiltinAgent describes desired configuration of a single built-in agent for pmm-agent.
  message BuiltinAgent {
    inventory.AgentType type = 1;
    string dsn = 2;
    // Disables query examples for QAN Agents if true.
    bool disable_query_examples = 3;
    // Instructs QAN Agents to rotate query log file or table at this size if > 0.
    int64 max_query_log_size = 4;
  }
  map<string, BuiltinAgent> builtin_agents = 2;
}

// SetStateResponse is an AgentMessage for SetStateRequest acceptance.
message SetStateResponse {
  // TODO https://jira.percona.com/browse/PMM-4691

}

// MysqlExplainOutputFormat output formats supported by MySQL Explain action.
enum MysqlExplainOutputFormat {
  MYSQL_EXPLAIN_OUTPUT_FORMAT_INVALID = 0;
  // EXPLAIN FORMAT=TRADITIONAL, returns result as text
  MYSQL_EXPLAIN_OUTPUT_FORMAT_DEFAULT = 1;
  // EXPLAIN FORMAT=JSON
  MYSQL_EXPLAIN_OUTPUT_FORMAT_JSON = 2;
  // EXPLAIN FORMAT=TRADITIONAL, returns result as JSON
  MYSQL_EXPLAIN_OUTPUT_FORMAT_TRADITIONAL_JSON = 3;
}

// StartActionRequest is a ServerMessage asking pmm-agent to start action.
message StartActionRequest {
  // MySQLExplainParams describes MySQL EXPLAIN action parameters.
  message MySQLExplainParams {
    string dsn = 1;
    string query = 2;
    MysqlExplainOutputFormat output_format = 3;
  }
  // MySQLShowCreateTableParams describes MySQL SHOW CREATE TABLE action parameters.
  message MySQLShowCreateTableParams {
    string dsn = 1;
    string table = 2;
  }
  // MySQLShowTableStatusParams describes MySQL SHOW TABLE STATUS action parameters.
  message MySQLShowTableStatusParams {
    string dsn = 1;
    string table = 2;
  }
  // MySQLShowIndexParams describes MySQL SHOW INDEX action parameters.
  message MySQLShowIndexParams {
    string dsn = 1;
    string table = 2;
  }
  // PostgreSQLShowCreateTableParams describes PostgreSQL SHOW CREATE TABLE action parameters.
  message PostgreSQLShowCreateTableParams {
    string dsn = 1;
    string table = 2;
  }
  // PostgreSQLShowIndexParams describes PostgreSQL SHOW INDEX action parameters.
  message PostgreSQLShowIndexParams {
    string dsn = 1;
    string table = 2;
  }
  string action_id = 1;
  oneof params {
    MySQLExplainParams mysql_explain_params = 2;
    MySQLShowCreateTableParams mysql_show_create_table_params = 3;
    MySQLShowTableStatusParams mysql_show_table_status_params = 4;
    MySQLShowIndexParams mysql_show_index_params = 5;
    PostgreSQLShowCreateTableParams postgresql_show_create_table_params = 6;
    PostgreSQLShowIndexParams postgresql_show_index_params = 7;
  }
}

// StartActionResponse is an AgentMessage for StartActionRequest acceptance.
message StartActionResponse {}

// StopActionRequest is a ServerMessage asking pmm-agent to stop action.
message StopActionRequest {
  string action_id = 1;
}

// StopActionResponse is an AgentMessage for StopActionRequest acceptance.
message StopActionResponse {}

// ActionResultRequest is an AgentMessage containing action run status and new chunk of output.
message ActionResultRequest {
  // Unique action ID.
  string action_id = 1;
  // New chunk of action output.
  bytes output = 3;
  // True if action is finished.
  bool done = 4;
  // Error message if action failed.
  string error = 5;
}

// ActionResultResponse is an ServerMessage for ActionResultRequest acceptance.
message ActionResultResponse {}

// CheckConnectionRequest is a ServerMessage asking pmm-agent to check connection with service.
message CheckConnectionRequest {
  // Service type.
  inventory.ServiceType type = 1;
  // DSN for the service. May contain connection (dial) timeout.
  string dsn = 2;
  // Timeout for the whole request.
  google.protobuf.Duration timeout = 3;
}

// CheckConnectionResponse is an AgentMessage containing a result of connection check.
message CheckConnectionResponse {
  // Stats contains various Service statistics.
  message Stats {
    // A number of tables, 0 if unknown.
    int32 table_count = 1;
  }
  // Error message if connection check failed.
  string error = 1;
  Stats stats = 2;
}

message AgentMessage {
  // TODO https://jira.percona.com/browse/PMM-3449

  uint32 id = 1;
  oneof payload {
    // requests from agent
    Ping ping = 2;
    StateChangedRequest state_changed = 3;
    QANCollectRequest qan_collect = 4;
    ActionResultRequest action_result = 5;
    // responses from agent
    Pong pong = 8;
    SetStateResponse set_state = 9;
    StartActionResponse start_action = 10;
    StopActionResponse stop_action = 11;
    CheckConnectionResponse check_connection = 12;
  }
}

message ServerMessage {
  // TODO https://jira.percona.com/browse/PMM-3449

  uint32 id = 1;
  oneof payload {
    // responses from server
    Pong pong = 2;
    StateChangedResponse state_changed = 3;
    QANCollectResponse qan_collect = 4;
    ActionResultResponse action_result = 5;
    // requests from server
    Ping ping = 8;
    SetStateRequest set_state = 9;
    StartActionRequest start_action = 10;
    StopActionRequest stop_action = 11;
    CheckConnectionRequest check_connection = 12;
  }
}

// Agent service provides private methods for pmm-agent <-> pmm-managed interactions.
service Agent {
  // Connect establishes two-way communication channel between pmm-agent and pmm-managed.
  rpc Connect(stream AgentMessage) returns (stream ServerMessage);
}
