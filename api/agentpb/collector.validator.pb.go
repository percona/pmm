// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: agentpb/collector.proto

package agentpb

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"

	_ "github.com/percona/pmm/api/inventorypb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

var (
	_ = fmt.Errorf
	_ = math.Inf
)

func (this *MetricsBucket) Validate() error {
	if this.Common != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Common); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Common", err)
		}
	}
	if this.Mysql != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Mysql); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Mysql", err)
		}
	}
	if this.Mongodb != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Mongodb); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Mongodb", err)
		}
	}
	if this.Postgresql != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Postgresql); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Postgresql", err)
		}
	}
	return nil
}

func (this *MetricsBucket_Common) Validate() error {
	// Validation of proto3 map<> fields is unsupported.
	return nil
}

func (this *MetricsBucket_MySQL) Validate() error {
	return nil
}

func (this *MetricsBucket_MongoDB) Validate() error {
	return nil
}

func (this *MetricsBucket_PostgreSQL) Validate() error {
	for _, item := range this.HistogramItems {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("HistogramItems", err)
			}
		}
	}
	return nil
}

func (this *HistogramItem) Validate() error {
	return nil
}
