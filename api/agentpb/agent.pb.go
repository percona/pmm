// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: agentpb/agent.proto

package agentpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	inventorypb "github.com/percona/pmm/api/inventorypb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// MysqlExplainOutputFormat output formats supported by MySQL Explain action.
type MysqlExplainOutputFormat int32

const (
	MysqlExplainOutputFormat_MYSQL_EXPLAIN_OUTPUT_FORMAT_INVALID MysqlExplainOutputFormat = 0
	// EXPLAIN FORMAT=TRADITIONAL, returns result as text
	MysqlExplainOutputFormat_MYSQL_EXPLAIN_OUTPUT_FORMAT_DEFAULT MysqlExplainOutputFormat = 1
	// EXPLAIN FORMAT=JSON
	MysqlExplainOutputFormat_MYSQL_EXPLAIN_OUTPUT_FORMAT_JSON MysqlExplainOutputFormat = 2
	// EXPLAIN FORMAT=TRADITIONAL, returns result as JSON
	MysqlExplainOutputFormat_MYSQL_EXPLAIN_OUTPUT_FORMAT_TRADITIONAL_JSON MysqlExplainOutputFormat = 3
)

// Enum value maps for MysqlExplainOutputFormat.
var (
	MysqlExplainOutputFormat_name = map[int32]string{
		0: "MYSQL_EXPLAIN_OUTPUT_FORMAT_INVALID",
		1: "MYSQL_EXPLAIN_OUTPUT_FORMAT_DEFAULT",
		2: "MYSQL_EXPLAIN_OUTPUT_FORMAT_JSON",
		3: "MYSQL_EXPLAIN_OUTPUT_FORMAT_TRADITIONAL_JSON",
	}
	MysqlExplainOutputFormat_value = map[string]int32{
		"MYSQL_EXPLAIN_OUTPUT_FORMAT_INVALID":          0,
		"MYSQL_EXPLAIN_OUTPUT_FORMAT_DEFAULT":          1,
		"MYSQL_EXPLAIN_OUTPUT_FORMAT_JSON":             2,
		"MYSQL_EXPLAIN_OUTPUT_FORMAT_TRADITIONAL_JSON": 3,
	}
)

func (x MysqlExplainOutputFormat) Enum() *MysqlExplainOutputFormat {
	p := new(MysqlExplainOutputFormat)
	*p = x
	return p
}

func (x MysqlExplainOutputFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MysqlExplainOutputFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_agentpb_agent_proto_enumTypes[0].Descriptor()
}

func (MysqlExplainOutputFormat) Type() protoreflect.EnumType {
	return &file_agentpb_agent_proto_enumTypes[0]
}

func (x MysqlExplainOutputFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MysqlExplainOutputFormat.Descriptor instead.
func (MysqlExplainOutputFormat) EnumDescriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{0}
}

// TextFiles contains files which can be used to connect to DB (certificates, keys and etc).
type TextFiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// files contains files which can be used to connect to DB (certificates, keys and etc).
	Files map[string]string `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// template_left_delim is used to replace placeholders in templates (DSN and etc.) with paths to files.
	TemplateLeftDelim string `protobuf:"bytes,2,opt,name=template_left_delim,json=templateLeftDelim,proto3" json:"template_left_delim,omitempty"`
	// template_right_delim is used to replace placeholders in templates (DSN and etc.) with paths to files.
	TemplateRightDelim string `protobuf:"bytes,3,opt,name=template_right_delim,json=templateRightDelim,proto3" json:"template_right_delim,omitempty"`
}

func (x *TextFiles) Reset() {
	*x = TextFiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextFiles) ProtoMessage() {}

func (x *TextFiles) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextFiles.ProtoReflect.Descriptor instead.
func (*TextFiles) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{0}
}

func (x *TextFiles) GetFiles() map[string]string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *TextFiles) GetTemplateLeftDelim() string {
	if x != nil {
		return x.TemplateLeftDelim
	}
	return ""
}

func (x *TextFiles) GetTemplateRightDelim() string {
	if x != nil {
		return x.TemplateRightDelim
	}
	return ""
}

// Ping is a AgentMessage/ServerMessage for checking connectivity, latency and clock drift.
type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{1}
}

// Pong is an AgentMessage/ServerMessage with current time for measuring clock drift.
type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTime *timestamp.Timestamp `protobuf:"bytes,1,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{2}
}

func (x *Pong) GetCurrentTime() *timestamp.Timestamp {
	if x != nil {
		return x.CurrentTime
	}
	return nil
}

// QANCollectRequest is an AgentMessage for sending QAN data for qan-api.
type QANCollectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricsBucket []*MetricsBucket `protobuf:"bytes,1,rep,name=metrics_bucket,json=metricsBucket,proto3" json:"metrics_bucket,omitempty"`
}

func (x *QANCollectRequest) Reset() {
	*x = QANCollectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QANCollectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QANCollectRequest) ProtoMessage() {}

func (x *QANCollectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QANCollectRequest.ProtoReflect.Descriptor instead.
func (*QANCollectRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{3}
}

func (x *QANCollectRequest) GetMetricsBucket() []*MetricsBucket {
	if x != nil {
		return x.MetricsBucket
	}
	return nil
}

// QANCollectResponse is a ServerMessage for QAN data acceptance.
type QANCollectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QANCollectResponse) Reset() {
	*x = QANCollectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QANCollectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QANCollectResponse) ProtoMessage() {}

func (x *QANCollectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QANCollectResponse.ProtoReflect.Descriptor instead.
func (*QANCollectResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{4}
}

// StateChangedRequest is an AgentMessage describing actual agent status.
type StateChangedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId    string                  `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Status     inventorypb.AgentStatus `protobuf:"varint,2,opt,name=status,proto3,enum=inventory.AgentStatus" json:"status,omitempty"`
	ListenPort uint32                  `protobuf:"varint,3,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
}

func (x *StateChangedRequest) Reset() {
	*x = StateChangedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateChangedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateChangedRequest) ProtoMessage() {}

func (x *StateChangedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateChangedRequest.ProtoReflect.Descriptor instead.
func (*StateChangedRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{5}
}

func (x *StateChangedRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *StateChangedRequest) GetStatus() inventorypb.AgentStatus {
	if x != nil {
		return x.Status
	}
	return inventorypb.AgentStatus_AGENT_STATUS_INVALID
}

func (x *StateChangedRequest) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

// StateChangedResponse is a ServerMessage for StateChangedRequest acceptance.
type StateChangedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateChangedResponse) Reset() {
	*x = StateChangedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateChangedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateChangedResponse) ProtoMessage() {}

func (x *StateChangedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateChangedResponse.ProtoReflect.Descriptor instead.
func (*StateChangedResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{6}
}

// SetStateRequest is a ServerMessage asking pmm-agent to run agents according to desired state.
type SetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentProcesses map[string]*SetStateRequest_AgentProcess `protobuf:"bytes,1,rep,name=agent_processes,json=agentProcesses,proto3" json:"agent_processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BuiltinAgents  map[string]*SetStateRequest_BuiltinAgent `protobuf:"bytes,2,rep,name=builtin_agents,json=builtinAgents,proto3" json:"builtin_agents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SetStateRequest) Reset() {
	*x = SetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateRequest) ProtoMessage() {}

func (x *SetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateRequest.ProtoReflect.Descriptor instead.
func (*SetStateRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{7}
}

func (x *SetStateRequest) GetAgentProcesses() map[string]*SetStateRequest_AgentProcess {
	if x != nil {
		return x.AgentProcesses
	}
	return nil
}

func (x *SetStateRequest) GetBuiltinAgents() map[string]*SetStateRequest_BuiltinAgent {
	if x != nil {
		return x.BuiltinAgents
	}
	return nil
}

// SetStateResponse is an AgentMessage for SetStateRequest acceptance.
type SetStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetStateResponse) Reset() {
	*x = SetStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateResponse) ProtoMessage() {}

func (x *SetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateResponse.ProtoReflect.Descriptor instead.
func (*SetStateResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{8}
}

// QueryActionValue represents a single value used in query Actions.
type QueryActionValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//	*QueryActionValue_Nil
	//	*QueryActionValue_Bool
	//	*QueryActionValue_Int64
	//	*QueryActionValue_Uint64
	//	*QueryActionValue_Double
	//	*QueryActionValue_Bytes
	//	*QueryActionValue_Timestamp
	//	*QueryActionValue_Slice
	//	*QueryActionValue_Map
	Kind isQueryActionValue_Kind `protobuf_oneof:"kind"`
}

func (x *QueryActionValue) Reset() {
	*x = QueryActionValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActionValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActionValue) ProtoMessage() {}

func (x *QueryActionValue) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActionValue.ProtoReflect.Descriptor instead.
func (*QueryActionValue) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{9}
}

func (m *QueryActionValue) GetKind() isQueryActionValue_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *QueryActionValue) GetNil() bool {
	if x, ok := x.GetKind().(*QueryActionValue_Nil); ok {
		return x.Nil
	}
	return false
}

func (x *QueryActionValue) GetBool() bool {
	if x, ok := x.GetKind().(*QueryActionValue_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *QueryActionValue) GetInt64() int64 {
	if x, ok := x.GetKind().(*QueryActionValue_Int64); ok {
		return x.Int64
	}
	return 0
}

func (x *QueryActionValue) GetUint64() uint64 {
	if x, ok := x.GetKind().(*QueryActionValue_Uint64); ok {
		return x.Uint64
	}
	return 0
}

func (x *QueryActionValue) GetDouble() float64 {
	if x, ok := x.GetKind().(*QueryActionValue_Double); ok {
		return x.Double
	}
	return 0
}

func (x *QueryActionValue) GetBytes() []byte {
	if x, ok := x.GetKind().(*QueryActionValue_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (x *QueryActionValue) GetTimestamp() *timestamp.Timestamp {
	if x, ok := x.GetKind().(*QueryActionValue_Timestamp); ok {
		return x.Timestamp
	}
	return nil
}

func (x *QueryActionValue) GetSlice() *QueryActionSlice {
	if x, ok := x.GetKind().(*QueryActionValue_Slice); ok {
		return x.Slice
	}
	return nil
}

func (x *QueryActionValue) GetMap() *QueryActionMap {
	if x, ok := x.GetKind().(*QueryActionValue_Map); ok {
		return x.Map
	}
	return nil
}

type isQueryActionValue_Kind interface {
	isQueryActionValue_Kind()
}

type QueryActionValue_Nil struct {
	Nil bool `protobuf:"varint,1,opt,name=nil,proto3,oneof"`
}

type QueryActionValue_Bool struct {
	Bool bool `protobuf:"varint,2,opt,name=bool,proto3,oneof"`
}

type QueryActionValue_Int64 struct {
	Int64 int64 `protobuf:"varint,3,opt,name=int64,proto3,oneof"`
}

type QueryActionValue_Uint64 struct {
	Uint64 uint64 `protobuf:"varint,4,opt,name=uint64,proto3,oneof"`
}

type QueryActionValue_Double struct {
	Double float64 `protobuf:"fixed64,5,opt,name=double,proto3,oneof"`
}

type QueryActionValue_Bytes struct {
	Bytes []byte `protobuf:"bytes,6,opt,name=bytes,proto3,oneof"`
}

type QueryActionValue_Timestamp struct {
	Timestamp *timestamp.Timestamp `protobuf:"bytes,8,opt,name=timestamp,proto3,oneof"`
}

type QueryActionValue_Slice struct {
	Slice *QueryActionSlice `protobuf:"bytes,10,opt,name=slice,proto3,oneof"`
}

type QueryActionValue_Map struct {
	Map *QueryActionMap `protobuf:"bytes,11,opt,name=map,proto3,oneof"`
}

func (*QueryActionValue_Nil) isQueryActionValue_Kind() {}

func (*QueryActionValue_Bool) isQueryActionValue_Kind() {}

func (*QueryActionValue_Int64) isQueryActionValue_Kind() {}

func (*QueryActionValue_Uint64) isQueryActionValue_Kind() {}

func (*QueryActionValue_Double) isQueryActionValue_Kind() {}

func (*QueryActionValue_Bytes) isQueryActionValue_Kind() {}

func (*QueryActionValue_Timestamp) isQueryActionValue_Kind() {}

func (*QueryActionValue_Slice) isQueryActionValue_Kind() {}

func (*QueryActionValue_Map) isQueryActionValue_Kind() {}

// QueryActionSlice represents a slice of values used in query Actions.
type QueryActionSlice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slice []*QueryActionValue `protobuf:"bytes,1,rep,name=slice,proto3" json:"slice,omitempty"`
}

func (x *QueryActionSlice) Reset() {
	*x = QueryActionSlice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActionSlice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActionSlice) ProtoMessage() {}

func (x *QueryActionSlice) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActionSlice.ProtoReflect.Descriptor instead.
func (*QueryActionSlice) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{10}
}

func (x *QueryActionSlice) GetSlice() []*QueryActionValue {
	if x != nil {
		return x.Slice
	}
	return nil
}

// QueryActionMap represents a map of values used in query Actions.
type QueryActionMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map map[string]*QueryActionValue `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *QueryActionMap) Reset() {
	*x = QueryActionMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActionMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActionMap) ProtoMessage() {}

func (x *QueryActionMap) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActionMap.ProtoReflect.Descriptor instead.
func (*QueryActionMap) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{11}
}

func (x *QueryActionMap) GetMap() map[string]*QueryActionValue {
	if x != nil {
		return x.Map
	}
	return nil
}

// QueryActionResult represents query Action result.
type QueryActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SQL result column names.
	Columns []string `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	// SQL result data rows.
	Rows []*QueryActionSlice `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	// MongoDB documents.
	Docs []*QueryActionMap `protobuf:"bytes,3,rep,name=docs,proto3" json:"docs,omitempty"`
}

func (x *QueryActionResult) Reset() {
	*x = QueryActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActionResult) ProtoMessage() {}

func (x *QueryActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActionResult.ProtoReflect.Descriptor instead.
func (*QueryActionResult) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{12}
}

func (x *QueryActionResult) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *QueryActionResult) GetRows() []*QueryActionSlice {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *QueryActionResult) GetDocs() []*QueryActionMap {
	if x != nil {
		return x.Docs
	}
	return nil
}

// StartActionRequest is a ServerMessage asking pmm-agent to start action.
type StartActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// Types that are assignable to Params:
	//	*StartActionRequest_MysqlExplainParams
	//	*StartActionRequest_MysqlShowCreateTableParams
	//	*StartActionRequest_MysqlShowTableStatusParams
	//	*StartActionRequest_MysqlShowIndexParams
	//	*StartActionRequest_PostgresqlShowCreateTableParams
	//	*StartActionRequest_PostgresqlShowIndexParams
	//	*StartActionRequest_MongodbExplainParams
	//	*StartActionRequest_PtSummaryParams
	//	*StartActionRequest_PtMongodbSummaryParams
	//	*StartActionRequest_MysqlQueryShowParams
	//	*StartActionRequest_MysqlQuerySelectParams
	//	*StartActionRequest_PostgresqlQueryShowParams
	//	*StartActionRequest_PostgresqlQuerySelectParams
	//	*StartActionRequest_MongodbQueryGetparameterParams
	//	*StartActionRequest_MongodbQueryBuildinfoParams
	//	*StartActionRequest_MongodbQueryGetcmdlineoptsParams
	Params isStartActionRequest_Params `protobuf_oneof:"params"`
	// Timeout for the whole action. If zero or absent, pmm-agent will pick one itself.
	Timeout *duration.Duration `protobuf:"bytes,9,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *StartActionRequest) Reset() {
	*x = StartActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest) ProtoMessage() {}

func (x *StartActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest.ProtoReflect.Descriptor instead.
func (*StartActionRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13}
}

func (x *StartActionRequest) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (m *StartActionRequest) GetParams() isStartActionRequest_Params {
	if m != nil {
		return m.Params
	}
	return nil
}

func (x *StartActionRequest) GetMysqlExplainParams() *StartActionRequest_MySQLExplainParams {
	if x, ok := x.GetParams().(*StartActionRequest_MysqlExplainParams); ok {
		return x.MysqlExplainParams
	}
	return nil
}

func (x *StartActionRequest) GetMysqlShowCreateTableParams() *StartActionRequest_MySQLShowCreateTableParams {
	if x, ok := x.GetParams().(*StartActionRequest_MysqlShowCreateTableParams); ok {
		return x.MysqlShowCreateTableParams
	}
	return nil
}

func (x *StartActionRequest) GetMysqlShowTableStatusParams() *StartActionRequest_MySQLShowTableStatusParams {
	if x, ok := x.GetParams().(*StartActionRequest_MysqlShowTableStatusParams); ok {
		return x.MysqlShowTableStatusParams
	}
	return nil
}

func (x *StartActionRequest) GetMysqlShowIndexParams() *StartActionRequest_MySQLShowIndexParams {
	if x, ok := x.GetParams().(*StartActionRequest_MysqlShowIndexParams); ok {
		return x.MysqlShowIndexParams
	}
	return nil
}

func (x *StartActionRequest) GetPostgresqlShowCreateTableParams() *StartActionRequest_PostgreSQLShowCreateTableParams {
	if x, ok := x.GetParams().(*StartActionRequest_PostgresqlShowCreateTableParams); ok {
		return x.PostgresqlShowCreateTableParams
	}
	return nil
}

func (x *StartActionRequest) GetPostgresqlShowIndexParams() *StartActionRequest_PostgreSQLShowIndexParams {
	if x, ok := x.GetParams().(*StartActionRequest_PostgresqlShowIndexParams); ok {
		return x.PostgresqlShowIndexParams
	}
	return nil
}

func (x *StartActionRequest) GetMongodbExplainParams() *StartActionRequest_MongoDBExplainParams {
	if x, ok := x.GetParams().(*StartActionRequest_MongodbExplainParams); ok {
		return x.MongodbExplainParams
	}
	return nil
}

func (x *StartActionRequest) GetPtSummaryParams() *StartActionRequest_PTSummaryParams {
	if x, ok := x.GetParams().(*StartActionRequest_PtSummaryParams); ok {
		return x.PtSummaryParams
	}
	return nil
}

func (x *StartActionRequest) GetPtMongodbSummaryParams() *StartActionRequest_PTMongoDBSummaryParams {
	if x, ok := x.GetParams().(*StartActionRequest_PtMongodbSummaryParams); ok {
		return x.PtMongodbSummaryParams
	}
	return nil
}

func (x *StartActionRequest) GetMysqlQueryShowParams() *StartActionRequest_MySQLQueryShowParams {
	if x, ok := x.GetParams().(*StartActionRequest_MysqlQueryShowParams); ok {
		return x.MysqlQueryShowParams
	}
	return nil
}

func (x *StartActionRequest) GetMysqlQuerySelectParams() *StartActionRequest_MySQLQuerySelectParams {
	if x, ok := x.GetParams().(*StartActionRequest_MysqlQuerySelectParams); ok {
		return x.MysqlQuerySelectParams
	}
	return nil
}

func (x *StartActionRequest) GetPostgresqlQueryShowParams() *StartActionRequest_PostgreSQLQueryShowParams {
	if x, ok := x.GetParams().(*StartActionRequest_PostgresqlQueryShowParams); ok {
		return x.PostgresqlQueryShowParams
	}
	return nil
}

func (x *StartActionRequest) GetPostgresqlQuerySelectParams() *StartActionRequest_PostgreSQLQuerySelectParams {
	if x, ok := x.GetParams().(*StartActionRequest_PostgresqlQuerySelectParams); ok {
		return x.PostgresqlQuerySelectParams
	}
	return nil
}

func (x *StartActionRequest) GetMongodbQueryGetparameterParams() *StartActionRequest_MongoDBQueryGetParameterParams {
	if x, ok := x.GetParams().(*StartActionRequest_MongodbQueryGetparameterParams); ok {
		return x.MongodbQueryGetparameterParams
	}
	return nil
}

func (x *StartActionRequest) GetMongodbQueryBuildinfoParams() *StartActionRequest_MongoDBQueryBuildInfoParams {
	if x, ok := x.GetParams().(*StartActionRequest_MongodbQueryBuildinfoParams); ok {
		return x.MongodbQueryBuildinfoParams
	}
	return nil
}

func (x *StartActionRequest) GetMongodbQueryGetcmdlineoptsParams() *StartActionRequest_MongoDBQueryGetCmdLineOptsParams {
	if x, ok := x.GetParams().(*StartActionRequest_MongodbQueryGetcmdlineoptsParams); ok {
		return x.MongodbQueryGetcmdlineoptsParams
	}
	return nil
}

func (x *StartActionRequest) GetTimeout() *duration.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type isStartActionRequest_Params interface {
	isStartActionRequest_Params()
}

type StartActionRequest_MysqlExplainParams struct {
	MysqlExplainParams *StartActionRequest_MySQLExplainParams `protobuf:"bytes,2,opt,name=mysql_explain_params,json=mysqlExplainParams,proto3,oneof"`
}

type StartActionRequest_MysqlShowCreateTableParams struct {
	MysqlShowCreateTableParams *StartActionRequest_MySQLShowCreateTableParams `protobuf:"bytes,3,opt,name=mysql_show_create_table_params,json=mysqlShowCreateTableParams,proto3,oneof"`
}

type StartActionRequest_MysqlShowTableStatusParams struct {
	MysqlShowTableStatusParams *StartActionRequest_MySQLShowTableStatusParams `protobuf:"bytes,4,opt,name=mysql_show_table_status_params,json=mysqlShowTableStatusParams,proto3,oneof"`
}

type StartActionRequest_MysqlShowIndexParams struct {
	MysqlShowIndexParams *StartActionRequest_MySQLShowIndexParams `protobuf:"bytes,5,opt,name=mysql_show_index_params,json=mysqlShowIndexParams,proto3,oneof"`
}

type StartActionRequest_PostgresqlShowCreateTableParams struct {
	PostgresqlShowCreateTableParams *StartActionRequest_PostgreSQLShowCreateTableParams `protobuf:"bytes,6,opt,name=postgresql_show_create_table_params,json=postgresqlShowCreateTableParams,proto3,oneof"`
}

type StartActionRequest_PostgresqlShowIndexParams struct {
	PostgresqlShowIndexParams *StartActionRequest_PostgreSQLShowIndexParams `protobuf:"bytes,7,opt,name=postgresql_show_index_params,json=postgresqlShowIndexParams,proto3,oneof"`
}

type StartActionRequest_MongodbExplainParams struct {
	MongodbExplainParams *StartActionRequest_MongoDBExplainParams `protobuf:"bytes,8,opt,name=mongodb_explain_params,json=mongodbExplainParams,proto3,oneof"`
}

type StartActionRequest_PtSummaryParams struct {
	PtSummaryParams *StartActionRequest_PTSummaryParams `protobuf:"bytes,10,opt,name=pt_summary_params,json=ptSummaryParams,proto3,oneof"`
}

type StartActionRequest_PtMongodbSummaryParams struct {
	PtMongodbSummaryParams *StartActionRequest_PTMongoDBSummaryParams `protobuf:"bytes,13,opt,name=pt_mongodb_summary_params,json=ptMongodbSummaryParams,proto3,oneof"`
}

type StartActionRequest_MysqlQueryShowParams struct {
	MysqlQueryShowParams *StartActionRequest_MySQLQueryShowParams `protobuf:"bytes,50,opt,name=mysql_query_show_params,json=mysqlQueryShowParams,proto3,oneof"`
}

type StartActionRequest_MysqlQuerySelectParams struct {
	MysqlQuerySelectParams *StartActionRequest_MySQLQuerySelectParams `protobuf:"bytes,51,opt,name=mysql_query_select_params,json=mysqlQuerySelectParams,proto3,oneof"`
}

type StartActionRequest_PostgresqlQueryShowParams struct {
	PostgresqlQueryShowParams *StartActionRequest_PostgreSQLQueryShowParams `protobuf:"bytes,52,opt,name=postgresql_query_show_params,json=postgresqlQueryShowParams,proto3,oneof"`
}

type StartActionRequest_PostgresqlQuerySelectParams struct {
	PostgresqlQuerySelectParams *StartActionRequest_PostgreSQLQuerySelectParams `protobuf:"bytes,53,opt,name=postgresql_query_select_params,json=postgresqlQuerySelectParams,proto3,oneof"`
}

type StartActionRequest_MongodbQueryGetparameterParams struct {
	MongodbQueryGetparameterParams *StartActionRequest_MongoDBQueryGetParameterParams `protobuf:"bytes,54,opt,name=mongodb_query_getparameter_params,json=mongodbQueryGetparameterParams,proto3,oneof"`
}

type StartActionRequest_MongodbQueryBuildinfoParams struct {
	MongodbQueryBuildinfoParams *StartActionRequest_MongoDBQueryBuildInfoParams `protobuf:"bytes,55,opt,name=mongodb_query_buildinfo_params,json=mongodbQueryBuildinfoParams,proto3,oneof"`
}

type StartActionRequest_MongodbQueryGetcmdlineoptsParams struct {
	MongodbQueryGetcmdlineoptsParams *StartActionRequest_MongoDBQueryGetCmdLineOptsParams `protobuf:"bytes,56,opt,name=mongodb_query_getcmdlineopts_params,json=mongodbQueryGetcmdlineoptsParams,proto3,oneof"`
}

func (*StartActionRequest_MysqlExplainParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MysqlShowCreateTableParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MysqlShowTableStatusParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MysqlShowIndexParams) isStartActionRequest_Params() {}

func (*StartActionRequest_PostgresqlShowCreateTableParams) isStartActionRequest_Params() {}

func (*StartActionRequest_PostgresqlShowIndexParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MongodbExplainParams) isStartActionRequest_Params() {}

func (*StartActionRequest_PtSummaryParams) isStartActionRequest_Params() {}

func (*StartActionRequest_PtMongodbSummaryParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MysqlQueryShowParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MysqlQuerySelectParams) isStartActionRequest_Params() {}

func (*StartActionRequest_PostgresqlQueryShowParams) isStartActionRequest_Params() {}

func (*StartActionRequest_PostgresqlQuerySelectParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MongodbQueryGetparameterParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MongodbQueryBuildinfoParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MongodbQueryGetcmdlineoptsParams) isStartActionRequest_Params() {}

// StartActionResponse is an AgentMessage for StartActionRequest acceptance.
type StartActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartActionResponse) Reset() {
	*x = StartActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionResponse) ProtoMessage() {}

func (x *StartActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionResponse.ProtoReflect.Descriptor instead.
func (*StartActionResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14}
}

// StopActionRequest is a ServerMessage asking pmm-agent to stop action.
type StopActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
}

func (x *StopActionRequest) Reset() {
	*x = StopActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopActionRequest) ProtoMessage() {}

func (x *StopActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopActionRequest.ProtoReflect.Descriptor instead.
func (*StopActionRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{15}
}

func (x *StopActionRequest) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

// StopActionResponse is an AgentMessage for StopActionRequest acceptance.
type StopActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopActionResponse) Reset() {
	*x = StopActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopActionResponse) ProtoMessage() {}

func (x *StopActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopActionResponse.ProtoReflect.Descriptor instead.
func (*StopActionResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{16}
}

// ActionResultRequest is an AgentMessage containing action run status and new chunk of output.
type ActionResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// New chunk of action output.
	Output []byte `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	// True if action is finished.
	Done bool `protobuf:"varint,4,opt,name=done,proto3" json:"done,omitempty"`
	// Error message if action failed.
	Error string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ActionResultRequest) Reset() {
	*x = ActionResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResultRequest) ProtoMessage() {}

func (x *ActionResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResultRequest.ProtoReflect.Descriptor instead.
func (*ActionResultRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{17}
}

func (x *ActionResultRequest) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *ActionResultRequest) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *ActionResultRequest) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *ActionResultRequest) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// ActionResultResponse is an ServerMessage for ActionResultRequest acceptance.
type ActionResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActionResultResponse) Reset() {
	*x = ActionResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResultResponse) ProtoMessage() {}

func (x *ActionResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResultResponse.ProtoReflect.Descriptor instead.
func (*ActionResultResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{18}
}

// CheckConnectionRequest is a ServerMessage asking pmm-agent to check connection with Service.
type CheckConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Service type.
	Type inventorypb.ServiceType `protobuf:"varint,1,opt,name=type,proto3,enum=inventory.ServiceType" json:"type,omitempty"`
	// DSN for the service. May contain connection (dial) timeout.
	Dsn string `protobuf:"bytes,2,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Timeout for the whole request.
	Timeout *duration.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,4,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
}

func (x *CheckConnectionRequest) Reset() {
	*x = CheckConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckConnectionRequest) ProtoMessage() {}

func (x *CheckConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckConnectionRequest.ProtoReflect.Descriptor instead.
func (*CheckConnectionRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{19}
}

func (x *CheckConnectionRequest) GetType() inventorypb.ServiceType {
	if x != nil {
		return x.Type
	}
	return inventorypb.ServiceType_SERVICE_TYPE_INVALID
}

func (x *CheckConnectionRequest) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *CheckConnectionRequest) GetTimeout() *duration.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *CheckConnectionRequest) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

// CheckConnectionResponse is an AgentMessage containing a result of connection check.
type CheckConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Error message if connection check failed.
	Error string                         `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Stats *CheckConnectionResponse_Stats `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *CheckConnectionResponse) Reset() {
	*x = CheckConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckConnectionResponse) ProtoMessage() {}

func (x *CheckConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckConnectionResponse.ProtoReflect.Descriptor instead.
func (*CheckConnectionResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{20}
}

func (x *CheckConnectionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CheckConnectionResponse) GetStats() *CheckConnectionResponse_Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type AgentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Payload:
	//	*AgentMessage_Ping
	//	*AgentMessage_StateChanged
	//	*AgentMessage_QanCollect
	//	*AgentMessage_ActionResult
	//	*AgentMessage_Pong
	//	*AgentMessage_SetState
	//	*AgentMessage_StartAction
	//	*AgentMessage_StopAction
	//	*AgentMessage_CheckConnection
	Payload isAgentMessage_Payload `protobuf_oneof:"payload"`
}

func (x *AgentMessage) Reset() {
	*x = AgentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMessage) ProtoMessage() {}

func (x *AgentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMessage.ProtoReflect.Descriptor instead.
func (*AgentMessage) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{21}
}

func (x *AgentMessage) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (m *AgentMessage) GetPayload() isAgentMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *AgentMessage) GetPing() *Ping {
	if x, ok := x.GetPayload().(*AgentMessage_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *AgentMessage) GetStateChanged() *StateChangedRequest {
	if x, ok := x.GetPayload().(*AgentMessage_StateChanged); ok {
		return x.StateChanged
	}
	return nil
}

func (x *AgentMessage) GetQanCollect() *QANCollectRequest {
	if x, ok := x.GetPayload().(*AgentMessage_QanCollect); ok {
		return x.QanCollect
	}
	return nil
}

func (x *AgentMessage) GetActionResult() *ActionResultRequest {
	if x, ok := x.GetPayload().(*AgentMessage_ActionResult); ok {
		return x.ActionResult
	}
	return nil
}

func (x *AgentMessage) GetPong() *Pong {
	if x, ok := x.GetPayload().(*AgentMessage_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *AgentMessage) GetSetState() *SetStateResponse {
	if x, ok := x.GetPayload().(*AgentMessage_SetState); ok {
		return x.SetState
	}
	return nil
}

func (x *AgentMessage) GetStartAction() *StartActionResponse {
	if x, ok := x.GetPayload().(*AgentMessage_StartAction); ok {
		return x.StartAction
	}
	return nil
}

func (x *AgentMessage) GetStopAction() *StopActionResponse {
	if x, ok := x.GetPayload().(*AgentMessage_StopAction); ok {
		return x.StopAction
	}
	return nil
}

func (x *AgentMessage) GetCheckConnection() *CheckConnectionResponse {
	if x, ok := x.GetPayload().(*AgentMessage_CheckConnection); ok {
		return x.CheckConnection
	}
	return nil
}

type isAgentMessage_Payload interface {
	isAgentMessage_Payload()
}

type AgentMessage_Ping struct {
	// requests from agent
	Ping *Ping `protobuf:"bytes,2,opt,name=ping,proto3,oneof"`
}

type AgentMessage_StateChanged struct {
	StateChanged *StateChangedRequest `protobuf:"bytes,3,opt,name=state_changed,json=stateChanged,proto3,oneof"`
}

type AgentMessage_QanCollect struct {
	QanCollect *QANCollectRequest `protobuf:"bytes,4,opt,name=qan_collect,json=qanCollect,proto3,oneof"`
}

type AgentMessage_ActionResult struct {
	ActionResult *ActionResultRequest `protobuf:"bytes,5,opt,name=action_result,json=actionResult,proto3,oneof"`
}

type AgentMessage_Pong struct {
	// responses from agent
	Pong *Pong `protobuf:"bytes,8,opt,name=pong,proto3,oneof"`
}

type AgentMessage_SetState struct {
	SetState *SetStateResponse `protobuf:"bytes,9,opt,name=set_state,json=setState,proto3,oneof"`
}

type AgentMessage_StartAction struct {
	StartAction *StartActionResponse `protobuf:"bytes,10,opt,name=start_action,json=startAction,proto3,oneof"`
}

type AgentMessage_StopAction struct {
	StopAction *StopActionResponse `protobuf:"bytes,11,opt,name=stop_action,json=stopAction,proto3,oneof"`
}

type AgentMessage_CheckConnection struct {
	CheckConnection *CheckConnectionResponse `protobuf:"bytes,12,opt,name=check_connection,json=checkConnection,proto3,oneof"`
}

func (*AgentMessage_Ping) isAgentMessage_Payload() {}

func (*AgentMessage_StateChanged) isAgentMessage_Payload() {}

func (*AgentMessage_QanCollect) isAgentMessage_Payload() {}

func (*AgentMessage_ActionResult) isAgentMessage_Payload() {}

func (*AgentMessage_Pong) isAgentMessage_Payload() {}

func (*AgentMessage_SetState) isAgentMessage_Payload() {}

func (*AgentMessage_StartAction) isAgentMessage_Payload() {}

func (*AgentMessage_StopAction) isAgentMessage_Payload() {}

func (*AgentMessage_CheckConnection) isAgentMessage_Payload() {}

type ServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Payload:
	//	*ServerMessage_Pong
	//	*ServerMessage_StateChanged
	//	*ServerMessage_QanCollect
	//	*ServerMessage_ActionResult
	//	*ServerMessage_Ping
	//	*ServerMessage_SetState
	//	*ServerMessage_StartAction
	//	*ServerMessage_StopAction
	//	*ServerMessage_CheckConnection
	Payload isServerMessage_Payload `protobuf_oneof:"payload"`
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{22}
}

func (x *ServerMessage) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (m *ServerMessage) GetPayload() isServerMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ServerMessage) GetPong() *Pong {
	if x, ok := x.GetPayload().(*ServerMessage_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *ServerMessage) GetStateChanged() *StateChangedResponse {
	if x, ok := x.GetPayload().(*ServerMessage_StateChanged); ok {
		return x.StateChanged
	}
	return nil
}

func (x *ServerMessage) GetQanCollect() *QANCollectResponse {
	if x, ok := x.GetPayload().(*ServerMessage_QanCollect); ok {
		return x.QanCollect
	}
	return nil
}

func (x *ServerMessage) GetActionResult() *ActionResultResponse {
	if x, ok := x.GetPayload().(*ServerMessage_ActionResult); ok {
		return x.ActionResult
	}
	return nil
}

func (x *ServerMessage) GetPing() *Ping {
	if x, ok := x.GetPayload().(*ServerMessage_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *ServerMessage) GetSetState() *SetStateRequest {
	if x, ok := x.GetPayload().(*ServerMessage_SetState); ok {
		return x.SetState
	}
	return nil
}

func (x *ServerMessage) GetStartAction() *StartActionRequest {
	if x, ok := x.GetPayload().(*ServerMessage_StartAction); ok {
		return x.StartAction
	}
	return nil
}

func (x *ServerMessage) GetStopAction() *StopActionRequest {
	if x, ok := x.GetPayload().(*ServerMessage_StopAction); ok {
		return x.StopAction
	}
	return nil
}

func (x *ServerMessage) GetCheckConnection() *CheckConnectionRequest {
	if x, ok := x.GetPayload().(*ServerMessage_CheckConnection); ok {
		return x.CheckConnection
	}
	return nil
}

type isServerMessage_Payload interface {
	isServerMessage_Payload()
}

type ServerMessage_Pong struct {
	// responses from server
	Pong *Pong `protobuf:"bytes,2,opt,name=pong,proto3,oneof"`
}

type ServerMessage_StateChanged struct {
	StateChanged *StateChangedResponse `protobuf:"bytes,3,opt,name=state_changed,json=stateChanged,proto3,oneof"`
}

type ServerMessage_QanCollect struct {
	QanCollect *QANCollectResponse `protobuf:"bytes,4,opt,name=qan_collect,json=qanCollect,proto3,oneof"`
}

type ServerMessage_ActionResult struct {
	ActionResult *ActionResultResponse `protobuf:"bytes,5,opt,name=action_result,json=actionResult,proto3,oneof"`
}

type ServerMessage_Ping struct {
	// requests from server
	Ping *Ping `protobuf:"bytes,8,opt,name=ping,proto3,oneof"`
}

type ServerMessage_SetState struct {
	SetState *SetStateRequest `protobuf:"bytes,9,opt,name=set_state,json=setState,proto3,oneof"`
}

type ServerMessage_StartAction struct {
	StartAction *StartActionRequest `protobuf:"bytes,10,opt,name=start_action,json=startAction,proto3,oneof"`
}

type ServerMessage_StopAction struct {
	StopAction *StopActionRequest `protobuf:"bytes,11,opt,name=stop_action,json=stopAction,proto3,oneof"`
}

type ServerMessage_CheckConnection struct {
	CheckConnection *CheckConnectionRequest `protobuf:"bytes,12,opt,name=check_connection,json=checkConnection,proto3,oneof"`
}

func (*ServerMessage_Pong) isServerMessage_Payload() {}

func (*ServerMessage_StateChanged) isServerMessage_Payload() {}

func (*ServerMessage_QanCollect) isServerMessage_Payload() {}

func (*ServerMessage_ActionResult) isServerMessage_Payload() {}

func (*ServerMessage_Ping) isServerMessage_Payload() {}

func (*ServerMessage_SetState) isServerMessage_Payload() {}

func (*ServerMessage_StartAction) isServerMessage_Payload() {}

func (*ServerMessage_StopAction) isServerMessage_Payload() {}

func (*ServerMessage_CheckConnection) isServerMessage_Payload() {}

// AgentProcess describes desired configuration of a single agent process started by pmm-agent.
type SetStateRequest_AgentProcess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type               inventorypb.AgentType `protobuf:"varint,1,opt,name=type,proto3,enum=inventory.AgentType" json:"type,omitempty"`
	TemplateLeftDelim  string                `protobuf:"bytes,2,opt,name=template_left_delim,json=templateLeftDelim,proto3" json:"template_left_delim,omitempty"`
	TemplateRightDelim string                `protobuf:"bytes,3,opt,name=template_right_delim,json=templateRightDelim,proto3" json:"template_right_delim,omitempty"`
	Args               []string              `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	Env                []string              `protobuf:"bytes,5,rep,name=env,proto3" json:"env,omitempty"`
	TextFiles          map[string]string     `protobuf:"bytes,6,rep,name=text_files,json=textFiles,proto3" json:"text_files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RedactWords        []string              `protobuf:"bytes,7,rep,name=redact_words,json=redactWords,proto3" json:"redact_words,omitempty"`
}

func (x *SetStateRequest_AgentProcess) Reset() {
	*x = SetStateRequest_AgentProcess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateRequest_AgentProcess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateRequest_AgentProcess) ProtoMessage() {}

func (x *SetStateRequest_AgentProcess) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateRequest_AgentProcess.ProtoReflect.Descriptor instead.
func (*SetStateRequest_AgentProcess) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{7, 0}
}

func (x *SetStateRequest_AgentProcess) GetType() inventorypb.AgentType {
	if x != nil {
		return x.Type
	}
	return inventorypb.AgentType_AGENT_TYPE_INVALID
}

func (x *SetStateRequest_AgentProcess) GetTemplateLeftDelim() string {
	if x != nil {
		return x.TemplateLeftDelim
	}
	return ""
}

func (x *SetStateRequest_AgentProcess) GetTemplateRightDelim() string {
	if x != nil {
		return x.TemplateRightDelim
	}
	return ""
}

func (x *SetStateRequest_AgentProcess) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *SetStateRequest_AgentProcess) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *SetStateRequest_AgentProcess) GetTextFiles() map[string]string {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

func (x *SetStateRequest_AgentProcess) GetRedactWords() []string {
	if x != nil {
		return x.RedactWords
	}
	return nil
}

// BuiltinAgent describes desired configuration of a single built-in agent for pmm-agent.
type SetStateRequest_BuiltinAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type inventorypb.AgentType `protobuf:"varint,1,opt,name=type,proto3,enum=inventory.AgentType" json:"type,omitempty"`
	Dsn  string                `protobuf:"bytes,2,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Disables query examples for QAN Agents if true.
	DisableQueryExamples bool `protobuf:"varint,3,opt,name=disable_query_examples,json=disableQueryExamples,proto3" json:"disable_query_examples,omitempty"`
	// Instructs QAN Agents to rotate query log file or table at this size if > 0.
	MaxQueryLogSize int64 `protobuf:"varint,4,opt,name=max_query_log_size,json=maxQueryLogSize,proto3" json:"max_query_log_size,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,5,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
}

func (x *SetStateRequest_BuiltinAgent) Reset() {
	*x = SetStateRequest_BuiltinAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateRequest_BuiltinAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateRequest_BuiltinAgent) ProtoMessage() {}

func (x *SetStateRequest_BuiltinAgent) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateRequest_BuiltinAgent.ProtoReflect.Descriptor instead.
func (*SetStateRequest_BuiltinAgent) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{7, 2}
}

func (x *SetStateRequest_BuiltinAgent) GetType() inventorypb.AgentType {
	if x != nil {
		return x.Type
	}
	return inventorypb.AgentType_AGENT_TYPE_INVALID
}

func (x *SetStateRequest_BuiltinAgent) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *SetStateRequest_BuiltinAgent) GetDisableQueryExamples() bool {
	if x != nil {
		return x.DisableQueryExamples
	}
	return false
}

func (x *SetStateRequest_BuiltinAgent) GetMaxQueryLogSize() int64 {
	if x != nil {
		return x.MaxQueryLogSize
	}
	return 0
}

func (x *SetStateRequest_BuiltinAgent) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

// MySQLExplainParams describes MySQL EXPLAIN action parameters.
type StartActionRequest_MySQLExplainParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn          string                   `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Query        string                   `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	OutputFormat MysqlExplainOutputFormat `protobuf:"varint,3,opt,name=output_format,json=outputFormat,proto3,enum=agent.MysqlExplainOutputFormat" json:"output_format,omitempty"`
}

func (x *StartActionRequest_MySQLExplainParams) Reset() {
	*x = StartActionRequest_MySQLExplainParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MySQLExplainParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MySQLExplainParams) ProtoMessage() {}

func (x *StartActionRequest_MySQLExplainParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MySQLExplainParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MySQLExplainParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 0}
}

func (x *StartActionRequest_MySQLExplainParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MySQLExplainParams) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *StartActionRequest_MySQLExplainParams) GetOutputFormat() MysqlExplainOutputFormat {
	if x != nil {
		return x.OutputFormat
	}
	return MysqlExplainOutputFormat_MYSQL_EXPLAIN_OUTPUT_FORMAT_INVALID
}

// MySQLShowCreateTableParams describes MySQL SHOW CREATE TABLE action parameters.
type StartActionRequest_MySQLShowCreateTableParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn   string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Table string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *StartActionRequest_MySQLShowCreateTableParams) Reset() {
	*x = StartActionRequest_MySQLShowCreateTableParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MySQLShowCreateTableParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MySQLShowCreateTableParams) ProtoMessage() {}

func (x *StartActionRequest_MySQLShowCreateTableParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MySQLShowCreateTableParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MySQLShowCreateTableParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 1}
}

func (x *StartActionRequest_MySQLShowCreateTableParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MySQLShowCreateTableParams) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

// MySQLShowTableStatusParams describes MySQL SHOW TABLE STATUS action parameters.
type StartActionRequest_MySQLShowTableStatusParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn   string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Table string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *StartActionRequest_MySQLShowTableStatusParams) Reset() {
	*x = StartActionRequest_MySQLShowTableStatusParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MySQLShowTableStatusParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MySQLShowTableStatusParams) ProtoMessage() {}

func (x *StartActionRequest_MySQLShowTableStatusParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MySQLShowTableStatusParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MySQLShowTableStatusParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 2}
}

func (x *StartActionRequest_MySQLShowTableStatusParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MySQLShowTableStatusParams) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

// MySQLShowIndexParams describes MySQL SHOW INDEX action parameters.
type StartActionRequest_MySQLShowIndexParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn   string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Table string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *StartActionRequest_MySQLShowIndexParams) Reset() {
	*x = StartActionRequest_MySQLShowIndexParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MySQLShowIndexParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MySQLShowIndexParams) ProtoMessage() {}

func (x *StartActionRequest_MySQLShowIndexParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MySQLShowIndexParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MySQLShowIndexParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 3}
}

func (x *StartActionRequest_MySQLShowIndexParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MySQLShowIndexParams) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

// PostgreSQLShowCreateTableParams describes PostgreSQL SHOW CREATE TABLE action parameters.
type StartActionRequest_PostgreSQLShowCreateTableParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn   string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Table string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *StartActionRequest_PostgreSQLShowCreateTableParams) Reset() {
	*x = StartActionRequest_PostgreSQLShowCreateTableParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_PostgreSQLShowCreateTableParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_PostgreSQLShowCreateTableParams) ProtoMessage() {}

func (x *StartActionRequest_PostgreSQLShowCreateTableParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_PostgreSQLShowCreateTableParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_PostgreSQLShowCreateTableParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 4}
}

func (x *StartActionRequest_PostgreSQLShowCreateTableParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_PostgreSQLShowCreateTableParams) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

// PostgreSQLShowIndexParams describes PostgreSQL SHOW INDEX action parameters.
type StartActionRequest_PostgreSQLShowIndexParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn   string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Table string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
}

func (x *StartActionRequest_PostgreSQLShowIndexParams) Reset() {
	*x = StartActionRequest_PostgreSQLShowIndexParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_PostgreSQLShowIndexParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_PostgreSQLShowIndexParams) ProtoMessage() {}

func (x *StartActionRequest_PostgreSQLShowIndexParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_PostgreSQLShowIndexParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_PostgreSQLShowIndexParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 5}
}

func (x *StartActionRequest_PostgreSQLShowIndexParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_PostgreSQLShowIndexParams) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

// MongoDBExplainParams describes MongoDB EXPLAIN action parameters.
type StartActionRequest_MongoDBExplainParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	// May contain placeholders for file paths in DSN.
	Dsn   string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,3,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
}

func (x *StartActionRequest_MongoDBExplainParams) Reset() {
	*x = StartActionRequest_MongoDBExplainParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MongoDBExplainParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MongoDBExplainParams) ProtoMessage() {}

func (x *StartActionRequest_MongoDBExplainParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MongoDBExplainParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MongoDBExplainParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 6}
}

func (x *StartActionRequest_MongoDBExplainParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MongoDBExplainParams) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *StartActionRequest_MongoDBExplainParams) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

// PTSummaryParams describes parameters for PT summary.
type StartActionRequest_PTSummaryParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartActionRequest_PTSummaryParams) Reset() {
	*x = StartActionRequest_PTSummaryParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_PTSummaryParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_PTSummaryParams) ProtoMessage() {}

func (x *StartActionRequest_PTSummaryParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_PTSummaryParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_PTSummaryParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 7}
}

// PTMongoDBSummaryParams describes parameters for PT MongoDB summary.
type StartActionRequest_PTMongoDBSummaryParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port     uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *StartActionRequest_PTMongoDBSummaryParams) Reset() {
	*x = StartActionRequest_PTMongoDBSummaryParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_PTMongoDBSummaryParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_PTMongoDBSummaryParams) ProtoMessage() {}

func (x *StartActionRequest_PTMongoDBSummaryParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_PTMongoDBSummaryParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_PTMongoDBSummaryParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 8}
}

func (x *StartActionRequest_PTMongoDBSummaryParams) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *StartActionRequest_PTMongoDBSummaryParams) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StartActionRequest_PTMongoDBSummaryParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *StartActionRequest_PTMongoDBSummaryParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// MySQLQueryShowParams describes MySQL SHOW query action parameters.
type StartActionRequest_MySQLQueryShowParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Query suffix (without leading SHOW).
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *StartActionRequest_MySQLQueryShowParams) Reset() {
	*x = StartActionRequest_MySQLQueryShowParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MySQLQueryShowParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MySQLQueryShowParams) ProtoMessage() {}

func (x *StartActionRequest_MySQLQueryShowParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MySQLQueryShowParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MySQLQueryShowParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 9}
}

func (x *StartActionRequest_MySQLQueryShowParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MySQLQueryShowParams) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

// MySQLQuerySelectParams describes MySQL SELECT query action parameters.
type StartActionRequest_MySQLQuerySelectParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Query suffix (without leading SELECT).
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *StartActionRequest_MySQLQuerySelectParams) Reset() {
	*x = StartActionRequest_MySQLQuerySelectParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MySQLQuerySelectParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MySQLQuerySelectParams) ProtoMessage() {}

func (x *StartActionRequest_MySQLQuerySelectParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MySQLQuerySelectParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MySQLQuerySelectParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 10}
}

func (x *StartActionRequest_MySQLQuerySelectParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MySQLQuerySelectParams) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

// PostgreSQLQueryShowParams describes PostgreSQL SHOW query action parameters.
type StartActionRequest_PostgreSQLQueryShowParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
}

func (x *StartActionRequest_PostgreSQLQueryShowParams) Reset() {
	*x = StartActionRequest_PostgreSQLQueryShowParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_PostgreSQLQueryShowParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_PostgreSQLQueryShowParams) ProtoMessage() {}

func (x *StartActionRequest_PostgreSQLQueryShowParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_PostgreSQLQueryShowParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_PostgreSQLQueryShowParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 11}
}

func (x *StartActionRequest_PostgreSQLQueryShowParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

// PostgreSQLQuerySelectParams describes PostgreSQL SELECT query action parameters.
type StartActionRequest_PostgreSQLQuerySelectParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Query suffix (without leading SELECT).
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *StartActionRequest_PostgreSQLQuerySelectParams) Reset() {
	*x = StartActionRequest_PostgreSQLQuerySelectParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_PostgreSQLQuerySelectParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_PostgreSQLQuerySelectParams) ProtoMessage() {}

func (x *StartActionRequest_PostgreSQLQuerySelectParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_PostgreSQLQuerySelectParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_PostgreSQLQuerySelectParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 12}
}

func (x *StartActionRequest_PostgreSQLQuerySelectParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_PostgreSQLQuerySelectParams) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

// MongoDBQueryGetParameterParams describes MongoDB getParameter query action parameters.
type StartActionRequest_MongoDBQueryGetParameterParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	// May contain placeholders for file paths in DSN.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,2,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
}

func (x *StartActionRequest_MongoDBQueryGetParameterParams) Reset() {
	*x = StartActionRequest_MongoDBQueryGetParameterParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MongoDBQueryGetParameterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MongoDBQueryGetParameterParams) ProtoMessage() {}

func (x *StartActionRequest_MongoDBQueryGetParameterParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MongoDBQueryGetParameterParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MongoDBQueryGetParameterParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 13}
}

func (x *StartActionRequest_MongoDBQueryGetParameterParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MongoDBQueryGetParameterParams) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

// MongoDBQueryBuildInfoParams describes MongoDB buildInfo query action parameters.
type StartActionRequest_MongoDBQueryBuildInfoParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	// May contain placeholders for file paths in DSN.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,2,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
}

func (x *StartActionRequest_MongoDBQueryBuildInfoParams) Reset() {
	*x = StartActionRequest_MongoDBQueryBuildInfoParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MongoDBQueryBuildInfoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MongoDBQueryBuildInfoParams) ProtoMessage() {}

func (x *StartActionRequest_MongoDBQueryBuildInfoParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MongoDBQueryBuildInfoParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MongoDBQueryBuildInfoParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 14}
}

func (x *StartActionRequest_MongoDBQueryBuildInfoParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MongoDBQueryBuildInfoParams) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

// MongoDBQueryGetCmdLineOptsParams describes MongoDB getCmdLineOpts query action parameters.
type StartActionRequest_MongoDBQueryGetCmdLineOptsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	// May contain placeholders for file paths in DSN.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,2,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
}

func (x *StartActionRequest_MongoDBQueryGetCmdLineOptsParams) Reset() {
	*x = StartActionRequest_MongoDBQueryGetCmdLineOptsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MongoDBQueryGetCmdLineOptsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MongoDBQueryGetCmdLineOptsParams) ProtoMessage() {}

func (x *StartActionRequest_MongoDBQueryGetCmdLineOptsParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MongoDBQueryGetCmdLineOptsParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MongoDBQueryGetCmdLineOptsParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13, 15}
}

func (x *StartActionRequest_MongoDBQueryGetCmdLineOptsParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MongoDBQueryGetCmdLineOptsParams) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

// Stats contains various Service statistics.
type CheckConnectionResponse_Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A number of tables, 0 if unknown.
	TableCount int32 `protobuf:"varint,1,opt,name=table_count,json=tableCount,proto3" json:"table_count,omitempty"`
}

func (x *CheckConnectionResponse_Stats) Reset() {
	*x = CheckConnectionResponse_Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckConnectionResponse_Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckConnectionResponse_Stats) ProtoMessage() {}

func (x *CheckConnectionResponse_Stats) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckConnectionResponse_Stats.ProtoReflect.Descriptor instead.
func (*CheckConnectionResponse_Stats) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{20, 0}
}

func (x *CheckConnectionResponse_Stats) GetTableCount() int32 {
	if x != nil {
		return x.TableCount
	}
	return 0
}

var File_agentpb_agent_proto protoreflect.FileDescriptor

var file_agentpb_agent_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0x17, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x70, 0x62, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x70, 0x62, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1a, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x70, 0x62, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xda, 0x01, 0x0a,
	0x09, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a,
	0x13, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x64,
	0x65, 0x6c, 0x69, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x12, 0x30, 0x0a,
	0x14, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x64, 0x65, 0x6c, 0x69, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x1a,
	0x38, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x06, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x22, 0x45, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x11, 0x51, 0x41, 0x4e, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a,
	0x0e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0d, 0x6d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x73, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x51, 0x41,
	0x4e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x81, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x70, 0x6f,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x50, 0x6f, 0x72, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdf, 0x07, 0x0a,
	0x0f, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x53, 0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0e, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e,
	0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x74, 0x69,
	0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xf4, 0x02, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6c,
	0x65, 0x66, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x44, 0x65, 0x6c,
	0x69, 0x6d, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x69, 0x67, 0x68, 0x74, 0x44,
	0x65, 0x6c, 0x69, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x51, 0x0a, 0x0a, 0x74, 0x65,
	0x78, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x64, 0x61, 0x63, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x61, 0x63, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x73,
	0x1a, 0x3c, 0x0a, 0x0e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x66,
	0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xde, 0x01, 0x0a, 0x0c, 0x42, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x73, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x12, 0x6d, 0x61, 0x78,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c,
	0x6f, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65,
	0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x65, 0x0a, 0x12, 0x42, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x12,
	0x0a, 0x10, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xc0, 0x02, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x6e, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x03, 0x6e, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x62,
	0x6f, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f,
	0x6c, 0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x48, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x75, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x06, 0x75, 0x69, 0x6e,
	0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x6c, 0x69,
	0x63, 0x65, 0x12, 0x29, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x42, 0x06, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x41, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x73, 0x6c, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x05, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x0e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x12, 0x30, 0x0a, 0x03, 0x6d,
	0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x2e,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x1a, 0x4f, 0x0a,
	0x08, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x85,
	0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x2b,
	0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x6c, 0x69, 0x63, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x64,
	0x6f, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70,
	0x52, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x22, 0xce, 0x19, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x60, 0x0a, 0x14, 0x6d, 0x79,
	0x73, 0x71, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x12, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x45,
	0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x7a, 0x0a, 0x1e,
	0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x1a, 0x6d, 0x79,
	0x73, 0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x7a, 0x0a, 0x1e, 0x6d, 0x79, 0x73, 0x71,
	0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x79, 0x53, 0x51,
	0x4c, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x1a, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x53,
	0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x67, 0x0a, 0x17, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x14, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x53, 0x68,
	0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x89, 0x01,
	0x0a, 0x23, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51,
	0x4c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x1f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x76, 0x0a, 0x1c, 0x70, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x19, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x66, 0x0a, 0x16, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x5f, 0x65, 0x78, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x6e,
	0x67, 0x6f, 0x44, 0x42, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x48, 0x00, 0x52, 0x14, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x45, 0x78, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x57, 0x0a, 0x11, 0x70, 0x74, 0x5f,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x50, 0x54, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48,
	0x00, 0x52, 0x0f, 0x70, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x6d, 0x0a, 0x19, 0x70, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62,
	0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x50, 0x54, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x16, 0x70, 0x74, 0x4d, 0x6f, 0x6e,
	0x67, 0x6f, 0x64, 0x62, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x67, 0x0a, 0x17, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x32, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x79,
	0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x48, 0x00, 0x52, 0x14, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x68, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x6d, 0x0a, 0x19, 0x6d, 0x79,
	0x73, 0x71, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48,
	0x00, 0x52, 0x16, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x76, 0x0a, 0x1c, 0x70, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67,
	0x72, 0x65, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x19, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73,
	0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x7c, 0x0a, 0x1e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x5f,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x48, 0x00, 0x52, 0x1b, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x85, 0x01, 0x0a, 0x21, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x67, 0x65, 0x74, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x1e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x7c, 0x0a, 0x1e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f,
	0x64, 0x62, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e,
	0x66, 0x6f, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x35, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f,
	0x44, 0x42, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x1b, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64,
	0x62, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x66, 0x6f, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x23, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64,
	0x62, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x65, 0x74, 0x63, 0x6d, 0x64, 0x6c, 0x69,
	0x6e, 0x65, 0x6f, 0x70, 0x74, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x38, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d,
	0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x43, 0x6d,
	0x64, 0x4c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x74, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48,
	0x00, 0x52, 0x20, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47,
	0x65, 0x74, 0x63, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x6f, 0x70, 0x74, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x1a, 0x82, 0x01, 0x0a, 0x12, 0x4d, 0x79, 0x53,
	0x51, 0x4c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x44, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x45, 0x78, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52,
	0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x1a, 0x44, 0x0a,
	0x1a, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x1a, 0x44, 0x0a, 0x1a, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x3e, 0x0a, 0x14, 0x4d, 0x79, 0x53,
	0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x49, 0x0a, 0x1f, 0x50, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x1a, 0x43, 0x0a, 0x19, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53,
	0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x1a, 0x6f, 0x0a, 0x14, 0x4d, 0x6f, 0x6e,
	0x67, 0x6f, 0x44, 0x42, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x65, 0x78,
	0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x09, 0x74, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x11, 0x0a, 0x0f, 0x50, 0x54,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x78, 0x0a,
	0x16, 0x50, 0x54, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x3e, 0x0a, 0x14, 0x4d, 0x79, 0x53, 0x51, 0x4c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x40, 0x0a, 0x16, 0x4d, 0x79, 0x53, 0x51, 0x4c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x2d, 0x0a, 0x19, 0x50, 0x6f, 0x73,
	0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x1a, 0x45, 0x0a, 0x1b, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x1a,
	0x63, 0x0a, 0x1e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x73, 0x6e, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x1a, 0x60, 0x0a, 0x1b, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65, 0x78,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x65, 0x0a, 0x20, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44,
	0x42, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x4c, 0x69, 0x6e, 0x65,
	0x4f, 0x70, 0x74, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x2f, 0x0a, 0x0a,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x42, 0x08, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30,
	0x0a, 0x11, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x22, 0x14, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x16, 0x0a, 0x14,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x33, 0x0a,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x1a, 0x28, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb6, 0x04, 0x0a, 0x0c,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x04,
	0x70, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x41, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x71, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x51, 0x41, 0x4e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0a, 0x71, 0x61, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12,
	0x41, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52,
	0x04, 0x70, 0x6f, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3f, 0x0a,
	0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c,
	0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x70,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x10,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x22, 0xb6, 0x04, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x6e,
	0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x12, 0x42, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x3c, 0x0a,
	0x0b, 0x71, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x41, 0x4e, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x0a, 0x71, 0x61, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x42, 0x0a, 0x0d, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x21, 0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69,
	0x6e, 0x67, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x08, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x74, 0x6f,
	0x70, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x70,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a, 0xc4, 0x01,
	0x0a, 0x18, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x27, 0x0a, 0x23, 0x4d, 0x59,
	0x53, 0x51, 0x4c, 0x5f, 0x45, 0x58, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x50,
	0x55, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0x00, 0x12, 0x27, 0x0a, 0x23, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x45, 0x58, 0x50,
	0x4c, 0x41, 0x49, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d,
	0x41, 0x54, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20,
	0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x45, 0x58, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x5f, 0x4f, 0x55,
	0x54, 0x50, 0x55, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x4a, 0x53, 0x4f, 0x4e,
	0x10, 0x02, 0x12, 0x30, 0x0a, 0x2c, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x45, 0x58, 0x50, 0x4c,
	0x41, 0x49, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41,
	0x54, 0x5f, 0x54, 0x52, 0x41, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x4a, 0x53,
	0x4f, 0x4e, 0x10, 0x03, 0x32, 0x41, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x13, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x14, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x15, 0x5a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x3b, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_agentpb_agent_proto_rawDescOnce sync.Once
	file_agentpb_agent_proto_rawDescData = file_agentpb_agent_proto_rawDesc
)

func file_agentpb_agent_proto_rawDescGZIP() []byte {
	file_agentpb_agent_proto_rawDescOnce.Do(func() {
		file_agentpb_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_agentpb_agent_proto_rawDescData)
	})
	return file_agentpb_agent_proto_rawDescData
}

var file_agentpb_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_agentpb_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 47)
var file_agentpb_agent_proto_goTypes = []interface{}{
	(MysqlExplainOutputFormat)(0),        // 0: agent.MysqlExplainOutputFormat
	(*TextFiles)(nil),                    // 1: agent.TextFiles
	(*Ping)(nil),                         // 2: agent.Ping
	(*Pong)(nil),                         // 3: agent.Pong
	(*QANCollectRequest)(nil),            // 4: agent.QANCollectRequest
	(*QANCollectResponse)(nil),           // 5: agent.QANCollectResponse
	(*StateChangedRequest)(nil),          // 6: agent.StateChangedRequest
	(*StateChangedResponse)(nil),         // 7: agent.StateChangedResponse
	(*SetStateRequest)(nil),              // 8: agent.SetStateRequest
	(*SetStateResponse)(nil),             // 9: agent.SetStateResponse
	(*QueryActionValue)(nil),             // 10: agent.QueryActionValue
	(*QueryActionSlice)(nil),             // 11: agent.QueryActionSlice
	(*QueryActionMap)(nil),               // 12: agent.QueryActionMap
	(*QueryActionResult)(nil),            // 13: agent.QueryActionResult
	(*StartActionRequest)(nil),           // 14: agent.StartActionRequest
	(*StartActionResponse)(nil),          // 15: agent.StartActionResponse
	(*StopActionRequest)(nil),            // 16: agent.StopActionRequest
	(*StopActionResponse)(nil),           // 17: agent.StopActionResponse
	(*ActionResultRequest)(nil),          // 18: agent.ActionResultRequest
	(*ActionResultResponse)(nil),         // 19: agent.ActionResultResponse
	(*CheckConnectionRequest)(nil),       // 20: agent.CheckConnectionRequest
	(*CheckConnectionResponse)(nil),      // 21: agent.CheckConnectionResponse
	(*AgentMessage)(nil),                 // 22: agent.AgentMessage
	(*ServerMessage)(nil),                // 23: agent.ServerMessage
	nil,                                  // 24: agent.TextFiles.FilesEntry
	(*SetStateRequest_AgentProcess)(nil), // 25: agent.SetStateRequest.AgentProcess
	nil,                                  // 26: agent.SetStateRequest.AgentProcessesEntry
	(*SetStateRequest_BuiltinAgent)(nil), // 27: agent.SetStateRequest.BuiltinAgent
	nil,                                  // 28: agent.SetStateRequest.BuiltinAgentsEntry
	nil,                                  // 29: agent.SetStateRequest.AgentProcess.TextFilesEntry
	nil,                                  // 30: agent.QueryActionMap.MapEntry
	(*StartActionRequest_MySQLExplainParams)(nil),               // 31: agent.StartActionRequest.MySQLExplainParams
	(*StartActionRequest_MySQLShowCreateTableParams)(nil),       // 32: agent.StartActionRequest.MySQLShowCreateTableParams
	(*StartActionRequest_MySQLShowTableStatusParams)(nil),       // 33: agent.StartActionRequest.MySQLShowTableStatusParams
	(*StartActionRequest_MySQLShowIndexParams)(nil),             // 34: agent.StartActionRequest.MySQLShowIndexParams
	(*StartActionRequest_PostgreSQLShowCreateTableParams)(nil),  // 35: agent.StartActionRequest.PostgreSQLShowCreateTableParams
	(*StartActionRequest_PostgreSQLShowIndexParams)(nil),        // 36: agent.StartActionRequest.PostgreSQLShowIndexParams
	(*StartActionRequest_MongoDBExplainParams)(nil),             // 37: agent.StartActionRequest.MongoDBExplainParams
	(*StartActionRequest_PTSummaryParams)(nil),                  // 38: agent.StartActionRequest.PTSummaryParams
	(*StartActionRequest_PTMongoDBSummaryParams)(nil),           // 39: agent.StartActionRequest.PTMongoDBSummaryParams
	(*StartActionRequest_MySQLQueryShowParams)(nil),             // 40: agent.StartActionRequest.MySQLQueryShowParams
	(*StartActionRequest_MySQLQuerySelectParams)(nil),           // 41: agent.StartActionRequest.MySQLQuerySelectParams
	(*StartActionRequest_PostgreSQLQueryShowParams)(nil),        // 42: agent.StartActionRequest.PostgreSQLQueryShowParams
	(*StartActionRequest_PostgreSQLQuerySelectParams)(nil),      // 43: agent.StartActionRequest.PostgreSQLQuerySelectParams
	(*StartActionRequest_MongoDBQueryGetParameterParams)(nil),   // 44: agent.StartActionRequest.MongoDBQueryGetParameterParams
	(*StartActionRequest_MongoDBQueryBuildInfoParams)(nil),      // 45: agent.StartActionRequest.MongoDBQueryBuildInfoParams
	(*StartActionRequest_MongoDBQueryGetCmdLineOptsParams)(nil), // 46: agent.StartActionRequest.MongoDBQueryGetCmdLineOptsParams
	(*CheckConnectionResponse_Stats)(nil),                       // 47: agent.CheckConnectionResponse.Stats
	(*timestamp.Timestamp)(nil),                                 // 48: google.protobuf.Timestamp
	(*MetricsBucket)(nil),                                       // 49: agent.MetricsBucket
	(inventorypb.AgentStatus)(0),                                // 50: inventory.AgentStatus
	(*duration.Duration)(nil),                                   // 51: google.protobuf.Duration
	(inventorypb.ServiceType)(0),                                // 52: inventory.ServiceType
	(inventorypb.AgentType)(0),                                  // 53: inventory.AgentType
}
var file_agentpb_agent_proto_depIdxs = []int32{
	24, // 0: agent.TextFiles.files:type_name -> agent.TextFiles.FilesEntry
	48, // 1: agent.Pong.current_time:type_name -> google.protobuf.Timestamp
	49, // 2: agent.QANCollectRequest.metrics_bucket:type_name -> agent.MetricsBucket
	50, // 3: agent.StateChangedRequest.status:type_name -> inventory.AgentStatus
	26, // 4: agent.SetStateRequest.agent_processes:type_name -> agent.SetStateRequest.AgentProcessesEntry
	28, // 5: agent.SetStateRequest.builtin_agents:type_name -> agent.SetStateRequest.BuiltinAgentsEntry
	48, // 6: agent.QueryActionValue.timestamp:type_name -> google.protobuf.Timestamp
	11, // 7: agent.QueryActionValue.slice:type_name -> agent.QueryActionSlice
	12, // 8: agent.QueryActionValue.map:type_name -> agent.QueryActionMap
	10, // 9: agent.QueryActionSlice.slice:type_name -> agent.QueryActionValue
	30, // 10: agent.QueryActionMap.map:type_name -> agent.QueryActionMap.MapEntry
	11, // 11: agent.QueryActionResult.rows:type_name -> agent.QueryActionSlice
	12, // 12: agent.QueryActionResult.docs:type_name -> agent.QueryActionMap
	31, // 13: agent.StartActionRequest.mysql_explain_params:type_name -> agent.StartActionRequest.MySQLExplainParams
	32, // 14: agent.StartActionRequest.mysql_show_create_table_params:type_name -> agent.StartActionRequest.MySQLShowCreateTableParams
	33, // 15: agent.StartActionRequest.mysql_show_table_status_params:type_name -> agent.StartActionRequest.MySQLShowTableStatusParams
	34, // 16: agent.StartActionRequest.mysql_show_index_params:type_name -> agent.StartActionRequest.MySQLShowIndexParams
	35, // 17: agent.StartActionRequest.postgresql_show_create_table_params:type_name -> agent.StartActionRequest.PostgreSQLShowCreateTableParams
	36, // 18: agent.StartActionRequest.postgresql_show_index_params:type_name -> agent.StartActionRequest.PostgreSQLShowIndexParams
	37, // 19: agent.StartActionRequest.mongodb_explain_params:type_name -> agent.StartActionRequest.MongoDBExplainParams
	38, // 20: agent.StartActionRequest.pt_summary_params:type_name -> agent.StartActionRequest.PTSummaryParams
	39, // 21: agent.StartActionRequest.pt_mongodb_summary_params:type_name -> agent.StartActionRequest.PTMongoDBSummaryParams
	40, // 22: agent.StartActionRequest.mysql_query_show_params:type_name -> agent.StartActionRequest.MySQLQueryShowParams
	41, // 23: agent.StartActionRequest.mysql_query_select_params:type_name -> agent.StartActionRequest.MySQLQuerySelectParams
	42, // 24: agent.StartActionRequest.postgresql_query_show_params:type_name -> agent.StartActionRequest.PostgreSQLQueryShowParams
	43, // 25: agent.StartActionRequest.postgresql_query_select_params:type_name -> agent.StartActionRequest.PostgreSQLQuerySelectParams
	44, // 26: agent.StartActionRequest.mongodb_query_getparameter_params:type_name -> agent.StartActionRequest.MongoDBQueryGetParameterParams
	45, // 27: agent.StartActionRequest.mongodb_query_buildinfo_params:type_name -> agent.StartActionRequest.MongoDBQueryBuildInfoParams
	46, // 28: agent.StartActionRequest.mongodb_query_getcmdlineopts_params:type_name -> agent.StartActionRequest.MongoDBQueryGetCmdLineOptsParams
	51, // 29: agent.StartActionRequest.timeout:type_name -> google.protobuf.Duration
	52, // 30: agent.CheckConnectionRequest.type:type_name -> inventory.ServiceType
	51, // 31: agent.CheckConnectionRequest.timeout:type_name -> google.protobuf.Duration
	1,  // 32: agent.CheckConnectionRequest.text_files:type_name -> agent.TextFiles
	47, // 33: agent.CheckConnectionResponse.stats:type_name -> agent.CheckConnectionResponse.Stats
	2,  // 34: agent.AgentMessage.ping:type_name -> agent.Ping
	6,  // 35: agent.AgentMessage.state_changed:type_name -> agent.StateChangedRequest
	4,  // 36: agent.AgentMessage.qan_collect:type_name -> agent.QANCollectRequest
	18, // 37: agent.AgentMessage.action_result:type_name -> agent.ActionResultRequest
	3,  // 38: agent.AgentMessage.pong:type_name -> agent.Pong
	9,  // 39: agent.AgentMessage.set_state:type_name -> agent.SetStateResponse
	15, // 40: agent.AgentMessage.start_action:type_name -> agent.StartActionResponse
	17, // 41: agent.AgentMessage.stop_action:type_name -> agent.StopActionResponse
	21, // 42: agent.AgentMessage.check_connection:type_name -> agent.CheckConnectionResponse
	3,  // 43: agent.ServerMessage.pong:type_name -> agent.Pong
	7,  // 44: agent.ServerMessage.state_changed:type_name -> agent.StateChangedResponse
	5,  // 45: agent.ServerMessage.qan_collect:type_name -> agent.QANCollectResponse
	19, // 46: agent.ServerMessage.action_result:type_name -> agent.ActionResultResponse
	2,  // 47: agent.ServerMessage.ping:type_name -> agent.Ping
	8,  // 48: agent.ServerMessage.set_state:type_name -> agent.SetStateRequest
	14, // 49: agent.ServerMessage.start_action:type_name -> agent.StartActionRequest
	16, // 50: agent.ServerMessage.stop_action:type_name -> agent.StopActionRequest
	20, // 51: agent.ServerMessage.check_connection:type_name -> agent.CheckConnectionRequest
	53, // 52: agent.SetStateRequest.AgentProcess.type:type_name -> inventory.AgentType
	29, // 53: agent.SetStateRequest.AgentProcess.text_files:type_name -> agent.SetStateRequest.AgentProcess.TextFilesEntry
	25, // 54: agent.SetStateRequest.AgentProcessesEntry.value:type_name -> agent.SetStateRequest.AgentProcess
	53, // 55: agent.SetStateRequest.BuiltinAgent.type:type_name -> inventory.AgentType
	1,  // 56: agent.SetStateRequest.BuiltinAgent.text_files:type_name -> agent.TextFiles
	27, // 57: agent.SetStateRequest.BuiltinAgentsEntry.value:type_name -> agent.SetStateRequest.BuiltinAgent
	10, // 58: agent.QueryActionMap.MapEntry.value:type_name -> agent.QueryActionValue
	0,  // 59: agent.StartActionRequest.MySQLExplainParams.output_format:type_name -> agent.MysqlExplainOutputFormat
	1,  // 60: agent.StartActionRequest.MongoDBExplainParams.text_files:type_name -> agent.TextFiles
	1,  // 61: agent.StartActionRequest.MongoDBQueryGetParameterParams.text_files:type_name -> agent.TextFiles
	1,  // 62: agent.StartActionRequest.MongoDBQueryBuildInfoParams.text_files:type_name -> agent.TextFiles
	1,  // 63: agent.StartActionRequest.MongoDBQueryGetCmdLineOptsParams.text_files:type_name -> agent.TextFiles
	22, // 64: agent.Agent.Connect:input_type -> agent.AgentMessage
	23, // 65: agent.Agent.Connect:output_type -> agent.ServerMessage
	65, // [65:66] is the sub-list for method output_type
	64, // [64:65] is the sub-list for method input_type
	64, // [64:64] is the sub-list for extension type_name
	64, // [64:64] is the sub-list for extension extendee
	0,  // [0:64] is the sub-list for field type_name
}

func init() { file_agentpb_agent_proto_init() }
func file_agentpb_agent_proto_init() {
	if File_agentpb_agent_proto != nil {
		return
	}
	file_agentpb_collector_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_agentpb_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextFiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QANCollectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QANCollectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateChangedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateChangedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActionValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActionSlice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActionMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStateRequest_AgentProcess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStateRequest_BuiltinAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MySQLExplainParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MySQLShowCreateTableParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MySQLShowTableStatusParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MySQLShowIndexParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_PostgreSQLShowCreateTableParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_PostgreSQLShowIndexParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MongoDBExplainParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_PTSummaryParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_PTMongoDBSummaryParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MySQLQueryShowParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MySQLQuerySelectParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_PostgreSQLQueryShowParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_PostgreSQLQuerySelectParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MongoDBQueryGetParameterParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MongoDBQueryBuildInfoParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MongoDBQueryGetCmdLineOptsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckConnectionResponse_Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_agentpb_agent_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*QueryActionValue_Nil)(nil),
		(*QueryActionValue_Bool)(nil),
		(*QueryActionValue_Int64)(nil),
		(*QueryActionValue_Uint64)(nil),
		(*QueryActionValue_Double)(nil),
		(*QueryActionValue_Bytes)(nil),
		(*QueryActionValue_Timestamp)(nil),
		(*QueryActionValue_Slice)(nil),
		(*QueryActionValue_Map)(nil),
	}
	file_agentpb_agent_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*StartActionRequest_MysqlExplainParams)(nil),
		(*StartActionRequest_MysqlShowCreateTableParams)(nil),
		(*StartActionRequest_MysqlShowTableStatusParams)(nil),
		(*StartActionRequest_MysqlShowIndexParams)(nil),
		(*StartActionRequest_PostgresqlShowCreateTableParams)(nil),
		(*StartActionRequest_PostgresqlShowIndexParams)(nil),
		(*StartActionRequest_MongodbExplainParams)(nil),
		(*StartActionRequest_PtSummaryParams)(nil),
		(*StartActionRequest_PtMongodbSummaryParams)(nil),
		(*StartActionRequest_MysqlQueryShowParams)(nil),
		(*StartActionRequest_MysqlQuerySelectParams)(nil),
		(*StartActionRequest_PostgresqlQueryShowParams)(nil),
		(*StartActionRequest_PostgresqlQuerySelectParams)(nil),
		(*StartActionRequest_MongodbQueryGetparameterParams)(nil),
		(*StartActionRequest_MongodbQueryBuildinfoParams)(nil),
		(*StartActionRequest_MongodbQueryGetcmdlineoptsParams)(nil),
	}
	file_agentpb_agent_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*AgentMessage_Ping)(nil),
		(*AgentMessage_StateChanged)(nil),
		(*AgentMessage_QanCollect)(nil),
		(*AgentMessage_ActionResult)(nil),
		(*AgentMessage_Pong)(nil),
		(*AgentMessage_SetState)(nil),
		(*AgentMessage_StartAction)(nil),
		(*AgentMessage_StopAction)(nil),
		(*AgentMessage_CheckConnection)(nil),
	}
	file_agentpb_agent_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*ServerMessage_Pong)(nil),
		(*ServerMessage_StateChanged)(nil),
		(*ServerMessage_QanCollect)(nil),
		(*ServerMessage_ActionResult)(nil),
		(*ServerMessage_Ping)(nil),
		(*ServerMessage_SetState)(nil),
		(*ServerMessage_StartAction)(nil),
		(*ServerMessage_StopAction)(nil),
		(*ServerMessage_CheckConnection)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agentpb_agent_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   47,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agentpb_agent_proto_goTypes,
		DependencyIndexes: file_agentpb_agent_proto_depIdxs,
		EnumInfos:         file_agentpb_agent_proto_enumTypes,
		MessageInfos:      file_agentpb_agent_proto_msgTypes,
	}.Build()
	File_agentpb_agent_proto = out.File
	file_agentpb_agent_proto_rawDesc = nil
	file_agentpb_agent_proto_goTypes = nil
	file_agentpb_agent_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	// Connect establishes two-way communication channel between pmm-agent and pmm-managed.
	Connect(ctx context.Context, opts ...grpc.CallOption) (Agent_ConnectClient, error)
}

type agentClient struct {
	cc grpc.ClientConnInterface
}

func NewAgentClient(cc grpc.ClientConnInterface) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) Connect(ctx context.Context, opts ...grpc.CallOption) (Agent_ConnectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[0], "/agent.Agent/Connect", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentConnectClient{stream}
	return x, nil
}

type Agent_ConnectClient interface {
	Send(*AgentMessage) error
	Recv() (*ServerMessage, error)
	grpc.ClientStream
}

type agentConnectClient struct {
	grpc.ClientStream
}

func (x *agentConnectClient) Send(m *AgentMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentConnectClient) Recv() (*ServerMessage, error) {
	m := new(ServerMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	// Connect establishes two-way communication channel between pmm-agent and pmm-managed.
	Connect(Agent_ConnectServer) error
}

// UnimplementedAgentServer can be embedded to have forward compatible implementations.
type UnimplementedAgentServer struct {
}

func (*UnimplementedAgentServer) Connect(Agent_ConnectServer) error {
	return status.Errorf(codes.Unimplemented, "method Connect not implemented")
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_Connect_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).Connect(&agentConnectServer{stream})
}

type Agent_ConnectServer interface {
	Send(*ServerMessage) error
	Recv() (*AgentMessage, error)
	grpc.ServerStream
}

type agentConnectServer struct {
	grpc.ServerStream
}

func (x *agentConnectServer) Send(m *ServerMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentConnectServer) Recv() (*AgentMessage, error) {
	m := new(AgentMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "agent.Agent",
	HandlerType: (*AgentServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Connect",
			Handler:       _Agent_Connect_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "agentpb/agent.proto",
}
