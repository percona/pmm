// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: agentpb/agent.proto

package agentpb

import (
	reflect "reflect"
	sync "sync"

	status "google.golang.org/genproto/googleapis/rpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"

	inventorypb "github.com/percona/pmm/api/inventorypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MysqlExplainOutputFormat output formats supported by MySQL Explain action.
type MysqlExplainOutputFormat int32

const (
	MysqlExplainOutputFormat_MYSQL_EXPLAIN_OUTPUT_FORMAT_INVALID MysqlExplainOutputFormat = 0
	// EXPLAIN FORMAT=TRADITIONAL, returns result as text
	MysqlExplainOutputFormat_MYSQL_EXPLAIN_OUTPUT_FORMAT_DEFAULT MysqlExplainOutputFormat = 1
	// EXPLAIN FORMAT=JSON
	MysqlExplainOutputFormat_MYSQL_EXPLAIN_OUTPUT_FORMAT_JSON MysqlExplainOutputFormat = 2
	// EXPLAIN FORMAT=TRADITIONAL, returns result as JSON
	MysqlExplainOutputFormat_MYSQL_EXPLAIN_OUTPUT_FORMAT_TRADITIONAL_JSON MysqlExplainOutputFormat = 3
)

// Enum value maps for MysqlExplainOutputFormat.
var (
	MysqlExplainOutputFormat_name = map[int32]string{
		0: "MYSQL_EXPLAIN_OUTPUT_FORMAT_INVALID",
		1: "MYSQL_EXPLAIN_OUTPUT_FORMAT_DEFAULT",
		2: "MYSQL_EXPLAIN_OUTPUT_FORMAT_JSON",
		3: "MYSQL_EXPLAIN_OUTPUT_FORMAT_TRADITIONAL_JSON",
	}
	MysqlExplainOutputFormat_value = map[string]int32{
		"MYSQL_EXPLAIN_OUTPUT_FORMAT_INVALID":          0,
		"MYSQL_EXPLAIN_OUTPUT_FORMAT_DEFAULT":          1,
		"MYSQL_EXPLAIN_OUTPUT_FORMAT_JSON":             2,
		"MYSQL_EXPLAIN_OUTPUT_FORMAT_TRADITIONAL_JSON": 3,
	}
)

func (x MysqlExplainOutputFormat) Enum() *MysqlExplainOutputFormat {
	p := new(MysqlExplainOutputFormat)
	*p = x
	return p
}

func (x MysqlExplainOutputFormat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MysqlExplainOutputFormat) Descriptor() protoreflect.EnumDescriptor {
	return file_agentpb_agent_proto_enumTypes[0].Descriptor()
}

func (MysqlExplainOutputFormat) Type() protoreflect.EnumType {
	return &file_agentpb_agent_proto_enumTypes[0]
}

func (x MysqlExplainOutputFormat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MysqlExplainOutputFormat.Descriptor instead.
func (MysqlExplainOutputFormat) EnumDescriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{0}
}

// TextFiles contains files which can be used to connect to DB (certificates, keys and etc).
type TextFiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// files contains files which can be used to connect to DB (certificates, keys and etc).
	Files map[string]string `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// template_left_delim is used to replace placeholders in templates (DSN and etc.) with paths to files.
	TemplateLeftDelim string `protobuf:"bytes,2,opt,name=template_left_delim,json=templateLeftDelim,proto3" json:"template_left_delim,omitempty"`
	// template_right_delim is used to replace placeholders in templates (DSN and etc.) with paths to files.
	TemplateRightDelim string `protobuf:"bytes,3,opt,name=template_right_delim,json=templateRightDelim,proto3" json:"template_right_delim,omitempty"`
}

func (x *TextFiles) Reset() {
	*x = TextFiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextFiles) ProtoMessage() {}

func (x *TextFiles) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextFiles.ProtoReflect.Descriptor instead.
func (*TextFiles) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{0}
}

func (x *TextFiles) GetFiles() map[string]string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *TextFiles) GetTemplateLeftDelim() string {
	if x != nil {
		return x.TemplateLeftDelim
	}
	return ""
}

func (x *TextFiles) GetTemplateRightDelim() string {
	if x != nil {
		return x.TemplateRightDelim
	}
	return ""
}

// Ping is a AgentMessage/ServerMessage for checking connectivity, latency and clock drift.
type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{1}
}

// Pong is an AgentMessage/ServerMessage with current time for measuring clock drift.
type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=current_time,json=currentTime,proto3" json:"current_time,omitempty"`
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{2}
}

func (x *Pong) GetCurrentTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CurrentTime
	}
	return nil
}

// QANCollectRequest is an AgentMessage for sending QAN data for qan-api.
type QANCollectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetricsBucket []*MetricsBucket `protobuf:"bytes,1,rep,name=metrics_bucket,json=metricsBucket,proto3" json:"metrics_bucket,omitempty"`
}

func (x *QANCollectRequest) Reset() {
	*x = QANCollectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QANCollectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QANCollectRequest) ProtoMessage() {}

func (x *QANCollectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QANCollectRequest.ProtoReflect.Descriptor instead.
func (*QANCollectRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{3}
}

func (x *QANCollectRequest) GetMetricsBucket() []*MetricsBucket {
	if x != nil {
		return x.MetricsBucket
	}
	return nil
}

// QANCollectResponse is a ServerMessage for QAN data acceptance.
type QANCollectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QANCollectResponse) Reset() {
	*x = QANCollectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QANCollectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QANCollectResponse) ProtoMessage() {}

func (x *QANCollectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QANCollectResponse.ProtoReflect.Descriptor instead.
func (*QANCollectResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{4}
}

// StateChangedRequest is an AgentMessage describing actual agent status.
type StateChangedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId         string                  `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Status          inventorypb.AgentStatus `protobuf:"varint,2,opt,name=status,proto3,enum=inventory.AgentStatus" json:"status,omitempty"`
	ListenPort      uint32                  `protobuf:"varint,3,opt,name=listen_port,json=listenPort,proto3" json:"listen_port,omitempty"`
	ProcessExecPath string                  `protobuf:"bytes,4,opt,name=process_exec_path,json=processExecPath,proto3" json:"process_exec_path,omitempty"`
}

func (x *StateChangedRequest) Reset() {
	*x = StateChangedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateChangedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateChangedRequest) ProtoMessage() {}

func (x *StateChangedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateChangedRequest.ProtoReflect.Descriptor instead.
func (*StateChangedRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{5}
}

func (x *StateChangedRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *StateChangedRequest) GetStatus() inventorypb.AgentStatus {
	if x != nil {
		return x.Status
	}
	return inventorypb.AgentStatus(0)
}

func (x *StateChangedRequest) GetListenPort() uint32 {
	if x != nil {
		return x.ListenPort
	}
	return 0
}

func (x *StateChangedRequest) GetProcessExecPath() string {
	if x != nil {
		return x.ProcessExecPath
	}
	return ""
}

// StateChangedResponse is a ServerMessage for StateChangedRequest acceptance.
type StateChangedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateChangedResponse) Reset() {
	*x = StateChangedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateChangedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateChangedResponse) ProtoMessage() {}

func (x *StateChangedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateChangedResponse.ProtoReflect.Descriptor instead.
func (*StateChangedResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{6}
}

// SetStateRequest is a ServerMessage asking pmm-agent to run agents according to desired state.
type SetStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentProcesses map[string]*SetStateRequest_AgentProcess `protobuf:"bytes,1,rep,name=agent_processes,json=agentProcesses,proto3" json:"agent_processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	BuiltinAgents  map[string]*SetStateRequest_BuiltinAgent `protobuf:"bytes,2,rep,name=builtin_agents,json=builtinAgents,proto3" json:"builtin_agents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SetStateRequest) Reset() {
	*x = SetStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateRequest) ProtoMessage() {}

func (x *SetStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateRequest.ProtoReflect.Descriptor instead.
func (*SetStateRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{7}
}

func (x *SetStateRequest) GetAgentProcesses() map[string]*SetStateRequest_AgentProcess {
	if x != nil {
		return x.AgentProcesses
	}
	return nil
}

func (x *SetStateRequest) GetBuiltinAgents() map[string]*SetStateRequest_BuiltinAgent {
	if x != nil {
		return x.BuiltinAgents
	}
	return nil
}

// SetStateResponse is an AgentMessage for SetStateRequest acceptance.
type SetStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetStateResponse) Reset() {
	*x = SetStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateResponse) ProtoMessage() {}

func (x *SetStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateResponse.ProtoReflect.Descriptor instead.
func (*SetStateResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{8}
}

// QueryActionValue represents a single value used in query Actions.
type QueryActionValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//	*QueryActionValue_Nil
	//	*QueryActionValue_Bool
	//	*QueryActionValue_Int64
	//	*QueryActionValue_Uint64
	//	*QueryActionValue_Double
	//	*QueryActionValue_Bytes
	//	*QueryActionValue_Timestamp
	//	*QueryActionValue_Slice
	//	*QueryActionValue_Map
	//	*QueryActionValue_Binary
	Kind isQueryActionValue_Kind `protobuf_oneof:"kind"`
}

func (x *QueryActionValue) Reset() {
	*x = QueryActionValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActionValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActionValue) ProtoMessage() {}

func (x *QueryActionValue) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActionValue.ProtoReflect.Descriptor instead.
func (*QueryActionValue) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{9}
}

func (m *QueryActionValue) GetKind() isQueryActionValue_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *QueryActionValue) GetNil() bool {
	if x, ok := x.GetKind().(*QueryActionValue_Nil); ok {
		return x.Nil
	}
	return false
}

func (x *QueryActionValue) GetBool() bool {
	if x, ok := x.GetKind().(*QueryActionValue_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *QueryActionValue) GetInt64() int64 {
	if x, ok := x.GetKind().(*QueryActionValue_Int64); ok {
		return x.Int64
	}
	return 0
}

func (x *QueryActionValue) GetUint64() uint64 {
	if x, ok := x.GetKind().(*QueryActionValue_Uint64); ok {
		return x.Uint64
	}
	return 0
}

func (x *QueryActionValue) GetDouble() float64 {
	if x, ok := x.GetKind().(*QueryActionValue_Double); ok {
		return x.Double
	}
	return 0
}

func (x *QueryActionValue) GetBytes() []byte {
	if x, ok := x.GetKind().(*QueryActionValue_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (x *QueryActionValue) GetTimestamp() *timestamppb.Timestamp {
	if x, ok := x.GetKind().(*QueryActionValue_Timestamp); ok {
		return x.Timestamp
	}
	return nil
}

func (x *QueryActionValue) GetSlice() *QueryActionSlice {
	if x, ok := x.GetKind().(*QueryActionValue_Slice); ok {
		return x.Slice
	}
	return nil
}

func (x *QueryActionValue) GetMap() *QueryActionMap {
	if x, ok := x.GetKind().(*QueryActionValue_Map); ok {
		return x.Map
	}
	return nil
}

func (x *QueryActionValue) GetBinary() *QueryActionBinary {
	if x, ok := x.GetKind().(*QueryActionValue_Binary); ok {
		return x.Binary
	}
	return nil
}

type isQueryActionValue_Kind interface {
	isQueryActionValue_Kind()
}

type QueryActionValue_Nil struct {
	Nil bool `protobuf:"varint,1,opt,name=nil,proto3,oneof"`
}

type QueryActionValue_Bool struct {
	Bool bool `protobuf:"varint,2,opt,name=bool,proto3,oneof"`
}

type QueryActionValue_Int64 struct {
	Int64 int64 `protobuf:"varint,3,opt,name=int64,proto3,oneof"`
}

type QueryActionValue_Uint64 struct {
	Uint64 uint64 `protobuf:"varint,4,opt,name=uint64,proto3,oneof"`
}

type QueryActionValue_Double struct {
	Double float64 `protobuf:"fixed64,5,opt,name=double,proto3,oneof"`
}

type QueryActionValue_Bytes struct {
	Bytes []byte `protobuf:"bytes,6,opt,name=bytes,proto3,oneof"`
}

type QueryActionValue_Timestamp struct {
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=timestamp,proto3,oneof"`
}

type QueryActionValue_Slice struct {
	Slice *QueryActionSlice `protobuf:"bytes,10,opt,name=slice,proto3,oneof"`
}

type QueryActionValue_Map struct {
	Map *QueryActionMap `protobuf:"bytes,11,opt,name=map,proto3,oneof"`
}

type QueryActionValue_Binary struct {
	Binary *QueryActionBinary `protobuf:"bytes,12,opt,name=binary,proto3,oneof"`
}

func (*QueryActionValue_Nil) isQueryActionValue_Kind() {}

func (*QueryActionValue_Bool) isQueryActionValue_Kind() {}

func (*QueryActionValue_Int64) isQueryActionValue_Kind() {}

func (*QueryActionValue_Uint64) isQueryActionValue_Kind() {}

func (*QueryActionValue_Double) isQueryActionValue_Kind() {}

func (*QueryActionValue_Bytes) isQueryActionValue_Kind() {}

func (*QueryActionValue_Timestamp) isQueryActionValue_Kind() {}

func (*QueryActionValue_Slice) isQueryActionValue_Kind() {}

func (*QueryActionValue_Map) isQueryActionValue_Kind() {}

func (*QueryActionValue_Binary) isQueryActionValue_Kind() {}

// QueryActionSlice represents a slice of values used in query Actions.
type QueryActionSlice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slice []*QueryActionValue `protobuf:"bytes,1,rep,name=slice,proto3" json:"slice,omitempty"`
}

func (x *QueryActionSlice) Reset() {
	*x = QueryActionSlice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActionSlice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActionSlice) ProtoMessage() {}

func (x *QueryActionSlice) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActionSlice.ProtoReflect.Descriptor instead.
func (*QueryActionSlice) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{10}
}

func (x *QueryActionSlice) GetSlice() []*QueryActionValue {
	if x != nil {
		return x.Slice
	}
	return nil
}

// QueryActionMap represents a map of values used in query Actions.
type QueryActionMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map map[string]*QueryActionValue `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *QueryActionMap) Reset() {
	*x = QueryActionMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActionMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActionMap) ProtoMessage() {}

func (x *QueryActionMap) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActionMap.ProtoReflect.Descriptor instead.
func (*QueryActionMap) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{11}
}

func (x *QueryActionMap) GetMap() map[string]*QueryActionValue {
	if x != nil {
		return x.Map
	}
	return nil
}

// QueryActionBinary represents primitive.Binary used in query Actions.
type QueryActionBinary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subtype int32  `protobuf:"varint,1,opt,name=subtype,proto3" json:"subtype,omitempty"`
	Bytes   []byte `protobuf:"bytes,2,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *QueryActionBinary) Reset() {
	*x = QueryActionBinary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActionBinary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActionBinary) ProtoMessage() {}

func (x *QueryActionBinary) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActionBinary.ProtoReflect.Descriptor instead.
func (*QueryActionBinary) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{12}
}

func (x *QueryActionBinary) GetSubtype() int32 {
	if x != nil {
		return x.Subtype
	}
	return 0
}

func (x *QueryActionBinary) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

// QueryActionResult represents query Action result.
type QueryActionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// SQL result column names.
	Columns []string `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	// SQL result data rows.
	Rows []*QueryActionSlice `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
	// MongoDB documents.
	Docs []*QueryActionMap `protobuf:"bytes,3,rep,name=docs,proto3" json:"docs,omitempty"`
}

func (x *QueryActionResult) Reset() {
	*x = QueryActionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryActionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryActionResult) ProtoMessage() {}

func (x *QueryActionResult) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryActionResult.ProtoReflect.Descriptor instead.
func (*QueryActionResult) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{13}
}

func (x *QueryActionResult) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *QueryActionResult) GetRows() []*QueryActionSlice {
	if x != nil {
		return x.Rows
	}
	return nil
}

func (x *QueryActionResult) GetDocs() []*QueryActionMap {
	if x != nil {
		return x.Docs
	}
	return nil
}

// StartActionRequest is a ServerMessage asking pmm-agent to start action.
type StartActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// Types that are assignable to Params:
	//	*StartActionRequest_MysqlExplainParams
	//	*StartActionRequest_MysqlShowCreateTableParams
	//	*StartActionRequest_MysqlShowTableStatusParams
	//	*StartActionRequest_MysqlShowIndexParams
	//	*StartActionRequest_PostgresqlShowCreateTableParams
	//	*StartActionRequest_PostgresqlShowIndexParams
	//	*StartActionRequest_MongodbExplainParams
	//	*StartActionRequest_PtSummaryParams
	//	*StartActionRequest_PtPgSummaryParams
	//	*StartActionRequest_PtMongodbSummaryParams
	//	*StartActionRequest_PtMysqlSummaryParams
	//	*StartActionRequest_MysqlQueryShowParams
	//	*StartActionRequest_MysqlQuerySelectParams
	//	*StartActionRequest_PostgresqlQueryShowParams
	//	*StartActionRequest_PostgresqlQuerySelectParams
	//	*StartActionRequest_MongodbQueryGetparameterParams
	//	*StartActionRequest_MongodbQueryBuildinfoParams
	//	*StartActionRequest_MongodbQueryGetcmdlineoptsParams
	//	*StartActionRequest_MongodbQueryReplsetgetstatusParams
	//	*StartActionRequest_MongodbQueryGetdiagnosticdataParams
	Params isStartActionRequest_Params `protobuf_oneof:"params"`
	// Timeout for the whole action. If zero or absent, pmm-agent will pick one itself.
	Timeout *durationpb.Duration `protobuf:"bytes,9,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *StartActionRequest) Reset() {
	*x = StartActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest) ProtoMessage() {}

func (x *StartActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest.ProtoReflect.Descriptor instead.
func (*StartActionRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14}
}

func (x *StartActionRequest) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (m *StartActionRequest) GetParams() isStartActionRequest_Params {
	if m != nil {
		return m.Params
	}
	return nil
}

func (x *StartActionRequest) GetMysqlExplainParams() *StartActionRequest_MySQLExplainParams {
	if x, ok := x.GetParams().(*StartActionRequest_MysqlExplainParams); ok {
		return x.MysqlExplainParams
	}
	return nil
}

func (x *StartActionRequest) GetMysqlShowCreateTableParams() *StartActionRequest_MySQLShowCreateTableParams {
	if x, ok := x.GetParams().(*StartActionRequest_MysqlShowCreateTableParams); ok {
		return x.MysqlShowCreateTableParams
	}
	return nil
}

func (x *StartActionRequest) GetMysqlShowTableStatusParams() *StartActionRequest_MySQLShowTableStatusParams {
	if x, ok := x.GetParams().(*StartActionRequest_MysqlShowTableStatusParams); ok {
		return x.MysqlShowTableStatusParams
	}
	return nil
}

func (x *StartActionRequest) GetMysqlShowIndexParams() *StartActionRequest_MySQLShowIndexParams {
	if x, ok := x.GetParams().(*StartActionRequest_MysqlShowIndexParams); ok {
		return x.MysqlShowIndexParams
	}
	return nil
}

func (x *StartActionRequest) GetPostgresqlShowCreateTableParams() *StartActionRequest_PostgreSQLShowCreateTableParams {
	if x, ok := x.GetParams().(*StartActionRequest_PostgresqlShowCreateTableParams); ok {
		return x.PostgresqlShowCreateTableParams
	}
	return nil
}

func (x *StartActionRequest) GetPostgresqlShowIndexParams() *StartActionRequest_PostgreSQLShowIndexParams {
	if x, ok := x.GetParams().(*StartActionRequest_PostgresqlShowIndexParams); ok {
		return x.PostgresqlShowIndexParams
	}
	return nil
}

func (x *StartActionRequest) GetMongodbExplainParams() *StartActionRequest_MongoDBExplainParams {
	if x, ok := x.GetParams().(*StartActionRequest_MongodbExplainParams); ok {
		return x.MongodbExplainParams
	}
	return nil
}

func (x *StartActionRequest) GetPtSummaryParams() *StartActionRequest_PTSummaryParams {
	if x, ok := x.GetParams().(*StartActionRequest_PtSummaryParams); ok {
		return x.PtSummaryParams
	}
	return nil
}

func (x *StartActionRequest) GetPtPgSummaryParams() *StartActionRequest_PTPgSummaryParams {
	if x, ok := x.GetParams().(*StartActionRequest_PtPgSummaryParams); ok {
		return x.PtPgSummaryParams
	}
	return nil
}

func (x *StartActionRequest) GetPtMongodbSummaryParams() *StartActionRequest_PTMongoDBSummaryParams {
	if x, ok := x.GetParams().(*StartActionRequest_PtMongodbSummaryParams); ok {
		return x.PtMongodbSummaryParams
	}
	return nil
}

func (x *StartActionRequest) GetPtMysqlSummaryParams() *StartActionRequest_PTMySQLSummaryParams {
	if x, ok := x.GetParams().(*StartActionRequest_PtMysqlSummaryParams); ok {
		return x.PtMysqlSummaryParams
	}
	return nil
}

func (x *StartActionRequest) GetMysqlQueryShowParams() *StartActionRequest_MySQLQueryShowParams {
	if x, ok := x.GetParams().(*StartActionRequest_MysqlQueryShowParams); ok {
		return x.MysqlQueryShowParams
	}
	return nil
}

func (x *StartActionRequest) GetMysqlQuerySelectParams() *StartActionRequest_MySQLQuerySelectParams {
	if x, ok := x.GetParams().(*StartActionRequest_MysqlQuerySelectParams); ok {
		return x.MysqlQuerySelectParams
	}
	return nil
}

func (x *StartActionRequest) GetPostgresqlQueryShowParams() *StartActionRequest_PostgreSQLQueryShowParams {
	if x, ok := x.GetParams().(*StartActionRequest_PostgresqlQueryShowParams); ok {
		return x.PostgresqlQueryShowParams
	}
	return nil
}

func (x *StartActionRequest) GetPostgresqlQuerySelectParams() *StartActionRequest_PostgreSQLQuerySelectParams {
	if x, ok := x.GetParams().(*StartActionRequest_PostgresqlQuerySelectParams); ok {
		return x.PostgresqlQuerySelectParams
	}
	return nil
}

func (x *StartActionRequest) GetMongodbQueryGetparameterParams() *StartActionRequest_MongoDBQueryGetParameterParams {
	if x, ok := x.GetParams().(*StartActionRequest_MongodbQueryGetparameterParams); ok {
		return x.MongodbQueryGetparameterParams
	}
	return nil
}

func (x *StartActionRequest) GetMongodbQueryBuildinfoParams() *StartActionRequest_MongoDBQueryBuildInfoParams {
	if x, ok := x.GetParams().(*StartActionRequest_MongodbQueryBuildinfoParams); ok {
		return x.MongodbQueryBuildinfoParams
	}
	return nil
}

func (x *StartActionRequest) GetMongodbQueryGetcmdlineoptsParams() *StartActionRequest_MongoDBQueryGetCmdLineOptsParams {
	if x, ok := x.GetParams().(*StartActionRequest_MongodbQueryGetcmdlineoptsParams); ok {
		return x.MongodbQueryGetcmdlineoptsParams
	}
	return nil
}

func (x *StartActionRequest) GetMongodbQueryReplsetgetstatusParams() *StartActionRequest_MongoDBQueryReplSetGetStatusParams {
	if x, ok := x.GetParams().(*StartActionRequest_MongodbQueryReplsetgetstatusParams); ok {
		return x.MongodbQueryReplsetgetstatusParams
	}
	return nil
}

func (x *StartActionRequest) GetMongodbQueryGetdiagnosticdataParams() *StartActionRequest_MongoDBQueryGetDiagnosticDataParams {
	if x, ok := x.GetParams().(*StartActionRequest_MongodbQueryGetdiagnosticdataParams); ok {
		return x.MongodbQueryGetdiagnosticdataParams
	}
	return nil
}

func (x *StartActionRequest) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type isStartActionRequest_Params interface {
	isStartActionRequest_Params()
}

type StartActionRequest_MysqlExplainParams struct {
	MysqlExplainParams *StartActionRequest_MySQLExplainParams `protobuf:"bytes,2,opt,name=mysql_explain_params,json=mysqlExplainParams,proto3,oneof"`
}

type StartActionRequest_MysqlShowCreateTableParams struct {
	MysqlShowCreateTableParams *StartActionRequest_MySQLShowCreateTableParams `protobuf:"bytes,3,opt,name=mysql_show_create_table_params,json=mysqlShowCreateTableParams,proto3,oneof"`
}

type StartActionRequest_MysqlShowTableStatusParams struct {
	MysqlShowTableStatusParams *StartActionRequest_MySQLShowTableStatusParams `protobuf:"bytes,4,opt,name=mysql_show_table_status_params,json=mysqlShowTableStatusParams,proto3,oneof"`
}

type StartActionRequest_MysqlShowIndexParams struct {
	MysqlShowIndexParams *StartActionRequest_MySQLShowIndexParams `protobuf:"bytes,5,opt,name=mysql_show_index_params,json=mysqlShowIndexParams,proto3,oneof"`
}

type StartActionRequest_PostgresqlShowCreateTableParams struct {
	PostgresqlShowCreateTableParams *StartActionRequest_PostgreSQLShowCreateTableParams `protobuf:"bytes,6,opt,name=postgresql_show_create_table_params,json=postgresqlShowCreateTableParams,proto3,oneof"`
}

type StartActionRequest_PostgresqlShowIndexParams struct {
	PostgresqlShowIndexParams *StartActionRequest_PostgreSQLShowIndexParams `protobuf:"bytes,7,opt,name=postgresql_show_index_params,json=postgresqlShowIndexParams,proto3,oneof"`
}

type StartActionRequest_MongodbExplainParams struct {
	MongodbExplainParams *StartActionRequest_MongoDBExplainParams `protobuf:"bytes,8,opt,name=mongodb_explain_params,json=mongodbExplainParams,proto3,oneof"`
}

type StartActionRequest_PtSummaryParams struct {
	PtSummaryParams *StartActionRequest_PTSummaryParams `protobuf:"bytes,10,opt,name=pt_summary_params,json=ptSummaryParams,proto3,oneof"`
}

type StartActionRequest_PtPgSummaryParams struct {
	PtPgSummaryParams *StartActionRequest_PTPgSummaryParams `protobuf:"bytes,12,opt,name=pt_pg_summary_params,json=ptPgSummaryParams,proto3,oneof"`
}

type StartActionRequest_PtMongodbSummaryParams struct {
	PtMongodbSummaryParams *StartActionRequest_PTMongoDBSummaryParams `protobuf:"bytes,13,opt,name=pt_mongodb_summary_params,json=ptMongodbSummaryParams,proto3,oneof"`
}

type StartActionRequest_PtMysqlSummaryParams struct {
	PtMysqlSummaryParams *StartActionRequest_PTMySQLSummaryParams `protobuf:"bytes,11,opt,name=pt_mysql_summary_params,json=ptMysqlSummaryParams,proto3,oneof"`
}

type StartActionRequest_MysqlQueryShowParams struct {
	MysqlQueryShowParams *StartActionRequest_MySQLQueryShowParams `protobuf:"bytes,50,opt,name=mysql_query_show_params,json=mysqlQueryShowParams,proto3,oneof"`
}

type StartActionRequest_MysqlQuerySelectParams struct {
	MysqlQuerySelectParams *StartActionRequest_MySQLQuerySelectParams `protobuf:"bytes,51,opt,name=mysql_query_select_params,json=mysqlQuerySelectParams,proto3,oneof"`
}

type StartActionRequest_PostgresqlQueryShowParams struct {
	PostgresqlQueryShowParams *StartActionRequest_PostgreSQLQueryShowParams `protobuf:"bytes,52,opt,name=postgresql_query_show_params,json=postgresqlQueryShowParams,proto3,oneof"`
}

type StartActionRequest_PostgresqlQuerySelectParams struct {
	PostgresqlQuerySelectParams *StartActionRequest_PostgreSQLQuerySelectParams `protobuf:"bytes,53,opt,name=postgresql_query_select_params,json=postgresqlQuerySelectParams,proto3,oneof"`
}

type StartActionRequest_MongodbQueryGetparameterParams struct {
	MongodbQueryGetparameterParams *StartActionRequest_MongoDBQueryGetParameterParams `protobuf:"bytes,54,opt,name=mongodb_query_getparameter_params,json=mongodbQueryGetparameterParams,proto3,oneof"`
}

type StartActionRequest_MongodbQueryBuildinfoParams struct {
	MongodbQueryBuildinfoParams *StartActionRequest_MongoDBQueryBuildInfoParams `protobuf:"bytes,55,opt,name=mongodb_query_buildinfo_params,json=mongodbQueryBuildinfoParams,proto3,oneof"`
}

type StartActionRequest_MongodbQueryGetcmdlineoptsParams struct {
	MongodbQueryGetcmdlineoptsParams *StartActionRequest_MongoDBQueryGetCmdLineOptsParams `protobuf:"bytes,56,opt,name=mongodb_query_getcmdlineopts_params,json=mongodbQueryGetcmdlineoptsParams,proto3,oneof"`
}

type StartActionRequest_MongodbQueryReplsetgetstatusParams struct {
	MongodbQueryReplsetgetstatusParams *StartActionRequest_MongoDBQueryReplSetGetStatusParams `protobuf:"bytes,57,opt,name=mongodb_query_replsetgetstatus_params,json=mongodbQueryReplsetgetstatusParams,proto3,oneof"`
}

type StartActionRequest_MongodbQueryGetdiagnosticdataParams struct {
	MongodbQueryGetdiagnosticdataParams *StartActionRequest_MongoDBQueryGetDiagnosticDataParams `protobuf:"bytes,58,opt,name=mongodb_query_getdiagnosticdata_params,json=mongodbQueryGetdiagnosticdataParams,proto3,oneof"`
}

func (*StartActionRequest_MysqlExplainParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MysqlShowCreateTableParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MysqlShowTableStatusParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MysqlShowIndexParams) isStartActionRequest_Params() {}

func (*StartActionRequest_PostgresqlShowCreateTableParams) isStartActionRequest_Params() {}

func (*StartActionRequest_PostgresqlShowIndexParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MongodbExplainParams) isStartActionRequest_Params() {}

func (*StartActionRequest_PtSummaryParams) isStartActionRequest_Params() {}

func (*StartActionRequest_PtPgSummaryParams) isStartActionRequest_Params() {}

func (*StartActionRequest_PtMongodbSummaryParams) isStartActionRequest_Params() {}

func (*StartActionRequest_PtMysqlSummaryParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MysqlQueryShowParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MysqlQuerySelectParams) isStartActionRequest_Params() {}

func (*StartActionRequest_PostgresqlQueryShowParams) isStartActionRequest_Params() {}

func (*StartActionRequest_PostgresqlQuerySelectParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MongodbQueryGetparameterParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MongodbQueryBuildinfoParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MongodbQueryGetcmdlineoptsParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MongodbQueryReplsetgetstatusParams) isStartActionRequest_Params() {}

func (*StartActionRequest_MongodbQueryGetdiagnosticdataParams) isStartActionRequest_Params() {}

// StartActionResponse is an AgentMessage for StartActionRequest acceptance.
type StartActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartActionResponse) Reset() {
	*x = StartActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionResponse) ProtoMessage() {}

func (x *StartActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionResponse.ProtoReflect.Descriptor instead.
func (*StartActionResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{15}
}

// StopActionRequest is a ServerMessage asking pmm-agent to stop action.
type StopActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
}

func (x *StopActionRequest) Reset() {
	*x = StopActionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopActionRequest) ProtoMessage() {}

func (x *StopActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopActionRequest.ProtoReflect.Descriptor instead.
func (*StopActionRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{16}
}

func (x *StopActionRequest) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

// StopActionResponse is an AgentMessage for StopActionRequest acceptance.
type StopActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopActionResponse) Reset() {
	*x = StopActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopActionResponse) ProtoMessage() {}

func (x *StopActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopActionResponse.ProtoReflect.Descriptor instead.
func (*StopActionResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{17}
}

// ActionResultRequest is an AgentMessage containing action run status and new chunk of output.
type ActionResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique action ID.
	ActionId string `protobuf:"bytes,1,opt,name=action_id,json=actionId,proto3" json:"action_id,omitempty"`
	// New chunk of action output.
	Output []byte `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	// True if action is finished.
	Done bool `protobuf:"varint,4,opt,name=done,proto3" json:"done,omitempty"`
	// Error message if action failed.
	Error string `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ActionResultRequest) Reset() {
	*x = ActionResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResultRequest) ProtoMessage() {}

func (x *ActionResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResultRequest.ProtoReflect.Descriptor instead.
func (*ActionResultRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{18}
}

func (x *ActionResultRequest) GetActionId() string {
	if x != nil {
		return x.ActionId
	}
	return ""
}

func (x *ActionResultRequest) GetOutput() []byte {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *ActionResultRequest) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

func (x *ActionResultRequest) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// ActionResultResponse is an ServerMessage for ActionResultRequest acceptance.
type ActionResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActionResultResponse) Reset() {
	*x = ActionResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResultResponse) ProtoMessage() {}

func (x *ActionResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResultResponse.ProtoReflect.Descriptor instead.
func (*ActionResultResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{19}
}

// PBMSwitchPITRRequest is a ServerMessage asking pmm-agent to switch PITR pbm feature.
type PBMSwitchPITRRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the MongoDB service. May contain connection (dial) timeout.
	// May contain placeholders for file paths in DSN.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,2,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
	// Specifies if PITR should be enabled or disabled.
	Enabled bool `protobuf:"varint,3,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *PBMSwitchPITRRequest) Reset() {
	*x = PBMSwitchPITRRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBMSwitchPITRRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBMSwitchPITRRequest) ProtoMessage() {}

func (x *PBMSwitchPITRRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBMSwitchPITRRequest.ProtoReflect.Descriptor instead.
func (*PBMSwitchPITRRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{20}
}

func (x *PBMSwitchPITRRequest) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *PBMSwitchPITRRequest) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

func (x *PBMSwitchPITRRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// PBMSwitchPITRResponse is an AgentMessage for PBMSwitchPITRRequest success result.
type PBMSwitchPITRResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Error message.
	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *PBMSwitchPITRResponse) Reset() {
	*x = PBMSwitchPITRResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBMSwitchPITRResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBMSwitchPITRResponse) ProtoMessage() {}

func (x *PBMSwitchPITRResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBMSwitchPITRResponse.ProtoReflect.Descriptor instead.
func (*PBMSwitchPITRResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{21}
}

func (x *PBMSwitchPITRResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// ParseDefaultsFileRequest is an ServerMessage asking pmm-agent to parse defaults file.
type ParseDefaultsFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Service type.
	ServiceType inventorypb.ServiceType `protobuf:"varint,1,opt,name=service_type,json=serviceType,proto3,enum=inventory.ServiceType" json:"service_type,omitempty"`
	// Defaults config path
	ConfigPath string `protobuf:"bytes,2,opt,name=config_path,json=configPath,proto3" json:"config_path,omitempty"`
}

func (x *ParseDefaultsFileRequest) Reset() {
	*x = ParseDefaultsFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseDefaultsFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseDefaultsFileRequest) ProtoMessage() {}

func (x *ParseDefaultsFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseDefaultsFileRequest.ProtoReflect.Descriptor instead.
func (*ParseDefaultsFileRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{22}
}

func (x *ParseDefaultsFileRequest) GetServiceType() inventorypb.ServiceType {
	if x != nil {
		return x.ServiceType
	}
	return inventorypb.ServiceType(0)
}

func (x *ParseDefaultsFileRequest) GetConfigPath() string {
	if x != nil {
		return x.ConfigPath
	}
	return ""
}

// ParseDefaultsFileResponse is an AgentMessage containing a result of parding defaults file.
type ParseDefaultsFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Error message if parse failed.
	Error    string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Host     string `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Port     uint32 `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	Socket   string `protobuf:"bytes,6,opt,name=socket,proto3" json:"socket,omitempty"`
}

func (x *ParseDefaultsFileResponse) Reset() {
	*x = ParseDefaultsFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParseDefaultsFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseDefaultsFileResponse) ProtoMessage() {}

func (x *ParseDefaultsFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseDefaultsFileResponse.ProtoReflect.Descriptor instead.
func (*ParseDefaultsFileResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{23}
}

func (x *ParseDefaultsFileResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ParseDefaultsFileResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ParseDefaultsFileResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ParseDefaultsFileResponse) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ParseDefaultsFileResponse) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ParseDefaultsFileResponse) GetSocket() string {
	if x != nil {
		return x.Socket
	}
	return ""
}

// CheckConnectionRequest is a ServerMessage asking pmm-agent to check connection with Service.
type CheckConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Service type.
	Type inventorypb.ServiceType `protobuf:"varint,1,opt,name=type,proto3,enum=inventory.ServiceType" json:"type,omitempty"`
	// DSN for the service. May contain connection (dial) timeout.
	Dsn string `protobuf:"bytes,2,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Timeout for the whole request.
	Timeout *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,4,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
	// TLS certificate wont be verified.
	TlsSkipVerify bool `protobuf:"varint,5,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
}

func (x *CheckConnectionRequest) Reset() {
	*x = CheckConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckConnectionRequest) ProtoMessage() {}

func (x *CheckConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckConnectionRequest.ProtoReflect.Descriptor instead.
func (*CheckConnectionRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{24}
}

func (x *CheckConnectionRequest) GetType() inventorypb.ServiceType {
	if x != nil {
		return x.Type
	}
	return inventorypb.ServiceType(0)
}

func (x *CheckConnectionRequest) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *CheckConnectionRequest) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *CheckConnectionRequest) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

func (x *CheckConnectionRequest) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

// CheckConnectionResponse is an AgentMessage containing a result of connection check.
type CheckConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Error message if connection check failed.
	Error string                         `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Stats *CheckConnectionResponse_Stats `protobuf:"bytes,2,opt,name=stats,proto3" json:"stats,omitempty"`
}

func (x *CheckConnectionResponse) Reset() {
	*x = CheckConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckConnectionResponse) ProtoMessage() {}

func (x *CheckConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckConnectionResponse.ProtoReflect.Descriptor instead.
func (*CheckConnectionResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{25}
}

func (x *CheckConnectionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *CheckConnectionResponse) GetStats() *CheckConnectionResponse_Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

// JobStatusRequest is a ServerMessage asking pmm-agent for job status.
type JobStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *JobStatusRequest) Reset() {
	*x = JobStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatusRequest) ProtoMessage() {}

func (x *JobStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatusRequest.ProtoReflect.Descriptor instead.
func (*JobStatusRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{26}
}

func (x *JobStatusRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

// JobStatusResponse is an AgentMessage containing job status.
type JobStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alive bool `protobuf:"varint,1,opt,name=alive,proto3" json:"alive,omitempty"`
}

func (x *JobStatusResponse) Reset() {
	*x = JobStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatusResponse) ProtoMessage() {}

func (x *JobStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatusResponse.ProtoReflect.Descriptor instead.
func (*JobStatusResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{27}
}

func (x *JobStatusResponse) GetAlive() bool {
	if x != nil {
		return x.Alive
	}
	return false
}

// S3LocationConfig represents S3 bucket configuration.
type S3LocationConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoint     string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	AccessKey    string `protobuf:"bytes,2,opt,name=access_key,json=accessKey,proto3" json:"access_key,omitempty"`
	SecretKey    string `protobuf:"bytes,3,opt,name=secret_key,json=secretKey,proto3" json:"secret_key,omitempty"`
	BucketName   string `protobuf:"bytes,4,opt,name=bucket_name,json=bucketName,proto3" json:"bucket_name,omitempty"`
	BucketRegion string `protobuf:"bytes,5,opt,name=bucket_region,json=bucketRegion,proto3" json:"bucket_region,omitempty"`
}

func (x *S3LocationConfig) Reset() {
	*x = S3LocationConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3LocationConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3LocationConfig) ProtoMessage() {}

func (x *S3LocationConfig) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3LocationConfig.ProtoReflect.Descriptor instead.
func (*S3LocationConfig) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{28}
}

func (x *S3LocationConfig) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *S3LocationConfig) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *S3LocationConfig) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *S3LocationConfig) GetBucketName() string {
	if x != nil {
		return x.BucketName
	}
	return ""
}

func (x *S3LocationConfig) GetBucketRegion() string {
	if x != nil {
		return x.BucketRegion
	}
	return ""
}

// StartJobRequest is a ServerMessage asking pmm-agent to start job.
type StartJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// Timeout for the job.
	Timeout *durationpb.Duration `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Types that are assignable to Job:
	//	*StartJobRequest_MysqlBackup
	//	*StartJobRequest_MysqlRestoreBackup
	//	*StartJobRequest_MongodbBackup
	//	*StartJobRequest_MongodbRestoreBackup
	Job isStartJobRequest_Job `protobuf_oneof:"job"`
}

func (x *StartJobRequest) Reset() {
	*x = StartJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartJobRequest) ProtoMessage() {}

func (x *StartJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartJobRequest.ProtoReflect.Descriptor instead.
func (*StartJobRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{29}
}

func (x *StartJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *StartJobRequest) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (m *StartJobRequest) GetJob() isStartJobRequest_Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (x *StartJobRequest) GetMysqlBackup() *StartJobRequest_MySQLBackup {
	if x, ok := x.GetJob().(*StartJobRequest_MysqlBackup); ok {
		return x.MysqlBackup
	}
	return nil
}

func (x *StartJobRequest) GetMysqlRestoreBackup() *StartJobRequest_MySQLRestoreBackup {
	if x, ok := x.GetJob().(*StartJobRequest_MysqlRestoreBackup); ok {
		return x.MysqlRestoreBackup
	}
	return nil
}

func (x *StartJobRequest) GetMongodbBackup() *StartJobRequest_MongoDBBackup {
	if x, ok := x.GetJob().(*StartJobRequest_MongodbBackup); ok {
		return x.MongodbBackup
	}
	return nil
}

func (x *StartJobRequest) GetMongodbRestoreBackup() *StartJobRequest_MongoDBRestoreBackup {
	if x, ok := x.GetJob().(*StartJobRequest_MongodbRestoreBackup); ok {
		return x.MongodbRestoreBackup
	}
	return nil
}

type isStartJobRequest_Job interface {
	isStartJobRequest_Job()
}

type StartJobRequest_MysqlBackup struct {
	MysqlBackup *StartJobRequest_MySQLBackup `protobuf:"bytes,11,opt,name=mysql_backup,json=mysqlBackup,proto3,oneof"`
}

type StartJobRequest_MysqlRestoreBackup struct {
	MysqlRestoreBackup *StartJobRequest_MySQLRestoreBackup `protobuf:"bytes,12,opt,name=mysql_restore_backup,json=mysqlRestoreBackup,proto3,oneof"`
}

type StartJobRequest_MongodbBackup struct {
	MongodbBackup *StartJobRequest_MongoDBBackup `protobuf:"bytes,13,opt,name=mongodb_backup,json=mongodbBackup,proto3,oneof"`
}

type StartJobRequest_MongodbRestoreBackup struct {
	MongodbRestoreBackup *StartJobRequest_MongoDBRestoreBackup `protobuf:"bytes,14,opt,name=mongodb_restore_backup,json=mongodbRestoreBackup,proto3,oneof"`
}

func (*StartJobRequest_MysqlBackup) isStartJobRequest_Job() {}

func (*StartJobRequest_MysqlRestoreBackup) isStartJobRequest_Job() {}

func (*StartJobRequest_MongodbBackup) isStartJobRequest_Job() {}

func (*StartJobRequest_MongodbRestoreBackup) isStartJobRequest_Job() {}

// StartJobResponse is an AgentMessage for StartJobRequest acceptance.
type StartJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *StartJobResponse) Reset() {
	*x = StartJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartJobResponse) ProtoMessage() {}

func (x *StartJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartJobResponse.ProtoReflect.Descriptor instead.
func (*StartJobResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{30}
}

func (x *StartJobResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// StopJobRequest is a ServerMessage asking pmm-agent to stop job.
type StopJobRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId string `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
}

func (x *StopJobRequest) Reset() {
	*x = StopJobRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopJobRequest) ProtoMessage() {}

func (x *StopJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopJobRequest.ProtoReflect.Descriptor instead.
func (*StopJobRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{31}
}

func (x *StopJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

// StopJobResponse is an AgentMessage for StopJobRequest acceptance.
type StopJobResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopJobResponse) Reset() {
	*x = StopJobResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopJobResponse) ProtoMessage() {}

func (x *StopJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopJobResponse.ProtoReflect.Descriptor instead.
func (*StopJobResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{32}
}

// JobResult represents job result.
type JobResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId     string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to Result:
	//	*JobResult_Error_
	//	*JobResult_MysqlBackup
	//	*JobResult_MysqlRestoreBackup
	//	*JobResult_MongodbBackup
	//	*JobResult_MongodbRestoreBackup
	Result isJobResult_Result `protobuf_oneof:"result"`
}

func (x *JobResult) Reset() {
	*x = JobResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResult) ProtoMessage() {}

func (x *JobResult) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResult.ProtoReflect.Descriptor instead.
func (*JobResult) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{33}
}

func (x *JobResult) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobResult) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (m *JobResult) GetResult() isJobResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *JobResult) GetError() *JobResult_Error {
	if x, ok := x.GetResult().(*JobResult_Error_); ok {
		return x.Error
	}
	return nil
}

func (x *JobResult) GetMysqlBackup() *JobResult_MySQLBackup {
	if x, ok := x.GetResult().(*JobResult_MysqlBackup); ok {
		return x.MysqlBackup
	}
	return nil
}

func (x *JobResult) GetMysqlRestoreBackup() *JobResult_MySQLRestoreBackup {
	if x, ok := x.GetResult().(*JobResult_MysqlRestoreBackup); ok {
		return x.MysqlRestoreBackup
	}
	return nil
}

func (x *JobResult) GetMongodbBackup() *JobResult_MongoDBBackup {
	if x, ok := x.GetResult().(*JobResult_MongodbBackup); ok {
		return x.MongodbBackup
	}
	return nil
}

func (x *JobResult) GetMongodbRestoreBackup() *JobResult_MongoDBRestoreBackup {
	if x, ok := x.GetResult().(*JobResult_MongodbRestoreBackup); ok {
		return x.MongodbRestoreBackup
	}
	return nil
}

type isJobResult_Result interface {
	isJobResult_Result()
}

type JobResult_Error_ struct {
	Error *JobResult_Error `protobuf:"bytes,10,opt,name=error,proto3,oneof"`
}

type JobResult_MysqlBackup struct {
	MysqlBackup *JobResult_MySQLBackup `protobuf:"bytes,12,opt,name=mysql_backup,json=mysqlBackup,proto3,oneof"`
}

type JobResult_MysqlRestoreBackup struct {
	MysqlRestoreBackup *JobResult_MySQLRestoreBackup `protobuf:"bytes,13,opt,name=mysql_restore_backup,json=mysqlRestoreBackup,proto3,oneof"`
}

type JobResult_MongodbBackup struct {
	MongodbBackup *JobResult_MongoDBBackup `protobuf:"bytes,14,opt,name=mongodb_backup,json=mongodbBackup,proto3,oneof"`
}

type JobResult_MongodbRestoreBackup struct {
	MongodbRestoreBackup *JobResult_MongoDBRestoreBackup `protobuf:"bytes,15,opt,name=mongodb_restore_backup,json=mongodbRestoreBackup,proto3,oneof"`
}

func (*JobResult_Error_) isJobResult_Result() {}

func (*JobResult_MysqlBackup) isJobResult_Result() {}

func (*JobResult_MysqlRestoreBackup) isJobResult_Result() {}

func (*JobResult_MongodbBackup) isJobResult_Result() {}

func (*JobResult_MongodbRestoreBackup) isJobResult_Result() {}

// JobProgress represents job progress messages like percentage of completion, status updates, etc.
type JobProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId     string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to Result:
	//	*JobProgress_MysqlBackup
	//	*JobProgress_MysqlRestoreBackup
	//	*JobProgress_Logs_
	Result isJobProgress_Result `protobuf_oneof:"result"`
}

func (x *JobProgress) Reset() {
	*x = JobProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobProgress) ProtoMessage() {}

func (x *JobProgress) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobProgress.ProtoReflect.Descriptor instead.
func (*JobProgress) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{34}
}

func (x *JobProgress) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobProgress) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (m *JobProgress) GetResult() isJobProgress_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *JobProgress) GetMysqlBackup() *JobProgress_MySQLBackup {
	if x, ok := x.GetResult().(*JobProgress_MysqlBackup); ok {
		return x.MysqlBackup
	}
	return nil
}

func (x *JobProgress) GetMysqlRestoreBackup() *JobProgress_MySQLRestoreBackup {
	if x, ok := x.GetResult().(*JobProgress_MysqlRestoreBackup); ok {
		return x.MysqlRestoreBackup
	}
	return nil
}

func (x *JobProgress) GetLogs() *JobProgress_Logs {
	if x, ok := x.GetResult().(*JobProgress_Logs_); ok {
		return x.Logs
	}
	return nil
}

type isJobProgress_Result interface {
	isJobProgress_Result()
}

type JobProgress_MysqlBackup struct {
	MysqlBackup *JobProgress_MySQLBackup `protobuf:"bytes,11,opt,name=mysql_backup,json=mysqlBackup,proto3,oneof"`
}

type JobProgress_MysqlRestoreBackup struct {
	MysqlRestoreBackup *JobProgress_MySQLRestoreBackup `protobuf:"bytes,12,opt,name=mysql_restore_backup,json=mysqlRestoreBackup,proto3,oneof"`
}

type JobProgress_Logs_ struct {
	Logs *JobProgress_Logs `protobuf:"bytes,20,opt,name=logs,proto3,oneof"`
}

func (*JobProgress_MysqlBackup) isJobProgress_Result() {}

func (*JobProgress_MysqlRestoreBackup) isJobProgress_Result() {}

func (*JobProgress_Logs_) isJobProgress_Result() {}

// GetVersionsRequest represents a request for version retrieving of different software.
type GetVersionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Softwares []*GetVersionsRequest_Software `protobuf:"bytes,1,rep,name=softwares,proto3" json:"softwares,omitempty"`
}

func (x *GetVersionsRequest) Reset() {
	*x = GetVersionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionsRequest) ProtoMessage() {}

func (x *GetVersionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionsRequest.ProtoReflect.Descriptor instead.
func (*GetVersionsRequest) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{35}
}

func (x *GetVersionsRequest) GetSoftwares() []*GetVersionsRequest_Software {
	if x != nil {
		return x.Softwares
	}
	return nil
}

// GetVersionsResponse represents a response containing versions of software in the same order as in the request.
type GetVersionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Versions []*GetVersionsResponse_Version `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *GetVersionsResponse) Reset() {
	*x = GetVersionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionsResponse) ProtoMessage() {}

func (x *GetVersionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionsResponse.ProtoReflect.Descriptor instead.
func (*GetVersionsResponse) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{36}
}

func (x *GetVersionsResponse) GetVersions() []*GetVersionsResponse_Version {
	if x != nil {
		return x.Versions
	}
	return nil
}

type AgentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The responder sets the status field in two situations:
	// 1. When it received a request with the payload field not set.
	//    That means that responded is older than the requester, and doesn't know about newer payload types.
	//    Status code UNIMPLEMENTED (12) is reserved for that case.
	// 2. When the payload is set, but the request can't be performed due to some error.
	Status *status.Status `protobuf:"bytes,2047,opt,name=status,proto3" json:"status,omitempty"`
	// Types that are assignable to Payload:
	//	*AgentMessage_Ping
	//	*AgentMessage_StateChanged
	//	*AgentMessage_QanCollect
	//	*AgentMessage_ActionResult
	//	*AgentMessage_Pong
	//	*AgentMessage_SetState
	//	*AgentMessage_StartAction
	//	*AgentMessage_StopAction
	//	*AgentMessage_CheckConnection
	//	*AgentMessage_StartJob
	//	*AgentMessage_StopJob
	//	*AgentMessage_JobStatus
	//	*AgentMessage_JobResult
	//	*AgentMessage_JobProgress
	//	*AgentMessage_GetVersions
	//	*AgentMessage_PbmSwitchPitr
	//	*AgentMessage_ParseDefaultsFile
	Payload isAgentMessage_Payload `protobuf_oneof:"payload"`
}

func (x *AgentMessage) Reset() {
	*x = AgentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMessage) ProtoMessage() {}

func (x *AgentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMessage.ProtoReflect.Descriptor instead.
func (*AgentMessage) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{37}
}

func (x *AgentMessage) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgentMessage) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (m *AgentMessage) GetPayload() isAgentMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *AgentMessage) GetPing() *Ping {
	if x, ok := x.GetPayload().(*AgentMessage_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *AgentMessage) GetStateChanged() *StateChangedRequest {
	if x, ok := x.GetPayload().(*AgentMessage_StateChanged); ok {
		return x.StateChanged
	}
	return nil
}

func (x *AgentMessage) GetQanCollect() *QANCollectRequest {
	if x, ok := x.GetPayload().(*AgentMessage_QanCollect); ok {
		return x.QanCollect
	}
	return nil
}

func (x *AgentMessage) GetActionResult() *ActionResultRequest {
	if x, ok := x.GetPayload().(*AgentMessage_ActionResult); ok {
		return x.ActionResult
	}
	return nil
}

func (x *AgentMessage) GetPong() *Pong {
	if x, ok := x.GetPayload().(*AgentMessage_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *AgentMessage) GetSetState() *SetStateResponse {
	if x, ok := x.GetPayload().(*AgentMessage_SetState); ok {
		return x.SetState
	}
	return nil
}

func (x *AgentMessage) GetStartAction() *StartActionResponse {
	if x, ok := x.GetPayload().(*AgentMessage_StartAction); ok {
		return x.StartAction
	}
	return nil
}

func (x *AgentMessage) GetStopAction() *StopActionResponse {
	if x, ok := x.GetPayload().(*AgentMessage_StopAction); ok {
		return x.StopAction
	}
	return nil
}

func (x *AgentMessage) GetCheckConnection() *CheckConnectionResponse {
	if x, ok := x.GetPayload().(*AgentMessage_CheckConnection); ok {
		return x.CheckConnection
	}
	return nil
}

func (x *AgentMessage) GetStartJob() *StartJobResponse {
	if x, ok := x.GetPayload().(*AgentMessage_StartJob); ok {
		return x.StartJob
	}
	return nil
}

func (x *AgentMessage) GetStopJob() *StopJobResponse {
	if x, ok := x.GetPayload().(*AgentMessage_StopJob); ok {
		return x.StopJob
	}
	return nil
}

func (x *AgentMessage) GetJobStatus() *JobStatusResponse {
	if x, ok := x.GetPayload().(*AgentMessage_JobStatus); ok {
		return x.JobStatus
	}
	return nil
}

func (x *AgentMessage) GetJobResult() *JobResult {
	if x, ok := x.GetPayload().(*AgentMessage_JobResult); ok {
		return x.JobResult
	}
	return nil
}

func (x *AgentMessage) GetJobProgress() *JobProgress {
	if x, ok := x.GetPayload().(*AgentMessage_JobProgress); ok {
		return x.JobProgress
	}
	return nil
}

func (x *AgentMessage) GetGetVersions() *GetVersionsResponse {
	if x, ok := x.GetPayload().(*AgentMessage_GetVersions); ok {
		return x.GetVersions
	}
	return nil
}

func (x *AgentMessage) GetPbmSwitchPitr() *PBMSwitchPITRResponse {
	if x, ok := x.GetPayload().(*AgentMessage_PbmSwitchPitr); ok {
		return x.PbmSwitchPitr
	}
	return nil
}

func (x *AgentMessage) GetParseDefaultsFile() *ParseDefaultsFileResponse {
	if x, ok := x.GetPayload().(*AgentMessage_ParseDefaultsFile); ok {
		return x.ParseDefaultsFile
	}
	return nil
}

type isAgentMessage_Payload interface {
	isAgentMessage_Payload()
}

type AgentMessage_Ping struct {
	// requests from agent
	Ping *Ping `protobuf:"bytes,2,opt,name=ping,proto3,oneof"`
}

type AgentMessage_StateChanged struct {
	StateChanged *StateChangedRequest `protobuf:"bytes,3,opt,name=state_changed,json=stateChanged,proto3,oneof"`
}

type AgentMessage_QanCollect struct {
	QanCollect *QANCollectRequest `protobuf:"bytes,4,opt,name=qan_collect,json=qanCollect,proto3,oneof"`
}

type AgentMessage_ActionResult struct {
	ActionResult *ActionResultRequest `protobuf:"bytes,5,opt,name=action_result,json=actionResult,proto3,oneof"`
}

type AgentMessage_Pong struct {
	// responses from agent
	Pong *Pong `protobuf:"bytes,8,opt,name=pong,proto3,oneof"`
}

type AgentMessage_SetState struct {
	SetState *SetStateResponse `protobuf:"bytes,9,opt,name=set_state,json=setState,proto3,oneof"`
}

type AgentMessage_StartAction struct {
	StartAction *StartActionResponse `protobuf:"bytes,10,opt,name=start_action,json=startAction,proto3,oneof"`
}

type AgentMessage_StopAction struct {
	StopAction *StopActionResponse `protobuf:"bytes,11,opt,name=stop_action,json=stopAction,proto3,oneof"`
}

type AgentMessage_CheckConnection struct {
	CheckConnection *CheckConnectionResponse `protobuf:"bytes,12,opt,name=check_connection,json=checkConnection,proto3,oneof"`
}

type AgentMessage_StartJob struct {
	StartJob *StartJobResponse `protobuf:"bytes,13,opt,name=start_job,json=startJob,proto3,oneof"`
}

type AgentMessage_StopJob struct {
	StopJob *StopJobResponse `protobuf:"bytes,14,opt,name=stop_job,json=stopJob,proto3,oneof"`
}

type AgentMessage_JobStatus struct {
	JobStatus *JobStatusResponse `protobuf:"bytes,15,opt,name=job_status,json=jobStatus,proto3,oneof"`
}

type AgentMessage_JobResult struct {
	JobResult *JobResult `protobuf:"bytes,16,opt,name=job_result,json=jobResult,proto3,oneof"`
}

type AgentMessage_JobProgress struct {
	JobProgress *JobProgress `protobuf:"bytes,17,opt,name=job_progress,json=jobProgress,proto3,oneof"`
}

type AgentMessage_GetVersions struct {
	GetVersions *GetVersionsResponse `protobuf:"bytes,18,opt,name=get_versions,json=getVersions,proto3,oneof"`
}

type AgentMessage_PbmSwitchPitr struct {
	PbmSwitchPitr *PBMSwitchPITRResponse `protobuf:"bytes,19,opt,name=pbm_switch_pitr,json=pbmSwitchPitr,proto3,oneof"`
}

type AgentMessage_ParseDefaultsFile struct {
	ParseDefaultsFile *ParseDefaultsFileResponse `protobuf:"bytes,20,opt,name=parse_defaults_file,json=parseDefaultsFile,proto3,oneof"`
}

func (*AgentMessage_Ping) isAgentMessage_Payload() {}

func (*AgentMessage_StateChanged) isAgentMessage_Payload() {}

func (*AgentMessage_QanCollect) isAgentMessage_Payload() {}

func (*AgentMessage_ActionResult) isAgentMessage_Payload() {}

func (*AgentMessage_Pong) isAgentMessage_Payload() {}

func (*AgentMessage_SetState) isAgentMessage_Payload() {}

func (*AgentMessage_StartAction) isAgentMessage_Payload() {}

func (*AgentMessage_StopAction) isAgentMessage_Payload() {}

func (*AgentMessage_CheckConnection) isAgentMessage_Payload() {}

func (*AgentMessage_StartJob) isAgentMessage_Payload() {}

func (*AgentMessage_StopJob) isAgentMessage_Payload() {}

func (*AgentMessage_JobStatus) isAgentMessage_Payload() {}

func (*AgentMessage_JobResult) isAgentMessage_Payload() {}

func (*AgentMessage_JobProgress) isAgentMessage_Payload() {}

func (*AgentMessage_GetVersions) isAgentMessage_Payload() {}

func (*AgentMessage_PbmSwitchPitr) isAgentMessage_Payload() {}

func (*AgentMessage_ParseDefaultsFile) isAgentMessage_Payload() {}

type ServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// The responder sets the status field in two situations:
	// 1. When it received a request with the payload field not set.
	//    That means that responded is older than the requester, and doesn't know about newer payload types.
	//    Status code UNIMPLEMENTED (12) is reserved for that case.
	// 2. When the payload is set, but the request can't be performed due to some error.
	Status *status.Status `protobuf:"bytes,2047,opt,name=status,proto3" json:"status,omitempty"`
	// Types that are assignable to Payload:
	//	*ServerMessage_Pong
	//	*ServerMessage_StateChanged
	//	*ServerMessage_QanCollect
	//	*ServerMessage_ActionResult
	//	*ServerMessage_Ping
	//	*ServerMessage_SetState
	//	*ServerMessage_StartAction
	//	*ServerMessage_StopAction
	//	*ServerMessage_CheckConnection
	//	*ServerMessage_StartJob
	//	*ServerMessage_StopJob
	//	*ServerMessage_JobStatus
	//	*ServerMessage_GetVersions
	//	*ServerMessage_PbmSwitchPitr
	//	*ServerMessage_ParseDefaultsFile
	Payload isServerMessage_Payload `protobuf_oneof:"payload"`
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{38}
}

func (x *ServerMessage) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ServerMessage) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (m *ServerMessage) GetPayload() isServerMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ServerMessage) GetPong() *Pong {
	if x, ok := x.GetPayload().(*ServerMessage_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *ServerMessage) GetStateChanged() *StateChangedResponse {
	if x, ok := x.GetPayload().(*ServerMessage_StateChanged); ok {
		return x.StateChanged
	}
	return nil
}

func (x *ServerMessage) GetQanCollect() *QANCollectResponse {
	if x, ok := x.GetPayload().(*ServerMessage_QanCollect); ok {
		return x.QanCollect
	}
	return nil
}

func (x *ServerMessage) GetActionResult() *ActionResultResponse {
	if x, ok := x.GetPayload().(*ServerMessage_ActionResult); ok {
		return x.ActionResult
	}
	return nil
}

func (x *ServerMessage) GetPing() *Ping {
	if x, ok := x.GetPayload().(*ServerMessage_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *ServerMessage) GetSetState() *SetStateRequest {
	if x, ok := x.GetPayload().(*ServerMessage_SetState); ok {
		return x.SetState
	}
	return nil
}

func (x *ServerMessage) GetStartAction() *StartActionRequest {
	if x, ok := x.GetPayload().(*ServerMessage_StartAction); ok {
		return x.StartAction
	}
	return nil
}

func (x *ServerMessage) GetStopAction() *StopActionRequest {
	if x, ok := x.GetPayload().(*ServerMessage_StopAction); ok {
		return x.StopAction
	}
	return nil
}

func (x *ServerMessage) GetCheckConnection() *CheckConnectionRequest {
	if x, ok := x.GetPayload().(*ServerMessage_CheckConnection); ok {
		return x.CheckConnection
	}
	return nil
}

func (x *ServerMessage) GetStartJob() *StartJobRequest {
	if x, ok := x.GetPayload().(*ServerMessage_StartJob); ok {
		return x.StartJob
	}
	return nil
}

func (x *ServerMessage) GetStopJob() *StopJobRequest {
	if x, ok := x.GetPayload().(*ServerMessage_StopJob); ok {
		return x.StopJob
	}
	return nil
}

func (x *ServerMessage) GetJobStatus() *JobStatusRequest {
	if x, ok := x.GetPayload().(*ServerMessage_JobStatus); ok {
		return x.JobStatus
	}
	return nil
}

func (x *ServerMessage) GetGetVersions() *GetVersionsRequest {
	if x, ok := x.GetPayload().(*ServerMessage_GetVersions); ok {
		return x.GetVersions
	}
	return nil
}

func (x *ServerMessage) GetPbmSwitchPitr() *PBMSwitchPITRRequest {
	if x, ok := x.GetPayload().(*ServerMessage_PbmSwitchPitr); ok {
		return x.PbmSwitchPitr
	}
	return nil
}

func (x *ServerMessage) GetParseDefaultsFile() *ParseDefaultsFileRequest {
	if x, ok := x.GetPayload().(*ServerMessage_ParseDefaultsFile); ok {
		return x.ParseDefaultsFile
	}
	return nil
}

type isServerMessage_Payload interface {
	isServerMessage_Payload()
}

type ServerMessage_Pong struct {
	// responses from server
	Pong *Pong `protobuf:"bytes,2,opt,name=pong,proto3,oneof"`
}

type ServerMessage_StateChanged struct {
	StateChanged *StateChangedResponse `protobuf:"bytes,3,opt,name=state_changed,json=stateChanged,proto3,oneof"`
}

type ServerMessage_QanCollect struct {
	QanCollect *QANCollectResponse `protobuf:"bytes,4,opt,name=qan_collect,json=qanCollect,proto3,oneof"`
}

type ServerMessage_ActionResult struct {
	ActionResult *ActionResultResponse `protobuf:"bytes,5,opt,name=action_result,json=actionResult,proto3,oneof"`
}

type ServerMessage_Ping struct {
	// requests from server
	Ping *Ping `protobuf:"bytes,8,opt,name=ping,proto3,oneof"`
}

type ServerMessage_SetState struct {
	SetState *SetStateRequest `protobuf:"bytes,9,opt,name=set_state,json=setState,proto3,oneof"`
}

type ServerMessage_StartAction struct {
	StartAction *StartActionRequest `protobuf:"bytes,10,opt,name=start_action,json=startAction,proto3,oneof"`
}

type ServerMessage_StopAction struct {
	StopAction *StopActionRequest `protobuf:"bytes,11,opt,name=stop_action,json=stopAction,proto3,oneof"`
}

type ServerMessage_CheckConnection struct {
	CheckConnection *CheckConnectionRequest `protobuf:"bytes,12,opt,name=check_connection,json=checkConnection,proto3,oneof"`
}

type ServerMessage_StartJob struct {
	StartJob *StartJobRequest `protobuf:"bytes,13,opt,name=start_job,json=startJob,proto3,oneof"`
}

type ServerMessage_StopJob struct {
	StopJob *StopJobRequest `protobuf:"bytes,14,opt,name=stop_job,json=stopJob,proto3,oneof"`
}

type ServerMessage_JobStatus struct {
	JobStatus *JobStatusRequest `protobuf:"bytes,15,opt,name=job_status,json=jobStatus,proto3,oneof"`
}

type ServerMessage_GetVersions struct {
	GetVersions *GetVersionsRequest `protobuf:"bytes,16,opt,name=get_versions,json=getVersions,proto3,oneof"`
}

type ServerMessage_PbmSwitchPitr struct {
	PbmSwitchPitr *PBMSwitchPITRRequest `protobuf:"bytes,17,opt,name=pbm_switch_pitr,json=pbmSwitchPitr,proto3,oneof"`
}

type ServerMessage_ParseDefaultsFile struct {
	ParseDefaultsFile *ParseDefaultsFileRequest `protobuf:"bytes,18,opt,name=parse_defaults_file,json=parseDefaultsFile,proto3,oneof"`
}

func (*ServerMessage_Pong) isServerMessage_Payload() {}

func (*ServerMessage_StateChanged) isServerMessage_Payload() {}

func (*ServerMessage_QanCollect) isServerMessage_Payload() {}

func (*ServerMessage_ActionResult) isServerMessage_Payload() {}

func (*ServerMessage_Ping) isServerMessage_Payload() {}

func (*ServerMessage_SetState) isServerMessage_Payload() {}

func (*ServerMessage_StartAction) isServerMessage_Payload() {}

func (*ServerMessage_StopAction) isServerMessage_Payload() {}

func (*ServerMessage_CheckConnection) isServerMessage_Payload() {}

func (*ServerMessage_StartJob) isServerMessage_Payload() {}

func (*ServerMessage_StopJob) isServerMessage_Payload() {}

func (*ServerMessage_JobStatus) isServerMessage_Payload() {}

func (*ServerMessage_GetVersions) isServerMessage_Payload() {}

func (*ServerMessage_PbmSwitchPitr) isServerMessage_Payload() {}

func (*ServerMessage_ParseDefaultsFile) isServerMessage_Payload() {}

// AgentProcess describes desired configuration of a single agent process started by pmm-agent.
type SetStateRequest_AgentProcess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type               inventorypb.AgentType `protobuf:"varint,1,opt,name=type,proto3,enum=inventory.AgentType" json:"type,omitempty"`
	TemplateLeftDelim  string                `protobuf:"bytes,2,opt,name=template_left_delim,json=templateLeftDelim,proto3" json:"template_left_delim,omitempty"`
	TemplateRightDelim string                `protobuf:"bytes,3,opt,name=template_right_delim,json=templateRightDelim,proto3" json:"template_right_delim,omitempty"`
	Args               []string              `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty"`
	Env                []string              `protobuf:"bytes,5,rep,name=env,proto3" json:"env,omitempty"`
	TextFiles          map[string]string     `protobuf:"bytes,6,rep,name=text_files,json=textFiles,proto3" json:"text_files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RedactWords        []string              `protobuf:"bytes,7,rep,name=redact_words,json=redactWords,proto3" json:"redact_words,omitempty"`
}

func (x *SetStateRequest_AgentProcess) Reset() {
	*x = SetStateRequest_AgentProcess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateRequest_AgentProcess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateRequest_AgentProcess) ProtoMessage() {}

func (x *SetStateRequest_AgentProcess) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateRequest_AgentProcess.ProtoReflect.Descriptor instead.
func (*SetStateRequest_AgentProcess) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{7, 0}
}

func (x *SetStateRequest_AgentProcess) GetType() inventorypb.AgentType {
	if x != nil {
		return x.Type
	}
	return inventorypb.AgentType(0)
}

func (x *SetStateRequest_AgentProcess) GetTemplateLeftDelim() string {
	if x != nil {
		return x.TemplateLeftDelim
	}
	return ""
}

func (x *SetStateRequest_AgentProcess) GetTemplateRightDelim() string {
	if x != nil {
		return x.TemplateRightDelim
	}
	return ""
}

func (x *SetStateRequest_AgentProcess) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *SetStateRequest_AgentProcess) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *SetStateRequest_AgentProcess) GetTextFiles() map[string]string {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

func (x *SetStateRequest_AgentProcess) GetRedactWords() []string {
	if x != nil {
		return x.RedactWords
	}
	return nil
}

// BuiltinAgent describes desired configuration of a single built-in agent for pmm-agent.
type SetStateRequest_BuiltinAgent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type inventorypb.AgentType `protobuf:"varint,1,opt,name=type,proto3,enum=inventory.AgentType" json:"type,omitempty"`
	Dsn  string                `protobuf:"bytes,2,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Disables query examples for QAN Agents if true.
	DisableQueryExamples bool `protobuf:"varint,3,opt,name=disable_query_examples,json=disableQueryExamples,proto3" json:"disable_query_examples,omitempty"`
	// Instructs QAN Agents to rotate query log file or table at this size if > 0.
	MaxQueryLogSize int64 `protobuf:"varint,4,opt,name=max_query_log_size,json=maxQueryLogSize,proto3" json:"max_query_log_size,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,5,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
	// TLS in enabled if true.
	Tls bool `protobuf:"varint,6,opt,name=tls,proto3" json:"tls,omitempty"`
	// TLS certificate wont be verified.
	TlsSkipVerify bool `protobuf:"varint,7,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
}

func (x *SetStateRequest_BuiltinAgent) Reset() {
	*x = SetStateRequest_BuiltinAgent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateRequest_BuiltinAgent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateRequest_BuiltinAgent) ProtoMessage() {}

func (x *SetStateRequest_BuiltinAgent) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateRequest_BuiltinAgent.ProtoReflect.Descriptor instead.
func (*SetStateRequest_BuiltinAgent) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{7, 2}
}

func (x *SetStateRequest_BuiltinAgent) GetType() inventorypb.AgentType {
	if x != nil {
		return x.Type
	}
	return inventorypb.AgentType(0)
}

func (x *SetStateRequest_BuiltinAgent) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *SetStateRequest_BuiltinAgent) GetDisableQueryExamples() bool {
	if x != nil {
		return x.DisableQueryExamples
	}
	return false
}

func (x *SetStateRequest_BuiltinAgent) GetMaxQueryLogSize() int64 {
	if x != nil {
		return x.MaxQueryLogSize
	}
	return 0
}

func (x *SetStateRequest_BuiltinAgent) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

func (x *SetStateRequest_BuiltinAgent) GetTls() bool {
	if x != nil {
		return x.Tls
	}
	return false
}

func (x *SetStateRequest_BuiltinAgent) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

// MySQLExplainParams describes MySQL EXPLAIN action parameters.
type StartActionRequest_MySQLExplainParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn          string                   `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Query        string                   `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	OutputFormat MysqlExplainOutputFormat `protobuf:"varint,3,opt,name=output_format,json=outputFormat,proto3,enum=agent.MysqlExplainOutputFormat" json:"output_format,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TlsFiles *TextFiles `protobuf:"bytes,4,opt,name=tls_files,json=tlsFiles,proto3" json:"tls_files,omitempty"`
	// TLS certificate wont be verified.
	TlsSkipVerify bool `protobuf:"varint,5,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
}

func (x *StartActionRequest_MySQLExplainParams) Reset() {
	*x = StartActionRequest_MySQLExplainParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MySQLExplainParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MySQLExplainParams) ProtoMessage() {}

func (x *StartActionRequest_MySQLExplainParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MySQLExplainParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MySQLExplainParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 0}
}

func (x *StartActionRequest_MySQLExplainParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MySQLExplainParams) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *StartActionRequest_MySQLExplainParams) GetOutputFormat() MysqlExplainOutputFormat {
	if x != nil {
		return x.OutputFormat
	}
	return MysqlExplainOutputFormat_MYSQL_EXPLAIN_OUTPUT_FORMAT_INVALID
}

func (x *StartActionRequest_MySQLExplainParams) GetTlsFiles() *TextFiles {
	if x != nil {
		return x.TlsFiles
	}
	return nil
}

func (x *StartActionRequest_MySQLExplainParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

// MySQLShowCreateTableParams describes MySQL SHOW CREATE TABLE action parameters.
type StartActionRequest_MySQLShowCreateTableParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn   string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Table string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TlsFiles *TextFiles `protobuf:"bytes,3,opt,name=tls_files,json=tlsFiles,proto3" json:"tls_files,omitempty"`
	// TLS certificate wont be verified.
	TlsSkipVerify bool `protobuf:"varint,4,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
}

func (x *StartActionRequest_MySQLShowCreateTableParams) Reset() {
	*x = StartActionRequest_MySQLShowCreateTableParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MySQLShowCreateTableParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MySQLShowCreateTableParams) ProtoMessage() {}

func (x *StartActionRequest_MySQLShowCreateTableParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MySQLShowCreateTableParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MySQLShowCreateTableParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 1}
}

func (x *StartActionRequest_MySQLShowCreateTableParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MySQLShowCreateTableParams) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *StartActionRequest_MySQLShowCreateTableParams) GetTlsFiles() *TextFiles {
	if x != nil {
		return x.TlsFiles
	}
	return nil
}

func (x *StartActionRequest_MySQLShowCreateTableParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

// MySQLShowTableStatusParams describes MySQL SHOW TABLE STATUS action parameters.
type StartActionRequest_MySQLShowTableStatusParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn   string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Table string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TlsFiles *TextFiles `protobuf:"bytes,3,opt,name=tls_files,json=tlsFiles,proto3" json:"tls_files,omitempty"`
	// TLS certificate wont be verified.
	TlsSkipVerify bool `protobuf:"varint,4,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
}

func (x *StartActionRequest_MySQLShowTableStatusParams) Reset() {
	*x = StartActionRequest_MySQLShowTableStatusParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MySQLShowTableStatusParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MySQLShowTableStatusParams) ProtoMessage() {}

func (x *StartActionRequest_MySQLShowTableStatusParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MySQLShowTableStatusParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MySQLShowTableStatusParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 2}
}

func (x *StartActionRequest_MySQLShowTableStatusParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MySQLShowTableStatusParams) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *StartActionRequest_MySQLShowTableStatusParams) GetTlsFiles() *TextFiles {
	if x != nil {
		return x.TlsFiles
	}
	return nil
}

func (x *StartActionRequest_MySQLShowTableStatusParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

// MySQLShowIndexParams describes MySQL SHOW INDEX action parameters.
type StartActionRequest_MySQLShowIndexParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn   string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Table string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TlsFiles *TextFiles `protobuf:"bytes,3,opt,name=tls_files,json=tlsFiles,proto3" json:"tls_files,omitempty"`
	// TLS certificate wont be verified.
	TlsSkipVerify bool `protobuf:"varint,4,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
}

func (x *StartActionRequest_MySQLShowIndexParams) Reset() {
	*x = StartActionRequest_MySQLShowIndexParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MySQLShowIndexParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MySQLShowIndexParams) ProtoMessage() {}

func (x *StartActionRequest_MySQLShowIndexParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MySQLShowIndexParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MySQLShowIndexParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 3}
}

func (x *StartActionRequest_MySQLShowIndexParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MySQLShowIndexParams) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *StartActionRequest_MySQLShowIndexParams) GetTlsFiles() *TextFiles {
	if x != nil {
		return x.TlsFiles
	}
	return nil
}

func (x *StartActionRequest_MySQLShowIndexParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

// PostgreSQLShowCreateTableParams describes PostgreSQL SHOW CREATE TABLE action parameters.
type StartActionRequest_PostgreSQLShowCreateTableParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn   string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Table string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TlsFiles *TextFiles `protobuf:"bytes,3,opt,name=tls_files,json=tlsFiles,proto3" json:"tls_files,omitempty"`
	// TLS certificate wont be verified.
	TlsSkipVerify bool `protobuf:"varint,4,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
}

func (x *StartActionRequest_PostgreSQLShowCreateTableParams) Reset() {
	*x = StartActionRequest_PostgreSQLShowCreateTableParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_PostgreSQLShowCreateTableParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_PostgreSQLShowCreateTableParams) ProtoMessage() {}

func (x *StartActionRequest_PostgreSQLShowCreateTableParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_PostgreSQLShowCreateTableParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_PostgreSQLShowCreateTableParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 4}
}

func (x *StartActionRequest_PostgreSQLShowCreateTableParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_PostgreSQLShowCreateTableParams) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *StartActionRequest_PostgreSQLShowCreateTableParams) GetTlsFiles() *TextFiles {
	if x != nil {
		return x.TlsFiles
	}
	return nil
}

func (x *StartActionRequest_PostgreSQLShowCreateTableParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

// PostgreSQLShowIndexParams describes PostgreSQL SHOW INDEX action parameters.
type StartActionRequest_PostgreSQLShowIndexParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn   string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Table string `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TlsFiles *TextFiles `protobuf:"bytes,3,opt,name=tls_files,json=tlsFiles,proto3" json:"tls_files,omitempty"`
	// TLS certificate wont be verified.
	TlsSkipVerify bool `protobuf:"varint,4,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
}

func (x *StartActionRequest_PostgreSQLShowIndexParams) Reset() {
	*x = StartActionRequest_PostgreSQLShowIndexParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_PostgreSQLShowIndexParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_PostgreSQLShowIndexParams) ProtoMessage() {}

func (x *StartActionRequest_PostgreSQLShowIndexParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_PostgreSQLShowIndexParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_PostgreSQLShowIndexParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 5}
}

func (x *StartActionRequest_PostgreSQLShowIndexParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_PostgreSQLShowIndexParams) GetTable() string {
	if x != nil {
		return x.Table
	}
	return ""
}

func (x *StartActionRequest_PostgreSQLShowIndexParams) GetTlsFiles() *TextFiles {
	if x != nil {
		return x.TlsFiles
	}
	return nil
}

func (x *StartActionRequest_PostgreSQLShowIndexParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

// MongoDBExplainParams describes MongoDB EXPLAIN action parameters.
type StartActionRequest_MongoDBExplainParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	// May contain placeholders for file paths in DSN.
	Dsn   string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,3,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
}

func (x *StartActionRequest_MongoDBExplainParams) Reset() {
	*x = StartActionRequest_MongoDBExplainParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MongoDBExplainParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MongoDBExplainParams) ProtoMessage() {}

func (x *StartActionRequest_MongoDBExplainParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MongoDBExplainParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MongoDBExplainParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 6}
}

func (x *StartActionRequest_MongoDBExplainParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MongoDBExplainParams) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *StartActionRequest_MongoDBExplainParams) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

// PTSummaryParams describes parameters for PT summary.
type StartActionRequest_PTSummaryParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StartActionRequest_PTSummaryParams) Reset() {
	*x = StartActionRequest_PTSummaryParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_PTSummaryParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_PTSummaryParams) ProtoMessage() {}

func (x *StartActionRequest_PTSummaryParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_PTSummaryParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_PTSummaryParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 7}
}

// PTPgSummaryParams describes parameters for PT PG summary.
type StartActionRequest_PTPgSummaryParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port     uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *StartActionRequest_PTPgSummaryParams) Reset() {
	*x = StartActionRequest_PTPgSummaryParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_PTPgSummaryParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_PTPgSummaryParams) ProtoMessage() {}

func (x *StartActionRequest_PTPgSummaryParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_PTPgSummaryParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_PTPgSummaryParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 8}
}

func (x *StartActionRequest_PTPgSummaryParams) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *StartActionRequest_PTPgSummaryParams) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StartActionRequest_PTPgSummaryParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *StartActionRequest_PTPgSummaryParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// PTMongoDBSummaryParams describes parameters for PT MongoDB summary.
type StartActionRequest_PTMongoDBSummaryParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port     uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *StartActionRequest_PTMongoDBSummaryParams) Reset() {
	*x = StartActionRequest_PTMongoDBSummaryParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_PTMongoDBSummaryParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_PTMongoDBSummaryParams) ProtoMessage() {}

func (x *StartActionRequest_PTMongoDBSummaryParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_PTMongoDBSummaryParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_PTMongoDBSummaryParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 9}
}

func (x *StartActionRequest_PTMongoDBSummaryParams) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *StartActionRequest_PTMongoDBSummaryParams) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StartActionRequest_PTMongoDBSummaryParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *StartActionRequest_PTMongoDBSummaryParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// PTMySQLSummaryParams describes parameters for PT MySQL summary.
type StartActionRequest_PTMySQLSummaryParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host     string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port     uint32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Socket   string `protobuf:"bytes,3,opt,name=socket,proto3" json:"socket,omitempty"`
	Username string `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *StartActionRequest_PTMySQLSummaryParams) Reset() {
	*x = StartActionRequest_PTMySQLSummaryParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_PTMySQLSummaryParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_PTMySQLSummaryParams) ProtoMessage() {}

func (x *StartActionRequest_PTMySQLSummaryParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_PTMySQLSummaryParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_PTMySQLSummaryParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 10}
}

func (x *StartActionRequest_PTMySQLSummaryParams) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *StartActionRequest_PTMySQLSummaryParams) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StartActionRequest_PTMySQLSummaryParams) GetSocket() string {
	if x != nil {
		return x.Socket
	}
	return ""
}

func (x *StartActionRequest_PTMySQLSummaryParams) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *StartActionRequest_PTMySQLSummaryParams) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// MySQLQueryShowParams describes MySQL SHOW query action parameters.
type StartActionRequest_MySQLQueryShowParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Query suffix (without leading SHOW).
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TlsFiles *TextFiles `protobuf:"bytes,3,opt,name=tls_files,json=tlsFiles,proto3" json:"tls_files,omitempty"`
	// TLS certificate wont be verified.
	TlsSkipVerify bool `protobuf:"varint,4,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
}

func (x *StartActionRequest_MySQLQueryShowParams) Reset() {
	*x = StartActionRequest_MySQLQueryShowParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MySQLQueryShowParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MySQLQueryShowParams) ProtoMessage() {}

func (x *StartActionRequest_MySQLQueryShowParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MySQLQueryShowParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MySQLQueryShowParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 11}
}

func (x *StartActionRequest_MySQLQueryShowParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MySQLQueryShowParams) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *StartActionRequest_MySQLQueryShowParams) GetTlsFiles() *TextFiles {
	if x != nil {
		return x.TlsFiles
	}
	return nil
}

func (x *StartActionRequest_MySQLQueryShowParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

// MySQLQuerySelectParams describes MySQL SELECT query action parameters.
type StartActionRequest_MySQLQuerySelectParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Query suffix (without leading SELECT).
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TlsFiles *TextFiles `protobuf:"bytes,3,opt,name=tls_files,json=tlsFiles,proto3" json:"tls_files,omitempty"`
	// TLS certificate wont be verified.
	TlsSkipVerify bool `protobuf:"varint,4,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
}

func (x *StartActionRequest_MySQLQuerySelectParams) Reset() {
	*x = StartActionRequest_MySQLQuerySelectParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MySQLQuerySelectParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MySQLQuerySelectParams) ProtoMessage() {}

func (x *StartActionRequest_MySQLQuerySelectParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MySQLQuerySelectParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MySQLQuerySelectParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 12}
}

func (x *StartActionRequest_MySQLQuerySelectParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MySQLQuerySelectParams) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *StartActionRequest_MySQLQuerySelectParams) GetTlsFiles() *TextFiles {
	if x != nil {
		return x.TlsFiles
	}
	return nil
}

func (x *StartActionRequest_MySQLQuerySelectParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

// PostgreSQLQueryShowParams describes PostgreSQL SHOW query action parameters.
type StartActionRequest_PostgreSQLQueryShowParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TlsFiles *TextFiles `protobuf:"bytes,2,opt,name=tls_files,json=tlsFiles,proto3" json:"tls_files,omitempty"`
	// TLS certificate wont be verified.
	TlsSkipVerify bool `protobuf:"varint,3,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
}

func (x *StartActionRequest_PostgreSQLQueryShowParams) Reset() {
	*x = StartActionRequest_PostgreSQLQueryShowParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_PostgreSQLQueryShowParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_PostgreSQLQueryShowParams) ProtoMessage() {}

func (x *StartActionRequest_PostgreSQLQueryShowParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_PostgreSQLQueryShowParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_PostgreSQLQueryShowParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 13}
}

func (x *StartActionRequest_PostgreSQLQueryShowParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_PostgreSQLQueryShowParams) GetTlsFiles() *TextFiles {
	if x != nil {
		return x.TlsFiles
	}
	return nil
}

func (x *StartActionRequest_PostgreSQLQueryShowParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

// PostgreSQLQuerySelectParams describes PostgreSQL SELECT query action parameters.
type StartActionRequest_PostgreSQLQuerySelectParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Query suffix (without leading SELECT).
	Query string `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TlsFiles *TextFiles `protobuf:"bytes,3,opt,name=tls_files,json=tlsFiles,proto3" json:"tls_files,omitempty"`
	// TLS certificate wont be verified.
	TlsSkipVerify bool `protobuf:"varint,4,opt,name=tls_skip_verify,json=tlsSkipVerify,proto3" json:"tls_skip_verify,omitempty"`
}

func (x *StartActionRequest_PostgreSQLQuerySelectParams) Reset() {
	*x = StartActionRequest_PostgreSQLQuerySelectParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_PostgreSQLQuerySelectParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_PostgreSQLQuerySelectParams) ProtoMessage() {}

func (x *StartActionRequest_PostgreSQLQuerySelectParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_PostgreSQLQuerySelectParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_PostgreSQLQuerySelectParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 14}
}

func (x *StartActionRequest_PostgreSQLQuerySelectParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_PostgreSQLQuerySelectParams) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *StartActionRequest_PostgreSQLQuerySelectParams) GetTlsFiles() *TextFiles {
	if x != nil {
		return x.TlsFiles
	}
	return nil
}

func (x *StartActionRequest_PostgreSQLQuerySelectParams) GetTlsSkipVerify() bool {
	if x != nil {
		return x.TlsSkipVerify
	}
	return false
}

// MongoDBQueryGetParameterParams describes MongoDB getParameter query action parameters.
type StartActionRequest_MongoDBQueryGetParameterParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	// May contain placeholders for file paths in DSN.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,2,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
}

func (x *StartActionRequest_MongoDBQueryGetParameterParams) Reset() {
	*x = StartActionRequest_MongoDBQueryGetParameterParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MongoDBQueryGetParameterParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MongoDBQueryGetParameterParams) ProtoMessage() {}

func (x *StartActionRequest_MongoDBQueryGetParameterParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MongoDBQueryGetParameterParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MongoDBQueryGetParameterParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 15}
}

func (x *StartActionRequest_MongoDBQueryGetParameterParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MongoDBQueryGetParameterParams) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

// MongoDBQueryBuildInfoParams describes MongoDB buildInfo query action parameters.
type StartActionRequest_MongoDBQueryBuildInfoParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	// May contain placeholders for file paths in DSN.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,2,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
}

func (x *StartActionRequest_MongoDBQueryBuildInfoParams) Reset() {
	*x = StartActionRequest_MongoDBQueryBuildInfoParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MongoDBQueryBuildInfoParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MongoDBQueryBuildInfoParams) ProtoMessage() {}

func (x *StartActionRequest_MongoDBQueryBuildInfoParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MongoDBQueryBuildInfoParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MongoDBQueryBuildInfoParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 16}
}

func (x *StartActionRequest_MongoDBQueryBuildInfoParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MongoDBQueryBuildInfoParams) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

// MongoDBQueryGetCmdLineOptsParams describes MongoDB getCmdLineOpts query action parameters.
type StartActionRequest_MongoDBQueryGetCmdLineOptsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	// May contain placeholders for file paths in DSN.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,2,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
}

func (x *StartActionRequest_MongoDBQueryGetCmdLineOptsParams) Reset() {
	*x = StartActionRequest_MongoDBQueryGetCmdLineOptsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MongoDBQueryGetCmdLineOptsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MongoDBQueryGetCmdLineOptsParams) ProtoMessage() {}

func (x *StartActionRequest_MongoDBQueryGetCmdLineOptsParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MongoDBQueryGetCmdLineOptsParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MongoDBQueryGetCmdLineOptsParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 17}
}

func (x *StartActionRequest_MongoDBQueryGetCmdLineOptsParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MongoDBQueryGetCmdLineOptsParams) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

// MongoDBQueryReplSetGetStatusParams describes MongoDB replSetGetStatus query action parameters.
type StartActionRequest_MongoDBQueryReplSetGetStatusParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	// May contain placeholders for file paths in DSN.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,2,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
}

func (x *StartActionRequest_MongoDBQueryReplSetGetStatusParams) Reset() {
	*x = StartActionRequest_MongoDBQueryReplSetGetStatusParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MongoDBQueryReplSetGetStatusParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MongoDBQueryReplSetGetStatusParams) ProtoMessage() {}

func (x *StartActionRequest_MongoDBQueryReplSetGetStatusParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MongoDBQueryReplSetGetStatusParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MongoDBQueryReplSetGetStatusParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 18}
}

func (x *StartActionRequest_MongoDBQueryReplSetGetStatusParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MongoDBQueryReplSetGetStatusParams) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

// MongoDBQueryGetDiagnosticDataParams describes MongoDB getDiagnosticData query action parameters.
type StartActionRequest_MongoDBQueryGetDiagnosticDataParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// DSN for the service. May contain connection (dial) timeout.
	// May contain placeholders for file paths in DSN.
	Dsn string `protobuf:"bytes,1,opt,name=dsn,proto3" json:"dsn,omitempty"`
	// Contains files and their contents which can be used in DSN.
	TextFiles *TextFiles `protobuf:"bytes,2,opt,name=text_files,json=textFiles,proto3" json:"text_files,omitempty"`
}

func (x *StartActionRequest_MongoDBQueryGetDiagnosticDataParams) Reset() {
	*x = StartActionRequest_MongoDBQueryGetDiagnosticDataParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartActionRequest_MongoDBQueryGetDiagnosticDataParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartActionRequest_MongoDBQueryGetDiagnosticDataParams) ProtoMessage() {}

func (x *StartActionRequest_MongoDBQueryGetDiagnosticDataParams) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartActionRequest_MongoDBQueryGetDiagnosticDataParams.ProtoReflect.Descriptor instead.
func (*StartActionRequest_MongoDBQueryGetDiagnosticDataParams) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{14, 19}
}

func (x *StartActionRequest_MongoDBQueryGetDiagnosticDataParams) GetDsn() string {
	if x != nil {
		return x.Dsn
	}
	return ""
}

func (x *StartActionRequest_MongoDBQueryGetDiagnosticDataParams) GetTextFiles() *TextFiles {
	if x != nil {
		return x.TextFiles
	}
	return nil
}

// Stats contains various Service statistics.
type CheckConnectionResponse_Stats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A number of tables, 0 if unknown.
	TableCount int32 `protobuf:"varint,1,opt,name=table_count,json=tableCount,proto3" json:"table_count,omitempty"`
}

func (x *CheckConnectionResponse_Stats) Reset() {
	*x = CheckConnectionResponse_Stats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckConnectionResponse_Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckConnectionResponse_Stats) ProtoMessage() {}

func (x *CheckConnectionResponse_Stats) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckConnectionResponse_Stats.ProtoReflect.Descriptor instead.
func (*CheckConnectionResponse_Stats) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{25, 0}
}

func (x *CheckConnectionResponse_Stats) GetTableCount() int32 {
	if x != nil {
		return x.TableCount
	}
	return 0
}

// MySQLBackup is job for backup MySQL service.
type StartJobRequest_MySQLBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Database user;
	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// Database password.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Database address. Can't be specified with socket.
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Database port. Can't be specified with socket.
	Port int32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// Database unix socket. Can't be specified with address/port.
	Socket string `protobuf:"bytes,5,opt,name=socket,proto3" json:"socket,omitempty"`
	// Backup name.
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Backup target location.
	//
	// Types that are assignable to LocationConfig:
	//	*StartJobRequest_MySQLBackup_S3Config
	LocationConfig isStartJobRequest_MySQLBackup_LocationConfig `protobuf_oneof:"location_config"`
}

func (x *StartJobRequest_MySQLBackup) Reset() {
	*x = StartJobRequest_MySQLBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartJobRequest_MySQLBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartJobRequest_MySQLBackup) ProtoMessage() {}

func (x *StartJobRequest_MySQLBackup) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartJobRequest_MySQLBackup.ProtoReflect.Descriptor instead.
func (*StartJobRequest_MySQLBackup) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{29, 0}
}

func (x *StartJobRequest_MySQLBackup) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *StartJobRequest_MySQLBackup) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *StartJobRequest_MySQLBackup) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *StartJobRequest_MySQLBackup) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StartJobRequest_MySQLBackup) GetSocket() string {
	if x != nil {
		return x.Socket
	}
	return ""
}

func (x *StartJobRequest_MySQLBackup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *StartJobRequest_MySQLBackup) GetLocationConfig() isStartJobRequest_MySQLBackup_LocationConfig {
	if m != nil {
		return m.LocationConfig
	}
	return nil
}

func (x *StartJobRequest_MySQLBackup) GetS3Config() *S3LocationConfig {
	if x, ok := x.GetLocationConfig().(*StartJobRequest_MySQLBackup_S3Config); ok {
		return x.S3Config
	}
	return nil
}

type isStartJobRequest_MySQLBackup_LocationConfig interface {
	isStartJobRequest_MySQLBackup_LocationConfig()
}

type StartJobRequest_MySQLBackup_S3Config struct {
	S3Config *S3LocationConfig `protobuf:"bytes,10,opt,name=s3_config,json=s3Config,proto3,oneof"`
}

func (*StartJobRequest_MySQLBackup_S3Config) isStartJobRequest_MySQLBackup_LocationConfig() {}

// MySQLRestoreBackup is job for MySQL restore backup service.
type StartJobRequest_MySQLRestoreBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Service identifier where the backup should be restored.
	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Backup name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Where backup is stored.
	//
	// Types that are assignable to LocationConfig:
	//	*StartJobRequest_MySQLRestoreBackup_S3Config
	LocationConfig isStartJobRequest_MySQLRestoreBackup_LocationConfig `protobuf_oneof:"location_config"`
}

func (x *StartJobRequest_MySQLRestoreBackup) Reset() {
	*x = StartJobRequest_MySQLRestoreBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartJobRequest_MySQLRestoreBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartJobRequest_MySQLRestoreBackup) ProtoMessage() {}

func (x *StartJobRequest_MySQLRestoreBackup) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartJobRequest_MySQLRestoreBackup.ProtoReflect.Descriptor instead.
func (*StartJobRequest_MySQLRestoreBackup) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{29, 1}
}

func (x *StartJobRequest_MySQLRestoreBackup) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *StartJobRequest_MySQLRestoreBackup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (m *StartJobRequest_MySQLRestoreBackup) GetLocationConfig() isStartJobRequest_MySQLRestoreBackup_LocationConfig {
	if m != nil {
		return m.LocationConfig
	}
	return nil
}

func (x *StartJobRequest_MySQLRestoreBackup) GetS3Config() *S3LocationConfig {
	if x, ok := x.GetLocationConfig().(*StartJobRequest_MySQLRestoreBackup_S3Config); ok {
		return x.S3Config
	}
	return nil
}

type isStartJobRequest_MySQLRestoreBackup_LocationConfig interface {
	isStartJobRequest_MySQLRestoreBackup_LocationConfig()
}

type StartJobRequest_MySQLRestoreBackup_S3Config struct {
	S3Config *S3LocationConfig `protobuf:"bytes,10,opt,name=s3_config,json=s3Config,proto3,oneof"`
}

func (*StartJobRequest_MySQLRestoreBackup_S3Config) isStartJobRequest_MySQLRestoreBackup_LocationConfig() {
}

// MongoDBBackup is job for backup MongoDB service.
type StartJobRequest_MongoDBBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Database user;
	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// Database password.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Database address. Can't be specified with socket.
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Database port. Can't be specified with socket.
	Port int32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// Database unix socket. Can't be specified with address/port.
	Socket string `protobuf:"bytes,5,opt,name=socket,proto3" json:"socket,omitempty"`
	// Backup name.
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Enable Point-in-Time recovery feature.
	EnablePitr bool `protobuf:"varint,7,opt,name=enable_pitr,json=enablePitr,proto3" json:"enable_pitr,omitempty"`
	// Backup target location.
	//
	// Types that are assignable to LocationConfig:
	//	*StartJobRequest_MongoDBBackup_S3Config
	LocationConfig isStartJobRequest_MongoDBBackup_LocationConfig `protobuf_oneof:"location_config"`
}

func (x *StartJobRequest_MongoDBBackup) Reset() {
	*x = StartJobRequest_MongoDBBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartJobRequest_MongoDBBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartJobRequest_MongoDBBackup) ProtoMessage() {}

func (x *StartJobRequest_MongoDBBackup) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartJobRequest_MongoDBBackup.ProtoReflect.Descriptor instead.
func (*StartJobRequest_MongoDBBackup) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{29, 2}
}

func (x *StartJobRequest_MongoDBBackup) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *StartJobRequest_MongoDBBackup) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *StartJobRequest_MongoDBBackup) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *StartJobRequest_MongoDBBackup) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StartJobRequest_MongoDBBackup) GetSocket() string {
	if x != nil {
		return x.Socket
	}
	return ""
}

func (x *StartJobRequest_MongoDBBackup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StartJobRequest_MongoDBBackup) GetEnablePitr() bool {
	if x != nil {
		return x.EnablePitr
	}
	return false
}

func (m *StartJobRequest_MongoDBBackup) GetLocationConfig() isStartJobRequest_MongoDBBackup_LocationConfig {
	if m != nil {
		return m.LocationConfig
	}
	return nil
}

func (x *StartJobRequest_MongoDBBackup) GetS3Config() *S3LocationConfig {
	if x, ok := x.GetLocationConfig().(*StartJobRequest_MongoDBBackup_S3Config); ok {
		return x.S3Config
	}
	return nil
}

type isStartJobRequest_MongoDBBackup_LocationConfig interface {
	isStartJobRequest_MongoDBBackup_LocationConfig()
}

type StartJobRequest_MongoDBBackup_S3Config struct {
	S3Config *S3LocationConfig `protobuf:"bytes,10,opt,name=s3_config,json=s3Config,proto3,oneof"`
}

func (*StartJobRequest_MongoDBBackup_S3Config) isStartJobRequest_MongoDBBackup_LocationConfig() {}

// MongoDBRestoreBackup is job for MongoDB restore backup service.
type StartJobRequest_MongoDBRestoreBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Database user;
	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// Database password.
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Database address. Can't be specified with socket.
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	// Database port. Can't be specified with socket.
	Port int32 `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	// Database unix socket. Can't be specified with address/port.
	Socket string `protobuf:"bytes,5,opt,name=socket,proto3" json:"socket,omitempty"`
	// Backup name.
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	// Point-in-Time recovery timestamp.
	PitrTimestamp *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=pitr_timestamp,json=pitrTimestamp,proto3" json:"pitr_timestamp,omitempty"`
	// Where backup is stored.
	//
	// Types that are assignable to LocationConfig:
	//	*StartJobRequest_MongoDBRestoreBackup_S3Config
	LocationConfig isStartJobRequest_MongoDBRestoreBackup_LocationConfig `protobuf_oneof:"location_config"`
}

func (x *StartJobRequest_MongoDBRestoreBackup) Reset() {
	*x = StartJobRequest_MongoDBRestoreBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartJobRequest_MongoDBRestoreBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartJobRequest_MongoDBRestoreBackup) ProtoMessage() {}

func (x *StartJobRequest_MongoDBRestoreBackup) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartJobRequest_MongoDBRestoreBackup.ProtoReflect.Descriptor instead.
func (*StartJobRequest_MongoDBRestoreBackup) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{29, 3}
}

func (x *StartJobRequest_MongoDBRestoreBackup) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *StartJobRequest_MongoDBRestoreBackup) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *StartJobRequest_MongoDBRestoreBackup) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *StartJobRequest_MongoDBRestoreBackup) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StartJobRequest_MongoDBRestoreBackup) GetSocket() string {
	if x != nil {
		return x.Socket
	}
	return ""
}

func (x *StartJobRequest_MongoDBRestoreBackup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *StartJobRequest_MongoDBRestoreBackup) GetPitrTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.PitrTimestamp
	}
	return nil
}

func (m *StartJobRequest_MongoDBRestoreBackup) GetLocationConfig() isStartJobRequest_MongoDBRestoreBackup_LocationConfig {
	if m != nil {
		return m.LocationConfig
	}
	return nil
}

func (x *StartJobRequest_MongoDBRestoreBackup) GetS3Config() *S3LocationConfig {
	if x, ok := x.GetLocationConfig().(*StartJobRequest_MongoDBRestoreBackup_S3Config); ok {
		return x.S3Config
	}
	return nil
}

type isStartJobRequest_MongoDBRestoreBackup_LocationConfig interface {
	isStartJobRequest_MongoDBRestoreBackup_LocationConfig()
}

type StartJobRequest_MongoDBRestoreBackup_S3Config struct {
	S3Config *S3LocationConfig `protobuf:"bytes,10,opt,name=s3_config,json=s3Config,proto3,oneof"`
}

func (*StartJobRequest_MongoDBRestoreBackup_S3Config) isStartJobRequest_MongoDBRestoreBackup_LocationConfig() {
}

// Error contains job error message.
type JobResult_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *JobResult_Error) Reset() {
	*x = JobResult_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResult_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResult_Error) ProtoMessage() {}

func (x *JobResult_Error) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResult_Error.ProtoReflect.Descriptor instead.
func (*JobResult_Error) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{33, 0}
}

func (x *JobResult_Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// MongoDBBackup contains result for MongoDB backup job.
type JobResult_MongoDBBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobResult_MongoDBBackup) Reset() {
	*x = JobResult_MongoDBBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResult_MongoDBBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResult_MongoDBBackup) ProtoMessage() {}

func (x *JobResult_MongoDBBackup) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResult_MongoDBBackup.ProtoReflect.Descriptor instead.
func (*JobResult_MongoDBBackup) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{33, 1}
}

// MySQLBackup contains result for MySQL backup job.
type JobResult_MySQLBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobResult_MySQLBackup) Reset() {
	*x = JobResult_MySQLBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResult_MySQLBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResult_MySQLBackup) ProtoMessage() {}

func (x *JobResult_MySQLBackup) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResult_MySQLBackup.ProtoReflect.Descriptor instead.
func (*JobResult_MySQLBackup) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{33, 2}
}

// MySQLRestoreBackup contains result for MySQL restore backup job.
type JobResult_MySQLRestoreBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobResult_MySQLRestoreBackup) Reset() {
	*x = JobResult_MySQLRestoreBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResult_MySQLRestoreBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResult_MySQLRestoreBackup) ProtoMessage() {}

func (x *JobResult_MySQLRestoreBackup) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResult_MySQLRestoreBackup.ProtoReflect.Descriptor instead.
func (*JobResult_MySQLRestoreBackup) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{33, 3}
}

// MongoDBRestoreBackup contains result for MongoDB restore backup job.
type JobResult_MongoDBRestoreBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobResult_MongoDBRestoreBackup) Reset() {
	*x = JobResult_MongoDBRestoreBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResult_MongoDBRestoreBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResult_MongoDBRestoreBackup) ProtoMessage() {}

func (x *JobResult_MongoDBRestoreBackup) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResult_MongoDBRestoreBackup.ProtoReflect.Descriptor instead.
func (*JobResult_MongoDBRestoreBackup) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{33, 4}
}

// MySQLBackup contains backup job status update.
type JobProgress_MySQLBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobProgress_MySQLBackup) Reset() {
	*x = JobProgress_MySQLBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobProgress_MySQLBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobProgress_MySQLBackup) ProtoMessage() {}

func (x *JobProgress_MySQLBackup) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobProgress_MySQLBackup.ProtoReflect.Descriptor instead.
func (*JobProgress_MySQLBackup) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{34, 0}
}

// MySQLRestoreBackup contains restore backup job status update.
type JobProgress_MySQLRestoreBackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JobProgress_MySQLRestoreBackup) Reset() {
	*x = JobProgress_MySQLRestoreBackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobProgress_MySQLRestoreBackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobProgress_MySQLRestoreBackup) ProtoMessage() {}

func (x *JobProgress_MySQLRestoreBackup) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobProgress_MySQLRestoreBackup.ProtoReflect.Descriptor instead.
func (*JobProgress_MySQLRestoreBackup) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{34, 1}
}

// Logs contains generic logs from job.
type JobProgress_Logs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkId uint32 `protobuf:"varint,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	Data    string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Done    bool   `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
}

func (x *JobProgress_Logs) Reset() {
	*x = JobProgress_Logs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobProgress_Logs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobProgress_Logs) ProtoMessage() {}

func (x *JobProgress_Logs) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobProgress_Logs.ProtoReflect.Descriptor instead.
func (*JobProgress_Logs) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{34, 2}
}

func (x *JobProgress_Logs) GetChunkId() uint32 {
	if x != nil {
		return x.ChunkId
	}
	return 0
}

func (x *JobProgress_Logs) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *JobProgress_Logs) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

// MySQLd is used for mysqld binary version retrieving using `mysqld --version`.
type GetVersionsRequest_MySQLd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVersionsRequest_MySQLd) Reset() {
	*x = GetVersionsRequest_MySQLd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionsRequest_MySQLd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionsRequest_MySQLd) ProtoMessage() {}

func (x *GetVersionsRequest_MySQLd) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionsRequest_MySQLd.ProtoReflect.Descriptor instead.
func (*GetVersionsRequest_MySQLd) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{35, 0}
}

// Xtrabackup is used for xtrabackup binary version retrieving.
type GetVersionsRequest_Xtrabackup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVersionsRequest_Xtrabackup) Reset() {
	*x = GetVersionsRequest_Xtrabackup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionsRequest_Xtrabackup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionsRequest_Xtrabackup) ProtoMessage() {}

func (x *GetVersionsRequest_Xtrabackup) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionsRequest_Xtrabackup.ProtoReflect.Descriptor instead.
func (*GetVersionsRequest_Xtrabackup) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{35, 1}
}

// Xbcloud is used for xbcloud binary version retrieving.
type GetVersionsRequest_Xbcloud struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVersionsRequest_Xbcloud) Reset() {
	*x = GetVersionsRequest_Xbcloud{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionsRequest_Xbcloud) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionsRequest_Xbcloud) ProtoMessage() {}

func (x *GetVersionsRequest_Xbcloud) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionsRequest_Xbcloud.ProtoReflect.Descriptor instead.
func (*GetVersionsRequest_Xbcloud) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{35, 2}
}

// Qpress is used for qpress binary version retrieving.
type GetVersionsRequest_Qpress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetVersionsRequest_Qpress) Reset() {
	*x = GetVersionsRequest_Qpress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionsRequest_Qpress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionsRequest_Qpress) ProtoMessage() {}

func (x *GetVersionsRequest_Qpress) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionsRequest_Qpress.ProtoReflect.Descriptor instead.
func (*GetVersionsRequest_Qpress) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{35, 3}
}

// Software is used to select software for which retrieve version.
type GetVersionsRequest_Software struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Software:
	//	*GetVersionsRequest_Software_Mysqld
	//	*GetVersionsRequest_Software_Xtrabackup
	//	*GetVersionsRequest_Software_Xbcloud
	//	*GetVersionsRequest_Software_Qpress
	Software isGetVersionsRequest_Software_Software `protobuf_oneof:"software"`
}

func (x *GetVersionsRequest_Software) Reset() {
	*x = GetVersionsRequest_Software{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionsRequest_Software) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionsRequest_Software) ProtoMessage() {}

func (x *GetVersionsRequest_Software) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionsRequest_Software.ProtoReflect.Descriptor instead.
func (*GetVersionsRequest_Software) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{35, 4}
}

func (m *GetVersionsRequest_Software) GetSoftware() isGetVersionsRequest_Software_Software {
	if m != nil {
		return m.Software
	}
	return nil
}

func (x *GetVersionsRequest_Software) GetMysqld() *GetVersionsRequest_MySQLd {
	if x, ok := x.GetSoftware().(*GetVersionsRequest_Software_Mysqld); ok {
		return x.Mysqld
	}
	return nil
}

func (x *GetVersionsRequest_Software) GetXtrabackup() *GetVersionsRequest_Xtrabackup {
	if x, ok := x.GetSoftware().(*GetVersionsRequest_Software_Xtrabackup); ok {
		return x.Xtrabackup
	}
	return nil
}

func (x *GetVersionsRequest_Software) GetXbcloud() *GetVersionsRequest_Xbcloud {
	if x, ok := x.GetSoftware().(*GetVersionsRequest_Software_Xbcloud); ok {
		return x.Xbcloud
	}
	return nil
}

func (x *GetVersionsRequest_Software) GetQpress() *GetVersionsRequest_Qpress {
	if x, ok := x.GetSoftware().(*GetVersionsRequest_Software_Qpress); ok {
		return x.Qpress
	}
	return nil
}

type isGetVersionsRequest_Software_Software interface {
	isGetVersionsRequest_Software_Software()
}

type GetVersionsRequest_Software_Mysqld struct {
	Mysqld *GetVersionsRequest_MySQLd `protobuf:"bytes,1,opt,name=mysqld,proto3,oneof"`
}

type GetVersionsRequest_Software_Xtrabackup struct {
	Xtrabackup *GetVersionsRequest_Xtrabackup `protobuf:"bytes,2,opt,name=xtrabackup,proto3,oneof"`
}

type GetVersionsRequest_Software_Xbcloud struct {
	Xbcloud *GetVersionsRequest_Xbcloud `protobuf:"bytes,3,opt,name=xbcloud,proto3,oneof"`
}

type GetVersionsRequest_Software_Qpress struct {
	Qpress *GetVersionsRequest_Qpress `protobuf:"bytes,4,opt,name=qpress,proto3,oneof"`
}

func (*GetVersionsRequest_Software_Mysqld) isGetVersionsRequest_Software_Software() {}

func (*GetVersionsRequest_Software_Xtrabackup) isGetVersionsRequest_Software_Software() {}

func (*GetVersionsRequest_Software_Xbcloud) isGetVersionsRequest_Software_Software() {}

func (*GetVersionsRequest_Software_Qpress) isGetVersionsRequest_Software_Software() {}

// Version contains the version field of the requested software and
// the error field which is set in case of version retrieving error.
type GetVersionsResponse_Version struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *GetVersionsResponse_Version) Reset() {
	*x = GetVersionsResponse_Version{}
	if protoimpl.UnsafeEnabled {
		mi := &file_agentpb_agent_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionsResponse_Version) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionsResponse_Version) ProtoMessage() {}

func (x *GetVersionsResponse_Version) ProtoReflect() protoreflect.Message {
	mi := &file_agentpb_agent_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionsResponse_Version.ProtoReflect.Descriptor instead.
func (*GetVersionsResponse_Version) Descriptor() ([]byte, []int) {
	return file_agentpb_agent_proto_rawDescGZIP(), []int{36, 0}
}

func (x *GetVersionsResponse_Version) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *GetVersionsResponse_Version) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_agentpb_agent_proto protoreflect.FileDescriptor

var file_agentpb_agent_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x1a, 0x17, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x72,
	0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x70, 0x62, 0x2f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x18, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x70, 0x62, 0x2f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x70, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xda, 0x01, 0x0a, 0x09, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x66,
	0x74, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x69,
	0x67, 0x68, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x1a, 0x38, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x06, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x45, 0x0a, 0x04, 0x50, 0x6f,
	0x6e, 0x67, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x50, 0x0a, 0x11, 0x51, 0x41, 0x4e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x73, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x42, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x0d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x51, 0x41, 0x4e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x13, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x45, 0x78, 0x65, 0x63, 0x50, 0x61, 0x74, 0x68, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x99, 0x08, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x50, 0x0a, 0x0e, 0x62, 0x75,
	0x69, 0x6c, 0x74, 0x69, 0x6e, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x74,
	0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x62,
	0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xf4, 0x02, 0x0a,
	0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x66, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x69, 0x67, 0x68, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x6e, 0x76, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12,
	0x51, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x61, 0x63, 0x74, 0x5f, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64, 0x61, 0x63, 0x74,
	0x57, 0x6f, 0x72, 0x64, 0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x66, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x98, 0x02, 0x0a, 0x0c,
	0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x12, 0x2b,
	0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2f, 0x0a, 0x0a, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x74, 0x6c, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x74, 0x6c, 0x73, 0x53, 0x6b, 0x69, 0x70,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x1a, 0x65, 0x0a, 0x12, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69,
	0x6e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x39,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x74, 0x69, 0x6e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x12, 0x0a,
	0x10, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xf4, 0x02, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x6e, 0x69, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x03, 0x6e, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f,
	0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c,
	0x12, 0x16, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48,
	0x00, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x75, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x06, 0x75, 0x69, 0x6e, 0x74,
	0x36, 0x34, 0x12, 0x18, 0x0a, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x48, 0x00, 0x52, 0x06, 0x64, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x05,
	0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x62,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x3a, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x2f, 0x0a, 0x05, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x6c, 0x69, 0x63,
	0x65, 0x12, 0x29, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x48, 0x00, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x32, 0x0a, 0x06,
	0x62, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x06, 0x62, 0x69, 0x6e, 0x61, 0x72, 0x79,
	0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x41, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x05,
	0x73, 0x6c, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x73, 0x6c, 0x69, 0x63, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x0e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x12, 0x30,
	0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x61, 0x70, 0x2e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61, 0x70,
	0x1a, 0x4f, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x43, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x69, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22, 0x85, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x69, 0x63, 0x65, 0x52, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x52, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x22, 0x8a,
	0x28, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x60, 0x0a, 0x14, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x79, 0x53, 0x51,
	0x4c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00,
	0x52, 0x12, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x7a, 0x0a, 0x1e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f,
	0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x48, 0x00, 0x52, 0x1a, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x7a, 0x0a, 0x1e, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00,
	0x52, 0x1a, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x67, 0x0a, 0x17,
	0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68,
	0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52,
	0x14, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x89, 0x01, 0x0a, 0x23, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00,
	0x52, 0x1f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x76, 0x0a, 0x1c, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f,
	0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x19,
	0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x66, 0x0a, 0x16, 0x6d, 0x6f, 0x6e,
	0x67, 0x6f, 0x64, 0x62, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x45, 0x78, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x14, 0x6d, 0x6f, 0x6e,
	0x67, 0x6f, 0x64, 0x62, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x57, 0x0a, 0x11, 0x70, 0x74, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x54, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x74, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x5e, 0x0a, 0x14, 0x70, 0x74,
	0x5f, 0x70, 0x67, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x50, 0x54, 0x50, 0x67, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x11, 0x70, 0x74, 0x50, 0x67, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x6d, 0x0a, 0x19, 0x70, 0x74,
	0x5f, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x54, 0x4d, 0x6f, 0x6e, 0x67, 0x6f,
	0x44, 0x42, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48,
	0x00, 0x52, 0x16, 0x70, 0x74, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x67, 0x0a, 0x17, 0x70, 0x74, 0x5f,
	0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x54, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x14, 0x70, 0x74,
	0x4d, 0x79, 0x73, 0x71, 0x6c, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x67, 0x0a, 0x17, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d,
	0x79, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x14, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x6d, 0x0a, 0x19, 0x6d,
	0x79, 0x73, 0x71, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x48, 0x00, 0x52, 0x16, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x76, 0x0a, 0x1c, 0x70, 0x6f,
	0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x19, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x7c, 0x0a, 0x1e, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x48, 0x00, 0x52, 0x1b, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x85, 0x01, 0x0a, 0x21, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x67, 0x65, 0x74, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x1e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64,
	0x62, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x7c, 0x0a, 0x1e, 0x6d, 0x6f, 0x6e, 0x67,
	0x6f, 0x64, 0x62, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x66, 0x6f, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x37, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x35, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x6e, 0x67,
	0x6f, 0x44, 0x42, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x1b, 0x6d, 0x6f, 0x6e, 0x67, 0x6f,
	0x64, 0x62, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x66, 0x6f,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x8b, 0x01, 0x0a, 0x23, 0x6d, 0x6f, 0x6e, 0x67, 0x6f,
	0x64, 0x62, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x65, 0x74, 0x63, 0x6d, 0x64, 0x6c,
	0x69, 0x6e, 0x65, 0x6f, 0x70, 0x74, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x38,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x43,
	0x6d, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x74, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x48, 0x00, 0x52, 0x20, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x63, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x6f, 0x70, 0x74, 0x73, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x91, 0x01, 0x0a, 0x25, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62,
	0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x73, 0x65, 0x74, 0x67, 0x65,
	0x74, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x39,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x48, 0x00, 0x52, 0x22, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x73, 0x65, 0x74, 0x67, 0x65, 0x74, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x94, 0x01, 0x0a, 0x26, 0x6d, 0x6f, 0x6e,
	0x67, 0x6f, 0x64, 0x62, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x67, 0x65, 0x74, 0x64, 0x69,
	0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f, 0x73, 0x74, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x48, 0x00, 0x52, 0x23, 0x6d, 0x6f, 0x6e, 0x67,
	0x6f, 0x64, 0x62, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x64, 0x69, 0x61, 0x67, 0x6e,
	0x6f, 0x73, 0x74, 0x69, 0x63, 0x64, 0x61, 0x74, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x1a, 0xd9, 0x01, 0x0a, 0x12, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x45, 0x78,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x44, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x4d, 0x79, 0x73, 0x71, 0x6c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x52, 0x0c, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x6c, 0x73,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x08,
	0x74, 0x6c, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x5f,
	0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x74, 0x6c, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x1a, 0x9b, 0x01, 0x0a, 0x1a, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73,
	0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x6c, 0x73, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x08, 0x74, 0x6c,
	0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x5f, 0x73, 0x6b,
	0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x74, 0x6c, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x1a, 0x9b,
	0x01, 0x0a, 0x1a, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x6c, 0x73, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x08, 0x74, 0x6c, 0x73, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x5f, 0x73, 0x6b, 0x69, 0x70,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x74,
	0x6c, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x1a, 0x95, 0x01, 0x0a,
	0x14, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a,
	0x09, 0x74, 0x6c, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x08, 0x74, 0x6c, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x74, 0x6c, 0x73, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x74, 0x6c, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x1a, 0xa0, 0x01, 0x0a, 0x1f, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x12, 0x2d, 0x0a, 0x09, 0x74, 0x6c, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x08, 0x74, 0x6c, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x74, 0x6c, 0x73, 0x53, 0x6b, 0x69,
	0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x1a, 0x9a, 0x01, 0x0a, 0x19, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d, 0x0a,
	0x09, 0x74, 0x6c, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x52, 0x08, 0x74, 0x6c, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x74, 0x6c, 0x73, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x74, 0x6c, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x1a, 0x6f, 0x0a, 0x14, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x45,
	0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x11, 0x0a, 0x0f, 0x50, 0x54, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x73, 0x0a, 0x11, 0x50, 0x54, 0x50, 0x67,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x78, 0x0a,
	0x16, 0x50, 0x54, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x8e, 0x01, 0x0a, 0x14, 0x50, 0x54, 0x4d, 0x79,
	0x53, 0x51, 0x4c, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x1a, 0x95, 0x01, 0x0a, 0x14, 0x4d, 0x79, 0x53,
	0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x6c, 0x73,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x08,
	0x74, 0x6c, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x5f,
	0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x74, 0x6c, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x1a, 0x97, 0x01, 0x0a, 0x16, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x6c, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x08, 0x74, 0x6c, 0x73, 0x46, 0x69, 0x6c,
	0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x74, 0x6c, 0x73,
	0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x1a, 0x84, 0x01, 0x0a, 0x19, 0x50,
	0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x68,
	0x6f, 0x77, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x6c,
	0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x08, 0x74, 0x6c, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6c, 0x73,
	0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x74, 0x6c, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x1a, 0x9c, 0x01, 0x0a, 0x1b, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x51, 0x4c,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x73, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x2d, 0x0a, 0x09, 0x74, 0x6c, 0x73,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x08,
	0x74, 0x6c, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x5f,
	0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x74, 0x6c, 0x73, 0x53, 0x6b, 0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x1a, 0x63, 0x0a, 0x1e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x64, 0x73, 0x6e, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x60, 0x0a, 0x1b, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65,
	0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x65, 0x0a, 0x20, 0x4d, 0x6f, 0x6e, 0x67, 0x6f,
	0x44, 0x42, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x43, 0x6d, 0x64, 0x4c, 0x69, 0x6e,
	0x65, 0x4f, 0x70, 0x74, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x2f, 0x0a,
	0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x67,
	0x0a, 0x22, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x53, 0x65, 0x74, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65,
	0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x68, 0x0a, 0x23, 0x4d, 0x6f, 0x6e, 0x67, 0x6f,
	0x44, 0x42, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x65, 0x74, 0x44, 0x69, 0x61, 0x67, 0x6e, 0x6f,
	0x73, 0x74, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e,
	0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x42, 0x08, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x30, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74, 0x0a, 0x13, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x22, 0x16, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x73, 0x0a, 0x14, 0x50, 0x42, 0x4d, 0x53,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x49, 0x54, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x73, 0x6e, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x2d, 0x0a,
	0x15, 0x50, 0x42, 0x4d, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x49, 0x54, 0x52, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x76, 0x0a, 0x18,
	0x50, 0x61, 0x72, 0x73, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x46, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16,
	0x2e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x50, 0x61, 0x74, 0x68, 0x22, 0xa9, 0x01, 0x0a, 0x19, 0x50, 0x61, 0x72, 0x73, 0x65, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74,
	0x22, 0xe4, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x73, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x73, 0x6e, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2f,
	0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x74, 0x6c, 0x73, 0x5f, 0x73, 0x6b, 0x69, 0x70, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x74, 0x6c, 0x73, 0x53, 0x6b, 0x69,
	0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x22, 0x95, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x1a, 0x28, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x29, 0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x11, 0x4a, 0x6f,
	0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x61, 0x6c, 0x69, 0x76, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x10, 0x53, 0x33, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0xf3, 0x0a, 0x0a, 0x0f, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15,
	0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x47, 0x0a, 0x0c, 0x6d, 0x79,
	0x73, 0x71, 0x6c, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f,
	0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x42, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x12, 0x5d, 0x0a, 0x14, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x72, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x52,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x48, 0x00, 0x52, 0x12,
	0x6d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x12, 0x4d, 0x0a, 0x0e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x48, 0x00, 0x52, 0x0d, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x12, 0x63, 0x0a, 0x16, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x5f, 0x72, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44,
	0x42, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x48, 0x00,
	0x52, 0x14, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x1a, 0xe2, 0x01, 0x0a, 0x0b, 0x4d, 0x79, 0x53, 0x51, 0x4c,
	0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x36, 0x0a, 0x09, 0x73, 0x33, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x33, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x08,
	0x73, 0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x11, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x92, 0x01, 0x0a, 0x12,
	0x4d, 0x79, 0x53, 0x51, 0x4c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x73, 0x33, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x53, 0x33, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x48, 0x00, 0x52, 0x08, 0x73, 0x33, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x11, 0x0a,
	0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0x85, 0x02, 0x0a, 0x0d, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x69, 0x74, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x69, 0x74, 0x72, 0x12, 0x36, 0x0a,
	0x09, 0x73, 0x33, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x33, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x08, 0x73, 0x33, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x11, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0xae, 0x02, 0x0a, 0x14, 0x4d, 0x6f, 0x6e,
	0x67, 0x6f, 0x44, 0x42, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x70,
	0x69, 0x74, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0d, 0x70, 0x69, 0x74, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x36,
	0x0a, 0x09, 0x73, 0x33, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x33, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x48, 0x00, 0x52, 0x08, 0x73, 0x33,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x11, 0x0a, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x05, 0x0a, 0x03, 0x6a, 0x6f, 0x62,
	0x22, 0x28, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x27, 0x0a, 0x0e, 0x53, 0x74,
	0x6f, 0x70, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f,
	0x62, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x70, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xcb, 0x04, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x41, 0x0a, 0x0c, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4d, 0x79,
	0x53, 0x51, 0x4c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x79, 0x73,
	0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x57, 0x0a, 0x14, 0x6d, 0x79, 0x73, 0x71,
	0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x52, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x48, 0x00, 0x52, 0x12, 0x6d,
	0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x12, 0x47, 0x0a, 0x0e, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x5f, 0x62, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4d, 0x6f, 0x6e, 0x67,
	0x6f, 0x44, 0x42, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x6f, 0x6e,
	0x67, 0x6f, 0x64, 0x62, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x5d, 0x0a, 0x16, 0x6d, 0x6f,
	0x6e, 0x67, 0x6f, 0x64, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x61,
	0x63, 0x6b, 0x75, 0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x4d, 0x6f, 0x6e,
	0x67, 0x6f, 0x44, 0x42, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75,
	0x70, 0x48, 0x00, 0x52, 0x14, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x64, 0x62, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x1a, 0x21, 0x0a, 0x05, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0f, 0x0a, 0x0d,
	0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x1a, 0x0d, 0x0a,
	0x0b, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x1a, 0x14, 0x0a, 0x12,
	0x4d, 0x79, 0x53, 0x51, 0x4c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x1a, 0x16, 0x0a, 0x14, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x44, 0x42, 0x52, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xa7, 0x03, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x43, 0x0a, 0x0c, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e,
	0x4d, 0x79, 0x53, 0x51, 0x4c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x6d,
	0x79, 0x73, 0x71, 0x6c, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x59, 0x0a, 0x14, 0x6d, 0x79,
	0x73, 0x71, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x61, 0x63, 0x6b,
	0x75, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4d, 0x79, 0x53,
	0x51, 0x4c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x48,
	0x00, 0x52, 0x12, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x42,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x73, 0x48, 0x00, 0x52, 0x04,
	0x6c, 0x6f, 0x67, 0x73, 0x1a, 0x0d, 0x0a, 0x0b, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x42, 0x61, 0x63,
	0x6b, 0x75, 0x70, 0x1a, 0x14, 0x0a, 0x12, 0x4d, 0x79, 0x53, 0x51, 0x4c, 0x52, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x42, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x1a, 0x49, 0x0a, 0x04, 0x4c, 0x6f, 0x67,
	0x73, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x64, 0x6f, 0x6e, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9b,
	0x03, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x09, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x52, 0x09, 0x73, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x73, 0x1a, 0x08, 0x0a, 0x06, 0x4d, 0x79, 0x53, 0x51, 0x4c,
	0x64, 0x1a, 0x0c, 0x0a, 0x0a, 0x58, 0x74, 0x72, 0x61, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x1a,
	0x09, 0x0a, 0x07, 0x58, 0x62, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x1a, 0x08, 0x0a, 0x06, 0x51, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x1a, 0x95, 0x02, 0x0a, 0x08, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72,
	0x65, 0x12, 0x3a, 0x0a, 0x06, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x79, 0x53,
	0x51, 0x4c, 0x64, 0x48, 0x00, 0x52, 0x06, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x64, 0x12, 0x46, 0x0a,
	0x0a, 0x78, 0x74, 0x72, 0x61, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x58, 0x74, 0x72,
	0x61, 0x62, 0x61, 0x63, 0x6b, 0x75, 0x70, 0x48, 0x00, 0x52, 0x0a, 0x78, 0x74, 0x72, 0x61, 0x62,
	0x61, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x3d, 0x0a, 0x07, 0x78, 0x62, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x58, 0x62, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x48, 0x00, 0x52, 0x07, 0x78, 0x62, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x12, 0x3a, 0x0a, 0x06, 0x71, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x51, 0x70, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x06, 0x71, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x42, 0x0a, 0x0a, 0x08, 0x73, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x22, 0x90, 0x01, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x39, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0xd4, 0x08, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xff, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a,
	0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e, 0x67,
	0x12, 0x41, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x71, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x51, 0x41, 0x4e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x71, 0x61, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x12, 0x41, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00,
	0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3f,
	0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3c, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a,
	0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4a,
	0x6f, 0x62, 0x12, 0x33, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x07,
	0x73, 0x74, 0x6f, 0x70, 0x4a, 0x6f, 0x62, 0x12, 0x39, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x6a, 0x6f, 0x62, 0x5f, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x48,
	0x00, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3f,
	0x0a, 0x0c, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x0b, 0x67, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x46, 0x0a, 0x0f, 0x70, 0x62, 0x6d, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x69,
	0x74, 0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x2e, 0x50, 0x42, 0x4d, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x49, 0x54, 0x52, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x62, 0x6d, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x50, 0x69, 0x74, 0x72, 0x12, 0x52, 0x0a, 0x13, 0x70, 0x61, 0x72, 0x73, 0x65,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x72,
	0x73, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x70, 0x61, 0x72, 0x73, 0x65, 0x44,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xe2, 0x07, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0xff, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x6f, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x12, 0x42, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0b,
	0x71, 0x61, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x51, 0x41, 0x4e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0a,
	0x71, 0x61, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x42, 0x0a, 0x0d, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x21,
	0x0a, 0x04, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x70, 0x69, 0x6e,
	0x67, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08,
	0x73, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x70,
	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x70, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4a, 0x0a, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x12, 0x32, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70,
	0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x4a, 0x6f, 0x62, 0x12, 0x38, 0x0a, 0x0a,
	0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x6a, 0x6f, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x67, 0x65, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x0f, 0x70, 0x62, 0x6d, 0x5f, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x5f, 0x70, 0x69, 0x74, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x42, 0x4d, 0x53, 0x77, 0x69, 0x74, 0x63,
	0x68, 0x50, 0x49, 0x54, 0x52, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d,
	0x70, 0x62, 0x6d, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x50, 0x69, 0x74, 0x72, 0x12, 0x51, 0x0a,
	0x13, 0x70, 0x61, 0x72, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x5f,
	0x66, 0x69, 0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73,
	0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x70,
	0x61, 0x72, 0x73, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x46, 0x69, 0x6c, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a, 0xc4, 0x01, 0x0a, 0x18,
	0x4d, 0x79, 0x73, 0x71, 0x6c, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x27, 0x0a, 0x23, 0x4d, 0x59, 0x53, 0x51,
	0x4c, 0x5f, 0x45, 0x58, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54,
	0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0x00, 0x12, 0x27, 0x0a, 0x23, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x45, 0x58, 0x50, 0x4c, 0x41,
	0x49, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,
	0x5f, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x4d, 0x59,
	0x53, 0x51, 0x4c, 0x5f, 0x45, 0x58, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x50,
	0x55, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x02,
	0x12, 0x30, 0x0a, 0x2c, 0x4d, 0x59, 0x53, 0x51, 0x4c, 0x5f, 0x45, 0x58, 0x50, 0x4c, 0x41, 0x49,
	0x4e, 0x5f, 0x4f, 0x55, 0x54, 0x50, 0x55, 0x54, 0x5f, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54, 0x5f,
	0x54, 0x52, 0x41, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x4a, 0x53, 0x4f, 0x4e,
	0x10, 0x03, 0x32, 0x41, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x13, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x14, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x6f, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x42, 0x0a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x65, 0x72,
	0x63, 0x6f, 0x6e, 0x61, 0x2f, 0x70, 0x6d, 0x6d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x70, 0x62, 0xa2, 0x02, 0x03, 0x41, 0x58, 0x58, 0xaa, 0x02, 0x05, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0xca, 0x02, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0xe2, 0x02, 0x11, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_agentpb_agent_proto_rawDescOnce sync.Once
	file_agentpb_agent_proto_rawDescData = file_agentpb_agent_proto_rawDesc
)

func file_agentpb_agent_proto_rawDescGZIP() []byte {
	file_agentpb_agent_proto_rawDescOnce.Do(func() {
		file_agentpb_agent_proto_rawDescData = protoimpl.X.CompressGZIP(file_agentpb_agent_proto_rawDescData)
	})
	return file_agentpb_agent_proto_rawDescData
}

var (
	file_agentpb_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_agentpb_agent_proto_msgTypes  = make([]protoimpl.MessageInfo, 85)
	file_agentpb_agent_proto_goTypes   = []interface{}{
		(MysqlExplainOutputFormat)(0),                 // 0: agent.MysqlExplainOutputFormat
		(*TextFiles)(nil),                             // 1: agent.TextFiles
		(*Ping)(nil),                                  // 2: agent.Ping
		(*Pong)(nil),                                  // 3: agent.Pong
		(*QANCollectRequest)(nil),                     // 4: agent.QANCollectRequest
		(*QANCollectResponse)(nil),                    // 5: agent.QANCollectResponse
		(*StateChangedRequest)(nil),                   // 6: agent.StateChangedRequest
		(*StateChangedResponse)(nil),                  // 7: agent.StateChangedResponse
		(*SetStateRequest)(nil),                       // 8: agent.SetStateRequest
		(*SetStateResponse)(nil),                      // 9: agent.SetStateResponse
		(*QueryActionValue)(nil),                      // 10: agent.QueryActionValue
		(*QueryActionSlice)(nil),                      // 11: agent.QueryActionSlice
		(*QueryActionMap)(nil),                        // 12: agent.QueryActionMap
		(*QueryActionBinary)(nil),                     // 13: agent.QueryActionBinary
		(*QueryActionResult)(nil),                     // 14: agent.QueryActionResult
		(*StartActionRequest)(nil),                    // 15: agent.StartActionRequest
		(*StartActionResponse)(nil),                   // 16: agent.StartActionResponse
		(*StopActionRequest)(nil),                     // 17: agent.StopActionRequest
		(*StopActionResponse)(nil),                    // 18: agent.StopActionResponse
		(*ActionResultRequest)(nil),                   // 19: agent.ActionResultRequest
		(*ActionResultResponse)(nil),                  // 20: agent.ActionResultResponse
		(*PBMSwitchPITRRequest)(nil),                  // 21: agent.PBMSwitchPITRRequest
		(*PBMSwitchPITRResponse)(nil),                 // 22: agent.PBMSwitchPITRResponse
		(*ParseDefaultsFileRequest)(nil),              // 23: agent.ParseDefaultsFileRequest
		(*ParseDefaultsFileResponse)(nil),             // 24: agent.ParseDefaultsFileResponse
		(*CheckConnectionRequest)(nil),                // 25: agent.CheckConnectionRequest
		(*CheckConnectionResponse)(nil),               // 26: agent.CheckConnectionResponse
		(*JobStatusRequest)(nil),                      // 27: agent.JobStatusRequest
		(*JobStatusResponse)(nil),                     // 28: agent.JobStatusResponse
		(*S3LocationConfig)(nil),                      // 29: agent.S3LocationConfig
		(*StartJobRequest)(nil),                       // 30: agent.StartJobRequest
		(*StartJobResponse)(nil),                      // 31: agent.StartJobResponse
		(*StopJobRequest)(nil),                        // 32: agent.StopJobRequest
		(*StopJobResponse)(nil),                       // 33: agent.StopJobResponse
		(*JobResult)(nil),                             // 34: agent.JobResult
		(*JobProgress)(nil),                           // 35: agent.JobProgress
		(*GetVersionsRequest)(nil),                    // 36: agent.GetVersionsRequest
		(*GetVersionsResponse)(nil),                   // 37: agent.GetVersionsResponse
		(*AgentMessage)(nil),                          // 38: agent.AgentMessage
		(*ServerMessage)(nil),                         // 39: agent.ServerMessage
		nil,                                           // 40: agent.TextFiles.FilesEntry
		(*SetStateRequest_AgentProcess)(nil),          // 41: agent.SetStateRequest.AgentProcess
		nil,                                           // 42: agent.SetStateRequest.AgentProcessesEntry
		(*SetStateRequest_BuiltinAgent)(nil),          // 43: agent.SetStateRequest.BuiltinAgent
		nil,                                           // 44: agent.SetStateRequest.BuiltinAgentsEntry
		nil,                                           // 45: agent.SetStateRequest.AgentProcess.TextFilesEntry
		nil,                                           // 46: agent.QueryActionMap.MapEntry
		(*StartActionRequest_MySQLExplainParams)(nil), // 47: agent.StartActionRequest.MySQLExplainParams
		(*StartActionRequest_MySQLShowCreateTableParams)(nil),          // 48: agent.StartActionRequest.MySQLShowCreateTableParams
		(*StartActionRequest_MySQLShowTableStatusParams)(nil),          // 49: agent.StartActionRequest.MySQLShowTableStatusParams
		(*StartActionRequest_MySQLShowIndexParams)(nil),                // 50: agent.StartActionRequest.MySQLShowIndexParams
		(*StartActionRequest_PostgreSQLShowCreateTableParams)(nil),     // 51: agent.StartActionRequest.PostgreSQLShowCreateTableParams
		(*StartActionRequest_PostgreSQLShowIndexParams)(nil),           // 52: agent.StartActionRequest.PostgreSQLShowIndexParams
		(*StartActionRequest_MongoDBExplainParams)(nil),                // 53: agent.StartActionRequest.MongoDBExplainParams
		(*StartActionRequest_PTSummaryParams)(nil),                     // 54: agent.StartActionRequest.PTSummaryParams
		(*StartActionRequest_PTPgSummaryParams)(nil),                   // 55: agent.StartActionRequest.PTPgSummaryParams
		(*StartActionRequest_PTMongoDBSummaryParams)(nil),              // 56: agent.StartActionRequest.PTMongoDBSummaryParams
		(*StartActionRequest_PTMySQLSummaryParams)(nil),                // 57: agent.StartActionRequest.PTMySQLSummaryParams
		(*StartActionRequest_MySQLQueryShowParams)(nil),                // 58: agent.StartActionRequest.MySQLQueryShowParams
		(*StartActionRequest_MySQLQuerySelectParams)(nil),              // 59: agent.StartActionRequest.MySQLQuerySelectParams
		(*StartActionRequest_PostgreSQLQueryShowParams)(nil),           // 60: agent.StartActionRequest.PostgreSQLQueryShowParams
		(*StartActionRequest_PostgreSQLQuerySelectParams)(nil),         // 61: agent.StartActionRequest.PostgreSQLQuerySelectParams
		(*StartActionRequest_MongoDBQueryGetParameterParams)(nil),      // 62: agent.StartActionRequest.MongoDBQueryGetParameterParams
		(*StartActionRequest_MongoDBQueryBuildInfoParams)(nil),         // 63: agent.StartActionRequest.MongoDBQueryBuildInfoParams
		(*StartActionRequest_MongoDBQueryGetCmdLineOptsParams)(nil),    // 64: agent.StartActionRequest.MongoDBQueryGetCmdLineOptsParams
		(*StartActionRequest_MongoDBQueryReplSetGetStatusParams)(nil),  // 65: agent.StartActionRequest.MongoDBQueryReplSetGetStatusParams
		(*StartActionRequest_MongoDBQueryGetDiagnosticDataParams)(nil), // 66: agent.StartActionRequest.MongoDBQueryGetDiagnosticDataParams
		(*CheckConnectionResponse_Stats)(nil),                          // 67: agent.CheckConnectionResponse.Stats
		(*StartJobRequest_MySQLBackup)(nil),                            // 68: agent.StartJobRequest.MySQLBackup
		(*StartJobRequest_MySQLRestoreBackup)(nil),                     // 69: agent.StartJobRequest.MySQLRestoreBackup
		(*StartJobRequest_MongoDBBackup)(nil),                          // 70: agent.StartJobRequest.MongoDBBackup
		(*StartJobRequest_MongoDBRestoreBackup)(nil),                   // 71: agent.StartJobRequest.MongoDBRestoreBackup
		(*JobResult_Error)(nil),                                        // 72: agent.JobResult.Error
		(*JobResult_MongoDBBackup)(nil),                                // 73: agent.JobResult.MongoDBBackup
		(*JobResult_MySQLBackup)(nil),                                  // 74: agent.JobResult.MySQLBackup
		(*JobResult_MySQLRestoreBackup)(nil),                           // 75: agent.JobResult.MySQLRestoreBackup
		(*JobResult_MongoDBRestoreBackup)(nil),                         // 76: agent.JobResult.MongoDBRestoreBackup
		(*JobProgress_MySQLBackup)(nil),                                // 77: agent.JobProgress.MySQLBackup
		(*JobProgress_MySQLRestoreBackup)(nil),                         // 78: agent.JobProgress.MySQLRestoreBackup
		(*JobProgress_Logs)(nil),                                       // 79: agent.JobProgress.Logs
		(*GetVersionsRequest_MySQLd)(nil),                              // 80: agent.GetVersionsRequest.MySQLd
		(*GetVersionsRequest_Xtrabackup)(nil),                          // 81: agent.GetVersionsRequest.Xtrabackup
		(*GetVersionsRequest_Xbcloud)(nil),                             // 82: agent.GetVersionsRequest.Xbcloud
		(*GetVersionsRequest_Qpress)(nil),                              // 83: agent.GetVersionsRequest.Qpress
		(*GetVersionsRequest_Software)(nil),                            // 84: agent.GetVersionsRequest.Software
		(*GetVersionsResponse_Version)(nil),                            // 85: agent.GetVersionsResponse.Version
		(*timestamppb.Timestamp)(nil),                                  // 86: google.protobuf.Timestamp
		(*MetricsBucket)(nil),                                          // 87: agent.MetricsBucket
		(inventorypb.AgentStatus)(0),                                   // 88: inventory.AgentStatus
		(*durationpb.Duration)(nil),                                    // 89: google.protobuf.Duration
		(inventorypb.ServiceType)(0),                                   // 90: inventory.ServiceType
		(*status.Status)(nil),                                          // 91: google.rpc.Status
		(inventorypb.AgentType)(0),                                     // 92: inventory.AgentType
	}
)

var file_agentpb_agent_proto_depIdxs = []int32{
	40,  // 0: agent.TextFiles.files:type_name -> agent.TextFiles.FilesEntry
	86,  // 1: agent.Pong.current_time:type_name -> google.protobuf.Timestamp
	87,  // 2: agent.QANCollectRequest.metrics_bucket:type_name -> agent.MetricsBucket
	88,  // 3: agent.StateChangedRequest.status:type_name -> inventory.AgentStatus
	42,  // 4: agent.SetStateRequest.agent_processes:type_name -> agent.SetStateRequest.AgentProcessesEntry
	44,  // 5: agent.SetStateRequest.builtin_agents:type_name -> agent.SetStateRequest.BuiltinAgentsEntry
	86,  // 6: agent.QueryActionValue.timestamp:type_name -> google.protobuf.Timestamp
	11,  // 7: agent.QueryActionValue.slice:type_name -> agent.QueryActionSlice
	12,  // 8: agent.QueryActionValue.map:type_name -> agent.QueryActionMap
	13,  // 9: agent.QueryActionValue.binary:type_name -> agent.QueryActionBinary
	10,  // 10: agent.QueryActionSlice.slice:type_name -> agent.QueryActionValue
	46,  // 11: agent.QueryActionMap.map:type_name -> agent.QueryActionMap.MapEntry
	11,  // 12: agent.QueryActionResult.rows:type_name -> agent.QueryActionSlice
	12,  // 13: agent.QueryActionResult.docs:type_name -> agent.QueryActionMap
	47,  // 14: agent.StartActionRequest.mysql_explain_params:type_name -> agent.StartActionRequest.MySQLExplainParams
	48,  // 15: agent.StartActionRequest.mysql_show_create_table_params:type_name -> agent.StartActionRequest.MySQLShowCreateTableParams
	49,  // 16: agent.StartActionRequest.mysql_show_table_status_params:type_name -> agent.StartActionRequest.MySQLShowTableStatusParams
	50,  // 17: agent.StartActionRequest.mysql_show_index_params:type_name -> agent.StartActionRequest.MySQLShowIndexParams
	51,  // 18: agent.StartActionRequest.postgresql_show_create_table_params:type_name -> agent.StartActionRequest.PostgreSQLShowCreateTableParams
	52,  // 19: agent.StartActionRequest.postgresql_show_index_params:type_name -> agent.StartActionRequest.PostgreSQLShowIndexParams
	53,  // 20: agent.StartActionRequest.mongodb_explain_params:type_name -> agent.StartActionRequest.MongoDBExplainParams
	54,  // 21: agent.StartActionRequest.pt_summary_params:type_name -> agent.StartActionRequest.PTSummaryParams
	55,  // 22: agent.StartActionRequest.pt_pg_summary_params:type_name -> agent.StartActionRequest.PTPgSummaryParams
	56,  // 23: agent.StartActionRequest.pt_mongodb_summary_params:type_name -> agent.StartActionRequest.PTMongoDBSummaryParams
	57,  // 24: agent.StartActionRequest.pt_mysql_summary_params:type_name -> agent.StartActionRequest.PTMySQLSummaryParams
	58,  // 25: agent.StartActionRequest.mysql_query_show_params:type_name -> agent.StartActionRequest.MySQLQueryShowParams
	59,  // 26: agent.StartActionRequest.mysql_query_select_params:type_name -> agent.StartActionRequest.MySQLQuerySelectParams
	60,  // 27: agent.StartActionRequest.postgresql_query_show_params:type_name -> agent.StartActionRequest.PostgreSQLQueryShowParams
	61,  // 28: agent.StartActionRequest.postgresql_query_select_params:type_name -> agent.StartActionRequest.PostgreSQLQuerySelectParams
	62,  // 29: agent.StartActionRequest.mongodb_query_getparameter_params:type_name -> agent.StartActionRequest.MongoDBQueryGetParameterParams
	63,  // 30: agent.StartActionRequest.mongodb_query_buildinfo_params:type_name -> agent.StartActionRequest.MongoDBQueryBuildInfoParams
	64,  // 31: agent.StartActionRequest.mongodb_query_getcmdlineopts_params:type_name -> agent.StartActionRequest.MongoDBQueryGetCmdLineOptsParams
	65,  // 32: agent.StartActionRequest.mongodb_query_replsetgetstatus_params:type_name -> agent.StartActionRequest.MongoDBQueryReplSetGetStatusParams
	66,  // 33: agent.StartActionRequest.mongodb_query_getdiagnosticdata_params:type_name -> agent.StartActionRequest.MongoDBQueryGetDiagnosticDataParams
	89,  // 34: agent.StartActionRequest.timeout:type_name -> google.protobuf.Duration
	1,   // 35: agent.PBMSwitchPITRRequest.text_files:type_name -> agent.TextFiles
	90,  // 36: agent.ParseDefaultsFileRequest.service_type:type_name -> inventory.ServiceType
	90,  // 37: agent.CheckConnectionRequest.type:type_name -> inventory.ServiceType
	89,  // 38: agent.CheckConnectionRequest.timeout:type_name -> google.protobuf.Duration
	1,   // 39: agent.CheckConnectionRequest.text_files:type_name -> agent.TextFiles
	67,  // 40: agent.CheckConnectionResponse.stats:type_name -> agent.CheckConnectionResponse.Stats
	89,  // 41: agent.StartJobRequest.timeout:type_name -> google.protobuf.Duration
	68,  // 42: agent.StartJobRequest.mysql_backup:type_name -> agent.StartJobRequest.MySQLBackup
	69,  // 43: agent.StartJobRequest.mysql_restore_backup:type_name -> agent.StartJobRequest.MySQLRestoreBackup
	70,  // 44: agent.StartJobRequest.mongodb_backup:type_name -> agent.StartJobRequest.MongoDBBackup
	71,  // 45: agent.StartJobRequest.mongodb_restore_backup:type_name -> agent.StartJobRequest.MongoDBRestoreBackup
	86,  // 46: agent.JobResult.timestamp:type_name -> google.protobuf.Timestamp
	72,  // 47: agent.JobResult.error:type_name -> agent.JobResult.Error
	74,  // 48: agent.JobResult.mysql_backup:type_name -> agent.JobResult.MySQLBackup
	75,  // 49: agent.JobResult.mysql_restore_backup:type_name -> agent.JobResult.MySQLRestoreBackup
	73,  // 50: agent.JobResult.mongodb_backup:type_name -> agent.JobResult.MongoDBBackup
	76,  // 51: agent.JobResult.mongodb_restore_backup:type_name -> agent.JobResult.MongoDBRestoreBackup
	86,  // 52: agent.JobProgress.timestamp:type_name -> google.protobuf.Timestamp
	77,  // 53: agent.JobProgress.mysql_backup:type_name -> agent.JobProgress.MySQLBackup
	78,  // 54: agent.JobProgress.mysql_restore_backup:type_name -> agent.JobProgress.MySQLRestoreBackup
	79,  // 55: agent.JobProgress.logs:type_name -> agent.JobProgress.Logs
	84,  // 56: agent.GetVersionsRequest.softwares:type_name -> agent.GetVersionsRequest.Software
	85,  // 57: agent.GetVersionsResponse.versions:type_name -> agent.GetVersionsResponse.Version
	91,  // 58: agent.AgentMessage.status:type_name -> google.rpc.Status
	2,   // 59: agent.AgentMessage.ping:type_name -> agent.Ping
	6,   // 60: agent.AgentMessage.state_changed:type_name -> agent.StateChangedRequest
	4,   // 61: agent.AgentMessage.qan_collect:type_name -> agent.QANCollectRequest
	19,  // 62: agent.AgentMessage.action_result:type_name -> agent.ActionResultRequest
	3,   // 63: agent.AgentMessage.pong:type_name -> agent.Pong
	9,   // 64: agent.AgentMessage.set_state:type_name -> agent.SetStateResponse
	16,  // 65: agent.AgentMessage.start_action:type_name -> agent.StartActionResponse
	18,  // 66: agent.AgentMessage.stop_action:type_name -> agent.StopActionResponse
	26,  // 67: agent.AgentMessage.check_connection:type_name -> agent.CheckConnectionResponse
	31,  // 68: agent.AgentMessage.start_job:type_name -> agent.StartJobResponse
	33,  // 69: agent.AgentMessage.stop_job:type_name -> agent.StopJobResponse
	28,  // 70: agent.AgentMessage.job_status:type_name -> agent.JobStatusResponse
	34,  // 71: agent.AgentMessage.job_result:type_name -> agent.JobResult
	35,  // 72: agent.AgentMessage.job_progress:type_name -> agent.JobProgress
	37,  // 73: agent.AgentMessage.get_versions:type_name -> agent.GetVersionsResponse
	22,  // 74: agent.AgentMessage.pbm_switch_pitr:type_name -> agent.PBMSwitchPITRResponse
	24,  // 75: agent.AgentMessage.parse_defaults_file:type_name -> agent.ParseDefaultsFileResponse
	91,  // 76: agent.ServerMessage.status:type_name -> google.rpc.Status
	3,   // 77: agent.ServerMessage.pong:type_name -> agent.Pong
	7,   // 78: agent.ServerMessage.state_changed:type_name -> agent.StateChangedResponse
	5,   // 79: agent.ServerMessage.qan_collect:type_name -> agent.QANCollectResponse
	20,  // 80: agent.ServerMessage.action_result:type_name -> agent.ActionResultResponse
	2,   // 81: agent.ServerMessage.ping:type_name -> agent.Ping
	8,   // 82: agent.ServerMessage.set_state:type_name -> agent.SetStateRequest
	15,  // 83: agent.ServerMessage.start_action:type_name -> agent.StartActionRequest
	17,  // 84: agent.ServerMessage.stop_action:type_name -> agent.StopActionRequest
	25,  // 85: agent.ServerMessage.check_connection:type_name -> agent.CheckConnectionRequest
	30,  // 86: agent.ServerMessage.start_job:type_name -> agent.StartJobRequest
	32,  // 87: agent.ServerMessage.stop_job:type_name -> agent.StopJobRequest
	27,  // 88: agent.ServerMessage.job_status:type_name -> agent.JobStatusRequest
	36,  // 89: agent.ServerMessage.get_versions:type_name -> agent.GetVersionsRequest
	21,  // 90: agent.ServerMessage.pbm_switch_pitr:type_name -> agent.PBMSwitchPITRRequest
	23,  // 91: agent.ServerMessage.parse_defaults_file:type_name -> agent.ParseDefaultsFileRequest
	92,  // 92: agent.SetStateRequest.AgentProcess.type:type_name -> inventory.AgentType
	45,  // 93: agent.SetStateRequest.AgentProcess.text_files:type_name -> agent.SetStateRequest.AgentProcess.TextFilesEntry
	41,  // 94: agent.SetStateRequest.AgentProcessesEntry.value:type_name -> agent.SetStateRequest.AgentProcess
	92,  // 95: agent.SetStateRequest.BuiltinAgent.type:type_name -> inventory.AgentType
	1,   // 96: agent.SetStateRequest.BuiltinAgent.text_files:type_name -> agent.TextFiles
	43,  // 97: agent.SetStateRequest.BuiltinAgentsEntry.value:type_name -> agent.SetStateRequest.BuiltinAgent
	10,  // 98: agent.QueryActionMap.MapEntry.value:type_name -> agent.QueryActionValue
	0,   // 99: agent.StartActionRequest.MySQLExplainParams.output_format:type_name -> agent.MysqlExplainOutputFormat
	1,   // 100: agent.StartActionRequest.MySQLExplainParams.tls_files:type_name -> agent.TextFiles
	1,   // 101: agent.StartActionRequest.MySQLShowCreateTableParams.tls_files:type_name -> agent.TextFiles
	1,   // 102: agent.StartActionRequest.MySQLShowTableStatusParams.tls_files:type_name -> agent.TextFiles
	1,   // 103: agent.StartActionRequest.MySQLShowIndexParams.tls_files:type_name -> agent.TextFiles
	1,   // 104: agent.StartActionRequest.PostgreSQLShowCreateTableParams.tls_files:type_name -> agent.TextFiles
	1,   // 105: agent.StartActionRequest.PostgreSQLShowIndexParams.tls_files:type_name -> agent.TextFiles
	1,   // 106: agent.StartActionRequest.MongoDBExplainParams.text_files:type_name -> agent.TextFiles
	1,   // 107: agent.StartActionRequest.MySQLQueryShowParams.tls_files:type_name -> agent.TextFiles
	1,   // 108: agent.StartActionRequest.MySQLQuerySelectParams.tls_files:type_name -> agent.TextFiles
	1,   // 109: agent.StartActionRequest.PostgreSQLQueryShowParams.tls_files:type_name -> agent.TextFiles
	1,   // 110: agent.StartActionRequest.PostgreSQLQuerySelectParams.tls_files:type_name -> agent.TextFiles
	1,   // 111: agent.StartActionRequest.MongoDBQueryGetParameterParams.text_files:type_name -> agent.TextFiles
	1,   // 112: agent.StartActionRequest.MongoDBQueryBuildInfoParams.text_files:type_name -> agent.TextFiles
	1,   // 113: agent.StartActionRequest.MongoDBQueryGetCmdLineOptsParams.text_files:type_name -> agent.TextFiles
	1,   // 114: agent.StartActionRequest.MongoDBQueryReplSetGetStatusParams.text_files:type_name -> agent.TextFiles
	1,   // 115: agent.StartActionRequest.MongoDBQueryGetDiagnosticDataParams.text_files:type_name -> agent.TextFiles
	29,  // 116: agent.StartJobRequest.MySQLBackup.s3_config:type_name -> agent.S3LocationConfig
	29,  // 117: agent.StartJobRequest.MySQLRestoreBackup.s3_config:type_name -> agent.S3LocationConfig
	29,  // 118: agent.StartJobRequest.MongoDBBackup.s3_config:type_name -> agent.S3LocationConfig
	86,  // 119: agent.StartJobRequest.MongoDBRestoreBackup.pitr_timestamp:type_name -> google.protobuf.Timestamp
	29,  // 120: agent.StartJobRequest.MongoDBRestoreBackup.s3_config:type_name -> agent.S3LocationConfig
	80,  // 121: agent.GetVersionsRequest.Software.mysqld:type_name -> agent.GetVersionsRequest.MySQLd
	81,  // 122: agent.GetVersionsRequest.Software.xtrabackup:type_name -> agent.GetVersionsRequest.Xtrabackup
	82,  // 123: agent.GetVersionsRequest.Software.xbcloud:type_name -> agent.GetVersionsRequest.Xbcloud
	83,  // 124: agent.GetVersionsRequest.Software.qpress:type_name -> agent.GetVersionsRequest.Qpress
	38,  // 125: agent.Agent.Connect:input_type -> agent.AgentMessage
	39,  // 126: agent.Agent.Connect:output_type -> agent.ServerMessage
	126, // [126:127] is the sub-list for method output_type
	125, // [125:126] is the sub-list for method input_type
	125, // [125:125] is the sub-list for extension type_name
	125, // [125:125] is the sub-list for extension extendee
	0,   // [0:125] is the sub-list for field type_name
}

func init() { file_agentpb_agent_proto_init() }
func file_agentpb_agent_proto_init() {
	if File_agentpb_agent_proto != nil {
		return
	}
	file_agentpb_collector_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_agentpb_agent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextFiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QANCollectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QANCollectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateChangedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateChangedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActionValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActionSlice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActionMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActionBinary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryActionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopActionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBMSwitchPITRRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBMSwitchPITRResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseDefaultsFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParseDefaultsFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3LocationConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopJobRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopJobResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStateRequest_AgentProcess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetStateRequest_BuiltinAgent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MySQLExplainParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MySQLShowCreateTableParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MySQLShowTableStatusParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MySQLShowIndexParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_PostgreSQLShowCreateTableParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_PostgreSQLShowIndexParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MongoDBExplainParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_PTSummaryParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_PTPgSummaryParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_PTMongoDBSummaryParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_PTMySQLSummaryParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MySQLQueryShowParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MySQLQuerySelectParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_PostgreSQLQueryShowParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_PostgreSQLQuerySelectParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MongoDBQueryGetParameterParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MongoDBQueryBuildInfoParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MongoDBQueryGetCmdLineOptsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MongoDBQueryReplSetGetStatusParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartActionRequest_MongoDBQueryGetDiagnosticDataParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckConnectionResponse_Stats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartJobRequest_MySQLBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartJobRequest_MySQLRestoreBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartJobRequest_MongoDBBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartJobRequest_MongoDBRestoreBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResult_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResult_MongoDBBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResult_MySQLBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResult_MySQLRestoreBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResult_MongoDBRestoreBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobProgress_MySQLBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobProgress_MySQLRestoreBackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobProgress_Logs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionsRequest_MySQLd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionsRequest_Xtrabackup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionsRequest_Xbcloud); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionsRequest_Qpress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionsRequest_Software); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_agentpb_agent_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionsResponse_Version); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_agentpb_agent_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*QueryActionValue_Nil)(nil),
		(*QueryActionValue_Bool)(nil),
		(*QueryActionValue_Int64)(nil),
		(*QueryActionValue_Uint64)(nil),
		(*QueryActionValue_Double)(nil),
		(*QueryActionValue_Bytes)(nil),
		(*QueryActionValue_Timestamp)(nil),
		(*QueryActionValue_Slice)(nil),
		(*QueryActionValue_Map)(nil),
		(*QueryActionValue_Binary)(nil),
	}
	file_agentpb_agent_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*StartActionRequest_MysqlExplainParams)(nil),
		(*StartActionRequest_MysqlShowCreateTableParams)(nil),
		(*StartActionRequest_MysqlShowTableStatusParams)(nil),
		(*StartActionRequest_MysqlShowIndexParams)(nil),
		(*StartActionRequest_PostgresqlShowCreateTableParams)(nil),
		(*StartActionRequest_PostgresqlShowIndexParams)(nil),
		(*StartActionRequest_MongodbExplainParams)(nil),
		(*StartActionRequest_PtSummaryParams)(nil),
		(*StartActionRequest_PtPgSummaryParams)(nil),
		(*StartActionRequest_PtMongodbSummaryParams)(nil),
		(*StartActionRequest_PtMysqlSummaryParams)(nil),
		(*StartActionRequest_MysqlQueryShowParams)(nil),
		(*StartActionRequest_MysqlQuerySelectParams)(nil),
		(*StartActionRequest_PostgresqlQueryShowParams)(nil),
		(*StartActionRequest_PostgresqlQuerySelectParams)(nil),
		(*StartActionRequest_MongodbQueryGetparameterParams)(nil),
		(*StartActionRequest_MongodbQueryBuildinfoParams)(nil),
		(*StartActionRequest_MongodbQueryGetcmdlineoptsParams)(nil),
		(*StartActionRequest_MongodbQueryReplsetgetstatusParams)(nil),
		(*StartActionRequest_MongodbQueryGetdiagnosticdataParams)(nil),
	}
	file_agentpb_agent_proto_msgTypes[29].OneofWrappers = []interface{}{
		(*StartJobRequest_MysqlBackup)(nil),
		(*StartJobRequest_MysqlRestoreBackup)(nil),
		(*StartJobRequest_MongodbBackup)(nil),
		(*StartJobRequest_MongodbRestoreBackup)(nil),
	}
	file_agentpb_agent_proto_msgTypes[33].OneofWrappers = []interface{}{
		(*JobResult_Error_)(nil),
		(*JobResult_MysqlBackup)(nil),
		(*JobResult_MysqlRestoreBackup)(nil),
		(*JobResult_MongodbBackup)(nil),
		(*JobResult_MongodbRestoreBackup)(nil),
	}
	file_agentpb_agent_proto_msgTypes[34].OneofWrappers = []interface{}{
		(*JobProgress_MysqlBackup)(nil),
		(*JobProgress_MysqlRestoreBackup)(nil),
		(*JobProgress_Logs_)(nil),
	}
	file_agentpb_agent_proto_msgTypes[37].OneofWrappers = []interface{}{
		(*AgentMessage_Ping)(nil),
		(*AgentMessage_StateChanged)(nil),
		(*AgentMessage_QanCollect)(nil),
		(*AgentMessage_ActionResult)(nil),
		(*AgentMessage_Pong)(nil),
		(*AgentMessage_SetState)(nil),
		(*AgentMessage_StartAction)(nil),
		(*AgentMessage_StopAction)(nil),
		(*AgentMessage_CheckConnection)(nil),
		(*AgentMessage_StartJob)(nil),
		(*AgentMessage_StopJob)(nil),
		(*AgentMessage_JobStatus)(nil),
		(*AgentMessage_JobResult)(nil),
		(*AgentMessage_JobProgress)(nil),
		(*AgentMessage_GetVersions)(nil),
		(*AgentMessage_PbmSwitchPitr)(nil),
		(*AgentMessage_ParseDefaultsFile)(nil),
	}
	file_agentpb_agent_proto_msgTypes[38].OneofWrappers = []interface{}{
		(*ServerMessage_Pong)(nil),
		(*ServerMessage_StateChanged)(nil),
		(*ServerMessage_QanCollect)(nil),
		(*ServerMessage_ActionResult)(nil),
		(*ServerMessage_Ping)(nil),
		(*ServerMessage_SetState)(nil),
		(*ServerMessage_StartAction)(nil),
		(*ServerMessage_StopAction)(nil),
		(*ServerMessage_CheckConnection)(nil),
		(*ServerMessage_StartJob)(nil),
		(*ServerMessage_StopJob)(nil),
		(*ServerMessage_JobStatus)(nil),
		(*ServerMessage_GetVersions)(nil),
		(*ServerMessage_PbmSwitchPitr)(nil),
		(*ServerMessage_ParseDefaultsFile)(nil),
	}
	file_agentpb_agent_proto_msgTypes[67].OneofWrappers = []interface{}{
		(*StartJobRequest_MySQLBackup_S3Config)(nil),
	}
	file_agentpb_agent_proto_msgTypes[68].OneofWrappers = []interface{}{
		(*StartJobRequest_MySQLRestoreBackup_S3Config)(nil),
	}
	file_agentpb_agent_proto_msgTypes[69].OneofWrappers = []interface{}{
		(*StartJobRequest_MongoDBBackup_S3Config)(nil),
	}
	file_agentpb_agent_proto_msgTypes[70].OneofWrappers = []interface{}{
		(*StartJobRequest_MongoDBRestoreBackup_S3Config)(nil),
	}
	file_agentpb_agent_proto_msgTypes[83].OneofWrappers = []interface{}{
		(*GetVersionsRequest_Software_Mysqld)(nil),
		(*GetVersionsRequest_Software_Xtrabackup)(nil),
		(*GetVersionsRequest_Software_Xbcloud)(nil),
		(*GetVersionsRequest_Software_Qpress)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_agentpb_agent_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   85,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_agentpb_agent_proto_goTypes,
		DependencyIndexes: file_agentpb_agent_proto_depIdxs,
		EnumInfos:         file_agentpb_agent_proto_enumTypes,
		MessageInfos:      file_agentpb_agent_proto_msgTypes,
	}.Build()
	File_agentpb_agent_proto = out.File
	file_agentpb_agent_proto_rawDesc = nil
	file_agentpb_agent_proto_goTypes = nil
	file_agentpb_agent_proto_depIdxs = nil
}
