daemon off;

error_log stderr info;
# error_log stderr debug;

events {
  # debug_connection 127.0.0.1;
}

http {
  upstream managed-grpc {
    server 127.0.0.1:7771;
    keepalive 32;
  }
  upstream managed-json {
    server 127.0.0.1:7772;
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 75s;
  }

  upstream qan-api-grpc {
    server 127.0.0.1:9911;
    keepalive 32;
  }
  upstream qan-api-json {
    server 127.0.0.1:9922;
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 75s;
  }

  server {
    listen 127.0.0.1:8080 default_server;  # no HTTP/2 due to https://trac.nginx.org/nginx/ticket/816
    listen 127.0.0.1:8443 default_server ssl http2;
    ssl_certificate cert.pem;
    ssl_certificate_key key.pem;

    access_log /dev/stdout;
    log_not_found on;
    log_subrequest on;

    # Enable auth_request for all locations, including root
    # (but excluding /auth_request and /setup below).
    auth_request /auth_request;

    # Store the value of X-Must-Setup header of auth_request subrequest response in the variable.
    # It is used below in /auth_request.
    auth_request_set $auth_request_must_setup $upstream_http_x_must_setup;

    # nginx completely ignores auth_request subrequest response body.
    # We use that directive to send the same request to the same location as a normal request
    # to get a response body or redirect and return it to the client.
    # auth_request supports only 401 and 403 statuses; 401 is reserved for this configration,
    # and 403 is used for normal pmm-managed API errors.
    error_page 401 = /auth_request;

    # Internal location for authentication via pmm-managed/Grafana.
    # First, nginx sends request there to authenticate it. If it is not authenticated by pmm-managed/Grafana,
    # it is sent to this location for the second time (as a normal request) by error_page directive above.
    location /auth_request {
      internal;

      auth_request off;

      proxy_pass http://managed-json/auth_request;

      # nginx always strips body from authentication subrequests.
      # Overwrite Content-Length to avoid problems on Go side and to keep connection alive.
      proxy_pass_request_body off;
      proxy_set_header Content-Length 0;

      proxy_http_version 1.1;
      proxy_set_header Connection "";

      # This header is set only for to the second request, not for the first subrequest.
      # That variable is set above.
      proxy_set_header X-Must-Setup $auth_request_must_setup;

      # Those headers are set for both subrequest and normal request.
      proxy_set_header X-Original-Uri $request_uri;
      proxy_set_header X-Original-Method $request_method;
    }

    # AWS setup wizard
    location /setup {
      auth_request off;

      # return just enough for local API tests to pass
      return 200 '<!doctype html>';
    }

    # serve Swagger UI
    root ./swagger;
    autoindex on;
    types {
      text/html              html;
      text/css                css;
      application/javascript   js;
      application/json       json;
    }

    # pmm-managed gRPC APIs
    location /agent. {
      grpc_pass grpc://managed-grpc;
      # Disable request body size check for gRPC streaming, see https://trac.nginx.org/nginx/ticket/1642.
      # pmm-managed uses grpc.MaxRecvMsgSize for that.
      client_max_body_size 0;
    }
    location /inventory. {
      grpc_pass grpc://managed-grpc;
    }
    location /management. {
      grpc_pass grpc://managed-grpc;
    }
    location /server. {
      grpc_pass grpc://managed-grpc;
    }

    # pmm-managed JSON APIs
    location /v1/ {
      proxy_pass http://managed-json/v1/;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }

    # qan-api gRPC APIs should not be exposed

    # qan-api JSON APIs
    location /v0/qan/ {
      proxy_pass http://qan-api-json/v0/qan/;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }

    # for minimal compatibility with PMM 1.x
    rewrite ^/ping$ /v1/readyz;
    rewrite ^/managed/v1/version$ /v1/version;

    # logs.zip in both PMM 1.x and 2.x variants.
    rewrite ^/managed/logs.zip$ /logs.zip;
    location /logs.zip {
      proxy_pass http://managed-json;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }
  }
}
