syntax = "proto3";

package accesscontrol.v1beta1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

message CreateRoleRequest {
  string title = 1 [(validate.rules).string.min_len = 1];
  string filter = 2;
  string description = 3;
}

message CreateRoleResponse {
  uint32 role_id = 1;
}

message UpdateRoleRequest {
  uint32 role_id = 1 [(validate.rules).uint32.gt = 0];
  optional string title = 2 [(validate.rules).string.min_len = 1];
  optional string filter = 3;
  optional string description = 4;
}
message UpdateRoleResponse {}

message DeleteRoleRequest {
  uint32 role_id = 1 [(validate.rules).uint32.gt = 0];
  // Role ID to be used as a replacement for the role. Additional logic applies.
  uint32 replacement_role_id = 2;
}

message DeleteRoleResponse {}

message GetRoleRequest {
  uint32 role_id = 1 [(validate.rules).uint32.gt = 0];
}

message GetRoleResponse {
  uint32 role_id = 1;
  string title = 2;
  string filter = 3;
  string description = 4;
}

message SetDefaultRoleRequest {
  uint32 role_id = 1 [(validate.rules).uint32.gt = 0];
}

message SetDefaultRoleResponse {}

message AssignRolesRequest {
  repeated uint32 role_ids = 1;
  uint32 user_id = 2 [(validate.rules).uint32.gt = 0];
}

message AssignRolesResponse {}

message ListRolesRequest {}

message ListRolesResponse {
  message RoleData {
    uint32 role_id = 1;
    string title = 2;
    string filter = 3;
    string description = 4;
  }

  repeated RoleData roles = 1;
}

// Service Role provides public methods for managing Roles.
service AccessControlService {
  // CreateRole creates a new role.
  rpc CreateRole(CreateRoleRequest) returns (CreateRoleResponse) {
    option (google.api.http) = {
      post: "/v1/accesscontrol/roles"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Create a Role"
      description: "Creates a new role."
    };
  }

  // UpdateRole creates a new role.
  rpc UpdateRole(UpdateRoleRequest) returns (UpdateRoleResponse) {
    option (google.api.http) = {
      put: "/v1/accesscontrol/roles/{role_id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Update a Role"
      description: "Updates an existing role."
    };
  }

  // DeleteRole creates a new role.
  rpc DeleteRole(DeleteRoleRequest) returns (DeleteRoleResponse) {
    option (google.api.http) = {delete: "/v1/accesscontrol/roles/{role_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Delete a Role"
      description: "Deletes a role."
    };
  }

  // GetRole retrieves a single role.
  rpc GetRole(GetRoleRequest) returns (GetRoleResponse) {
    option (google.api.http) = {get: "/v1/accesscontrol/roles/{role_id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Get a Role"
      description: "Retrieves a role by ID."
    };
  }

  // ListRoles retrieves a roles.
  rpc ListRoles(ListRolesRequest) returns (ListRolesResponse) {
    option (google.api.http) = {get: "/v1/accesscontrol/roles"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "List Roles"
      description: "Lists all roles."
    };
  }

  // AssignRoles replaces all assigned roles for a user.
  rpc AssignRoles(AssignRolesRequest) returns (AssignRolesResponse) {
    option (google.api.http) = {
      post: "/v1/accesscontrol/roles:assign"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Assign Roles to a User"
      description: "Replaces all existing roles for a user."
    };
  }

  // SetDefaultRole configures default role assigned to users.
  rpc SetDefaultRole(SetDefaultRoleRequest) returns (SetDefaultRoleResponse) {
    option (google.api.http) = {
      post: "/v1/accesscontrol/roles:setDefault"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Set a Default Role"
      description: "Configures a default role assigned to users."
    };
  }
}
