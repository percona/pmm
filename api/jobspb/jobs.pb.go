// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: jobspb/jobs.proto

package jobspb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// StartJob asks pmm-agent to start job.
type StartJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timeout for the job.
	Timeout *duration.Duration `protobuf:"bytes,1,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Types that are assignable to Job:
	//	*StartJob_Echo_
	Job isStartJob_Job `protobuf_oneof:"job"`
}

func (x *StartJob) Reset() {
	*x = StartJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobspb_jobs_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartJob) ProtoMessage() {}

func (x *StartJob) ProtoReflect() protoreflect.Message {
	mi := &file_jobspb_jobs_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartJob.ProtoReflect.Descriptor instead.
func (*StartJob) Descriptor() ([]byte, []int) {
	return file_jobspb_jobs_proto_rawDescGZIP(), []int{0}
}

func (x *StartJob) GetTimeout() *duration.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (m *StartJob) GetJob() isStartJob_Job {
	if m != nil {
		return m.Job
	}
	return nil
}

func (x *StartJob) GetEcho() *StartJob_Echo {
	if x, ok := x.GetJob().(*StartJob_Echo_); ok {
		return x.Echo
	}
	return nil
}

type isStartJob_Job interface {
	isStartJob_Job()
}

type StartJob_Echo_ struct {
	Echo *StartJob_Echo `protobuf:"bytes,10,opt,name=echo,proto3,oneof"`
}

func (*StartJob_Echo_) isStartJob_Job() {}

// StopJob asks pmm-agent to stop job.
type StopJob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StopJob) Reset() {
	*x = StopJob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobspb_jobs_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopJob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopJob) ProtoMessage() {}

func (x *StopJob) ProtoReflect() protoreflect.Message {
	mi := &file_jobspb_jobs_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopJob.ProtoReflect.Descriptor instead.
func (*StopJob) Descriptor() ([]byte, []int) {
	return file_jobspb_jobs_proto_rawDescGZIP(), []int{1}
}

// JobResult represents job result.
type JobResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to Result:
	//	*JobResult_Error_
	//	*JobResult_Echo_
	Result isJobResult_Result `protobuf_oneof:"result"`
}

func (x *JobResult) Reset() {
	*x = JobResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobspb_jobs_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResult) ProtoMessage() {}

func (x *JobResult) ProtoReflect() protoreflect.Message {
	mi := &file_jobspb_jobs_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResult.ProtoReflect.Descriptor instead.
func (*JobResult) Descriptor() ([]byte, []int) {
	return file_jobspb_jobs_proto_rawDescGZIP(), []int{2}
}

func (x *JobResult) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (m *JobResult) GetResult() isJobResult_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *JobResult) GetError() *JobResult_Error {
	if x, ok := x.GetResult().(*JobResult_Error_); ok {
		return x.Error
	}
	return nil
}

func (x *JobResult) GetEcho() *JobResult_Echo {
	if x, ok := x.GetResult().(*JobResult_Echo_); ok {
		return x.Echo
	}
	return nil
}

type isJobResult_Result interface {
	isJobResult_Result()
}

type JobResult_Error_ struct {
	Error *JobResult_Error `protobuf:"bytes,10,opt,name=error,proto3,oneof"`
}

type JobResult_Echo_ struct {
	Echo *JobResult_Echo `protobuf:"bytes,11,opt,name=echo,proto3,oneof"`
}

func (*JobResult_Error_) isJobResult_Result() {}

func (*JobResult_Echo_) isJobResult_Result() {}

// JobProgress represents job progress messages like percentage of completion, status updates, etc.
type JobProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are assignable to Result:
	//	*JobProgress_Echo_
	Result isJobProgress_Result `protobuf_oneof:"result"`
}

func (x *JobProgress) Reset() {
	*x = JobProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobspb_jobs_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobProgress) ProtoMessage() {}

func (x *JobProgress) ProtoReflect() protoreflect.Message {
	mi := &file_jobspb_jobs_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobProgress.ProtoReflect.Descriptor instead.
func (*JobProgress) Descriptor() ([]byte, []int) {
	return file_jobspb_jobs_proto_rawDescGZIP(), []int{3}
}

func (x *JobProgress) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (m *JobProgress) GetResult() isJobProgress_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *JobProgress) GetEcho() *JobProgress_Echo {
	if x, ok := x.GetResult().(*JobProgress_Echo_); ok {
		return x.Echo
	}
	return nil
}

type isJobProgress_Result interface {
	isJobProgress_Result()
}

type JobProgress_Echo_ struct {
	Echo *JobProgress_Echo `protobuf:"bytes,10,opt,name=echo,proto3,oneof"`
}

func (*JobProgress_Echo_) isJobProgress_Result() {}

// AgentMessage is a container for the agent messages.
type AgentMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId  string         `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Status *status.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// Types that are assignable to Payload:
	//	*AgentMessage_JobResult
	//	*AgentMessage_JobProgress
	Payload isAgentMessage_Payload `protobuf_oneof:"payload"`
}

func (x *AgentMessage) Reset() {
	*x = AgentMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobspb_jobs_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMessage) ProtoMessage() {}

func (x *AgentMessage) ProtoReflect() protoreflect.Message {
	mi := &file_jobspb_jobs_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMessage.ProtoReflect.Descriptor instead.
func (*AgentMessage) Descriptor() ([]byte, []int) {
	return file_jobspb_jobs_proto_rawDescGZIP(), []int{4}
}

func (x *AgentMessage) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *AgentMessage) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (m *AgentMessage) GetPayload() isAgentMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *AgentMessage) GetJobResult() *JobResult {
	if x, ok := x.GetPayload().(*AgentMessage_JobResult); ok {
		return x.JobResult
	}
	return nil
}

func (x *AgentMessage) GetJobProgress() *JobProgress {
	if x, ok := x.GetPayload().(*AgentMessage_JobProgress); ok {
		return x.JobProgress
	}
	return nil
}

type isAgentMessage_Payload interface {
	isAgentMessage_Payload()
}

type AgentMessage_JobResult struct {
	JobResult *JobResult `protobuf:"bytes,10,opt,name=job_result,json=jobResult,proto3,oneof"`
}

type AgentMessage_JobProgress struct {
	JobProgress *JobProgress `protobuf:"bytes,11,opt,name=job_progress,json=jobProgress,proto3,oneof"`
}

func (*AgentMessage_JobResult) isAgentMessage_Payload() {}

func (*AgentMessage_JobProgress) isAgentMessage_Payload() {}

// ServerMessage is a container for the server messages.
type ServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobId  string         `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Status *status.Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// Types that are assignable to Payload:
	//	*ServerMessage_StartJob
	//	*ServerMessage_StopJob
	Payload isServerMessage_Payload `protobuf_oneof:"payload"`
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobspb_jobs_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_jobspb_jobs_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_jobspb_jobs_proto_rawDescGZIP(), []int{5}
}

func (x *ServerMessage) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ServerMessage) GetStatus() *status.Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (m *ServerMessage) GetPayload() isServerMessage_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *ServerMessage) GetStartJob() *StartJob {
	if x, ok := x.GetPayload().(*ServerMessage_StartJob); ok {
		return x.StartJob
	}
	return nil
}

func (x *ServerMessage) GetStopJob() *StopJob {
	if x, ok := x.GetPayload().(*ServerMessage_StopJob); ok {
		return x.StopJob
	}
	return nil
}

type isServerMessage_Payload interface {
	isServerMessage_Payload()
}

type ServerMessage_StartJob struct {
	StartJob *StartJob `protobuf:"bytes,11,opt,name=start_job,json=startJob,proto3,oneof"`
}

type ServerMessage_StopJob struct {
	StopJob *StopJob `protobuf:"bytes,12,opt,name=stop_job,json=stopJob,proto3,oneof"`
}

func (*ServerMessage_StartJob) isServerMessage_Payload() {}

func (*ServerMessage_StopJob) isServerMessage_Payload() {}

// Echo is a simple echo job that can be delayed.
type StartJob_Echo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string             `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Delay   *duration.Duration `protobuf:"bytes,2,opt,name=delay,proto3" json:"delay,omitempty"`
}

func (x *StartJob_Echo) Reset() {
	*x = StartJob_Echo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobspb_jobs_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartJob_Echo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartJob_Echo) ProtoMessage() {}

func (x *StartJob_Echo) ProtoReflect() protoreflect.Message {
	mi := &file_jobspb_jobs_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartJob_Echo.ProtoReflect.Descriptor instead.
func (*StartJob_Echo) Descriptor() ([]byte, []int) {
	return file_jobspb_jobs_proto_rawDescGZIP(), []int{0, 0}
}

func (x *StartJob_Echo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StartJob_Echo) GetDelay() *duration.Duration {
	if x != nil {
		return x.Delay
	}
	return nil
}

// Error contains job error message.
type JobResult_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *JobResult_Error) Reset() {
	*x = JobResult_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobspb_jobs_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResult_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResult_Error) ProtoMessage() {}

func (x *JobResult_Error) ProtoReflect() protoreflect.Message {
	mi := &file_jobspb_jobs_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResult_Error.ProtoReflect.Descriptor instead.
func (*JobResult_Error) Descriptor() ([]byte, []int) {
	return file_jobspb_jobs_proto_rawDescGZIP(), []int{2, 0}
}

func (x *JobResult_Error) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Echo contains result for echo job.
type JobResult_Echo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *JobResult_Echo) Reset() {
	*x = JobResult_Echo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobspb_jobs_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobResult_Echo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobResult_Echo) ProtoMessage() {}

func (x *JobResult_Echo) ProtoReflect() protoreflect.Message {
	mi := &file_jobspb_jobs_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobResult_Echo.ProtoReflect.Descriptor instead.
func (*JobResult_Echo) Descriptor() ([]byte, []int) {
	return file_jobspb_jobs_proto_rawDescGZIP(), []int{2, 1}
}

func (x *JobResult_Echo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Echo contains echo job status update.
type JobProgress_Echo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *JobProgress_Echo) Reset() {
	*x = JobProgress_Echo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jobspb_jobs_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobProgress_Echo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobProgress_Echo) ProtoMessage() {}

func (x *JobProgress_Echo) ProtoReflect() protoreflect.Message {
	mi := &file_jobspb_jobs_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobProgress_Echo.ProtoReflect.Descriptor instead.
func (*JobProgress_Echo) Descriptor() ([]byte, []int) {
	return file_jobspb_jobs_proto_rawDescGZIP(), []int{3, 0}
}

func (x *JobProgress_Echo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_jobspb_jobs_proto protoreflect.FileDescriptor

var file_jobspb_jobs_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6a, 0x6f, 0x62, 0x73, 0x70, 0x62, 0x2f, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x01, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62,
	0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x29, 0x0a, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x4a, 0x6f, 0x62, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x65, 0x63, 0x68, 0x6f,
	0x1a, 0x51, 0x0a, 0x04, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x42, 0x05, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x22, 0x09, 0x0a, 0x07, 0x53, 0x74,
	0x6f, 0x70, 0x4a, 0x6f, 0x62, 0x22, 0xef, 0x01, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2d, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6a,
	0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x04,
	0x65, 0x63, 0x68, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6a, 0x6f, 0x62,
	0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x45, 0x63, 0x68, 0x6f,
	0x48, 0x00, 0x52, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x1a, 0x21, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x20, 0x0a, 0x04, 0x45,
	0x63, 0x68, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x4a, 0x6f, 0x62, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x2c, 0x0a, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x2e, 0x45, 0x63, 0x68, 0x6f, 0x48, 0x00, 0x52, 0x04, 0x65, 0x63, 0x68, 0x6f, 0x1a,
	0x1e, 0x0a, 0x04, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc6, 0x01, 0x0a, 0x0c, 0x41, 0x67,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x30, 0x0a,
	0x0a, 0x6a, 0x6f, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x48, 0x00, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x36, 0x0a, 0x0c, 0x6a, 0x6f, 0x62, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x4a, 0x6f, 0x62,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x22, 0xb8, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x6a, 0x6f, 0x62, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6a, 0x6f, 0x62,
	0x73, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x08, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x4a, 0x6f, 0x62, 0x12, 0x2a, 0x0a, 0x08, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x6a,
	0x6f, 0x62, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e,
	0x53, 0x74, 0x6f, 0x70, 0x4a, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x4a,
	0x6f, 0x62, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x32, 0x3e, 0x0a,
	0x04, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x12, 0x12, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x13, 0x2e, 0x6a, 0x6f, 0x62, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42, 0x13, 0x5a,
	0x11, 0x61, 0x70, 0x69, 0x2f, 0x6a, 0x6f, 0x62, 0x73, 0x70, 0x62, 0x3b, 0x6a, 0x6f, 0x62, 0x73,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_jobspb_jobs_proto_rawDescOnce sync.Once
	file_jobspb_jobs_proto_rawDescData = file_jobspb_jobs_proto_rawDesc
)

func file_jobspb_jobs_proto_rawDescGZIP() []byte {
	file_jobspb_jobs_proto_rawDescOnce.Do(func() {
		file_jobspb_jobs_proto_rawDescData = protoimpl.X.CompressGZIP(file_jobspb_jobs_proto_rawDescData)
	})
	return file_jobspb_jobs_proto_rawDescData
}

var file_jobspb_jobs_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_jobspb_jobs_proto_goTypes = []interface{}{
	(*StartJob)(nil),            // 0: jobs.StartJob
	(*StopJob)(nil),             // 1: jobs.StopJob
	(*JobResult)(nil),           // 2: jobs.JobResult
	(*JobProgress)(nil),         // 3: jobs.JobProgress
	(*AgentMessage)(nil),        // 4: jobs.AgentMessage
	(*ServerMessage)(nil),       // 5: jobs.ServerMessage
	(*StartJob_Echo)(nil),       // 6: jobs.StartJob.Echo
	(*JobResult_Error)(nil),     // 7: jobs.JobResult.Error
	(*JobResult_Echo)(nil),      // 8: jobs.JobResult.Echo
	(*JobProgress_Echo)(nil),    // 9: jobs.JobProgress.Echo
	(*duration.Duration)(nil),   // 10: google.protobuf.Duration
	(*timestamp.Timestamp)(nil), // 11: google.protobuf.Timestamp
	(*status.Status)(nil),       // 12: google.rpc.Status
}
var file_jobspb_jobs_proto_depIdxs = []int32{
	10, // 0: jobs.StartJob.timeout:type_name -> google.protobuf.Duration
	6,  // 1: jobs.StartJob.echo:type_name -> jobs.StartJob.Echo
	11, // 2: jobs.JobResult.timestamp:type_name -> google.protobuf.Timestamp
	7,  // 3: jobs.JobResult.error:type_name -> jobs.JobResult.Error
	8,  // 4: jobs.JobResult.echo:type_name -> jobs.JobResult.Echo
	11, // 5: jobs.JobProgress.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 6: jobs.JobProgress.echo:type_name -> jobs.JobProgress.Echo
	12, // 7: jobs.AgentMessage.status:type_name -> google.rpc.Status
	2,  // 8: jobs.AgentMessage.job_result:type_name -> jobs.JobResult
	3,  // 9: jobs.AgentMessage.job_progress:type_name -> jobs.JobProgress
	12, // 10: jobs.ServerMessage.status:type_name -> google.rpc.Status
	0,  // 11: jobs.ServerMessage.start_job:type_name -> jobs.StartJob
	1,  // 12: jobs.ServerMessage.stop_job:type_name -> jobs.StopJob
	10, // 13: jobs.StartJob.Echo.delay:type_name -> google.protobuf.Duration
	4,  // 14: jobs.Jobs.Connect:input_type -> jobs.AgentMessage
	5,  // 15: jobs.Jobs.Connect:output_type -> jobs.ServerMessage
	15, // [15:16] is the sub-list for method output_type
	14, // [14:15] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_jobspb_jobs_proto_init() }
func file_jobspb_jobs_proto_init() {
	if File_jobspb_jobs_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jobspb_jobs_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobspb_jobs_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopJob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobspb_jobs_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobspb_jobs_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobspb_jobs_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobspb_jobs_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobspb_jobs_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartJob_Echo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobspb_jobs_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResult_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobspb_jobs_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobResult_Echo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jobspb_jobs_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobProgress_Echo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_jobspb_jobs_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*StartJob_Echo_)(nil),
	}
	file_jobspb_jobs_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*JobResult_Error_)(nil),
		(*JobResult_Echo_)(nil),
	}
	file_jobspb_jobs_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*JobProgress_Echo_)(nil),
	}
	file_jobspb_jobs_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*AgentMessage_JobResult)(nil),
		(*AgentMessage_JobProgress)(nil),
	}
	file_jobspb_jobs_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ServerMessage_StartJob)(nil),
		(*ServerMessage_StopJob)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jobspb_jobs_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jobspb_jobs_proto_goTypes,
		DependencyIndexes: file_jobspb_jobs_proto_depIdxs,
		MessageInfos:      file_jobspb_jobs_proto_msgTypes,
	}.Build()
	File_jobspb_jobs_proto = out.File
	file_jobspb_jobs_proto_rawDesc = nil
	file_jobspb_jobs_proto_goTypes = nil
	file_jobspb_jobs_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// JobsClient is the client API for Jobs service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobsClient interface {
	// Connect establishes two-way communication channel between pmm-agent and pmm-managed.
	Connect(ctx context.Context, opts ...grpc.CallOption) (Jobs_ConnectClient, error)
}

type jobsClient struct {
	cc grpc.ClientConnInterface
}

func NewJobsClient(cc grpc.ClientConnInterface) JobsClient {
	return &jobsClient{cc}
}

func (c *jobsClient) Connect(ctx context.Context, opts ...grpc.CallOption) (Jobs_ConnectClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Jobs_serviceDesc.Streams[0], "/jobs.Jobs/Connect", opts...)
	if err != nil {
		return nil, err
	}
	x := &jobsConnectClient{stream}
	return x, nil
}

type Jobs_ConnectClient interface {
	Send(*AgentMessage) error
	Recv() (*ServerMessage, error)
	grpc.ClientStream
}

type jobsConnectClient struct {
	grpc.ClientStream
}

func (x *jobsConnectClient) Send(m *AgentMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *jobsConnectClient) Recv() (*ServerMessage, error) {
	m := new(ServerMessage)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// JobsServer is the server API for Jobs service.
type JobsServer interface {
	// Connect establishes two-way communication channel between pmm-agent and pmm-managed.
	Connect(Jobs_ConnectServer) error
}

// UnimplementedJobsServer can be embedded to have forward compatible implementations.
type UnimplementedJobsServer struct {
}

func (*UnimplementedJobsServer) Connect(Jobs_ConnectServer) error {
	return status1.Errorf(codes.Unimplemented, "method Connect not implemented")
}

func RegisterJobsServer(s *grpc.Server, srv JobsServer) {
	s.RegisterService(&_Jobs_serviceDesc, srv)
}

func _Jobs_Connect_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(JobsServer).Connect(&jobsConnectServer{stream})
}

type Jobs_ConnectServer interface {
	Send(*ServerMessage) error
	Recv() (*AgentMessage, error)
	grpc.ServerStream
}

type jobsConnectServer struct {
	grpc.ServerStream
}

func (x *jobsConnectServer) Send(m *ServerMessage) error {
	return x.ServerStream.SendMsg(m)
}

func (x *jobsConnectServer) Recv() (*AgentMessage, error) {
	m := new(AgentMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Jobs_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jobs.Jobs",
	HandlerType: (*JobsServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Connect",
			Handler:       _Jobs_Connect_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "jobspb/jobs.proto",
}
