// Code generated by protoc-gen-go. DO NOT EDIT.
// source: qanpb/filters.proto

package qanpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// FiltersRequest contains period for which we need filters.
type FiltersRequest struct {
	From                 *timestamp.Timestamp `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FiltersRequest) Reset()         { *m = FiltersRequest{} }
func (m *FiltersRequest) String() string { return proto.CompactTextString(m) }
func (*FiltersRequest) ProtoMessage()    {}
func (*FiltersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_filters_435d8d3de4d06f69, []int{0}
}
func (m *FiltersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FiltersRequest.Unmarshal(m, b)
}
func (m *FiltersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FiltersRequest.Marshal(b, m, deterministic)
}
func (dst *FiltersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FiltersRequest.Merge(dst, src)
}
func (m *FiltersRequest) XXX_Size() int {
	return xxx_messageInfo_FiltersRequest.Size(m)
}
func (m *FiltersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FiltersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FiltersRequest proto.InternalMessageInfo

func (m *FiltersRequest) GetFrom() *timestamp.Timestamp {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *FiltersRequest) GetTo() *timestamp.Timestamp {
	if m != nil {
		return m.To
	}
	return nil
}

// FiltersReply is map of labels and values for given period.
type FiltersReply struct {
	Labels               []*LabelsValues `protobuf:"bytes,1,rep,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FiltersReply) Reset()         { *m = FiltersReply{} }
func (m *FiltersReply) String() string { return proto.CompactTextString(m) }
func (*FiltersReply) ProtoMessage()    {}
func (*FiltersReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_filters_435d8d3de4d06f69, []int{1}
}
func (m *FiltersReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FiltersReply.Unmarshal(m, b)
}
func (m *FiltersReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FiltersReply.Marshal(b, m, deterministic)
}
func (dst *FiltersReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FiltersReply.Merge(dst, src)
}
func (m *FiltersReply) XXX_Size() int {
	return xxx_messageInfo_FiltersReply.Size(m)
}
func (m *FiltersReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FiltersReply.DiscardUnknown(m)
}

var xxx_messageInfo_FiltersReply proto.InternalMessageInfo

func (m *FiltersReply) GetLabels() []*LabelsValues {
	if m != nil {
		return m.Labels
	}
	return nil
}

// LabelsValues is label name as a key and values as a list.
type LabelsValues struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []string `protobuf:"bytes,2,rep,name=value,proto3" json:"value,omitempty"`
	Count                []int64  `protobuf:"varint,3,rep,packed,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LabelsValues) Reset()         { *m = LabelsValues{} }
func (m *LabelsValues) String() string { return proto.CompactTextString(m) }
func (*LabelsValues) ProtoMessage()    {}
func (*LabelsValues) Descriptor() ([]byte, []int) {
	return fileDescriptor_filters_435d8d3de4d06f69, []int{2}
}
func (m *LabelsValues) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelsValues.Unmarshal(m, b)
}
func (m *LabelsValues) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelsValues.Marshal(b, m, deterministic)
}
func (dst *LabelsValues) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelsValues.Merge(dst, src)
}
func (m *LabelsValues) XXX_Size() int {
	return xxx_messageInfo_LabelsValues.Size(m)
}
func (m *LabelsValues) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelsValues.DiscardUnknown(m)
}

var xxx_messageInfo_LabelsValues proto.InternalMessageInfo

func (m *LabelsValues) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *LabelsValues) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *LabelsValues) GetCount() []int64 {
	if m != nil {
		return m.Count
	}
	return nil
}

func init() {
	proto.RegisterType((*FiltersRequest)(nil), "qan.FiltersRequest")
	proto.RegisterType((*FiltersReply)(nil), "qan.FiltersReply")
	proto.RegisterType((*LabelsValues)(nil), "qan.LabelsValues")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// FiltersClient is the client API for Filters service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FiltersClient interface {
	// GetFilters gets map of metrics names.
	GetFilters(ctx context.Context, in *FiltersRequest, opts ...grpc.CallOption) (*FiltersReply, error)
}

type filtersClient struct {
	cc *grpc.ClientConn
}

func NewFiltersClient(cc *grpc.ClientConn) FiltersClient {
	return &filtersClient{cc}
}

func (c *filtersClient) GetFilters(ctx context.Context, in *FiltersRequest, opts ...grpc.CallOption) (*FiltersReply, error) {
	out := new(FiltersReply)
	err := c.cc.Invoke(ctx, "/qan.Filters/GetFilters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FiltersServer is the server API for Filters service.
type FiltersServer interface {
	// GetFilters gets map of metrics names.
	GetFilters(context.Context, *FiltersRequest) (*FiltersReply, error)
}

func RegisterFiltersServer(s *grpc.Server, srv FiltersServer) {
	s.RegisterService(&_Filters_serviceDesc, srv)
}

func _Filters_GetFilters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FiltersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FiltersServer).GetFilters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/qan.Filters/GetFilters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FiltersServer).GetFilters(ctx, req.(*FiltersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Filters_serviceDesc = grpc.ServiceDesc{
	ServiceName: "qan.Filters",
	HandlerType: (*FiltersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFilters",
			Handler:    _Filters_GetFilters_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "qanpb/filters.proto",
}

func init() { proto.RegisterFile("qanpb/filters.proto", fileDescriptor_filters_435d8d3de4d06f69) }

var fileDescriptor_filters_435d8d3de4d06f69 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0xb1, 0x4e, 0xc3, 0x30,
	0x14, 0x45, 0x95, 0x98, 0xb6, 0xea, 0x6b, 0x85, 0xa8, 0x8b, 0x44, 0x14, 0x81, 0x88, 0x32, 0x85,
	0x0e, 0xb6, 0x28, 0x13, 0x8c, 0x0c, 0xb0, 0x74, 0x32, 0x88, 0x81, 0x01, 0xc9, 0x41, 0x6e, 0x15,
	0xe1, 0xda, 0x4e, 0xe2, 0x54, 0xca, 0xca, 0x2f, 0xf0, 0x69, 0xfc, 0x02, 0x1f, 0x82, 0xe2, 0x24,
	0x40, 0x27, 0x36, 0xdf, 0xfb, 0xae, 0x8e, 0xaf, 0xde, 0x83, 0x79, 0xce, 0x95, 0x49, 0xe9, 0x3a,
	0x93, 0x56, 0x14, 0x25, 0x31, 0x85, 0xb6, 0x1a, 0xa3, 0x9c, 0xab, 0xf0, 0x74, 0xa3, 0xf5, 0x46,
	0x0a, 0xca, 0x4d, 0x46, 0xb9, 0x52, 0xda, 0x72, 0x9b, 0x69, 0xd5, 0x45, 0xc2, 0xf3, 0x6e, 0xea,
	0x54, 0x5a, 0xad, 0xa9, 0xcd, 0xb6, 0xa2, 0xb4, 0x7c, 0x6b, 0xda, 0x40, 0x2c, 0xe1, 0xf0, 0xae,
	0x85, 0x32, 0x91, 0x57, 0xa2, 0xb4, 0x98, 0xc0, 0xc1, 0xba, 0xd0, 0xdb, 0xc0, 0x8b, 0xbc, 0x64,
	0xb2, 0x0c, 0x49, 0x4b, 0x20, 0x3d, 0x81, 0x3c, 0xf6, 0x04, 0xe6, 0x72, 0x78, 0x01, 0xbe, 0xd5,
	0x81, 0xff, 0x6f, 0xda, 0xb7, 0x3a, 0xbe, 0x86, 0xe9, 0xcf, 0x6f, 0x46, 0xd6, 0xf8, 0x02, 0x86,
	0x92, 0xa7, 0x42, 0x96, 0x81, 0x17, 0xa1, 0x64, 0xb2, 0x9c, 0x91, 0x9c, 0x2b, 0xb2, 0x72, 0xd6,
	0x13, 0x97, 0x95, 0x28, 0x59, 0x17, 0x88, 0x57, 0x30, 0xfd, 0xeb, 0xe3, 0x23, 0x40, 0x6f, 0xa2,
	0x76, 0x2d, 0xc7, 0xac, 0x79, 0xe2, 0x63, 0x18, 0xec, 0x9a, 0x59, 0xe0, 0x47, 0x28, 0x19, 0xb3,
	0x56, 0x34, 0xee, 0xab, 0xae, 0x94, 0x0d, 0x50, 0x84, 0x12, 0xc4, 0x5a, 0xb1, 0x7c, 0x81, 0x51,
	0x57, 0x04, 0x3f, 0x00, 0xdc, 0x0b, 0xdb, 0xab, 0xb9, 0x6b, 0xb0, 0xbf, 0x92, 0x70, 0xb6, 0x6f,
	0x1a, 0x59, 0xc7, 0x67, 0xef, 0x9f, 0x5f, 0x1f, 0xfe, 0x49, 0x8c, 0xe9, 0xee, 0x92, 0xe6, 0x5c,
	0xd1, 0x5f, 0xc6, 0x8d, 0xb7, 0xb8, 0x1d, 0x3d, 0x0f, 0xdc, 0xc5, 0xd2, 0xa1, 0xdb, 0xc4, 0xd5,
	0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xec, 0x49, 0xfa, 0x3a, 0xc1, 0x01, 0x00, 0x00,
}
