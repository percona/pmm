syntax = "proto3";

package qan.v1beta1;

option go_package = "api/qanpb;qanpb";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "qanpb/qan.proto";

// Filters serves list of names of metrics.
service Filters {
  // Get gets map of metrics names.
  rpc Get(FiltersRequest) returns (FiltersReply) {
    option (google.api.http) = {
      post: "/v0/qan/Filters/Get"
      body: "*"
    };
  }
}

// FiltersRequest contains period for which we need filters.
message FiltersRequest {
  google.protobuf.Timestamp period_start_from = 1;
  google.protobuf.Timestamp period_start_to = 2;
  string main_metric_name = 3;
  repeated MapFieldEntry labels = 4;
}

// FiltersReply is map of labels for given period by key.
// Key is label's name and value is label's value and how many times it occur.
message FiltersReply {
  map<string, ListLabels> labels = 1;
}

// ListLabels is list of label's values: duplicates are impossible.
message ListLabels {
  repeated Values name = 1;
}

// Values is label values and main metric percent and per second.
message Values {
  string value = 1;
  float main_metric_percent = 2;
  float main_metric_per_sec = 3;
}
