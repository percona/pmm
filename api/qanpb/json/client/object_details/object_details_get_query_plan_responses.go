// Code generated by go-swagger; DO NOT EDIT.

package object_details

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ObjectDetailsGetQueryPlanReader is a Reader for the ObjectDetailsGetQueryPlan structure.
type ObjectDetailsGetQueryPlanReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ObjectDetailsGetQueryPlanReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewObjectDetailsGetQueryPlanOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewObjectDetailsGetQueryPlanDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewObjectDetailsGetQueryPlanOK creates a ObjectDetailsGetQueryPlanOK with default headers values
func NewObjectDetailsGetQueryPlanOK() *ObjectDetailsGetQueryPlanOK {
	return &ObjectDetailsGetQueryPlanOK{}
}

/*ObjectDetailsGetQueryPlanOK handles this case with default header values.

A successful response.
*/
type ObjectDetailsGetQueryPlanOK struct {
	Payload *ObjectDetailsGetQueryPlanOKBody
}

func (o *ObjectDetailsGetQueryPlanOK) Error() string {
	return fmt.Sprintf("[POST /v0/qan/ObjectDetails/GetQueryPlan][%d] objectDetailsGetQueryPlanOk  %+v", 200, o.Payload)
}

func (o *ObjectDetailsGetQueryPlanOK) GetPayload() *ObjectDetailsGetQueryPlanOKBody {
	return o.Payload
}

func (o *ObjectDetailsGetQueryPlanOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ObjectDetailsGetQueryPlanOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewObjectDetailsGetQueryPlanDefault creates a ObjectDetailsGetQueryPlanDefault with default headers values
func NewObjectDetailsGetQueryPlanDefault(code int) *ObjectDetailsGetQueryPlanDefault {
	return &ObjectDetailsGetQueryPlanDefault{
		_statusCode: code,
	}
}

/*ObjectDetailsGetQueryPlanDefault handles this case with default header values.

An unexpected error response.
*/
type ObjectDetailsGetQueryPlanDefault struct {
	_statusCode int

	Payload *ObjectDetailsGetQueryPlanDefaultBody
}

// Code gets the status code for the object details get query plan default response
func (o *ObjectDetailsGetQueryPlanDefault) Code() int {
	return o._statusCode
}

func (o *ObjectDetailsGetQueryPlanDefault) Error() string {
	return fmt.Sprintf("[POST /v0/qan/ObjectDetails/GetQueryPlan][%d] ObjectDetails_GetQueryPlan default  %+v", o._statusCode, o.Payload)
}

func (o *ObjectDetailsGetQueryPlanDefault) GetPayload() *ObjectDetailsGetQueryPlanDefaultBody {
	return o.Payload
}

func (o *ObjectDetailsGetQueryPlanDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(ObjectDetailsGetQueryPlanDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*ObjectDetailsGetQueryPlanBody QueryPlanRequest defines filtering by queryid.
swagger:model ObjectDetailsGetQueryPlanBody
*/
type ObjectDetailsGetQueryPlanBody struct {

	// queryid
	Queryid string `json:"queryid,omitempty"`
}

// Validate validates this object details get query plan body
func (o *ObjectDetailsGetQueryPlanBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ObjectDetailsGetQueryPlanBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ObjectDetailsGetQueryPlanBody) UnmarshalBinary(b []byte) error {
	var res ObjectDetailsGetQueryPlanBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ObjectDetailsGetQueryPlanDefaultBody object details get query plan default body
swagger:model ObjectDetailsGetQueryPlanDefaultBody
*/
type ObjectDetailsGetQueryPlanDefaultBody struct {

	// error
	Error string `json:"error,omitempty"`

	// code
	Code int32 `json:"code,omitempty"`

	// message
	Message string `json:"message,omitempty"`

	// details
	Details []*DetailsItems0 `json:"details"`
}

// Validate validates this object details get query plan default body
func (o *ObjectDetailsGetQueryPlanDefaultBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateDetails(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *ObjectDetailsGetQueryPlanDefaultBody) validateDetails(formats strfmt.Registry) error {

	if swag.IsZero(o.Details) { // not required
		return nil
	}

	for i := 0; i < len(o.Details); i++ {
		if swag.IsZero(o.Details[i]) { // not required
			continue
		}

		if o.Details[i] != nil {
			if err := o.Details[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ObjectDetails_GetQueryPlan default" + "." + "details" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *ObjectDetailsGetQueryPlanDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ObjectDetailsGetQueryPlanDefaultBody) UnmarshalBinary(b []byte) error {
	var res ObjectDetailsGetQueryPlanDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*ObjectDetailsGetQueryPlanOKBody QueryPlanReply contains planid and query_plan.
swagger:model ObjectDetailsGetQueryPlanOKBody
*/
type ObjectDetailsGetQueryPlanOKBody struct {

	// planid
	Planid string `json:"planid,omitempty"`

	// query plan
	QueryPlan string `json:"query_plan,omitempty"`
}

// Validate validates this object details get query plan OK body
func (o *ObjectDetailsGetQueryPlanOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *ObjectDetailsGetQueryPlanOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *ObjectDetailsGetQueryPlanOKBody) UnmarshalBinary(b []byte) error {
	var res ObjectDetailsGetQueryPlanOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
