// Code generated by go-swagger; DO NOT EDIT.

package metrics

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"
)

// GetMetricsReader is a Reader for the GetMetrics structure.
type GetMetricsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMetricsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMetricsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetMetricsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetMetricsOK creates a GetMetricsOK with default headers values
func NewGetMetricsOK() *GetMetricsOK {
	return &GetMetricsOK{}
}

/*GetMetricsOK handles this case with default header values.

A successful response.
*/
type GetMetricsOK struct {
	Payload *GetMetricsOKBody
}

func (o *GetMetricsOK) Error() string {
	return fmt.Sprintf("[POST /v1/qan/GetMetrics][%d] getMetricsOk  %+v", 200, o.Payload)
}

func (o *GetMetricsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetMetricsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetricsDefault creates a GetMetricsDefault with default headers values
func NewGetMetricsDefault(code int) *GetMetricsDefault {
	return &GetMetricsDefault{
		_statusCode: code,
	}
}

/*GetMetricsDefault handles this case with default header values.

An error response.
*/
type GetMetricsDefault struct {
	_statusCode int

	Payload *GetMetricsDefaultBody
}

// Code gets the status code for the get metrics default response
func (o *GetMetricsDefault) Code() int {
	return o._statusCode
}

func (o *GetMetricsDefault) Error() string {
	return fmt.Sprintf("[POST /v1/qan/GetMetrics][%d] GetMetrics default  %+v", o._statusCode, o.Payload)
}

func (o *GetMetricsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetMetricsDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetMetricsBody MetricsRequest defines filtering of metrics for specific value of dimention (ex.: host=hostname1 or queryid=1D410B4BE5060972.
swagger:model GetMetricsBody
*/
type GetMetricsBody struct {

	// filter by
	FilterBy string `json:"filter_by,omitempty"`

	// group by
	GroupBy string `json:"group_by,omitempty"`

	// include only fields
	IncludeOnlyFields []string `json:"include_only_fields"`

	// labels
	Labels []*LabelsItems0 `json:"labels"`

	// period start from
	PeriodStartFrom string `json:"period_start_from,omitempty"`

	// period start to
	PeriodStartTo string `json:"period_start_to,omitempty"`
}

// Validate validates this get metrics body
func (o *GetMetricsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetMetricsBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	for i := 0; i < len(o.Labels); i++ {
		if swag.IsZero(o.Labels[i]) { // not required
			continue
		}

		if o.Labels[i] != nil {
			if err := o.Labels[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "labels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetMetricsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMetricsBody) UnmarshalBinary(b []byte) error {
	var res GetMetricsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetMetricsDefaultBody ErrorResponse is a message returned on HTTP error.
swagger:model GetMetricsDefaultBody
*/
type GetMetricsDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get metrics default body
func (o *GetMetricsDefaultBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetMetricsDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMetricsDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetMetricsDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetMetricsOKBody MetricsReply defines metrics for specific value of dimention (ex.: host=hostname1 or queryid=1D410B4BE5060972.
swagger:model GetMetricsOKBody
*/
type GetMetricsOKBody struct {

	// agent uuid
	AgentUUID string `json:"agent_uuid,omitempty"`

	// d client hosts
	DClientHosts []string `json:"d_client_hosts"`

	// d databases
	DDatabases []string `json:"d_databases"`

	// d schemas
	DSchemas []string `json:"d_schemas"`

	// Dimension Group.
	DServers []string `json:"d_servers"`

	// d usernames
	DUsernames []string `json:"d_usernames"`

	// {code: count }
	Errors map[string]float32 `json:"errors,omitempty"`

	// example
	Example string `json:"example,omitempty"`

	// ExampleFormat is format of query example: real or query without values.
	// Enum: [EXAMPLE_FORMAT_INVALID EXAMPLE FINGERPRINT]
	ExampleFormat *string `json:"example_format,omitempty"`

	// example metrics
	ExampleMetrics string `json:"example_metrics,omitempty"`

	// ExampleType is a type of query example selected for this query class in given period of time.
	// Enum: [EXAMPLE_TYPE_INVALID RANDOM SLOWEST FASTEST WITH_ERROR]
	ExampleType *string `json:"example_type,omitempty"`

	// fingerprint
	Fingerprint string `json:"fingerprint,omitempty"`

	// first seen
	FirstSeen string `json:"first_seen,omitempty"`

	// is truncated
	IsTruncated int64 `json:"is_truncated,omitempty"`

	// labels
	Labels map[string]string `json:"labels,omitempty"`

	// last seen
	LastSeen string `json:"last_seen,omitempty"`

	// m bytes sent cnt
	MBytesSentCnt float32 `json:"m_bytes_sent_cnt,omitempty"`

	// m bytes sent max
	MBytesSentMax float32 `json:"m_bytes_sent_max,omitempty"`

	// m bytes sent min
	MBytesSentMin float32 `json:"m_bytes_sent_min,omitempty"`

	// m bytes sent p99
	MBytesSentP99 float32 `json:"m_bytes_sent_p99,omitempty"`

	// m bytes sent sum
	MBytesSentSum float32 `json:"m_bytes_sent_sum,omitempty"`

	// mongo metrics
	MDocsReturnedCnt float32 `json:"m_docs_returned_cnt,omitempty"`

	// m docs returned max
	MDocsReturnedMax float32 `json:"m_docs_returned_max,omitempty"`

	// m docs returned min
	MDocsReturnedMin float32 `json:"m_docs_returned_min,omitempty"`

	// m docs returned p99
	MDocsReturnedP99 float32 `json:"m_docs_returned_p99,omitempty"`

	// m docs returned sum
	MDocsReturnedSum float32 `json:"m_docs_returned_sum,omitempty"`

	// m docs scanned cnt
	MDocsScannedCnt float32 `json:"m_docs_scanned_cnt,omitempty"`

	// m docs scanned max
	MDocsScannedMax float32 `json:"m_docs_scanned_max,omitempty"`

	// m docs scanned min
	MDocsScannedMin float32 `json:"m_docs_scanned_min,omitempty"`

	// m docs scanned p99
	MDocsScannedP99 float32 `json:"m_docs_scanned_p99,omitempty"`

	// m docs scanned sum
	MDocsScannedSum float32 `json:"m_docs_scanned_sum,omitempty"`

	// m filesort cnt
	MFilesortCnt float32 `json:"m_filesort_cnt,omitempty"`

	// m filesort on disk cnt
	MFilesortOnDiskCnt float32 `json:"m_filesort_on_disk_cnt,omitempty"`

	// m filesort on disk sum
	MFilesortOnDiskSum float32 `json:"m_filesort_on_disk_sum,omitempty"`

	// m filesort sum
	MFilesortSum float32 `json:"m_filesort_sum,omitempty"`

	// m full join cnt
	MFullJoinCnt float32 `json:"m_full_join_cnt,omitempty"`

	// m full join sum
	MFullJoinSum float32 `json:"m_full_join_sum,omitempty"`

	// m full scan cnt
	MFullScanCnt float32 `json:"m_full_scan_cnt,omitempty"`

	// m full scan sum
	MFullScanSum float32 `json:"m_full_scan_sum,omitempty"`

	// m innodb io r bytes cnt
	MInnodbIoRBytesCnt float32 `json:"m_innodb_io_r_bytes_cnt,omitempty"`

	// m innodb io r bytes max
	MInnodbIoRBytesMax float32 `json:"m_innodb_io_r_bytes_max,omitempty"`

	// m innodb io r bytes min
	MInnodbIoRBytesMin float32 `json:"m_innodb_io_r_bytes_min,omitempty"`

	// m innodb io r bytes p99
	MInnodbIoRBytesP99 float32 `json:"m_innodb_io_r_bytes_p99,omitempty"`

	// m innodb io r bytes sum
	MInnodbIoRBytesSum float32 `json:"m_innodb_io_r_bytes_sum,omitempty"`

	// m innodb io r ops cnt
	MInnodbIoROpsCnt float32 `json:"m_innodb_io_r_ops_cnt,omitempty"`

	// m innodb io r ops max
	MInnodbIoROpsMax float32 `json:"m_innodb_io_r_ops_max,omitempty"`

	// m innodb io r ops min
	MInnodbIoROpsMin float32 `json:"m_innodb_io_r_ops_min,omitempty"`

	// m innodb io r ops p99
	MInnodbIoROpsP99 float32 `json:"m_innodb_io_r_ops_p99,omitempty"`

	// m innodb io r ops sum
	MInnodbIoROpsSum float32 `json:"m_innodb_io_r_ops_sum,omitempty"`

	// m innodb io r wait cnt
	MInnodbIoRWaitCnt float32 `json:"m_innodb_io_r_wait_cnt,omitempty"`

	// m innodb io r wait max
	MInnodbIoRWaitMax float32 `json:"m_innodb_io_r_wait_max,omitempty"`

	// m innodb io r wait min
	MInnodbIoRWaitMin float32 `json:"m_innodb_io_r_wait_min,omitempty"`

	// m innodb io r wait p99
	MInnodbIoRWaitP99 float32 `json:"m_innodb_io_r_wait_p99,omitempty"`

	// m innodb io r wait sum
	MInnodbIoRWaitSum float32 `json:"m_innodb_io_r_wait_sum,omitempty"`

	// m innodb pages distinct cnt
	MInnodbPagesDistinctCnt float32 `json:"m_innodb_pages_distinct_cnt,omitempty"`

	// m innodb pages distinct max
	MInnodbPagesDistinctMax float32 `json:"m_innodb_pages_distinct_max,omitempty"`

	// m innodb pages distinct min
	MInnodbPagesDistinctMin float32 `json:"m_innodb_pages_distinct_min,omitempty"`

	// m innodb pages distinct p99
	MInnodbPagesDistinctP99 float32 `json:"m_innodb_pages_distinct_p99,omitempty"`

	// m innodb pages distinct sum
	MInnodbPagesDistinctSum float32 `json:"m_innodb_pages_distinct_sum,omitempty"`

	// m innodb queue wait cnt
	MInnodbQueueWaitCnt float32 `json:"m_innodb_queue_wait_cnt,omitempty"`

	// m innodb queue wait max
	MInnodbQueueWaitMax float32 `json:"m_innodb_queue_wait_max,omitempty"`

	// m innodb queue wait min
	MInnodbQueueWaitMin float32 `json:"m_innodb_queue_wait_min,omitempty"`

	// m innodb queue wait p99
	MInnodbQueueWaitP99 float32 `json:"m_innodb_queue_wait_p99,omitempty"`

	// m innodb queue wait sum
	MInnodbQueueWaitSum float32 `json:"m_innodb_queue_wait_sum,omitempty"`

	// m innodb rec lock wait cnt
	MInnodbRecLockWaitCnt float32 `json:"m_innodb_rec_lock_wait_cnt,omitempty"`

	// m innodb rec lock wait max
	MInnodbRecLockWaitMax float32 `json:"m_innodb_rec_lock_wait_max,omitempty"`

	// m innodb rec lock wait min
	MInnodbRecLockWaitMin float32 `json:"m_innodb_rec_lock_wait_min,omitempty"`

	// m innodb rec lock wait p99
	MInnodbRecLockWaitP99 float32 `json:"m_innodb_rec_lock_wait_p99,omitempty"`

	// m innodb rec lock wait sum
	MInnodbRecLockWaitSum float32 `json:"m_innodb_rec_lock_wait_sum,omitempty"`

	// m lock time cnt
	MLockTimeCnt float32 `json:"m_lock_time_cnt,omitempty"`

	// m lock time max
	MLockTimeMax float32 `json:"m_lock_time_max,omitempty"`

	// m lock time min
	MLockTimeMin float32 `json:"m_lock_time_min,omitempty"`

	// m lock time p99
	MLockTimeP99 float32 `json:"m_lock_time_p99,omitempty"`

	// m lock time sum
	MLockTimeSum float32 `json:"m_lock_time_sum,omitempty"`

	// m merge passes cnt
	MMergePassesCnt float32 `json:"m_merge_passes_cnt,omitempty"`

	// m merge passes max
	MMergePassesMax float32 `json:"m_merge_passes_max,omitempty"`

	// m merge passes min
	MMergePassesMin float32 `json:"m_merge_passes_min,omitempty"`

	// m merge passes p99
	MMergePassesP99 float32 `json:"m_merge_passes_p99,omitempty"`

	// m merge passes sum
	MMergePassesSum float32 `json:"m_merge_passes_sum,omitempty"`

	// m no good index used cnt
	MNoGoodIndexUsedCnt float32 `json:"m_no_good_index_used_cnt,omitempty"`

	// m no good index used sum
	MNoGoodIndexUsedSum float32 `json:"m_no_good_index_used_sum,omitempty"`

	// m no index used cnt
	MNoIndexUsedCnt float32 `json:"m_no_index_used_cnt,omitempty"`

	// m no index used sum
	MNoIndexUsedSum float32 `json:"m_no_index_used_sum,omitempty"`

	// boolean metrics
	MQcHitCnt float32 `json:"m_qc_hit_cnt,omitempty"`

	// m qc hit sum
	MQcHitSum float32 `json:"m_qc_hit_sum,omitempty"`

	// m query length cnt
	MQueryLengthCnt float32 `json:"m_query_length_cnt,omitempty"`

	// m query length max
	MQueryLengthMax float32 `json:"m_query_length_max,omitempty"`

	// m query length min
	MQueryLengthMin float32 `json:"m_query_length_min,omitempty"`

	// m query length p99
	MQueryLengthP99 float32 `json:"m_query_length_p99,omitempty"`

	// m query length sum
	MQueryLengthSum float32 `json:"m_query_length_sum,omitempty"`

	// m query time cnt
	MQueryTimeCnt float32 `json:"m_query_time_cnt,omitempty"`

	// m query time max
	MQueryTimeMax float32 `json:"m_query_time_max,omitempty"`

	// m query time min
	MQueryTimeMin float32 `json:"m_query_time_min,omitempty"`

	// m query time p99
	MQueryTimeP99 float32 `json:"m_query_time_p99,omitempty"`

	// m query time sum
	MQueryTimeSum float32 `json:"m_query_time_sum,omitempty"`

	// m response length cnt
	MResponseLengthCnt float32 `json:"m_response_length_cnt,omitempty"`

	// m response length max
	MResponseLengthMax float32 `json:"m_response_length_max,omitempty"`

	// m response length min
	MResponseLengthMin float32 `json:"m_response_length_min,omitempty"`

	// m response length p99
	MResponseLengthP99 float32 `json:"m_response_length_p99,omitempty"`

	// m response length sum
	MResponseLengthSum float32 `json:"m_response_length_sum,omitempty"`

	// m rows affected cnt
	MRowsAffectedCnt float32 `json:"m_rows_affected_cnt,omitempty"`

	// m rows affected max
	MRowsAffectedMax float32 `json:"m_rows_affected_max,omitempty"`

	// m rows affected min
	MRowsAffectedMin float32 `json:"m_rows_affected_min,omitempty"`

	// m rows affected p99
	MRowsAffectedP99 float32 `json:"m_rows_affected_p99,omitempty"`

	// m rows affected sum
	MRowsAffectedSum float32 `json:"m_rows_affected_sum,omitempty"`

	// m rows examined cnt
	MRowsExaminedCnt float32 `json:"m_rows_examined_cnt,omitempty"`

	// m rows examined max
	MRowsExaminedMax float32 `json:"m_rows_examined_max,omitempty"`

	// m rows examined min
	MRowsExaminedMin float32 `json:"m_rows_examined_min,omitempty"`

	// m rows examined p99
	MRowsExaminedP99 float32 `json:"m_rows_examined_p99,omitempty"`

	// m rows examined sum
	MRowsExaminedSum float32 `json:"m_rows_examined_sum,omitempty"`

	// m rows read cnt
	MRowsReadCnt float32 `json:"m_rows_read_cnt,omitempty"`

	// m rows read max
	MRowsReadMax float32 `json:"m_rows_read_max,omitempty"`

	// m rows read min
	MRowsReadMin float32 `json:"m_rows_read_min,omitempty"`

	// m rows read p99
	MRowsReadP99 float32 `json:"m_rows_read_p99,omitempty"`

	// m rows read sum
	MRowsReadSum float32 `json:"m_rows_read_sum,omitempty"`

	// m rows sent cnt
	MRowsSentCnt float32 `json:"m_rows_sent_cnt,omitempty"`

	// m rows sent max
	MRowsSentMax float32 `json:"m_rows_sent_max,omitempty"`

	// m rows sent min
	MRowsSentMin float32 `json:"m_rows_sent_min,omitempty"`

	// m rows sent p99
	MRowsSentP99 float32 `json:"m_rows_sent_p99,omitempty"`

	// m rows sent sum
	MRowsSentSum float32 `json:"m_rows_sent_sum,omitempty"`

	// m select full range join cnt
	MSelectFullRangeJoinCnt float32 `json:"m_select_full_range_join_cnt,omitempty"`

	// m select full range join sum
	MSelectFullRangeJoinSum float32 `json:"m_select_full_range_join_sum,omitempty"`

	// m select range check cnt
	MSelectRangeCheckCnt float32 `json:"m_select_range_check_cnt,omitempty"`

	// m select range check sum
	MSelectRangeCheckSum float32 `json:"m_select_range_check_sum,omitempty"`

	// m select range cnt
	MSelectRangeCnt float32 `json:"m_select_range_cnt,omitempty"`

	// m select range sum
	MSelectRangeSum float32 `json:"m_select_range_sum,omitempty"`

	// m sort range cnt
	MSortRangeCnt float32 `json:"m_sort_range_cnt,omitempty"`

	// m sort range sum
	MSortRangeSum float32 `json:"m_sort_range_sum,omitempty"`

	// m sort rows cnt
	MSortRowsCnt float32 `json:"m_sort_rows_cnt,omitempty"`

	// m sort rows sum
	MSortRowsSum float32 `json:"m_sort_rows_sum,omitempty"`

	// m sort scan cnt
	MSortScanCnt float32 `json:"m_sort_scan_cnt,omitempty"`

	// m sort scan sum
	MSortScanSum float32 `json:"m_sort_scan_sum,omitempty"`

	// m tmp disk tables cnt
	MTmpDiskTablesCnt float32 `json:"m_tmp_disk_tables_cnt,omitempty"`

	// m tmp disk tables max
	MTmpDiskTablesMax float32 `json:"m_tmp_disk_tables_max,omitempty"`

	// m tmp disk tables min
	MTmpDiskTablesMin float32 `json:"m_tmp_disk_tables_min,omitempty"`

	// m tmp disk tables p99
	MTmpDiskTablesP99 float32 `json:"m_tmp_disk_tables_p99,omitempty"`

	// m tmp disk tables sum
	MTmpDiskTablesSum float32 `json:"m_tmp_disk_tables_sum,omitempty"`

	// m tmp table cnt
	MTmpTableCnt float32 `json:"m_tmp_table_cnt,omitempty"`

	// m tmp table on disk cnt
	MTmpTableOnDiskCnt float32 `json:"m_tmp_table_on_disk_cnt,omitempty"`

	// m tmp table on disk sum
	MTmpTableOnDiskSum float32 `json:"m_tmp_table_on_disk_sum,omitempty"`

	// m tmp table sizes cnt
	MTmpTableSizesCnt float32 `json:"m_tmp_table_sizes_cnt,omitempty"`

	// m tmp table sizes max
	MTmpTableSizesMax float32 `json:"m_tmp_table_sizes_max,omitempty"`

	// m tmp table sizes min
	MTmpTableSizesMin float32 `json:"m_tmp_table_sizes_min,omitempty"`

	// m tmp table sizes p99
	MTmpTableSizesP99 float32 `json:"m_tmp_table_sizes_p99,omitempty"`

	// m tmp table sizes sum
	MTmpTableSizesSum float32 `json:"m_tmp_table_sizes_sum,omitempty"`

	// m tmp table sum
	MTmpTableSum float32 `json:"m_tmp_table_sum,omitempty"`

	// m tmp tables cnt
	MTmpTablesCnt float32 `json:"m_tmp_tables_cnt,omitempty"`

	// m tmp tables max
	MTmpTablesMax float32 `json:"m_tmp_tables_max,omitempty"`

	// m tmp tables min
	MTmpTablesMin float32 `json:"m_tmp_tables_min,omitempty"`

	// m tmp tables p99
	MTmpTablesP99 float32 `json:"m_tmp_tables_p99,omitempty"`

	// m tmp tables sum
	MTmpTablesSum float32 `json:"m_tmp_tables_sum,omitempty"`

	// num queries
	NumQueries float32 `json:"num_queries,omitempty"`

	// num queries with errors
	NumQueriesWithErrors float32 `json:"num_queries_with_errors,omitempty"`

	// Metrics.
	NumQueriesWithWarnings float32 `json:"num_queries_with_warnings,omitempty"`

	// period length
	PeriodLength int64 `json:"period_length,omitempty"`

	// period start
	PeriodStart string `json:"period_start,omitempty"`

	// queryid
	Queryid string `json:"queryid,omitempty"`

	// {code: count }
	Warnings map[string]float32 `json:"warnings,omitempty"`
}

// Validate validates this get metrics OK body
func (o *GetMetricsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateExampleFormat(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateExampleType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getMetricsOkBodyTypeExampleFormatPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["EXAMPLE_FORMAT_INVALID","EXAMPLE","FINGERPRINT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getMetricsOkBodyTypeExampleFormatPropEnum = append(getMetricsOkBodyTypeExampleFormatPropEnum, v)
	}
}

const (

	// GetMetricsOKBodyExampleFormatEXAMPLEFORMATINVALID captures enum value "EXAMPLE_FORMAT_INVALID"
	GetMetricsOKBodyExampleFormatEXAMPLEFORMATINVALID string = "EXAMPLE_FORMAT_INVALID"

	// GetMetricsOKBodyExampleFormatEXAMPLE captures enum value "EXAMPLE"
	GetMetricsOKBodyExampleFormatEXAMPLE string = "EXAMPLE"

	// GetMetricsOKBodyExampleFormatFINGERPRINT captures enum value "FINGERPRINT"
	GetMetricsOKBodyExampleFormatFINGERPRINT string = "FINGERPRINT"
)

// prop value enum
func (o *GetMetricsOKBody) validateExampleFormatEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getMetricsOkBodyTypeExampleFormatPropEnum); err != nil {
		return err
	}
	return nil
}

func (o *GetMetricsOKBody) validateExampleFormat(formats strfmt.Registry) error {

	if swag.IsZero(o.ExampleFormat) { // not required
		return nil
	}

	// value enum
	if err := o.validateExampleFormatEnum("getMetricsOk"+"."+"example_format", "body", *o.ExampleFormat); err != nil {
		return err
	}

	return nil
}

var getMetricsOkBodyTypeExampleTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["EXAMPLE_TYPE_INVALID","RANDOM","SLOWEST","FASTEST","WITH_ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getMetricsOkBodyTypeExampleTypePropEnum = append(getMetricsOkBodyTypeExampleTypePropEnum, v)
	}
}

const (

	// GetMetricsOKBodyExampleTypeEXAMPLETYPEINVALID captures enum value "EXAMPLE_TYPE_INVALID"
	GetMetricsOKBodyExampleTypeEXAMPLETYPEINVALID string = "EXAMPLE_TYPE_INVALID"

	// GetMetricsOKBodyExampleTypeRANDOM captures enum value "RANDOM"
	GetMetricsOKBodyExampleTypeRANDOM string = "RANDOM"

	// GetMetricsOKBodyExampleTypeSLOWEST captures enum value "SLOWEST"
	GetMetricsOKBodyExampleTypeSLOWEST string = "SLOWEST"

	// GetMetricsOKBodyExampleTypeFASTEST captures enum value "FASTEST"
	GetMetricsOKBodyExampleTypeFASTEST string = "FASTEST"

	// GetMetricsOKBodyExampleTypeWITHERROR captures enum value "WITH_ERROR"
	GetMetricsOKBodyExampleTypeWITHERROR string = "WITH_ERROR"
)

// prop value enum
func (o *GetMetricsOKBody) validateExampleTypeEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, getMetricsOkBodyTypeExampleTypePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *GetMetricsOKBody) validateExampleType(formats strfmt.Registry) error {

	if swag.IsZero(o.ExampleType) { // not required
		return nil
	}

	// value enum
	if err := o.validateExampleTypeEnum("getMetricsOk"+"."+"example_type", "body", *o.ExampleType); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetMetricsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetMetricsOKBody) UnmarshalBinary(b []byte) error {
	var res GetMetricsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LabelsItems0 MapFieldEntry allows to pass labels/dimentions in form like {"d_server": ["db1", "db2"...]}.
swagger:model LabelsItems0
*/
type LabelsItems0 struct {

	// key
	Key string `json:"key,omitempty"`

	// value
	Value []string `json:"value"`
}

// Validate validates this labels items0
func (o *LabelsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LabelsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LabelsItems0) UnmarshalBinary(b []byte) error {
	var res LabelsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
