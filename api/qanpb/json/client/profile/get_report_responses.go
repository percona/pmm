// Code generated by go-swagger; DO NOT EDIT.

package profile

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/percona/pmm/api/qanpb/json/models"
)

// GetReportReader is a Reader for the GetReport structure.
type GetReportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetReportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetReportDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetReportOK creates a GetReportOK with default headers values
func NewGetReportOK() *GetReportOK {
	return &GetReportOK{}
}

/*GetReportOK handles this case with default header values.

A successful response.
*/
type GetReportOK struct {
	Payload *GetReportOKBody
}

func (o *GetReportOK) Error() string {
	return fmt.Sprintf("[POST /v0/qan/GetReport][%d] getReportOk  %+v", 200, o.Payload)
}

func (o *GetReportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReportOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReportDefault creates a GetReportDefault with default headers values
func NewGetReportDefault(code int) *GetReportDefault {
	return &GetReportDefault{
		_statusCode: code,
	}
}

/*GetReportDefault handles this case with default header values.

An error response.
*/
type GetReportDefault struct {
	_statusCode int

	Payload *GetReportDefaultBody
}

// Code gets the status code for the get report default response
func (o *GetReportDefault) Code() int {
	return o._statusCode
}

func (o *GetReportDefault) Error() string {
	return fmt.Sprintf("[POST /v0/qan/GetReport][%d] GetReport default  %+v", o._statusCode, o.Payload)
}

func (o *GetReportDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetReportDefaultBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetReportBody ReportRequest defines filtering of metrics report for db server or other dimentions.
swagger:model GetReportBody
*/
type GetReportBody struct {

	// columns
	Columns []string `json:"columns"`

	// group by
	GroupBy string `json:"group_by,omitempty"`

	// labels
	Labels []*LabelsItems0 `json:"labels"`

	// limit
	Limit int64 `json:"limit,omitempty"`

	// offset
	Offset int64 `json:"offset,omitempty"`

	// order by
	OrderBy string `json:"order_by,omitempty"`

	// period start from
	// Format: date-time
	PeriodStartFrom strfmt.DateTime `json:"period_start_from,omitempty"`

	// period start to
	// Format: date-time
	PeriodStartTo strfmt.DateTime `json:"period_start_to,omitempty"`
}

// Validate validates this get report body
func (o *GetReportBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateLabels(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePeriodStartFrom(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validatePeriodStartTo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetReportBody) validateLabels(formats strfmt.Registry) error {

	if swag.IsZero(o.Labels) { // not required
		return nil
	}

	for i := 0; i < len(o.Labels); i++ {
		if swag.IsZero(o.Labels[i]) { // not required
			continue
		}

		if o.Labels[i] != nil {
			if err := o.Labels[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("body" + "." + "labels" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetReportBody) validatePeriodStartFrom(formats strfmt.Registry) error {

	if swag.IsZero(o.PeriodStartFrom) { // not required
		return nil
	}

	if err := validate.FormatOf("body"+"."+"period_start_from", "body", "date-time", o.PeriodStartFrom.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetReportBody) validatePeriodStartTo(formats strfmt.Registry) error {

	if swag.IsZero(o.PeriodStartTo) { // not required
		return nil
	}

	if err := validate.FormatOf("body"+"."+"period_start_to", "body", "date-time", o.PeriodStartTo.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetReportBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReportBody) UnmarshalBinary(b []byte) error {
	var res GetReportBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReportDefaultBody ErrorResponse is a message returned on HTTP error.
swagger:model GetReportDefaultBody
*/
type GetReportDefaultBody struct {

	// code
	Code int32 `json:"code,omitempty"`

	// error
	Error string `json:"error,omitempty"`

	// message
	Message string `json:"message,omitempty"`
}

// Validate validates this get report default body
func (o *GetReportDefaultBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetReportDefaultBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReportDefaultBody) UnmarshalBinary(b []byte) error {
	var res GetReportDefaultBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetReportOKBody ReportReply is list of reports per quieryids, hosts etc.
swagger:model GetReportOKBody
*/
type GetReportOKBody struct {

	// limit
	Limit int64 `json:"limit,omitempty"`

	// offset
	Offset int64 `json:"offset,omitempty"`

	// rows
	Rows []*RowsItems0 `json:"rows"`

	// total rows
	TotalRows int64 `json:"total_rows,omitempty"`
}

// Validate validates this get report OK body
func (o *GetReportOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRows(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetReportOKBody) validateRows(formats strfmt.Registry) error {

	if swag.IsZero(o.Rows) { // not required
		return nil
	}

	for i := 0; i < len(o.Rows); i++ {
		if swag.IsZero(o.Rows[i]) { // not required
			continue
		}

		if o.Rows[i] != nil {
			if err := o.Rows[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getReportOk" + "." + "rows" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetReportOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetReportOKBody) UnmarshalBinary(b []byte) error {
	var res GetReportOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*LabelsItems0 ReportMapFieldEntry allows to pass labels/dimentions in form like {"d_server": ["db1", "db2"...]}.
swagger:model LabelsItems0
*/
type LabelsItems0 struct {

	// key
	Key string `json:"key,omitempty"`

	// value
	Value []string `json:"value"`
}

// Validate validates this labels items0
func (o *LabelsItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *LabelsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *LabelsItems0) UnmarshalBinary(b []byte) error {
	var res LabelsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RowsItems0 Row define metrics for selected dimention.
swagger:model RowsItems0
*/
type RowsItems0 struct {

	// dimension
	Dimension string `json:"dimension,omitempty"`

	// fingerprint
	Fingerprint string `json:"fingerprint,omitempty"`

	// load
	Load float32 `json:"load,omitempty"`

	// metrics
	Metrics map[string]RowsItems0MetricsAnon `json:"metrics,omitempty"`

	// num queries
	NumQueries int64 `json:"num_queries,omitempty"`

	// qps
	QPS float32 `json:"qps,omitempty"`

	// rank
	Rank int64 `json:"rank,omitempty"`

	// sparkline
	Sparkline []*RowsItems0SparklineItems0 `json:"sparkline"`
}

// Validate validates this rows items0
func (o *RowsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMetrics(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateSparkline(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RowsItems0) validateMetrics(formats strfmt.Registry) error {

	if swag.IsZero(o.Metrics) { // not required
		return nil
	}

	for k := range o.Metrics {

		if swag.IsZero(o.Metrics[k]) { // not required
			continue
		}
		if val, ok := o.Metrics[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (o *RowsItems0) validateSparkline(formats strfmt.Registry) error {

	if swag.IsZero(o.Sparkline) { // not required
		return nil
	}

	for i := 0; i < len(o.Sparkline); i++ {
		if swag.IsZero(o.Sparkline[i]) { // not required
			continue
		}

		if o.Sparkline[i] != nil {
			if err := o.Sparkline[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("sparkline" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *RowsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RowsItems0) UnmarshalBinary(b []byte) error {
	var res RowsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RowsItems0MetricsAnon Metric cell.
swagger:model RowsItems0MetricsAnon
*/
type RowsItems0MetricsAnon struct {

	// stats
	Stats *RowsItems0MetricsAnonStats `json:"stats,omitempty"`
}

// Validate validates this rows items0 metrics anon
func (o *RowsItems0MetricsAnon) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateStats(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RowsItems0MetricsAnon) validateStats(formats strfmt.Registry) error {

	if swag.IsZero(o.Stats) { // not required
		return nil
	}

	if o.Stats != nil {
		if err := o.Stats.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("stats")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RowsItems0MetricsAnon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RowsItems0MetricsAnon) UnmarshalBinary(b []byte) error {
	var res RowsItems0MetricsAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RowsItems0MetricsAnonStats Stat is statistics of specific metric.
swagger:model RowsItems0MetricsAnonStats
*/
type RowsItems0MetricsAnonStats struct {

	// avg
	Avg float32 `json:"avg,omitempty"`

	// cnt
	Cnt float32 `json:"cnt,omitempty"`

	// max
	Max float32 `json:"max,omitempty"`

	// min
	Min float32 `json:"min,omitempty"`

	// p99
	P99 float32 `json:"p99,omitempty"`

	// rate
	Rate float32 `json:"rate,omitempty"`

	// sum
	Sum float32 `json:"sum,omitempty"`
}

// Validate validates this rows items0 metrics anon stats
func (o *RowsItems0MetricsAnonStats) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *RowsItems0MetricsAnonStats) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RowsItems0MetricsAnonStats) UnmarshalBinary(b []byte) error {
	var res RowsItems0MetricsAnonStats
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RowsItems0SparklineItems0 Point contains values that represents abscissa (time) and ordinate (volume etc.)
// of every point in a coordinate system of Sparklines.
swagger:model RowsItems0SparklineItems0
*/
type RowsItems0SparklineItems0 struct {

	// values
	Values map[string]RowsItems0SparklineItems0ValuesAnon `json:"values,omitempty"`
}

// Validate validates this rows items0 sparkline items0
func (o *RowsItems0SparklineItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RowsItems0SparklineItems0) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(o.Values) { // not required
		return nil
	}

	for k := range o.Values {

		if swag.IsZero(o.Values[k]) { // not required
			continue
		}
		if val, ok := o.Values[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *RowsItems0SparklineItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RowsItems0SparklineItems0) UnmarshalBinary(b []byte) error {
	var res RowsItems0SparklineItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RowsItems0SparklineItems0ValuesAnon `Value` represents a dynamically typed value which can be either
// null, a number, a string, a boolean, a recursive struct value, or a
// list of values. A producer of value is expected to set one of that
// variants, absence of any variant indicates an error.
//
// The JSON representation for `Value` is JSON value.
swagger:model RowsItems0SparklineItems0ValuesAnon
*/
type RowsItems0SparklineItems0ValuesAnon struct {

	// Represents a boolean value.
	BoolValue bool `json:"bool_value,omitempty"`

	// list value
	ListValue *RowsItems0SparklineItems0ValuesAnonListValue `json:"list_value,omitempty"`

	// `NullValue` is a singleton enumeration to represent the null value for the
	// `Value` type union.
	//
	//  The JSON representation for `NullValue` is JSON `null`.
	//
	//  - NULL_VALUE: Null value.
	// Enum: [NULL_VALUE]
	NullValue *string `json:"null_value,omitempty"`

	// Represents a double value.
	NumberValue float64 `json:"number_value,omitempty"`

	// Represents a string value.
	StringValue string `json:"string_value,omitempty"`

	// struct value
	StructValue *RowsItems0SparklineItems0ValuesAnonStructValue `json:"struct_value,omitempty"`
}

// Validate validates this rows items0 sparkline items0 values anon
func (o *RowsItems0SparklineItems0ValuesAnon) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateListValue(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateNullValue(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStructValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RowsItems0SparklineItems0ValuesAnon) validateListValue(formats strfmt.Registry) error {

	if swag.IsZero(o.ListValue) { // not required
		return nil
	}

	if o.ListValue != nil {
		if err := o.ListValue.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("list_value")
			}
			return err
		}
	}

	return nil
}

var rowsItems0SparklineItems0ValuesAnonTypeNullValuePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["NULL_VALUE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		rowsItems0SparklineItems0ValuesAnonTypeNullValuePropEnum = append(rowsItems0SparklineItems0ValuesAnonTypeNullValuePropEnum, v)
	}
}

const (

	// RowsItems0SparklineItems0ValuesAnonNullValueNULLVALUE captures enum value "NULL_VALUE"
	RowsItems0SparklineItems0ValuesAnonNullValueNULLVALUE string = "NULL_VALUE"
)

// prop value enum
func (o *RowsItems0SparklineItems0ValuesAnon) validateNullValueEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, rowsItems0SparklineItems0ValuesAnonTypeNullValuePropEnum); err != nil {
		return err
	}
	return nil
}

func (o *RowsItems0SparklineItems0ValuesAnon) validateNullValue(formats strfmt.Registry) error {

	if swag.IsZero(o.NullValue) { // not required
		return nil
	}

	// value enum
	if err := o.validateNullValueEnum("null_value", "body", *o.NullValue); err != nil {
		return err
	}

	return nil
}

func (o *RowsItems0SparklineItems0ValuesAnon) validateStructValue(formats strfmt.Registry) error {

	if swag.IsZero(o.StructValue) { // not required
		return nil
	}

	if o.StructValue != nil {
		if err := o.StructValue.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("struct_value")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RowsItems0SparklineItems0ValuesAnon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RowsItems0SparklineItems0ValuesAnon) UnmarshalBinary(b []byte) error {
	var res RowsItems0SparklineItems0ValuesAnon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RowsItems0SparklineItems0ValuesAnonListValue `ListValue` is a wrapper around a repeated field of values.
//
// The JSON representation for `ListValue` is JSON array.
swagger:model RowsItems0SparklineItems0ValuesAnonListValue
*/
type RowsItems0SparklineItems0ValuesAnonListValue struct {

	// Repeated field of dynamically typed values.
	Values []*models.ProtobufValue `json:"values"`
}

// Validate validates this rows items0 sparkline items0 values anon list value
func (o *RowsItems0SparklineItems0ValuesAnonListValue) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateValues(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RowsItems0SparklineItems0ValuesAnonListValue) validateValues(formats strfmt.Registry) error {

	if swag.IsZero(o.Values) { // not required
		return nil
	}

	for i := 0; i < len(o.Values); i++ {
		if swag.IsZero(o.Values[i]) { // not required
			continue
		}

		if o.Values[i] != nil {
			if err := o.Values[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("list_value" + "." + "values" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *RowsItems0SparklineItems0ValuesAnonListValue) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RowsItems0SparklineItems0ValuesAnonListValue) UnmarshalBinary(b []byte) error {
	var res RowsItems0SparklineItems0ValuesAnonListValue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RowsItems0SparklineItems0ValuesAnonStructValue `Struct` represents a structured data value, consisting of fields
// which map to dynamically typed values. In some languages, `Struct`
// might be supported by a native representation. For example, in
// scripting languages like JS a struct is represented as an
// object. The details of that representation are described together
// with the proto support for the language.
//
// The JSON representation for `Struct` is JSON object.
swagger:model RowsItems0SparklineItems0ValuesAnonStructValue
*/
type RowsItems0SparklineItems0ValuesAnonStructValue struct {

	// Unordered map of dynamically typed values.
	Fields map[string]models.ProtobufValue `json:"fields,omitempty"`
}

// Validate validates this rows items0 sparkline items0 values anon struct value
func (o *RowsItems0SparklineItems0ValuesAnonStructValue) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateFields(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RowsItems0SparklineItems0ValuesAnonStructValue) validateFields(formats strfmt.Registry) error {

	if swag.IsZero(o.Fields) { // not required
		return nil
	}

	for k := range o.Fields {

		if err := validate.Required("struct_value"+"."+"fields"+"."+k, "body", o.Fields[k]); err != nil {
			return err
		}
		if val, ok := o.Fields[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *RowsItems0SparklineItems0ValuesAnonStructValue) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RowsItems0SparklineItems0ValuesAnonStructValue) UnmarshalBinary(b []byte) error {
	var res RowsItems0SparklineItems0ValuesAnonStructValue
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
