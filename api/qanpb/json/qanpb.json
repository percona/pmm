{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "PMM QAN API",
    "version": "version 1.alpha"
  },
  "paths": {
    "/v1/qan/Filters/Get": {
      "post": {
        "tags": [
          "Filters"
        ],
        "summary": "Get gets map of metrics names.",
        "operationId": "Get",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "FiltersRequest contains period for which we need filters.",
              "type": "object",
              "properties": {
                "period_start_from": {
                  "type": "string",
                  "format": "date-time"
                },
                "period_start_to": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "FiltersReply is map of labels for given period by key.\nKey is label's name and value is label's value and how many times it occur.",
              "type": "object",
              "properties": {
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "ListLabels is list of label's values: duplicates are impossible.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "array",
                        "items": {
                          "description": "ValueAndCount is label values and how many times this value occur.",
                          "type": "object",
                          "properties": {
                            "count": {
                              "type": "string",
                              "format": "int64"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/qan/GetMetricsNames": {
      "post": {
        "tags": [
          "MetricsNames"
        ],
        "summary": "GetMetricsNames gets map of metrics names.",
        "operationId": "GetMetricsNames",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "MetricsNamesRequest is emty.",
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "MetricsNamesReply is map of stored metrics:\nkey is root of metric name in db (Ex:. [m_]query_time[_sum]);\nvalue - Human readable name of metrics.",
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error response.",
            "schema": {
              "description": "ErrorResponse is a message returned on HTTP error.",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/qan/GetReport": {
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "GetReport returns list of metrics group by queryid or other dimentions.",
        "operationId": "GetReport",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "ReportRequest defines filtering of metrics report for db server or other dimentions.",
              "type": "object",
              "properties": {
                "columns": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "group_by": {
                  "type": "string"
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "description": "ReportMapFieldEntry allows to pass labels/dimentions in form like {\"d_server\": [\"db1\", \"db2\"...]}.",
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "limit": {
                  "type": "integer",
                  "format": "int64"
                },
                "offset": {
                  "type": "integer",
                  "format": "int64"
                },
                "order_by": {
                  "type": "string"
                },
                "period_start_from": {
                  "type": "string",
                  "format": "date-time"
                },
                "period_start_to": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "ReportReply is list of reports per quieryids, hosts etc.",
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int64"
                },
                "offset": {
                  "type": "integer",
                  "format": "int64"
                },
                "rows": {
                  "type": "array",
                  "items": {
                    "description": "Row define metrics for selected dimention.",
                    "type": "object",
                    "properties": {
                      "dimension": {
                        "type": "string"
                      },
                      "fingerprint": {
                        "type": "string"
                      },
                      "load": {
                        "type": "number",
                        "format": "float"
                      },
                      "metrics": {
                        "type": "object",
                        "additionalProperties": {
                          "description": "Metric cell.",
                          "type": "object",
                          "properties": {
                            "stats": {
                              "description": "Stat is statistics of specific metric.",
                              "type": "object",
                              "properties": {
                                "cnt": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "max": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "min": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "p99": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "rate": {
                                  "type": "number",
                                  "format": "float"
                                },
                                "sum": {
                                  "type": "number",
                                  "format": "float"
                                }
                              }
                            }
                          }
                        }
                      },
                      "num_queries": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "qps": {
                        "type": "number",
                        "format": "float"
                      },
                      "rank": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "sparkline": {
                        "type": "array",
                        "items": {
                          "description": "Point contains values that represents abscissa (time) and ordinate (volume etc.)\nof every point in a coordinate system of Sparklines.",
                          "type": "object",
                          "properties": {
                            "values": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number",
                                "format": "float"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "total_rows": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "default": {
            "description": "An error response.",
            "schema": {
              "description": "ErrorResponse is a message returned on HTTP error.",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/qan/ObjectDetails/GetMetrics": {
      "post": {
        "tags": [
          "ObjectDetails"
        ],
        "summary": "GetMetrics gets map of metrics for specific filtering.",
        "operationId": "GetMetrics",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "MetricsRequest defines filtering of metrics for specific value of dimension (ex.: host=hostname1 or queryid=1D410B4BE5060972.",
              "type": "object",
              "properties": {
                "filter_by": {
                  "description": "dimension value: ex: queryid - 1D410B4BE5060972.",
                  "type": "string"
                },
                "group_by": {
                  "description": "one of dimension: queryid | host ...",
                  "type": "string"
                },
                "include_only_fields": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "description": "MapFieldEntry allows to pass labels/dimensions in form like {\"d_server\": [\"db1\", \"db2\"...]}.",
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "period_start_from": {
                  "type": "string",
                  "format": "date-time"
                },
                "period_start_to": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "MetricsReply defines metrics for specific value of dimension (ex.: host=hostname1 or queryid=1D410B4BE5060972.",
              "type": "object",
              "properties": {
                "metrics": {
                  "type": "object",
                  "additionalProperties": {
                    "description": "MetricValues is statistics of specific metric.",
                    "type": "object",
                    "properties": {
                      "avg": {
                        "type": "number",
                        "format": "float"
                      },
                      "cnt": {
                        "type": "number",
                        "format": "float"
                      },
                      "max": {
                        "type": "number",
                        "format": "float"
                      },
                      "min": {
                        "type": "number",
                        "format": "float"
                      },
                      "p99": {
                        "type": "number",
                        "format": "float"
                      },
                      "percent_of_total": {
                        "type": "number",
                        "format": "float"
                      },
                      "rate": {
                        "type": "number",
                        "format": "float"
                      },
                      "sum": {
                        "type": "number",
                        "format": "float"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error response.",
            "schema": {
              "description": "ErrorResponse is a message returned on HTTP error.",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/qan/ObjectDetails/GetQueryExample": {
      "post": {
        "tags": [
          "ObjectDetails"
        ],
        "summary": "GetQueryExample gets list of query examples.",
        "operationId": "GetQueryExample",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "QueryExampleRequest defines filtering of query examples for specific value of\ndimension (ex.: host=hostname1 or queryid=1D410B4BE5060972.",
              "type": "object",
              "properties": {
                "filter_by": {
                  "description": "dimension value: ex: queryid - 1D410B4BE5060972.",
                  "type": "string"
                },
                "group_by": {
                  "description": "one of dimension: queryid | host ...",
                  "type": "string"
                },
                "labels": {
                  "type": "array",
                  "items": {
                    "description": "MapFieldEntry allows to pass labels/dimensions in form like {\"d_server\": [\"db1\", \"db2\"...]}.",
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "limit": {
                  "type": "integer",
                  "format": "int64"
                },
                "period_start_from": {
                  "type": "string",
                  "format": "date-time"
                },
                "period_start_to": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "description": "QueryExampleReply list of query examples.",
              "type": "object",
              "properties": {
                "query_examples": {
                  "type": "array",
                  "items": {
                    "description": "QueryExample shows query examples and their metrics.",
                    "type": "object",
                    "properties": {
                      "example": {
                        "type": "string"
                      },
                      "example_format": {
                        "description": "ExampleFormat is format of query example: real or query without values.",
                        "type": "string",
                        "default": "EXAMPLE_FORMAT_INVALID",
                        "enum": [
                          "EXAMPLE_FORMAT_INVALID",
                          "EXAMPLE",
                          "FINGERPRINT"
                        ]
                      },
                      "example_metrics": {
                        "type": "string"
                      },
                      "example_type": {
                        "description": "ExampleType is a type of query example selected for this query class in given period of time.",
                        "type": "string",
                        "default": "EXAMPLE_TYPE_INVALID",
                        "enum": [
                          "EXAMPLE_TYPE_INVALID",
                          "RANDOM",
                          "SLOWEST",
                          "FASTEST",
                          "WITH_ERROR"
                        ]
                      },
                      "is_truncated": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "An error response.",
            "schema": {
              "description": "ErrorResponse is a message returned on HTTP error.",
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "format": "int32"
                },
                "error": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}