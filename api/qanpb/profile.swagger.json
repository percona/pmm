{
  "swagger": "2.0",
  "info": {
    "title": "qanpb/profile.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Profile"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v0/qan/GetReport": {
      "post": {
        "summary": "GetReport returns list of metrics group by queryid or other dimentions.",
        "operationId": "GetReport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1beta1ReportReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "ReportRequest defines filtering of metrics report for db server or other dimentions.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1beta1ReportRequest"
            }
          }
        ],
        "tags": [
          "Profile"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1beta1Metric": {
      "type": "object",
      "properties": {
        "stats": {
          "$ref": "#/definitions/v1beta1Stat"
        }
      },
      "description": "Metric cell."
    },
    "v1beta1Point": {
      "type": "object",
      "properties": {
        "point": {
          "type": "integer",
          "format": "int64",
          "description": "The serial number of the chart point from the largest time in the time interval to the lowest time in the time range."
        },
        "time_frame": {
          "type": "integer",
          "format": "int64",
          "description": "Duration beetween two points."
        },
        "timestamp": {
          "type": "string",
          "description": "Time of point in format RFC3339."
        },
        "load": {
          "type": "number",
          "format": "float",
          "description": "load is query_time / time_range."
        },
        "num_queries_per_sec": {
          "type": "number",
          "format": "float",
          "description": "number of queries in bucket."
        },
        "num_queries_with_errors_per_sec": {
          "type": "number",
          "format": "float",
          "description": "number of queries with errors."
        },
        "num_queries_with_warnings_per_sec": {
          "type": "number",
          "format": "float",
          "description": "number of queries with warnings."
        },
        "m_query_time_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The statement execution time in seconds."
        },
        "m_lock_time_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The time to acquire locks in seconds."
        },
        "m_rows_sent_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The number of rows sent to the client."
        },
        "m_rows_examined_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Number of rows scanned - SELECT."
        },
        "m_rows_affected_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Number of rows changed - UPDATE, DELETE, INSERT."
        },
        "m_rows_read_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The number of rows read from tables."
        },
        "m_merge_passes_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The number of merge passes that the sort algorithm has had to do."
        },
        "m_innodb_io_r_ops_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Counts the number of page read operations scheduled."
        },
        "m_innodb_io_r_bytes_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Similar to innodb_IO_r_ops, but the unit is bytes."
        },
        "m_innodb_io_r_wait_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Shows how long (in seconds) it took InnoDB to actually read the data from storage."
        },
        "m_innodb_rec_lock_wait_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Shows how long (in seconds) the query waited for row locks."
        },
        "m_innodb_queue_wait_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Shows how long (in seconds) the query spent either waiting to enter the InnoDB queue or inside that queue waiting for execution."
        },
        "m_innodb_pages_distinct_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Counts approximately the number of unique pages the query accessed."
        },
        "m_query_length_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Shows how long the query is."
        },
        "m_bytes_sent_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The number of bytes sent to all clients."
        },
        "m_tmp_tables_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Number of temporary tables created on memory for the query."
        },
        "m_tmp_disk_tables_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Number of temporary tables created on disk for the query."
        },
        "m_tmp_table_sizes_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total Size in bytes for all temporary tables used in the query."
        },
        "m_qc_hit_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Boolean metrics:\n- *_sum_per_sec - how many times this matric was true.\n\nQuery Cache hits."
        },
        "m_full_scan_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The query performed a full table scan."
        },
        "m_full_join_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The query performed a full join (a join without indexes)."
        },
        "m_tmp_table_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The query created an implicit internal temporary table."
        },
        "m_tmp_table_on_disk_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The querys temporary table was stored on disk."
        },
        "m_filesort_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The query used a filesort."
        },
        "m_filesort_on_disk_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The filesort was performed on disk."
        },
        "m_select_full_range_join_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The number of joins that used a range search on a reference table."
        },
        "m_select_range_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The number of joins that used ranges on the first table."
        },
        "m_select_range_check_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The number of joins without keys that check for key usage after each row."
        },
        "m_sort_range_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The number of sorts that were done using ranges."
        },
        "m_sort_rows_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The number of sorted rows."
        },
        "m_sort_scan_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The number of sorts that were done by scanning the table."
        },
        "m_no_index_used_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The number of queries without index."
        },
        "m_no_good_index_used_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The number of queries without good index."
        },
        "m_docs_returned_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "MongoDB metrics.\n\nThe number of returned documents."
        },
        "m_response_length_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The response length of the query result in bytes."
        },
        "m_docs_scanned_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "The number of scanned documents."
        },
        "m_shared_blks_hit_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "PostgreSQL metrics.\n\nTotal number of shared block cache hits by the statement."
        },
        "m_shared_blks_read_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total number of shared blocks read by the statement."
        },
        "m_shared_blks_dirtied_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total number of shared blocks dirtied by the statement."
        },
        "m_shared_blks_written_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total number of shared blocks written by the statement."
        },
        "m_local_blks_hit_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total number of local block cache hits by the statement."
        },
        "m_local_blks_read_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total number of local blocks read by the statement."
        },
        "m_local_blks_dirtied_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total number of local blocks dirtied by the statement."
        },
        "m_local_blks_written_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total number of local blocks written by the statement."
        },
        "m_temp_blks_read_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total number of temp blocks read by the statement."
        },
        "m_temp_blks_written_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total number of temp blocks written by the statement."
        },
        "m_blk_read_time_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total time the statement spent reading blocks, in milliseconds (if track_io_timing is enabled, otherwise zero)."
        },
        "m_blk_write_time_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total time the statement spent writing blocks, in milliseconds (if track_io_timing is enabled, otherwise zero)."
        },
        "m_cpu_user_time_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total time user spent in query."
        },
        "m_cpu_sys_time_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total time system spent in query."
        },
        "m_plans_calls_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total number of planned calls.",
          "title": "pg_stat_monitor 0.9 metrics"
        },
        "m_wal_records_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total number of WAL (Write-ahead logging) records."
        },
        "m_wal_fpi_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total number of FPI (full page images) in WAL (Write-ahead logging) records."
        },
        "m_wal_bytes_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Total bytes of WAL (Write-ahead logging) records."
        },
        "m_plan_time_sum_per_sec": {
          "type": "number",
          "format": "float",
          "description": "Plan time in per seconds."
        }
      },
      "description": "Point contains values that represents abscissa (time) and ordinate (volume etc.)\nof every point in a coordinate system of Sparklines."
    },
    "v1beta1ReportMapFieldEntry": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "ReportMapFieldEntry allows to pass labels/dimentions in form like {\"server\": [\"db1\", \"db2\"...]}."
    },
    "v1beta1ReportReply": {
      "type": "object",
      "properties": {
        "total_rows": {
          "type": "integer",
          "format": "int64"
        },
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "limit": {
          "type": "integer",
          "format": "int64"
        },
        "rows": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Row"
          }
        }
      },
      "description": "ReportReply is list of reports per quieryids, hosts etc."
    },
    "v1beta1ReportRequest": {
      "type": "object",
      "properties": {
        "period_start_from": {
          "type": "string",
          "format": "date-time"
        },
        "period_start_to": {
          "type": "string",
          "format": "date-time"
        },
        "group_by": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1ReportMapFieldEntry"
          }
        },
        "columns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "order_by": {
          "type": "string"
        },
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "limit": {
          "type": "integer",
          "format": "int64"
        },
        "main_metric": {
          "type": "string"
        },
        "search": {
          "type": "string"
        }
      },
      "description": "ReportRequest defines filtering of metrics report for db server or other dimentions."
    },
    "v1beta1Row": {
      "type": "object",
      "properties": {
        "rank": {
          "type": "integer",
          "format": "int64"
        },
        "dimension": {
          "type": "string"
        },
        "database": {
          "type": "string"
        },
        "metrics": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/v1beta1Metric"
          }
        },
        "sparkline": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Point"
          }
        },
        "fingerprint": {
          "type": "string"
        },
        "num_queries": {
          "type": "integer",
          "format": "int64"
        },
        "qps": {
          "type": "number",
          "format": "float"
        },
        "load": {
          "type": "number",
          "format": "float"
        }
      },
      "description": "Row define metrics for selected dimention."
    },
    "v1beta1Stat": {
      "type": "object",
      "properties": {
        "rate": {
          "type": "number",
          "format": "float"
        },
        "cnt": {
          "type": "number",
          "format": "float"
        },
        "sum": {
          "type": "number",
          "format": "float"
        },
        "min": {
          "type": "number",
          "format": "float"
        },
        "max": {
          "type": "number",
          "format": "float"
        },
        "p99": {
          "type": "number",
          "format": "float"
        },
        "avg": {
          "type": "number",
          "format": "float"
        },
        "sum_per_sec": {
          "type": "number",
          "format": "float"
        }
      },
      "description": "Stat is statistics of specific metric."
    }
  }
}
