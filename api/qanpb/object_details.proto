syntax = "proto3";

package qan.v1beta1;

option go_package = "api/qanpb;qanpb";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "qanpb/qan.proto";

// ObjectDetails serves agregated metrics filtered by given dimension value and period.
service ObjectDetails {
  // GetMetrics gets map of metrics for specific filtering.
  rpc GetMetrics(MetricsRequest) returns (MetricsReply) {
    option (google.api.http) = {
      post: "/v0/qan/ObjectDetails/GetMetrics"
      body: "*"
    };
  }
  // GetQueryExample gets list of query examples.
  rpc GetQueryExample(QueryExampleRequest) returns (QueryExampleReply) {
    option (google.api.http) = {
      post: "/v0/qan/ObjectDetails/GetQueryExample"
      body: "*"
    };
  }
  // GetLabels gets list of labels for object details.
  rpc GetLabels(ObjectDetailsLabelsRequest) returns (ObjectDetailsLabelsReply) {
    option (google.api.http) = {
      post: "/v0/qan/ObjectDetails/GetLabels"
      body: "*"
    };
  }
  // GetQueryPlan gets query plan and plan id for specific filtering.
  rpc GetQueryPlan(QueryPlanRequest) returns (QueryPlanReply) {
    option (google.api.http) = {
      post: "/v0/qan/ObjectDetails/GetQueryPlan"
      body: "*"
    };
  }
  // GetHistogram gets histogram items for specific filtering.
  rpc GetHistogram(HistogramRequest) returns (HistogramReply) {
    option (google.api.http) = {
      post: "/v0/qan/ObjectDetails/GetHistogram"
      body: "*"
    };
  }
}

// MetricsRequest defines filtering of metrics for specific value of dimension (ex.: host=hostname1 or queryid=1D410B4BE5060972.
message MetricsRequest {
  google.protobuf.Timestamp period_start_from = 1;
  google.protobuf.Timestamp period_start_to = 2;
  // dimension value: ex: queryid - 1D410B4BE5060972.
  string filter_by = 3;
  // one of dimension: queryid | host ...
  string group_by = 4;
  repeated MapFieldEntry labels = 5;
  repeated string include_only_fields = 6;
  // retrieve only values for totals, excluding N/A values
  bool totals = 7;
}

// MetricsReply defines metrics for specific value of dimension (ex.: host=hostname1 or queryid=1D410B4BE5060972.
message MetricsReply {
  map<string, MetricValues> metrics = 3;
  map<string, string> text_metrics = 7;
  repeated Point sparkline = 4;
  map<string, MetricValues> totals = 5;
  string fingerprint = 6;
}

// MetricValues is statistics of specific metric.
message MetricValues {
  float rate = 1;
  float cnt = 2;
  float sum = 3;
  float min = 4;
  float max = 5;
  float avg = 6;
  float p99 = 7;
  float percent_of_total = 8;
}

// Labels are list of labels or dimensions values.
message Labels {
  repeated string value = 1;
}

// QueryExampleRequest defines filtering of query examples for specific value of
// dimension (ex.: host=hostname1 or queryid=1D410B4BE5060972.
message QueryExampleRequest {
  google.protobuf.Timestamp period_start_from = 1;
  google.protobuf.Timestamp period_start_to = 2;
  // dimension value: ex: queryid - 1D410B4BE5060972.
  string filter_by = 3;
  // one of dimension: queryid | host ...
  string group_by = 4;
  repeated MapFieldEntry labels = 5;
  uint32 limit = 6;
}

// QueryExampleReply list of query examples.
message QueryExampleReply {
  repeated QueryExample query_examples = 1;
}

// QueryExample shows query examples and their metrics.
message QueryExample {
  string example = 1;
  // Deprecated: should not be used, should be removed.
  ExampleFormat example_format = 2 [deprecated = true];
  ExampleType example_type = 3;
  uint32 is_truncated = 4;
  string example_metrics = 5;
  string service_id = 6;
  string service_type = 7;
  string schema = 8;
  repeated string tables = 9;
}

// ObjectDetailsLabelsRequest defines filtering of object detail's labels for specific value of
// dimension (ex.: host=hostname1 or queryid=1D410B4BE5060972.
message ObjectDetailsLabelsRequest {
  google.protobuf.Timestamp period_start_from = 1;
  google.protobuf.Timestamp period_start_to = 2;
  // dimension value: ex: queryid - 1D410B4BE5060972.
  string filter_by = 3;
  // one of dimension: queryid | host ...
  string group_by = 4;
}

// ObjectDetailsLabelsReply is a map of labels names as keys and labels values as a list.
message ObjectDetailsLabelsReply {
  map<string, ListLabelValues> labels = 1;
}

// ListLabelValues is list of label's values.
message ListLabelValues {
  repeated string values = 1;
}

// QueryPlanRequest defines filtering by queryid.
message QueryPlanRequest {
  string queryid = 1;
}

// QueryPlanReply contains planid and query_plan.
message QueryPlanReply {
  string planid = 1;
  string query_plan = 2;
}

// HistogramRequest defines filtering by time range, labels and queryid.
message HistogramRequest {
  google.protobuf.Timestamp period_start_from = 1;
  google.protobuf.Timestamp period_start_to = 2;
  repeated MapFieldEntry labels = 3;
  string queryid = 4;
}

// HistogramReply is histogram items as a list.
message HistogramReply {
  repeated HistogramItem histogram_items = 1;
}

// HistogramItem represents one item in histogram.
message HistogramItem {
  string range = 1;
  uint32 frequency = 2;
}
