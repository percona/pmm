// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             (unknown)
// source: managementpb/dbaas/psmdb_clusters.proto

package dbaasv1beta1

import (
	context "context"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PSMDBClustersClient is the client API for PSMDBClusters service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PSMDBClustersClient interface {
	// GetPSMDBClusterCredentials returns a PSMDB cluster credentials by cluster name.
	GetPSMDBClusterCredentials(ctx context.Context, in *GetPSMDBClusterCredentialsRequest, opts ...grpc.CallOption) (*GetPSMDBClusterCredentialsResponse, error)
	// CreatePSMDBCluster creates a new PSMDB cluster.
	CreatePSMDBCluster(ctx context.Context, in *CreatePSMDBClusterRequest, opts ...grpc.CallOption) (*CreatePSMDBClusterResponse, error)
	// UpdatePSMDBCluster updates existing PSMDB cluster.
	UpdatePSMDBCluster(ctx context.Context, in *UpdatePSMDBClusterRequest, opts ...grpc.CallOption) (*UpdatePSMDBClusterResponse, error)
	// GetPSMDBClusterResources returns expected resources to be consumed by the cluster.
	GetPSMDBClusterResources(ctx context.Context, in *GetPSMDBClusterResourcesRequest, opts ...grpc.CallOption) (*GetPSMDBClusterResourcesResponse, error)
}

type pSMDBClustersClient struct {
	cc grpc.ClientConnInterface
}

func NewPSMDBClustersClient(cc grpc.ClientConnInterface) PSMDBClustersClient {
	return &pSMDBClustersClient{cc}
}

func (c *pSMDBClustersClient) GetPSMDBClusterCredentials(ctx context.Context, in *GetPSMDBClusterCredentialsRequest, opts ...grpc.CallOption) (*GetPSMDBClusterCredentialsResponse, error) {
	out := new(GetPSMDBClusterCredentialsResponse)
	err := c.cc.Invoke(ctx, "/dbaas.v1beta1.PSMDBClusters/GetPSMDBClusterCredentials", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pSMDBClustersClient) CreatePSMDBCluster(ctx context.Context, in *CreatePSMDBClusterRequest, opts ...grpc.CallOption) (*CreatePSMDBClusterResponse, error) {
	out := new(CreatePSMDBClusterResponse)
	err := c.cc.Invoke(ctx, "/dbaas.v1beta1.PSMDBClusters/CreatePSMDBCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pSMDBClustersClient) UpdatePSMDBCluster(ctx context.Context, in *UpdatePSMDBClusterRequest, opts ...grpc.CallOption) (*UpdatePSMDBClusterResponse, error) {
	out := new(UpdatePSMDBClusterResponse)
	err := c.cc.Invoke(ctx, "/dbaas.v1beta1.PSMDBClusters/UpdatePSMDBCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pSMDBClustersClient) GetPSMDBClusterResources(ctx context.Context, in *GetPSMDBClusterResourcesRequest, opts ...grpc.CallOption) (*GetPSMDBClusterResourcesResponse, error) {
	out := new(GetPSMDBClusterResourcesResponse)
	err := c.cc.Invoke(ctx, "/dbaas.v1beta1.PSMDBClusters/GetPSMDBClusterResources", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PSMDBClustersServer is the server API for PSMDBClusters service.
// All implementations must embed UnimplementedPSMDBClustersServer
// for forward compatibility
type PSMDBClustersServer interface {
	// GetPSMDBClusterCredentials returns a PSMDB cluster credentials by cluster name.
	GetPSMDBClusterCredentials(context.Context, *GetPSMDBClusterCredentialsRequest) (*GetPSMDBClusterCredentialsResponse, error)
	// CreatePSMDBCluster creates a new PSMDB cluster.
	CreatePSMDBCluster(context.Context, *CreatePSMDBClusterRequest) (*CreatePSMDBClusterResponse, error)
	// UpdatePSMDBCluster updates existing PSMDB cluster.
	UpdatePSMDBCluster(context.Context, *UpdatePSMDBClusterRequest) (*UpdatePSMDBClusterResponse, error)
	// GetPSMDBClusterResources returns expected resources to be consumed by the cluster.
	GetPSMDBClusterResources(context.Context, *GetPSMDBClusterResourcesRequest) (*GetPSMDBClusterResourcesResponse, error)
	mustEmbedUnimplementedPSMDBClustersServer()
}

// UnimplementedPSMDBClustersServer must be embedded to have forward compatible implementations.
type UnimplementedPSMDBClustersServer struct{}

func (UnimplementedPSMDBClustersServer) GetPSMDBClusterCredentials(context.Context, *GetPSMDBClusterCredentialsRequest) (*GetPSMDBClusterCredentialsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPSMDBClusterCredentials not implemented")
}

func (UnimplementedPSMDBClustersServer) CreatePSMDBCluster(context.Context, *CreatePSMDBClusterRequest) (*CreatePSMDBClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePSMDBCluster not implemented")
}

func (UnimplementedPSMDBClustersServer) UpdatePSMDBCluster(context.Context, *UpdatePSMDBClusterRequest) (*UpdatePSMDBClusterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePSMDBCluster not implemented")
}

func (UnimplementedPSMDBClustersServer) GetPSMDBClusterResources(context.Context, *GetPSMDBClusterResourcesRequest) (*GetPSMDBClusterResourcesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPSMDBClusterResources not implemented")
}
func (UnimplementedPSMDBClustersServer) mustEmbedUnimplementedPSMDBClustersServer() {}

// UnsafePSMDBClustersServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PSMDBClustersServer will
// result in compilation errors.
type UnsafePSMDBClustersServer interface {
	mustEmbedUnimplementedPSMDBClustersServer()
}

func RegisterPSMDBClustersServer(s grpc.ServiceRegistrar, srv PSMDBClustersServer) {
	s.RegisterService(&PSMDBClusters_ServiceDesc, srv)
}

func _PSMDBClusters_GetPSMDBClusterCredentials_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPSMDBClusterCredentialsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PSMDBClustersServer).GetPSMDBClusterCredentials(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dbaas.v1beta1.PSMDBClusters/GetPSMDBClusterCredentials",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PSMDBClustersServer).GetPSMDBClusterCredentials(ctx, req.(*GetPSMDBClusterCredentialsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PSMDBClusters_CreatePSMDBCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePSMDBClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PSMDBClustersServer).CreatePSMDBCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dbaas.v1beta1.PSMDBClusters/CreatePSMDBCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PSMDBClustersServer).CreatePSMDBCluster(ctx, req.(*CreatePSMDBClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PSMDBClusters_UpdatePSMDBCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePSMDBClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PSMDBClustersServer).UpdatePSMDBCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dbaas.v1beta1.PSMDBClusters/UpdatePSMDBCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PSMDBClustersServer).UpdatePSMDBCluster(ctx, req.(*UpdatePSMDBClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PSMDBClusters_GetPSMDBClusterResources_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPSMDBClusterResourcesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PSMDBClustersServer).GetPSMDBClusterResources(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dbaas.v1beta1.PSMDBClusters/GetPSMDBClusterResources",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PSMDBClustersServer).GetPSMDBClusterResources(ctx, req.(*GetPSMDBClusterResourcesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PSMDBClusters_ServiceDesc is the grpc.ServiceDesc for PSMDBClusters service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PSMDBClusters_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "dbaas.v1beta1.PSMDBClusters",
	HandlerType: (*PSMDBClustersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPSMDBClusterCredentials",
			Handler:    _PSMDBClusters_GetPSMDBClusterCredentials_Handler,
		},
		{
			MethodName: "CreatePSMDBCluster",
			Handler:    _PSMDBClusters_CreatePSMDBCluster_Handler,
		},
		{
			MethodName: "UpdatePSMDBCluster",
			Handler:    _PSMDBClusters_UpdatePSMDBCluster_Handler,
		},
		{
			MethodName: "GetPSMDBClusterResources",
			Handler:    _PSMDBClusters_GetPSMDBClusterResources_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "managementpb/dbaas/psmdb_clusters.proto",
}
