// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: server/v1/server.proto

package serverv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"

	common "github.com/percona/pmm/api/common"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DistributionMethod defines PMM Server distribution method: Docker image, OVF/OVA, or AMI.
type DistributionMethod int32

const (
	DistributionMethod_DISTRIBUTION_METHOD_UNSPECIFIED DistributionMethod = 0
	DistributionMethod_DISTRIBUTION_METHOD_DOCKER      DistributionMethod = 1
	DistributionMethod_DISTRIBUTION_METHOD_OVF         DistributionMethod = 2
	DistributionMethod_DISTRIBUTION_METHOD_AMI         DistributionMethod = 3
	DistributionMethod_DISTRIBUTION_METHOD_AZURE       DistributionMethod = 4
	DistributionMethod_DISTRIBUTION_METHOD_DO          DistributionMethod = 5
)

// Enum value maps for DistributionMethod.
var (
	DistributionMethod_name = map[int32]string{
		0: "DISTRIBUTION_METHOD_UNSPECIFIED",
		1: "DISTRIBUTION_METHOD_DOCKER",
		2: "DISTRIBUTION_METHOD_OVF",
		3: "DISTRIBUTION_METHOD_AMI",
		4: "DISTRIBUTION_METHOD_AZURE",
		5: "DISTRIBUTION_METHOD_DO",
	}
	DistributionMethod_value = map[string]int32{
		"DISTRIBUTION_METHOD_UNSPECIFIED": 0,
		"DISTRIBUTION_METHOD_DOCKER":      1,
		"DISTRIBUTION_METHOD_OVF":         2,
		"DISTRIBUTION_METHOD_AMI":         3,
		"DISTRIBUTION_METHOD_AZURE":       4,
		"DISTRIBUTION_METHOD_DO":          5,
	}
)

func (x DistributionMethod) Enum() *DistributionMethod {
	p := new(DistributionMethod)
	*p = x
	return p
}

func (x DistributionMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DistributionMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_server_v1_server_proto_enumTypes[0].Descriptor()
}

func (DistributionMethod) Type() protoreflect.EnumType {
	return &file_server_v1_server_proto_enumTypes[0]
}

func (x DistributionMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DistributionMethod.Descriptor instead.
func (DistributionMethod) EnumDescriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{0}
}

// VersionInfo describes component version, or PMM Server as a whole.
type VersionInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User-visible version.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Full version for debugging.
	FullVersion string `protobuf:"bytes,2,opt,name=full_version,json=fullVersion,proto3" json:"full_version,omitempty"`
	// Build or release date.
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionInfo) Reset() {
	*x = VersionInfo{}
	mi := &file_server_v1_server_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionInfo) ProtoMessage() {}

func (x *VersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionInfo.ProtoReflect.Descriptor instead.
func (*VersionInfo) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{0}
}

func (x *VersionInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VersionInfo) GetFullVersion() string {
	if x != nil {
		return x.FullVersion
	}
	return ""
}

func (x *VersionInfo) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type VersionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Dummy parameter for internal testing. Do not use.
	Dummy         string `protobuf:"bytes,1,opt,name=dummy,proto3" json:"dummy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionRequest) Reset() {
	*x = VersionRequest{}
	mi := &file_server_v1_server_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionRequest) ProtoMessage() {}

func (x *VersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionRequest.ProtoReflect.Descriptor instead.
func (*VersionRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{1}
}

func (x *VersionRequest) GetDummy() string {
	if x != nil {
		return x.Dummy
	}
	return ""
}

type VersionResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PMM Server version.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Detailed PMM Server version information.
	Server *VersionInfo `protobuf:"bytes,2,opt,name=server,proto3" json:"server,omitempty"`
	// pmm-managed version information for debugging.
	Managed *VersionInfo `protobuf:"bytes,3,opt,name=managed,proto3" json:"managed,omitempty"`
	// PMM Server distribution method.
	DistributionMethod DistributionMethod `protobuf:"varint,4,opt,name=distribution_method,json=distributionMethod,proto3,enum=server.v1.DistributionMethod" json:"distribution_method,omitempty"` // TODO Versions and statuses of Grafana, Prometheus, PostgreSQL, qan-api2, ClickHouse, pmm-agent, etc.
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	mi := &file_server_v1_server_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{2}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VersionResponse) GetServer() *VersionInfo {
	if x != nil {
		return x.Server
	}
	return nil
}

func (x *VersionResponse) GetManaged() *VersionInfo {
	if x != nil {
		return x.Managed
	}
	return nil
}

func (x *VersionResponse) GetDistributionMethod() DistributionMethod {
	if x != nil {
		return x.DistributionMethod
	}
	return DistributionMethod_DISTRIBUTION_METHOD_UNSPECIFIED
}

type ReadinessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadinessRequest) Reset() {
	*x = ReadinessRequest{}
	mi := &file_server_v1_server_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessRequest) ProtoMessage() {}

func (x *ReadinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessRequest.ProtoReflect.Descriptor instead.
func (*ReadinessRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{3}
}

type ReadinessResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadinessResponse) Reset() {
	*x = ReadinessResponse{}
	mi := &file_server_v1_server_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessResponse) ProtoMessage() {}

func (x *ReadinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessResponse.ProtoReflect.Descriptor instead.
func (*ReadinessResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{4}
}

type LeaderHealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderHealthCheckRequest) Reset() {
	*x = LeaderHealthCheckRequest{}
	mi := &file_server_v1_server_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderHealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderHealthCheckRequest) ProtoMessage() {}

func (x *LeaderHealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderHealthCheckRequest.ProtoReflect.Descriptor instead.
func (*LeaderHealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{5}
}

type LeaderHealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderHealthCheckResponse) Reset() {
	*x = LeaderHealthCheckResponse{}
	mi := &file_server_v1_server_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderHealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderHealthCheckResponse) ProtoMessage() {}

func (x *LeaderHealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderHealthCheckResponse.ProtoReflect.Descriptor instead.
func (*LeaderHealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{6}
}

type CheckUpdatesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If false, cached information may be returned.
	Force bool `protobuf:"varint,1,opt,name=force,proto3" json:"force,omitempty"`
	// If true, only installed version will be in response.
	OnlyInstalledVersion bool `protobuf:"varint,2,opt,name=only_installed_version,json=onlyInstalledVersion,proto3" json:"only_installed_version,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CheckUpdatesRequest) Reset() {
	*x = CheckUpdatesRequest{}
	mi := &file_server_v1_server_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUpdatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUpdatesRequest) ProtoMessage() {}

func (x *CheckUpdatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUpdatesRequest.ProtoReflect.Descriptor instead.
func (*CheckUpdatesRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{7}
}

func (x *CheckUpdatesRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

func (x *CheckUpdatesRequest) GetOnlyInstalledVersion() bool {
	if x != nil {
		return x.OnlyInstalledVersion
	}
	return false
}

type DockerVersionInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// PMM Version.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Docker image tag.
	Tag string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	// Release date.
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Release notes URL for the version (if available).
	ReleaseNotesUrl string `protobuf:"bytes,4,opt,name=release_notes_url,json=releaseNotesUrl,proto3" json:"release_notes_url,omitempty"`
	// Release notes text for the version (if available).
	ReleaseNotesText string `protobuf:"bytes,5,opt,name=release_notes_text,json=releaseNotesText,proto3" json:"release_notes_text,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *DockerVersionInfo) Reset() {
	*x = DockerVersionInfo{}
	mi := &file_server_v1_server_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerVersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerVersionInfo) ProtoMessage() {}

func (x *DockerVersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerVersionInfo.ProtoReflect.Descriptor instead.
func (*DockerVersionInfo) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{8}
}

func (x *DockerVersionInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DockerVersionInfo) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *DockerVersionInfo) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DockerVersionInfo) GetReleaseNotesUrl() string {
	if x != nil {
		return x.ReleaseNotesUrl
	}
	return ""
}

func (x *DockerVersionInfo) GetReleaseNotesText() string {
	if x != nil {
		return x.ReleaseNotesText
	}
	return ""
}

type CheckUpdatesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Currently installed PMM Server version.
	Installed *VersionInfo `protobuf:"bytes,1,opt,name=installed,proto3" json:"installed,omitempty"`
	// Latest available PMM Server version.
	Latest *DockerVersionInfo `protobuf:"bytes,2,opt,name=latest,proto3" json:"latest,omitempty"`
	// True if there is a PMM Server update available.
	UpdateAvailable bool `protobuf:"varint,3,opt,name=update_available,json=updateAvailable,proto3" json:"update_available,omitempty"`
	// Latest available PMM Server release announcement URL.
	LatestNewsUrl string `protobuf:"bytes,4,opt,name=latest_news_url,json=latestNewsUrl,proto3" json:"latest_news_url,omitempty"`
	// Last check time.
	LastCheck     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_check,json=lastCheck,proto3" json:"last_check,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckUpdatesResponse) Reset() {
	*x = CheckUpdatesResponse{}
	mi := &file_server_v1_server_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUpdatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUpdatesResponse) ProtoMessage() {}

func (x *CheckUpdatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUpdatesResponse.ProtoReflect.Descriptor instead.
func (*CheckUpdatesResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{9}
}

func (x *CheckUpdatesResponse) GetInstalled() *VersionInfo {
	if x != nil {
		return x.Installed
	}
	return nil
}

func (x *CheckUpdatesResponse) GetLatest() *DockerVersionInfo {
	if x != nil {
		return x.Latest
	}
	return nil
}

func (x *CheckUpdatesResponse) GetUpdateAvailable() bool {
	if x != nil {
		return x.UpdateAvailable
	}
	return false
}

func (x *CheckUpdatesResponse) GetLatestNewsUrl() string {
	if x != nil {
		return x.LatestNewsUrl
	}
	return ""
}

func (x *CheckUpdatesResponse) GetLastCheck() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCheck
	}
	return nil
}

type ListChangeLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChangeLogsRequest) Reset() {
	*x = ListChangeLogsRequest{}
	mi := &file_server_v1_server_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChangeLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChangeLogsRequest) ProtoMessage() {}

func (x *ListChangeLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChangeLogsRequest.ProtoReflect.Descriptor instead.
func (*ListChangeLogsRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{10}
}

type ListChangeLogsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of available updates.
	Updates []*DockerVersionInfo `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
	// Last check time.
	LastCheck     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=last_check,json=lastCheck,proto3" json:"last_check,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListChangeLogsResponse) Reset() {
	*x = ListChangeLogsResponse{}
	mi := &file_server_v1_server_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListChangeLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListChangeLogsResponse) ProtoMessage() {}

func (x *ListChangeLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListChangeLogsResponse.ProtoReflect.Descriptor instead.
func (*ListChangeLogsResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{11}
}

func (x *ListChangeLogsResponse) GetUpdates() []*DockerVersionInfo {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *ListChangeLogsResponse) GetLastCheck() *timestamppb.Timestamp {
	if x != nil {
		return x.LastCheck
	}
	return nil
}

type StartUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewImage      string                 `protobuf:"bytes,1,opt,name=new_image,json=newImage,proto3" json:"new_image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartUpdateRequest) Reset() {
	*x = StartUpdateRequest{}
	mi := &file_server_v1_server_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartUpdateRequest) ProtoMessage() {}

func (x *StartUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartUpdateRequest.ProtoReflect.Descriptor instead.
func (*StartUpdateRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{12}
}

func (x *StartUpdateRequest) GetNewImage() string {
	if x != nil {
		return x.NewImage
	}
	return ""
}

type StartUpdateResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Authentication token for getting update statuses.
	AuthToken string `protobuf:"bytes,1,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	// Progress log offset.
	LogOffset     uint32 `protobuf:"varint,2,opt,name=log_offset,json=logOffset,proto3" json:"log_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartUpdateResponse) Reset() {
	*x = StartUpdateResponse{}
	mi := &file_server_v1_server_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartUpdateResponse) ProtoMessage() {}

func (x *StartUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartUpdateResponse.ProtoReflect.Descriptor instead.
func (*StartUpdateResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{13}
}

func (x *StartUpdateResponse) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *StartUpdateResponse) GetLogOffset() uint32 {
	if x != nil {
		return x.LogOffset
	}
	return 0
}

type UpdateStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Authentication token.
	AuthToken string `protobuf:"bytes,1,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	// Progress log offset.
	LogOffset     uint32 `protobuf:"varint,2,opt,name=log_offset,json=logOffset,proto3" json:"log_offset,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStatusRequest) Reset() {
	*x = UpdateStatusRequest{}
	mi := &file_server_v1_server_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusRequest) ProtoMessage() {}

func (x *UpdateStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateStatusRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateStatusRequest) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *UpdateStatusRequest) GetLogOffset() uint32 {
	if x != nil {
		return x.LogOffset
	}
	return 0
}

type UpdateStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Progress log lines.
	LogLines []string `protobuf:"bytes,1,rep,name=log_lines,json=logLines,proto3" json:"log_lines,omitempty"`
	// Progress log offset for the next request.
	LogOffset uint32 `protobuf:"varint,2,opt,name=log_offset,json=logOffset,proto3" json:"log_offset,omitempty"`
	// True when update is done.
	Done          bool `protobuf:"varint,3,opt,name=done,proto3" json:"done,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateStatusResponse) Reset() {
	*x = UpdateStatusResponse{}
	mi := &file_server_v1_server_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateStatusResponse) ProtoMessage() {}

func (x *UpdateStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateStatusResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateStatusResponse) GetLogLines() []string {
	if x != nil {
		return x.LogLines
	}
	return nil
}

func (x *UpdateStatusResponse) GetLogOffset() uint32 {
	if x != nil {
		return x.LogOffset
	}
	return 0
}

func (x *UpdateStatusResponse) GetDone() bool {
	if x != nil {
		return x.Done
	}
	return false
}

// MetricsResolutions represents Prometheus exporters metrics resolutions.
type MetricsResolutions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// High resolution. Should have a suffix in JSON: 1s, 1m, 1h.
	Hr *durationpb.Duration `protobuf:"bytes,1,opt,name=hr,proto3" json:"hr,omitempty"`
	// Medium resolution. Should have a suffix in JSON: 1s, 1m, 1h.
	Mr *durationpb.Duration `protobuf:"bytes,2,opt,name=mr,proto3" json:"mr,omitempty"`
	// Low resolution. Should have a suffix in JSON: 1s, 1m, 1h.
	Lr            *durationpb.Duration `protobuf:"bytes,3,opt,name=lr,proto3" json:"lr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricsResolutions) Reset() {
	*x = MetricsResolutions{}
	mi := &file_server_v1_server_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricsResolutions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricsResolutions) ProtoMessage() {}

func (x *MetricsResolutions) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricsResolutions.ProtoReflect.Descriptor instead.
func (*MetricsResolutions) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{16}
}

func (x *MetricsResolutions) GetHr() *durationpb.Duration {
	if x != nil {
		return x.Hr
	}
	return nil
}

func (x *MetricsResolutions) GetMr() *durationpb.Duration {
	if x != nil {
		return x.Mr
	}
	return nil
}

func (x *MetricsResolutions) GetLr() *durationpb.Duration {
	if x != nil {
		return x.Lr
	}
	return nil
}

// AdvisorRunIntervals represents intervals between each run of Advisor checks.
type AdvisorRunIntervals struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Standard check interval.
	StandardInterval *durationpb.Duration `protobuf:"bytes,1,opt,name=standard_interval,json=standardInterval,proto3" json:"standard_interval,omitempty"`
	// Interval for rare check runs.
	RareInterval *durationpb.Duration `protobuf:"bytes,2,opt,name=rare_interval,json=rareInterval,proto3" json:"rare_interval,omitempty"`
	// Interval for frequent check runs.
	FrequentInterval *durationpb.Duration `protobuf:"bytes,3,opt,name=frequent_interval,json=frequentInterval,proto3" json:"frequent_interval,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *AdvisorRunIntervals) Reset() {
	*x = AdvisorRunIntervals{}
	mi := &file_server_v1_server_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdvisorRunIntervals) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvisorRunIntervals) ProtoMessage() {}

func (x *AdvisorRunIntervals) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvisorRunIntervals.ProtoReflect.Descriptor instead.
func (*AdvisorRunIntervals) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{17}
}

func (x *AdvisorRunIntervals) GetStandardInterval() *durationpb.Duration {
	if x != nil {
		return x.StandardInterval
	}
	return nil
}

func (x *AdvisorRunIntervals) GetRareInterval() *durationpb.Duration {
	if x != nil {
		return x.RareInterval
	}
	return nil
}

func (x *AdvisorRunIntervals) GetFrequentInterval() *durationpb.Duration {
	if x != nil {
		return x.FrequentInterval
	}
	return nil
}

// Settings represents PMM Server settings.
type Settings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// True if updates are enabled.
	UpdatesEnabled bool `protobuf:"varint,1,opt,name=updates_enabled,json=updatesEnabled,proto3" json:"updates_enabled,omitempty"`
	// True if telemetry is enabled.
	TelemetryEnabled   bool                 `protobuf:"varint,2,opt,name=telemetry_enabled,json=telemetryEnabled,proto3" json:"telemetry_enabled,omitempty"`
	MetricsResolutions *MetricsResolutions  `protobuf:"bytes,3,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	DataRetention      *durationpb.Duration `protobuf:"bytes,4,opt,name=data_retention,json=dataRetention,proto3" json:"data_retention,omitempty"`
	SshKey             string               `protobuf:"bytes,5,opt,name=ssh_key,json=sshKey,proto3" json:"ssh_key,omitempty"`
	AwsPartitions      []string             `protobuf:"bytes,6,rep,name=aws_partitions,json=awsPartitions,proto3" json:"aws_partitions,omitempty"`
	// True if Advisor is enabled.
	AdvisorEnabled bool `protobuf:"varint,7,opt,name=advisor_enabled,json=advisorEnabled,proto3" json:"advisor_enabled,omitempty"`
	// Percona Platform user's email, if this PMM instance is linked to the Platform.
	PlatformEmail string `protobuf:"bytes,8,opt,name=platform_email,json=platformEmail,proto3" json:"platform_email,omitempty"`
	// True if Alerting is enabled.
	AlertingEnabled bool `protobuf:"varint,10,opt,name=alerting_enabled,json=alertingEnabled,proto3" json:"alerting_enabled,omitempty"`
	// PMM Server public address.
	PmmPublicAddress string `protobuf:"bytes,11,opt,name=pmm_public_address,json=pmmPublicAddress,proto3" json:"pmm_public_address,omitempty"`
	// Intervals between Advisor runs.
	AdvisorRunIntervals *AdvisorRunIntervals `protobuf:"bytes,12,opt,name=advisor_run_intervals,json=advisorRunIntervals,proto3" json:"advisor_run_intervals,omitempty"`
	// True if Backup Management is enabled.
	BackupManagementEnabled bool `protobuf:"varint,13,opt,name=backup_management_enabled,json=backupManagementEnabled,proto3" json:"backup_management_enabled,omitempty"`
	// True if Azure Discover is enabled.
	AzurediscoverEnabled bool `protobuf:"varint,14,opt,name=azurediscover_enabled,json=azurediscoverEnabled,proto3" json:"azurediscover_enabled,omitempty"`
	// True if the PMM instance is connected to Platform
	ConnectedToPlatform bool `protobuf:"varint,15,opt,name=connected_to_platform,json=connectedToPlatform,proto3" json:"connected_to_platform,omitempty"`
	// Includes list of collected telemetry
	TelemetrySummaries []string `protobuf:"bytes,16,rep,name=telemetry_summaries,json=telemetrySummaries,proto3" json:"telemetry_summaries,omitempty"`
	// True if Access Control is enabled.
	EnableAccessControl bool `protobuf:"varint,17,opt,name=enable_access_control,json=enableAccessControl,proto3" json:"enable_access_control,omitempty"`
	// Default Access Control role ID for new users.
	DefaultRoleId uint32 `protobuf:"varint,18,opt,name=default_role_id,json=defaultRoleId,proto3" json:"default_role_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Settings) Reset() {
	*x = Settings{}
	mi := &file_server_v1_server_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings) ProtoMessage() {}

func (x *Settings) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings.ProtoReflect.Descriptor instead.
func (*Settings) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{18}
}

func (x *Settings) GetUpdatesEnabled() bool {
	if x != nil {
		return x.UpdatesEnabled
	}
	return false
}

func (x *Settings) GetTelemetryEnabled() bool {
	if x != nil {
		return x.TelemetryEnabled
	}
	return false
}

func (x *Settings) GetMetricsResolutions() *MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

func (x *Settings) GetDataRetention() *durationpb.Duration {
	if x != nil {
		return x.DataRetention
	}
	return nil
}

func (x *Settings) GetSshKey() string {
	if x != nil {
		return x.SshKey
	}
	return ""
}

func (x *Settings) GetAwsPartitions() []string {
	if x != nil {
		return x.AwsPartitions
	}
	return nil
}

func (x *Settings) GetAdvisorEnabled() bool {
	if x != nil {
		return x.AdvisorEnabled
	}
	return false
}

func (x *Settings) GetPlatformEmail() string {
	if x != nil {
		return x.PlatformEmail
	}
	return ""
}

func (x *Settings) GetAlertingEnabled() bool {
	if x != nil {
		return x.AlertingEnabled
	}
	return false
}

func (x *Settings) GetPmmPublicAddress() string {
	if x != nil {
		return x.PmmPublicAddress
	}
	return ""
}

func (x *Settings) GetAdvisorRunIntervals() *AdvisorRunIntervals {
	if x != nil {
		return x.AdvisorRunIntervals
	}
	return nil
}

func (x *Settings) GetBackupManagementEnabled() bool {
	if x != nil {
		return x.BackupManagementEnabled
	}
	return false
}

func (x *Settings) GetAzurediscoverEnabled() bool {
	if x != nil {
		return x.AzurediscoverEnabled
	}
	return false
}

func (x *Settings) GetConnectedToPlatform() bool {
	if x != nil {
		return x.ConnectedToPlatform
	}
	return false
}

func (x *Settings) GetTelemetrySummaries() []string {
	if x != nil {
		return x.TelemetrySummaries
	}
	return nil
}

func (x *Settings) GetEnableAccessControl() bool {
	if x != nil {
		return x.EnableAccessControl
	}
	return false
}

func (x *Settings) GetDefaultRoleId() uint32 {
	if x != nil {
		return x.DefaultRoleId
	}
	return 0
}

// ReadOnlySettings represents a stripped-down version of PMM Server settings that can be accessed by users of all roles.
type ReadOnlySettings struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// True if updates are enabled.
	UpdatesEnabled bool `protobuf:"varint,1,opt,name=updates_enabled,json=updatesEnabled,proto3" json:"updates_enabled,omitempty"`
	// True if telemetry is enabled.
	TelemetryEnabled bool `protobuf:"varint,2,opt,name=telemetry_enabled,json=telemetryEnabled,proto3" json:"telemetry_enabled,omitempty"`
	// True if Advisor is enabled.
	AdvisorEnabled bool `protobuf:"varint,3,opt,name=advisor_enabled,json=advisorEnabled,proto3" json:"advisor_enabled,omitempty"`
	// True if Alerting is enabled.
	AlertingEnabled bool `protobuf:"varint,4,opt,name=alerting_enabled,json=alertingEnabled,proto3" json:"alerting_enabled,omitempty"`
	// PMM Server public address.
	PmmPublicAddress string `protobuf:"bytes,5,opt,name=pmm_public_address,json=pmmPublicAddress,proto3" json:"pmm_public_address,omitempty"`
	// True if Backup Management is enabled.
	BackupManagementEnabled bool `protobuf:"varint,6,opt,name=backup_management_enabled,json=backupManagementEnabled,proto3" json:"backup_management_enabled,omitempty"`
	// True if Azure Discover is enabled.
	AzurediscoverEnabled bool `protobuf:"varint,7,opt,name=azurediscover_enabled,json=azurediscoverEnabled,proto3" json:"azurediscover_enabled,omitempty"`
	// True if Access Control is enabled.
	EnableAccessControl bool `protobuf:"varint,8,opt,name=enable_access_control,json=enableAccessControl,proto3" json:"enable_access_control,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ReadOnlySettings) Reset() {
	*x = ReadOnlySettings{}
	mi := &file_server_v1_server_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadOnlySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadOnlySettings) ProtoMessage() {}

func (x *ReadOnlySettings) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadOnlySettings.ProtoReflect.Descriptor instead.
func (*ReadOnlySettings) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{19}
}

func (x *ReadOnlySettings) GetUpdatesEnabled() bool {
	if x != nil {
		return x.UpdatesEnabled
	}
	return false
}

func (x *ReadOnlySettings) GetTelemetryEnabled() bool {
	if x != nil {
		return x.TelemetryEnabled
	}
	return false
}

func (x *ReadOnlySettings) GetAdvisorEnabled() bool {
	if x != nil {
		return x.AdvisorEnabled
	}
	return false
}

func (x *ReadOnlySettings) GetAlertingEnabled() bool {
	if x != nil {
		return x.AlertingEnabled
	}
	return false
}

func (x *ReadOnlySettings) GetPmmPublicAddress() string {
	if x != nil {
		return x.PmmPublicAddress
	}
	return ""
}

func (x *ReadOnlySettings) GetBackupManagementEnabled() bool {
	if x != nil {
		return x.BackupManagementEnabled
	}
	return false
}

func (x *ReadOnlySettings) GetAzurediscoverEnabled() bool {
	if x != nil {
		return x.AzurediscoverEnabled
	}
	return false
}

func (x *ReadOnlySettings) GetEnableAccessControl() bool {
	if x != nil {
		return x.EnableAccessControl
	}
	return false
}

type GetSettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSettingsRequest) Reset() {
	*x = GetSettingsRequest{}
	mi := &file_server_v1_server_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsRequest) ProtoMessage() {}

func (x *GetSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetSettingsRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{20}
}

type GetReadOnlySettingsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReadOnlySettingsRequest) Reset() {
	*x = GetReadOnlySettingsRequest{}
	mi := &file_server_v1_server_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReadOnlySettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadOnlySettingsRequest) ProtoMessage() {}

func (x *GetReadOnlySettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadOnlySettingsRequest.ProtoReflect.Descriptor instead.
func (*GetReadOnlySettingsRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{21}
}

type GetSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Settings      *Settings              `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSettingsResponse) Reset() {
	*x = GetSettingsResponse{}
	mi := &file_server_v1_server_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsResponse) ProtoMessage() {}

func (x *GetSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetSettingsResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{22}
}

func (x *GetSettingsResponse) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type GetReadOnlySettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Settings      *ReadOnlySettings      `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReadOnlySettingsResponse) Reset() {
	*x = GetReadOnlySettingsResponse{}
	mi := &file_server_v1_server_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReadOnlySettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadOnlySettingsResponse) ProtoMessage() {}

func (x *GetReadOnlySettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadOnlySettingsResponse.ProtoReflect.Descriptor instead.
func (*GetReadOnlySettingsResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{23}
}

func (x *GetReadOnlySettingsResponse) GetSettings() *ReadOnlySettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type ChangeSettingsRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	EnableUpdates      *bool                  `protobuf:"varint,1,opt,name=enable_updates,json=enableUpdates,proto3,oneof" json:"enable_updates,omitempty"`
	EnableTelemetry    *bool                  `protobuf:"varint,2,opt,name=enable_telemetry,json=enableTelemetry,proto3,oneof" json:"enable_telemetry,omitempty"`
	MetricsResolutions *MetricsResolutions    `protobuf:"bytes,3,opt,name=metrics_resolutions,json=metricsResolutions,proto3" json:"metrics_resolutions,omitempty"`
	// A number of full days for Prometheus and QAN data retention. Should have a suffix in JSON: 2592000s, 43200m, 720h.
	DataRetention *durationpb.Duration `protobuf:"bytes,4,opt,name=data_retention,json=dataRetention,proto3" json:"data_retention,omitempty"`
	SshKey        *string              `protobuf:"bytes,5,opt,name=ssh_key,json=sshKey,proto3,oneof" json:"ssh_key,omitempty"`
	AwsPartitions *common.StringArray  `protobuf:"bytes,6,opt,name=aws_partitions,json=awsPartitions,proto3,oneof" json:"aws_partitions,omitempty"`
	// Enable Advisor.
	EnableAdvisor *bool `protobuf:"varint,7,opt,name=enable_advisor,json=enableAdvisor,proto3,oneof" json:"enable_advisor,omitempty"`
	// Enable Alerting.
	EnableAlerting *bool `protobuf:"varint,8,opt,name=enable_alerting,json=enableAlerting,proto3,oneof" json:"enable_alerting,omitempty"`
	// PMM Server public address.
	PmmPublicAddress *string `protobuf:"bytes,9,opt,name=pmm_public_address,json=pmmPublicAddress,proto3,oneof" json:"pmm_public_address,omitempty"`
	// Intervals between Advisor runs.
	AdvisorRunIntervals *AdvisorRunIntervals `protobuf:"bytes,10,opt,name=advisor_run_intervals,json=advisorRunIntervals,proto3" json:"advisor_run_intervals,omitempty"`
	// Enable Azure Discover.
	EnableAzurediscover *bool `protobuf:"varint,11,opt,name=enable_azurediscover,json=enableAzurediscover,proto3,oneof" json:"enable_azurediscover,omitempty"`
	// Enable Backup Management.
	EnableBackupManagement *bool `protobuf:"varint,12,opt,name=enable_backup_management,json=enableBackupManagement,proto3,oneof" json:"enable_backup_management,omitempty"`
	// Enable Access Control
	EnableAccessControl *bool `protobuf:"varint,13,opt,name=enable_access_control,json=enableAccessControl,proto3,oneof" json:"enable_access_control,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ChangeSettingsRequest) Reset() {
	*x = ChangeSettingsRequest{}
	mi := &file_server_v1_server_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSettingsRequest) ProtoMessage() {}

func (x *ChangeSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSettingsRequest.ProtoReflect.Descriptor instead.
func (*ChangeSettingsRequest) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{24}
}

func (x *ChangeSettingsRequest) GetEnableUpdates() bool {
	if x != nil && x.EnableUpdates != nil {
		return *x.EnableUpdates
	}
	return false
}

func (x *ChangeSettingsRequest) GetEnableTelemetry() bool {
	if x != nil && x.EnableTelemetry != nil {
		return *x.EnableTelemetry
	}
	return false
}

func (x *ChangeSettingsRequest) GetMetricsResolutions() *MetricsResolutions {
	if x != nil {
		return x.MetricsResolutions
	}
	return nil
}

func (x *ChangeSettingsRequest) GetDataRetention() *durationpb.Duration {
	if x != nil {
		return x.DataRetention
	}
	return nil
}

func (x *ChangeSettingsRequest) GetSshKey() string {
	if x != nil && x.SshKey != nil {
		return *x.SshKey
	}
	return ""
}

func (x *ChangeSettingsRequest) GetAwsPartitions() *common.StringArray {
	if x != nil {
		return x.AwsPartitions
	}
	return nil
}

func (x *ChangeSettingsRequest) GetEnableAdvisor() bool {
	if x != nil && x.EnableAdvisor != nil {
		return *x.EnableAdvisor
	}
	return false
}

func (x *ChangeSettingsRequest) GetEnableAlerting() bool {
	if x != nil && x.EnableAlerting != nil {
		return *x.EnableAlerting
	}
	return false
}

func (x *ChangeSettingsRequest) GetPmmPublicAddress() string {
	if x != nil && x.PmmPublicAddress != nil {
		return *x.PmmPublicAddress
	}
	return ""
}

func (x *ChangeSettingsRequest) GetAdvisorRunIntervals() *AdvisorRunIntervals {
	if x != nil {
		return x.AdvisorRunIntervals
	}
	return nil
}

func (x *ChangeSettingsRequest) GetEnableAzurediscover() bool {
	if x != nil && x.EnableAzurediscover != nil {
		return *x.EnableAzurediscover
	}
	return false
}

func (x *ChangeSettingsRequest) GetEnableBackupManagement() bool {
	if x != nil && x.EnableBackupManagement != nil {
		return *x.EnableBackupManagement
	}
	return false
}

func (x *ChangeSettingsRequest) GetEnableAccessControl() bool {
	if x != nil && x.EnableAccessControl != nil {
		return *x.EnableAccessControl
	}
	return false
}

type ChangeSettingsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Settings      *Settings              `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChangeSettingsResponse) Reset() {
	*x = ChangeSettingsResponse{}
	mi := &file_server_v1_server_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChangeSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSettingsResponse) ProtoMessage() {}

func (x *ChangeSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_server_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSettingsResponse.ProtoReflect.Descriptor instead.
func (*ChangeSettingsResponse) Descriptor() ([]byte, []int) {
	return file_server_v1_server_proto_rawDescGZIP(), []int{25}
}

func (x *ChangeSettingsResponse) GetSettings() *Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

var File_server_v1_server_proto protoreflect.FileDescriptor

const file_server_v1_server_proto_rawDesc = "" +
	"\n" +
	"\x16server/v1/server.proto\x12\tserver.v1\x1a\x13common/common.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x84\x01\n" +
	"\vVersionInfo\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12!\n" +
	"\ffull_version\x18\x02 \x01(\tR\vfullVersion\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"&\n" +
	"\x0eVersionRequest\x12\x14\n" +
	"\x05dummy\x18\x01 \x01(\tR\x05dummy\"\xdd\x01\n" +
	"\x0fVersionResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12.\n" +
	"\x06server\x18\x02 \x01(\v2\x16.server.v1.VersionInfoR\x06server\x120\n" +
	"\amanaged\x18\x03 \x01(\v2\x16.server.v1.VersionInfoR\amanaged\x12N\n" +
	"\x13distribution_method\x18\x04 \x01(\x0e2\x1d.server.v1.DistributionMethodR\x12distributionMethod\"\x12\n" +
	"\x10ReadinessRequest\"\x13\n" +
	"\x11ReadinessResponse\"\x1a\n" +
	"\x18LeaderHealthCheckRequest\"\x1b\n" +
	"\x19LeaderHealthCheckResponse\"a\n" +
	"\x13CheckUpdatesRequest\x12\x14\n" +
	"\x05force\x18\x01 \x01(\bR\x05force\x124\n" +
	"\x16only_installed_version\x18\x02 \x01(\bR\x14onlyInstalledVersion\"\xd3\x01\n" +
	"\x11DockerVersionInfo\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x10\n" +
	"\x03tag\x18\x02 \x01(\tR\x03tag\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12*\n" +
	"\x11release_notes_url\x18\x04 \x01(\tR\x0freleaseNotesUrl\x12,\n" +
	"\x12release_notes_text\x18\x05 \x01(\tR\x10releaseNotesText\"\x90\x02\n" +
	"\x14CheckUpdatesResponse\x124\n" +
	"\tinstalled\x18\x01 \x01(\v2\x16.server.v1.VersionInfoR\tinstalled\x124\n" +
	"\x06latest\x18\x02 \x01(\v2\x1c.server.v1.DockerVersionInfoR\x06latest\x12)\n" +
	"\x10update_available\x18\x03 \x01(\bR\x0fupdateAvailable\x12&\n" +
	"\x0flatest_news_url\x18\x04 \x01(\tR\rlatestNewsUrl\x129\n" +
	"\n" +
	"last_check\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tlastCheck\"\x17\n" +
	"\x15ListChangeLogsRequest\"\x8b\x01\n" +
	"\x16ListChangeLogsResponse\x126\n" +
	"\aupdates\x18\x01 \x03(\v2\x1c.server.v1.DockerVersionInfoR\aupdates\x129\n" +
	"\n" +
	"last_check\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tlastCheck\"1\n" +
	"\x12StartUpdateRequest\x12\x1b\n" +
	"\tnew_image\x18\x01 \x01(\tR\bnewImage\"S\n" +
	"\x13StartUpdateResponse\x12\x1d\n" +
	"\n" +
	"auth_token\x18\x01 \x01(\tR\tauthToken\x12\x1d\n" +
	"\n" +
	"log_offset\x18\x02 \x01(\rR\tlogOffset\"S\n" +
	"\x13UpdateStatusRequest\x12\x1d\n" +
	"\n" +
	"auth_token\x18\x01 \x01(\tR\tauthToken\x12\x1d\n" +
	"\n" +
	"log_offset\x18\x02 \x01(\rR\tlogOffset\"f\n" +
	"\x14UpdateStatusResponse\x12\x1b\n" +
	"\tlog_lines\x18\x01 \x03(\tR\blogLines\x12\x1d\n" +
	"\n" +
	"log_offset\x18\x02 \x01(\rR\tlogOffset\x12\x12\n" +
	"\x04done\x18\x03 \x01(\bR\x04done\"\x95\x01\n" +
	"\x12MetricsResolutions\x12)\n" +
	"\x02hr\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x02hr\x12)\n" +
	"\x02mr\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\x02mr\x12)\n" +
	"\x02lr\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x02lr\"\xe5\x01\n" +
	"\x13AdvisorRunIntervals\x12F\n" +
	"\x11standard_interval\x18\x01 \x01(\v2\x19.google.protobuf.DurationR\x10standardInterval\x12>\n" +
	"\rrare_interval\x18\x02 \x01(\v2\x19.google.protobuf.DurationR\frareInterval\x12F\n" +
	"\x11frequent_interval\x18\x03 \x01(\v2\x19.google.protobuf.DurationR\x10frequentInterval\"\xe1\x06\n" +
	"\bSettings\x12'\n" +
	"\x0fupdates_enabled\x18\x01 \x01(\bR\x0eupdatesEnabled\x12+\n" +
	"\x11telemetry_enabled\x18\x02 \x01(\bR\x10telemetryEnabled\x12N\n" +
	"\x13metrics_resolutions\x18\x03 \x01(\v2\x1d.server.v1.MetricsResolutionsR\x12metricsResolutions\x12@\n" +
	"\x0edata_retention\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\rdataRetention\x12\x17\n" +
	"\assh_key\x18\x05 \x01(\tR\x06sshKey\x12%\n" +
	"\x0eaws_partitions\x18\x06 \x03(\tR\rawsPartitions\x12'\n" +
	"\x0fadvisor_enabled\x18\a \x01(\bR\x0eadvisorEnabled\x12%\n" +
	"\x0eplatform_email\x18\b \x01(\tR\rplatformEmail\x12)\n" +
	"\x10alerting_enabled\x18\n" +
	" \x01(\bR\x0falertingEnabled\x12,\n" +
	"\x12pmm_public_address\x18\v \x01(\tR\x10pmmPublicAddress\x12R\n" +
	"\x15advisor_run_intervals\x18\f \x01(\v2\x1e.server.v1.AdvisorRunIntervalsR\x13advisorRunIntervals\x12:\n" +
	"\x19backup_management_enabled\x18\r \x01(\bR\x17backupManagementEnabled\x123\n" +
	"\x15azurediscover_enabled\x18\x0e \x01(\bR\x14azurediscoverEnabled\x122\n" +
	"\x15connected_to_platform\x18\x0f \x01(\bR\x13connectedToPlatform\x12/\n" +
	"\x13telemetry_summaries\x18\x10 \x03(\tR\x12telemetrySummaries\x122\n" +
	"\x15enable_access_control\x18\x11 \x01(\bR\x13enableAccessControl\x12&\n" +
	"\x0fdefault_role_id\x18\x12 \x01(\rR\rdefaultRoleId\"\x8f\x03\n" +
	"\x10ReadOnlySettings\x12'\n" +
	"\x0fupdates_enabled\x18\x01 \x01(\bR\x0eupdatesEnabled\x12+\n" +
	"\x11telemetry_enabled\x18\x02 \x01(\bR\x10telemetryEnabled\x12'\n" +
	"\x0fadvisor_enabled\x18\x03 \x01(\bR\x0eadvisorEnabled\x12)\n" +
	"\x10alerting_enabled\x18\x04 \x01(\bR\x0falertingEnabled\x12,\n" +
	"\x12pmm_public_address\x18\x05 \x01(\tR\x10pmmPublicAddress\x12:\n" +
	"\x19backup_management_enabled\x18\x06 \x01(\bR\x17backupManagementEnabled\x123\n" +
	"\x15azurediscover_enabled\x18\a \x01(\bR\x14azurediscoverEnabled\x122\n" +
	"\x15enable_access_control\x18\b \x01(\bR\x13enableAccessControl\"\x14\n" +
	"\x12GetSettingsRequest\"\x1c\n" +
	"\x1aGetReadOnlySettingsRequest\"F\n" +
	"\x13GetSettingsResponse\x12/\n" +
	"\bsettings\x18\x01 \x01(\v2\x13.server.v1.SettingsR\bsettings\"V\n" +
	"\x1bGetReadOnlySettingsResponse\x127\n" +
	"\bsettings\x18\x01 \x01(\v2\x1b.server.v1.ReadOnlySettingsR\bsettings\"\xca\a\n" +
	"\x15ChangeSettingsRequest\x12*\n" +
	"\x0eenable_updates\x18\x01 \x01(\bH\x00R\renableUpdates\x88\x01\x01\x12.\n" +
	"\x10enable_telemetry\x18\x02 \x01(\bH\x01R\x0fenableTelemetry\x88\x01\x01\x12N\n" +
	"\x13metrics_resolutions\x18\x03 \x01(\v2\x1d.server.v1.MetricsResolutionsR\x12metricsResolutions\x12@\n" +
	"\x0edata_retention\x18\x04 \x01(\v2\x19.google.protobuf.DurationR\rdataRetention\x12\x1c\n" +
	"\assh_key\x18\x05 \x01(\tH\x02R\x06sshKey\x88\x01\x01\x12?\n" +
	"\x0eaws_partitions\x18\x06 \x01(\v2\x13.common.StringArrayH\x03R\rawsPartitions\x88\x01\x01\x12*\n" +
	"\x0eenable_advisor\x18\a \x01(\bH\x04R\renableAdvisor\x88\x01\x01\x12,\n" +
	"\x0fenable_alerting\x18\b \x01(\bH\x05R\x0eenableAlerting\x88\x01\x01\x121\n" +
	"\x12pmm_public_address\x18\t \x01(\tH\x06R\x10pmmPublicAddress\x88\x01\x01\x12R\n" +
	"\x15advisor_run_intervals\x18\n" +
	" \x01(\v2\x1e.server.v1.AdvisorRunIntervalsR\x13advisorRunIntervals\x126\n" +
	"\x14enable_azurediscover\x18\v \x01(\bH\aR\x13enableAzurediscover\x88\x01\x01\x12=\n" +
	"\x18enable_backup_management\x18\f \x01(\bH\bR\x16enableBackupManagement\x88\x01\x01\x127\n" +
	"\x15enable_access_control\x18\r \x01(\bH\tR\x13enableAccessControl\x88\x01\x01B\x11\n" +
	"\x0f_enable_updatesB\x13\n" +
	"\x11_enable_telemetryB\n" +
	"\n" +
	"\b_ssh_keyB\x11\n" +
	"\x0f_aws_partitionsB\x11\n" +
	"\x0f_enable_advisorB\x12\n" +
	"\x10_enable_alertingB\x15\n" +
	"\x13_pmm_public_addressB\x17\n" +
	"\x15_enable_azurediscoverB\x1b\n" +
	"\x19_enable_backup_managementB\x18\n" +
	"\x16_enable_access_control\"I\n" +
	"\x16ChangeSettingsResponse\x12/\n" +
	"\bsettings\x18\x01 \x01(\v2\x13.server.v1.SettingsR\bsettings*\xce\x01\n" +
	"\x12DistributionMethod\x12#\n" +
	"\x1fDISTRIBUTION_METHOD_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aDISTRIBUTION_METHOD_DOCKER\x10\x01\x12\x1b\n" +
	"\x17DISTRIBUTION_METHOD_OVF\x10\x02\x12\x1b\n" +
	"\x17DISTRIBUTION_METHOD_AMI\x10\x03\x12\x1d\n" +
	"\x19DISTRIBUTION_METHOD_AZURE\x10\x04\x12\x1a\n" +
	"\x16DISTRIBUTION_METHOD_DO\x10\x052\xd9\x0f\n" +
	"\rServerService\x12\x86\x01\n" +
	"\aVersion\x12\x19.server.v1.VersionRequest\x1a\x1a.server.v1.VersionResponse\"D\x92A'\x12\aVersion\x1a\x1cReturns PMM Server versions.\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/server/version\x12\xab\x02\n" +
	"\tReadiness\x12\x1b.server.v1.ReadinessRequest\x1a\x1c.server.v1.ReadinessResponse\"\xe2\x01\x92A\xc5\x01\x12\x16Check server readiness\x1a\xaa\x01Returns an error when Server components being restarted are not ready yet. Use this API for checking the health of Docker containers and for probing Kubernetes readiness.\x82\xd3\xe4\x93\x02\x13\x12\x11/v1/server/readyz\x12\x81\x02\n" +
	"\x11LeaderHealthCheck\x12#.server.v1.LeaderHealthCheckRequest\x1a$.server.v1.LeaderHealthCheckResponse\"\xa0\x01\x92Ay\x12\x10Check Leadership\x1aeChecks if the instance is the leader in a cluster. Returns an error if the instance isn't the leader.\x82\xd3\xe4\x93\x02\x1e\x12\x1c/v1/server/leaderHealthCheck\x12\xa7\x01\n" +
	"\fCheckUpdates\x12\x1e.server.v1.CheckUpdatesRequest\x1a\x1f.server.v1.CheckUpdatesResponse\"V\x92A9\x12\rCheck updates\x1a(Checks for available PMM Server updates.\x82\xd3\xe4\x93\x02\x14\x12\x12/v1/server/updates\x12\xe9\x01\n" +
	"\x0eListChangeLogs\x12 .server.v1.ListChangeLogsRequest\x1a!.server.v1.ListChangeLogsResponse\"\x91\x01\x92Ai\x12\x11Get the changelog\x1aTDisplay a changelog comparing the installed version to the latest available version.\x82\xd3\xe4\x93\x02\x1f\x12\x1d/v1/server/updates/changelogs\x12\x9d\x01\n" +
	"\vStartUpdate\x12\x1d.server.v1.StartUpdateRequest\x1a\x1e.server.v1.StartUpdateResponse\"O\x92A)\x12\fStart update\x1a\x19Starts PMM Server update.\x82\xd3\xe4\x93\x02\x1d:\x01*\"\x18/v1/server/updates:start\x12\xad\x01\n" +
	"\fUpdateStatus\x12\x1e.server.v1.UpdateStatusRequest\x1a\x1f.server.v1.UpdateStatusResponse\"\\\x92A2\x12\rUpdate status\x1a!Returns PMM Server update status.\x82\xd3\xe4\x93\x02!:\x01*\"\x1c/v1/server/updates:getStatus\x12\xa0\x01\n" +
	"\vGetSettings\x12\x1d.server.v1.GetSettingsRequest\x1a\x1e.server.v1.GetSettingsResponse\"R\x92A4\x12\fGet settings\x1a$Returns current PMM Server settings.\x82\xd3\xe4\x93\x02\x15\x12\x13/v1/server/settings\x12\xd9\x01\n" +
	"\x13GetReadOnlySettings\x12%.server.v1.GetReadOnlySettingsRequest\x1a&.server.v1.GetReadOnlySettingsResponse\"s\x92AL\x12\x16Get read-only settings\x1a2Returns a stripped version of PMM Server settings.\x82\xd3\xe4\x93\x02\x1e\x12\x1c/v1/server/settings/readonly\x12\xa7\x01\n" +
	"\x0eChangeSettings\x12 .server.v1.ChangeSettingsRequest\x1a!.server.v1.ChangeSettingsResponse\"P\x92A/\x12\x0fChange settings\x1a\x1cChanges PMM Server settings.\x82\xd3\xe4\x93\x02\x18:\x01*\x1a\x13/v1/server/settingsB\x90\x01\n" +
	"\rcom.server.v1B\vServerProtoP\x01Z-github.com/percona/pmm/api/server/v1;serverv1\xa2\x02\x03SXX\xaa\x02\tServer.V1\xca\x02\tServer\\V1\xe2\x02\x15Server\\V1\\GPBMetadata\xea\x02\n" +
	"Server::V1b\x06proto3"

var (
	file_server_v1_server_proto_rawDescOnce sync.Once
	file_server_v1_server_proto_rawDescData []byte
)

func file_server_v1_server_proto_rawDescGZIP() []byte {
	file_server_v1_server_proto_rawDescOnce.Do(func() {
		file_server_v1_server_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_server_v1_server_proto_rawDesc), len(file_server_v1_server_proto_rawDesc)))
	})
	return file_server_v1_server_proto_rawDescData
}

var (
	file_server_v1_server_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_server_v1_server_proto_msgTypes  = make([]protoimpl.MessageInfo, 26)
	file_server_v1_server_proto_goTypes   = []any{
		(DistributionMethod)(0),             // 0: server.v1.DistributionMethod
		(*VersionInfo)(nil),                 // 1: server.v1.VersionInfo
		(*VersionRequest)(nil),              // 2: server.v1.VersionRequest
		(*VersionResponse)(nil),             // 3: server.v1.VersionResponse
		(*ReadinessRequest)(nil),            // 4: server.v1.ReadinessRequest
		(*ReadinessResponse)(nil),           // 5: server.v1.ReadinessResponse
		(*LeaderHealthCheckRequest)(nil),    // 6: server.v1.LeaderHealthCheckRequest
		(*LeaderHealthCheckResponse)(nil),   // 7: server.v1.LeaderHealthCheckResponse
		(*CheckUpdatesRequest)(nil),         // 8: server.v1.CheckUpdatesRequest
		(*DockerVersionInfo)(nil),           // 9: server.v1.DockerVersionInfo
		(*CheckUpdatesResponse)(nil),        // 10: server.v1.CheckUpdatesResponse
		(*ListChangeLogsRequest)(nil),       // 11: server.v1.ListChangeLogsRequest
		(*ListChangeLogsResponse)(nil),      // 12: server.v1.ListChangeLogsResponse
		(*StartUpdateRequest)(nil),          // 13: server.v1.StartUpdateRequest
		(*StartUpdateResponse)(nil),         // 14: server.v1.StartUpdateResponse
		(*UpdateStatusRequest)(nil),         // 15: server.v1.UpdateStatusRequest
		(*UpdateStatusResponse)(nil),        // 16: server.v1.UpdateStatusResponse
		(*MetricsResolutions)(nil),          // 17: server.v1.MetricsResolutions
		(*AdvisorRunIntervals)(nil),         // 18: server.v1.AdvisorRunIntervals
		(*Settings)(nil),                    // 19: server.v1.Settings
		(*ReadOnlySettings)(nil),            // 20: server.v1.ReadOnlySettings
		(*GetSettingsRequest)(nil),          // 21: server.v1.GetSettingsRequest
		(*GetReadOnlySettingsRequest)(nil),  // 22: server.v1.GetReadOnlySettingsRequest
		(*GetSettingsResponse)(nil),         // 23: server.v1.GetSettingsResponse
		(*GetReadOnlySettingsResponse)(nil), // 24: server.v1.GetReadOnlySettingsResponse
		(*ChangeSettingsRequest)(nil),       // 25: server.v1.ChangeSettingsRequest
		(*ChangeSettingsResponse)(nil),      // 26: server.v1.ChangeSettingsResponse
		(*timestamppb.Timestamp)(nil),       // 27: google.protobuf.Timestamp
		(*durationpb.Duration)(nil),         // 28: google.protobuf.Duration
		(*common.StringArray)(nil),          // 29: common.StringArray
	}
)

var file_server_v1_server_proto_depIdxs = []int32{
	27, // 0: server.v1.VersionInfo.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 1: server.v1.VersionResponse.server:type_name -> server.v1.VersionInfo
	1,  // 2: server.v1.VersionResponse.managed:type_name -> server.v1.VersionInfo
	0,  // 3: server.v1.VersionResponse.distribution_method:type_name -> server.v1.DistributionMethod
	27, // 4: server.v1.DockerVersionInfo.timestamp:type_name -> google.protobuf.Timestamp
	1,  // 5: server.v1.CheckUpdatesResponse.installed:type_name -> server.v1.VersionInfo
	9,  // 6: server.v1.CheckUpdatesResponse.latest:type_name -> server.v1.DockerVersionInfo
	27, // 7: server.v1.CheckUpdatesResponse.last_check:type_name -> google.protobuf.Timestamp
	9,  // 8: server.v1.ListChangeLogsResponse.updates:type_name -> server.v1.DockerVersionInfo
	27, // 9: server.v1.ListChangeLogsResponse.last_check:type_name -> google.protobuf.Timestamp
	28, // 10: server.v1.MetricsResolutions.hr:type_name -> google.protobuf.Duration
	28, // 11: server.v1.MetricsResolutions.mr:type_name -> google.protobuf.Duration
	28, // 12: server.v1.MetricsResolutions.lr:type_name -> google.protobuf.Duration
	28, // 13: server.v1.AdvisorRunIntervals.standard_interval:type_name -> google.protobuf.Duration
	28, // 14: server.v1.AdvisorRunIntervals.rare_interval:type_name -> google.protobuf.Duration
	28, // 15: server.v1.AdvisorRunIntervals.frequent_interval:type_name -> google.protobuf.Duration
	17, // 16: server.v1.Settings.metrics_resolutions:type_name -> server.v1.MetricsResolutions
	28, // 17: server.v1.Settings.data_retention:type_name -> google.protobuf.Duration
	18, // 18: server.v1.Settings.advisor_run_intervals:type_name -> server.v1.AdvisorRunIntervals
	19, // 19: server.v1.GetSettingsResponse.settings:type_name -> server.v1.Settings
	20, // 20: server.v1.GetReadOnlySettingsResponse.settings:type_name -> server.v1.ReadOnlySettings
	17, // 21: server.v1.ChangeSettingsRequest.metrics_resolutions:type_name -> server.v1.MetricsResolutions
	28, // 22: server.v1.ChangeSettingsRequest.data_retention:type_name -> google.protobuf.Duration
	29, // 23: server.v1.ChangeSettingsRequest.aws_partitions:type_name -> common.StringArray
	18, // 24: server.v1.ChangeSettingsRequest.advisor_run_intervals:type_name -> server.v1.AdvisorRunIntervals
	19, // 25: server.v1.ChangeSettingsResponse.settings:type_name -> server.v1.Settings
	2,  // 26: server.v1.ServerService.Version:input_type -> server.v1.VersionRequest
	4,  // 27: server.v1.ServerService.Readiness:input_type -> server.v1.ReadinessRequest
	6,  // 28: server.v1.ServerService.LeaderHealthCheck:input_type -> server.v1.LeaderHealthCheckRequest
	8,  // 29: server.v1.ServerService.CheckUpdates:input_type -> server.v1.CheckUpdatesRequest
	11, // 30: server.v1.ServerService.ListChangeLogs:input_type -> server.v1.ListChangeLogsRequest
	13, // 31: server.v1.ServerService.StartUpdate:input_type -> server.v1.StartUpdateRequest
	15, // 32: server.v1.ServerService.UpdateStatus:input_type -> server.v1.UpdateStatusRequest
	21, // 33: server.v1.ServerService.GetSettings:input_type -> server.v1.GetSettingsRequest
	22, // 34: server.v1.ServerService.GetReadOnlySettings:input_type -> server.v1.GetReadOnlySettingsRequest
	25, // 35: server.v1.ServerService.ChangeSettings:input_type -> server.v1.ChangeSettingsRequest
	3,  // 36: server.v1.ServerService.Version:output_type -> server.v1.VersionResponse
	5,  // 37: server.v1.ServerService.Readiness:output_type -> server.v1.ReadinessResponse
	7,  // 38: server.v1.ServerService.LeaderHealthCheck:output_type -> server.v1.LeaderHealthCheckResponse
	10, // 39: server.v1.ServerService.CheckUpdates:output_type -> server.v1.CheckUpdatesResponse
	12, // 40: server.v1.ServerService.ListChangeLogs:output_type -> server.v1.ListChangeLogsResponse
	14, // 41: server.v1.ServerService.StartUpdate:output_type -> server.v1.StartUpdateResponse
	16, // 42: server.v1.ServerService.UpdateStatus:output_type -> server.v1.UpdateStatusResponse
	23, // 43: server.v1.ServerService.GetSettings:output_type -> server.v1.GetSettingsResponse
	24, // 44: server.v1.ServerService.GetReadOnlySettings:output_type -> server.v1.GetReadOnlySettingsResponse
	26, // 45: server.v1.ServerService.ChangeSettings:output_type -> server.v1.ChangeSettingsResponse
	36, // [36:46] is the sub-list for method output_type
	26, // [26:36] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_server_v1_server_proto_init() }
func file_server_v1_server_proto_init() {
	if File_server_v1_server_proto != nil {
		return
	}
	file_server_v1_server_proto_msgTypes[24].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_server_v1_server_proto_rawDesc), len(file_server_v1_server_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_v1_server_proto_goTypes,
		DependencyIndexes: file_server_v1_server_proto_depIdxs,
		EnumInfos:         file_server_v1_server_proto_enumTypes,
		MessageInfos:      file_server_v1_server_proto_msgTypes,
	}.Build()
	File_server_v1_server_proto = out.File
	file_server_v1_server_proto_goTypes = nil
	file_server_v1_server_proto_depIdxs = nil
}
