// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: server/v1/httperror.proto

package serverv1

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Error is the generic error returned from unary RPCs.
type HttpError struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Error string                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	// This is to make the error more compatible with users that expect errors to be Status objects:
	// https://github.com/grpc/grpc/blob/master/src/proto/grpc/status/status.proto
	// It should be the exact same message as the Error field.
	Code          int32        `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message       string       `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Details       []*anypb.Any `protobuf:"bytes,4,rep,name=details,proto3" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpError) Reset() {
	*x = HttpError{}
	mi := &file_server_v1_httperror_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpError) ProtoMessage() {}

func (x *HttpError) ProtoReflect() protoreflect.Message {
	mi := &file_server_v1_httperror_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpError.ProtoReflect.Descriptor instead.
func (*HttpError) Descriptor() ([]byte, []int) {
	return file_server_v1_httperror_proto_rawDescGZIP(), []int{0}
}

func (x *HttpError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *HttpError) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HttpError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HttpError) GetDetails() []*anypb.Any {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_server_v1_httperror_proto protoreflect.FileDescriptor

const file_server_v1_httperror_proto_rawDesc = "" +
	"\n" +
	"\x19server/v1/httperror.proto\x12\tserver.v1\x1a\x19google/protobuf/any.proto\"\x7f\n" +
	"\tHttpError\x12\x14\n" +
	"\x05error\x18\x01 \x01(\tR\x05error\x12\x12\n" +
	"\x04code\x18\x02 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12.\n" +
	"\adetails\x18\x04 \x03(\v2\x14.google.protobuf.AnyR\adetailsB\x93\x01\n" +
	"\rcom.server.v1B\x0eHttperrorProtoP\x01Z-github.com/percona/pmm/api/server/v1;serverv1\xa2\x02\x03SXX\xaa\x02\tServer.V1\xca\x02\tServer\\V1\xe2\x02\x15Server\\V1\\GPBMetadata\xea\x02\n" +
	"Server::V1b\x06proto3"

var (
	file_server_v1_httperror_proto_rawDescOnce sync.Once
	file_server_v1_httperror_proto_rawDescData []byte
)

func file_server_v1_httperror_proto_rawDescGZIP() []byte {
	file_server_v1_httperror_proto_rawDescOnce.Do(func() {
		file_server_v1_httperror_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_server_v1_httperror_proto_rawDesc), len(file_server_v1_httperror_proto_rawDesc)))
	})
	return file_server_v1_httperror_proto_rawDescData
}

var (
	file_server_v1_httperror_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
	file_server_v1_httperror_proto_goTypes  = []any{
		(*HttpError)(nil), // 0: server.v1.HttpError
		(*anypb.Any)(nil), // 1: google.protobuf.Any
	}
)

var file_server_v1_httperror_proto_depIdxs = []int32{
	1, // 0: server.v1.HttpError.details:type_name -> google.protobuf.Any
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_server_v1_httperror_proto_init() }
func file_server_v1_httperror_proto_init() {
	if File_server_v1_httperror_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_server_v1_httperror_proto_rawDesc), len(file_server_v1_httperror_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_v1_httperror_proto_goTypes,
		DependencyIndexes: file_server_v1_httperror_proto_depIdxs,
		MessageInfos:      file_server_v1_httperror_proto_msgTypes,
	}.Build()
	File_server_v1_httperror_proto = out.File
	file_server_v1_httperror_proto_goTypes = nil
	file_server_v1_httperror_proto_depIdxs = nil
}
