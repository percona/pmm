// Code generated by go-swagger; DO NOT EDIT.

package alerting_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListTemplatesParams creates a new ListTemplatesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListTemplatesParams() *ListTemplatesParams {
	return &ListTemplatesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListTemplatesParamsWithTimeout creates a new ListTemplatesParams object
// with the ability to set a timeout on a request.
func NewListTemplatesParamsWithTimeout(timeout time.Duration) *ListTemplatesParams {
	return &ListTemplatesParams{
		timeout: timeout,
	}
}

// NewListTemplatesParamsWithContext creates a new ListTemplatesParams object
// with the ability to set a context for a request.
func NewListTemplatesParamsWithContext(ctx context.Context) *ListTemplatesParams {
	return &ListTemplatesParams{
		Context: ctx,
	}
}

// NewListTemplatesParamsWithHTTPClient creates a new ListTemplatesParams object
// with the ability to set a custom HTTPClient for a request.
func NewListTemplatesParamsWithHTTPClient(client *http.Client) *ListTemplatesParams {
	return &ListTemplatesParams{
		HTTPClient: client,
	}
}

/*
ListTemplatesParams contains all the parameters to send to the API endpoint

	for the list templates operation.

	Typically these are written to a http.Request.
*/
type ListTemplatesParams struct {
	/* PageIndex.

	   Index of the requested page, starts from 0.

	   Format: int32
	*/
	PageIndex *int32

	/* PageSize.

	   Maximum number of results per page.

	   Format: int32
	*/
	PageSize *int32

	/* Reload.

	   If true, template files will be re-read from disk.
	*/
	Reload *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list templates params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListTemplatesParams) WithDefaults() *ListTemplatesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list templates params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListTemplatesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list templates params
func (o *ListTemplatesParams) WithTimeout(timeout time.Duration) *ListTemplatesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list templates params
func (o *ListTemplatesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list templates params
func (o *ListTemplatesParams) WithContext(ctx context.Context) *ListTemplatesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list templates params
func (o *ListTemplatesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list templates params
func (o *ListTemplatesParams) WithHTTPClient(client *http.Client) *ListTemplatesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list templates params
func (o *ListTemplatesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPageIndex adds the pageIndex to the list templates params
func (o *ListTemplatesParams) WithPageIndex(pageIndex *int32) *ListTemplatesParams {
	o.SetPageIndex(pageIndex)
	return o
}

// SetPageIndex adds the pageIndex to the list templates params
func (o *ListTemplatesParams) SetPageIndex(pageIndex *int32) {
	o.PageIndex = pageIndex
}

// WithPageSize adds the pageSize to the list templates params
func (o *ListTemplatesParams) WithPageSize(pageSize *int32) *ListTemplatesParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the list templates params
func (o *ListTemplatesParams) SetPageSize(pageSize *int32) {
	o.PageSize = pageSize
}

// WithReload adds the reload to the list templates params
func (o *ListTemplatesParams) WithReload(reload *bool) *ListTemplatesParams {
	o.SetReload(reload)
	return o
}

// SetReload adds the reload to the list templates params
func (o *ListTemplatesParams) SetReload(reload *bool) {
	o.Reload = reload
}

// WriteToRequest writes these params to a swagger request
func (o *ListTemplatesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {
	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.PageIndex != nil {

		// query param page_index
		var qrPageIndex int32

		if o.PageIndex != nil {
			qrPageIndex = *o.PageIndex
		}
		qPageIndex := swag.FormatInt32(qrPageIndex)
		if qPageIndex != "" {
			if err := r.SetQueryParam("page_index", qPageIndex); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize int32

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt32(qrPageSize)
		if qPageSize != "" {
			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.Reload != nil {

		// query param reload
		var qrReload bool

		if o.Reload != nil {
			qrReload = *o.Reload
		}
		qReload := swag.FormatBool(qrReload)
		if qReload != "" {
			if err := r.SetQueryParam("reload", qReload); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
