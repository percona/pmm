FROM oraclelinux:9-slim

ARG VERSION
ARG BUILD_DATE

ENV LANG=en_US.utf8
ENV GF_PLUGIN_DIR=/srv/grafana/plugins
ENV PERCONA_TELEMETRY_DISABLE=1
ENV PS1="[\u@\h \W] # "

WORKDIR /opt

RUN microdnf -y install epel-release && \
    microdnf -y install ansible-core \
                        ansible-collection-community-general \
                        ansible-collection-community-postgresql \
                        ansible-collection-ansible-posix \
                        glibc-langpack-en \
                        yum \
                        vi && \
                        dnf clean all && \
                        rm -rf /var/cache/dnf

COPY entrypoint.sh ansible /opt/
# COPY RPMS /tmp/RPMS
COPY gitCommit build.json /tmp/

# Use COPY as we want to unarchive it with ansible
# COPY pmm-client.tar.gz /tmp/

RUN --mount=type=bind,source=RPMS,target=/tmp/RPMS \
    --mount=type=bind,source=pmm-client.tar.gz,target=/tmp/pmm-client.tar.gz \
    install -T -p -m 644 /opt/ansible/ansible.cfg /etc/ansible/ansible.cfg && \
    install -T -p -m 644 /opt/ansible/hosts /etc/ansible/hosts && \
    ansible-playbook -vvv /opt/ansible/pmm-docker/main.yml && \
    ansible-playbook -vvv /opt/ansible/pmm-docker/post-build.yml && \
    sed -i '/^assumeyes/d' /etc/dnf/dnf.conf

LABEL org.opencontainers.image.created=${BUILD_DATE}
LABEL org.opencontainers.image.licenses=AGPL-3.0
LABEL org.opencontainers.image.title="Percona Monitoring and Management"
LABEL org.opencontainers.image.vendor="Percona LLC"
LABEL org.opencontainers.image.version=${VERSION}
LABEL org.opencontainers.image.source=https://github.com/percona/pmm/blob/main/build/docker/server/Dockerfile.el9
LABEL org.opencontainers.image.docs=https://docs.percona.com/percona-monitoring-and-management/setting-up/server/docker.html

USER pmm

VOLUME [ "/srv" ]

EXPOSE 8080 8443

HEALTHCHECK --interval=3s --timeout=2s --start-period=10s --retries=3 CMD curl -sf http://127.0.0.1:8080/v1/server/readyz

CMD ["/opt/entrypoint.sh"]
