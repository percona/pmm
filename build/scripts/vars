bin_dir=$(cd $(dirname $0); pwd -P)
# TODO: refactor to pass ${WORKSPACE} as ROOT_DIR from either Jenkins or, if relevant, from GH actions
# NOTE: in most cases, this evaluates to Jenkins ${WORKSPACE} directory when called from pipelines
# Example: /home/ec2-user/workspace/ol9-build-server/, see how it's used in ol9-build-server.groovy
root_dir_tmp=$(cd $(dirname $0)/../../../../../../../..; pwd -P)
root_dir=${ROOT_DIR:-$root_dir_tmp}
tmp_dir=${root_dir}/tmp

# In VERSION file we can have numeric value like '2.0.0' as well as
# alphanumeric value like '2.0.0-alpha3' which can not be used entirely
# e.g. in Version directive in spec files. So we define:
# * full_pmm_version to contain full version and build metadata: '2.0.0-alpha3-PMM-1234-fb-branch-123abc';
# * pmm_version to contain only MAJOR.MINOR.PATCH: '2.0.0';
# * pmm_release to contain only pre-release part (can be empty): 'alpha3'.
pmm_branch=$(git rev-parse --abbrev-ref HEAD)

pmm_base_version=$(cat ${root_dir}/VERSION)
full_pmm_version=${pmm_base_version}-${pmm_branch}-$(git rev-parse --short HEAD)

# TODO Maybe it makes sense to use variable from job here
if [[ ${pmm_branch} =~ release-* || \
      ${pmm_branch} =~ pmm-3.* || \
      ${pmm_branch} == v3 || \
      ${pmm_branch} == "main" ]]; then
    full_pmm_version=${pmm_base_version}
fi

new_pmm_version=$(cat ${root_dir}/VERSION | awk -F'-' '{print $1}')
new_pmm_release=$(cat ${root_dir}/VERSION | awk -F'-' '{print $2}')

# Failsafe during refactoring - check that we did not redefine pmm_version in some other script
if [ -n "${pmm_version}" ] && [ "${new_pmm_version}" != "${pmm_version}" ]; then
    echo "pmm_version is already defined: ${pmm_version}"
    exit 1
fi

pmm_version=${new_pmm_version}
pmm_release=${new_pmm_release}
unset new_pmm_version
unset new_pmm_release
echo -e "\n\n\n>>> full_pmm_version=${full_pmm_version} pmm_version=${pmm_version} pmm_release=${pmm_release}\n\n\n"

rpmbuild_docker_image=${RPMBUILD_DOCKER_IMAGE:-public.ecr.aws/e7j3v3n0/rpmbuild:2}
rpms_dir=${root_dir}/tmp/pmm-server/RPMS
rpmbuild_dir=${root_dir}/sources/pmm/src/github.com/percona/pmm/build/packages/rpm/server
rpmbuild_dist=${RPMBUILD_DIST:-"el7"}
source_dir=${root_dir}/tmp/source/pmm-client-${pmm_version}
binary_dir=${root_dir}/tmp/binary/pmm-client-${pmm_version}
client_properties=${root_dir}/results/pmm-client.properties
docker_file=${DOCKERFILE:-Dockerfile}
docker_tag_file=${root_dir}/results/docker/TAG
docker_client_tag_file=${root_dir}/results/docker/CLIENT_TAG
docker_tarball=${root_dir}/results/docker/pmm-server-${pmm_version}.docker
docker_client_tarball=${root_dir}/results/docker/pmm-client-${pmm_version}.docker
source_tarball=${root_dir}/results/source_tarball/pmm-client-${pmm_version}.tar.gz
binary_tarball=${root_dir}/results/tarball/pmm-client-${pmm_version}.tar.gz

# https://github.com/VictoriaMetrics/VictoriaMetrics/releases/tag/pmm-6401-v1.93.4
vmagent_commit_hash=58ecb9066574f38f1d1c91ace467316e7f175b09
