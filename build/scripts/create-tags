#!/bin/bash
# Important: This script should never cause the pipeline to fail, so that the tags can be created outside of it.
# To run it locally, you need pass the version, i.e. export VERSION=2.39.x
# If run locally, it:
# - it clones the pmm-submodules repo and checks out the branch corresponding to the version
# - does not need to configure git to push using ssh, this user should set it all up ahead of time
# - will use the user's creds and email to tag the repos, therefore sufficient permissions are required

set +o errexit
set +o nounset
set -o xtrace

# List of repositories whose release branches need to be tagged
declare repos=(
    "sources/pmm/src/github.com/percona/pmm"
    "sources/grafana/src/github.com/grafana/grafana"
    "sources/grafana-dashboards"
    "."
)

# These setting are only needed when running in CI (Jenkins or github actions)
if [ -n "$CI" ]; then
  # Configure git settings globally
  git config --global advice.detachedHead false
  git config --global user.email "noreply@percona.com"
  git config --global user.name "PMM Jenkins"

  # Configure git to push using ssh
  export GIT_SSH_COMMAND="/usr/bin/ssh -i ${SSHKEY} -o StrictHostKeyChecking=no -o LogLevel=error -o UserKnownHostsFile=/dev/null"
fi

TAG="v${VERSION}"
echo "We will be tagging repos with a tag: $TAG"

REPO_DIR=pmm-submodules
if [ -d "$REPO_DIR" ]; then
    rm -rf "$REPO_DIR"
fi

if ! git clone --branch "pmm-${VERSION}" https://github.com/Percona-Lab/pmm-submodules "$REPO_DIR"; then
    echo "Fatal: failed to clone pmm-submodules, branch pmm-${VERSION}"
    exit 0 # this is on purpose, we don't want to fail the pipeline
fi

cd "$REPO_DIR" >/dev/null
git submodule update --init --recursive

for REPO in "${repos[@]}"; do

    pushd "$REPO" >/dev/null
        # git remote set-url origin git@github.com:${REPO}.git
        echo "SHA: $(git rev-parse HEAD)"

        # If the tag already exists, we want to delete it and re-tag this SHA
        if git tag -l "$TAG"; then
            echo "Fatal: tag $TAG already exists in $REPO, we won't continue..."
            break
        fi

        git tag --message="Version $VERSION." "$TAG"
        if ! git push origin "$TAG"; then
            echo "Fatal: failed to tag the repository $REPO with $TAG"
            break
        fi
    popd >/dev/null
done

cd -
rm -rf "$REPO_DIR"
unset repos
