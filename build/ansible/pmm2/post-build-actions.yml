---
# This playbook is used in the post-build phase for all pmm2 images (AMI/OVF/Docker).

- hosts: localhost
  become: yes
  gather_facts: yes
  vars:
    pmm_client_repos: "original testing"
    pmm_client_repos_final: "original release"

  tasks:
    # pmm-managed checks when /srv/pmm-distribution exists, that it contains "docker", "ovf" or "ami" (all lowercase)
    - name: Detect distribution        | Create '/srv/pmm-distribution' file for Docker
      when: ansible_virtualization_type == "docker"
      copy:
        content: "docker"
        dest: /srv/pmm-distribution

    - name: Detect distribution        | Create '/srv/pmm-distribution' file for OVF
      when: ansible_virtualization_type == "virtualbox"
      copy:
        content: "ovf"
        dest: /srv/pmm-distribution

    # TODO https://jira.percona.com/browse/PMM-4991
    - name: Detect distribution        | Create '/srv/pmm-distribution' file for AMI
      when: ansible_system_vendor == "Amazon EC2"
      copy:
        content: "ami"
        dest: /srv/pmm-distribution

    - name: Detect distribution        | Create '/srv/pmm-distribution' file for DigitalOcean
      when: ansible_system_vendor == "DigitalOcean"
      copy:
        content: "digitalocean"
        dest: /srv/pmm-distribution

    - name: Disable repo               | Disable testing repo for pmm2-client
      command: percona-release disable {{ pmm_client_repos }}

    # We don't want to enable the release repo for pmm2-client on OracleLinux
    # since no update functionality is supported for it.
    - name: Enable repo                | Enable release repo for pmm2-client
      command: percona-release enable {{ pmm_client_repos_final }}
      # when: ansible_distribution != "OracleLinux"

    - name: pmm-agent                  | Setup pmm-agent
      command: >
        pmm-agent setup
        --config-file=/usr/local/percona/pmm2/config/pmm-agent.yaml
        --skip-registration
        --id=pmm-server
        --server-address=127.0.0.1:443
        --server-insecure-tls

    - name: Reread supervisord configuration
      command: /usr/local/bin/supervisorctl reread
      register: reread_result
      changed_when: "'No config updates to processes' not in reread_result.stdout"

    - name: See what services are running
      debug: var=reread_result.stdout_lines

    - name: Stop pmm-managed before deleting the database
      supervisorctl:
        name: pmm-managed
        state: stopped
        supervisorctl_path: /usr/local/bin/supervisorctl
      # become: true
      # ignore_errors: True

    - name: Close all connections to pmm-managed
      postgresql_query:
        db: pmm-managed
        query: "SELECT pid, pg_terminate_backend(pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = 'pmm-managed' AND pid <> pg_backend_pid();"

    - name: Remove pmm-managed database from postgres
      postgresql_db:
        name: pmm-managed
        state: absent
      # ignore_errors: True

    - name: Remove pmm-managed role from postgres
      postgresql_user:
        name: pmm-managed
        state: absent
      # ignore_errors: True

    - name: Supervisord stop           | Stop supervisord service for AMI/OVF
      when: ansible_virtualization_type != "docker"
      service: name=supervisord state=stopped enabled=yes

    - name: Supervisord stop           | Stop supervisord service for docker
      when: ansible_virtualization_type == "docker"
      shell: /usr/local/bin/supervisorctl shutdown

    - name: Cleanup yum cache          | Cleanup yum cache
      command: yum clean all

      # "yum clean all" function will only remove cache from configured yum repositories
      # Details: https://bugzilla.redhat.com/show_bug.cgi?id=1357083
    - name: Remove yum cache          | Remove yum cache dir
      command: rm -rf /var/cache/yum

    - name: Post-build cleanup         | Cleanup build logs and data
      file: path={{ item }} state=absent
      with_items:
        - /srv/logs
        - /tmp/RPMS
        - /var/log/yum.log
        - /var/log/secure
        - /var/log/wtmp

    - name: Clean Clickhouse dir
      shell: find /srv/clickhouse -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf --

    # This step is required because of a change between VictoriaMetrics 1.77.1 and 1.82.1.
    # VictoriaMetrics tries to atomically rename directories in this folder on startup.
    # With RedHat-based docker images the rename fails with an error "Invalid cross-device link".
    # This is due to the way OverlayFS and kernel works. More info https://github.com/moby/moby/issues/25409
    # This step ensures the directory is empty on startup and the contents are recreated.
    # This is not an issue if the folder is in a volume or mounted from the host OS.
    - name: Recreate /srv/victoriametrics folder
      file:
        state: "{{ item }}"
        path: /srv/victoriametrics
        owner: pmm
        group: pmm
        mode: "0775"
      with_items:
        - absent
        - directory

    - name: Create dir                 | Create '/srv/logs' dir
      file:
        path: /srv/logs
        state: directory
        owner: pmm
        group: pmm
        mode: "0775"
    - name: Remove VBoxGuest            | Remove VBoxGuest
      shell: bash +x /opt/VBoxGuestAdditions*/uninstall.sh
