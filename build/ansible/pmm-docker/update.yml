---
# This playbook contains tasks executed during PMM Server update.
- hosts: localhost
  become: true
  remote_user: root
  gather_facts: true

  environment:
    PATH: /usr/local/bin:{{ ansible_env.PATH }}

  pre_tasks:
    - name: Detect /srv/pmm-distribution
      stat:
        path: /srv/pmm-distribution
      no_log: true
      register: srv_pmm_distribution

    - name: Detect container environment
      set_fact:
        is_docker: '{{ lookup("file", "/srv/pmm-distribution") == "docker" }}'
      no_log: true
      when: srv_pmm_distribution.stat.exists

    - name: Set the variable to true if undefined
      set_fact:
        is_docker: true
      when: is_docker is undefined

  tasks:
    - name: Enable maintenance mode
      copy:
        src: maintenance.html
        dest: /usr/share/pmm-server/maintenance/
        owner: pmm
        group: pmm
        mode: 0644

    # restart pmm-managed-init and pmm-managed first as they may update supervisord configuration on start
    - name: Generate new supervisor config
      command: pmm-managed-init
      register: managed_init_result
      changed_when: True

    - name: Disable pmm-update-perform-init
      ini_file:
        path: /etc/supervisord.d/pmm.ini
        section: program:pmm-update-perform-init
        option: autostart
        value: "false"

    - name: Check that supervisor socket exists
      stat:
        path: /run/supervisor/supervisor.sock
      register: supervisor_socket

    # During build time, this will be the first start of supervisord.
    - name: Start supervisord
      when: not supervisor_socket.stat.exists
      shell: supervisord -c /etc/supervisord.conf &

    - name: Wait until postgres port is present
      wait_for:
        host: localhost
        port: 5432
        timeout: 150

    - name: Run initialization playbook
      include_role:
        name: initialization

    # See https://github.com/Supervisor/supervisor/issues/1264 for explanation
    # why we do reread + stop/remove/add instead of using supervisorctl Ansible module.
    - name: Reread supervisord configuration
      command: supervisorctl reread
      become: true
      become_user: pmm
      become_method: su
      register: reread_result
      changed_when: "'No config updates to processes' not in reread_result.stdout"

    - name: Check reread results
      debug: var=reread_result.stdout_lines

    - name: Restart pmm-managed
      command: "supervisorctl {{ item }} pmm-managed"
      become: true
      become_user: pmm
      become_method: su
      loop: 
        - stop
        - remove
        - add

    # Give pmm-managed time to update supervisord configuration,
    # and give update UI time to catch up after pmm-managed restart
    - name: Wait for pmm-managed
      pause: seconds=10

    # Fix things that should be fixed before restarts.

    - name: Reread supervisord configuration again
      command: supervisorctl reread
      register: reread_result
      changed_when: "'No config updates to processes' not in reread_result.stdout"

    - name: Check reread results
      debug: var=reread_result.stdout_lines

    - name: Restart services
      command: supervisorctl {{ item.1 }} {{ item.0 }}
      become: true
      become_user: pmm
      become_method: su
      with_nested:
        - - nginx
          - grafana
          - qan-api2
          - pmm-agent
        - ["stop", "remove", "add"]

    - name: Check supervisord logs
      shell: sleep 10 && tail -n 200 /srv/logs/supervisord.log

    - name: Check grafana logs
      shell: cat /srv/logs/grafana.log

    # Regenerating pmm.ini and enabling pmm-update-perform-init
    - name: Generate new supervisor config
      command: pmm-managed-init
      become: true
      become_user: pmm
      become_method: su      
      register: managed_init_result
      changed_when: True

    - name: Reread pmm-update-perform-init supervisor config
      command: supervisorctl reread
      register: reread_init__result
      changed_when: "'No config updates to processes' not in reread_init__result.stdout"

    - name: Update/restart other services
      command: supervisorctl update
      register: update_result
      changed_when: "'updated' in update_result.stdout"

    - name: Print other services's logs
      debug: var=update_result.stdout_lines

    - name: Wait for PMM to be ready
      ansible.builtin.uri:
        url: "http://127.0.0.1:7772/v1/readyz"
        status_code: 200
        method: GET
      register: healthcheck
      until: healthcheck is not failed
      retries: 120
      delay: 1

    # SIGUSR2 is sent to supervisord by pmm-managed right before the update for logging to work correctly.
    # We use that fact to show what was restarted during the update.
    - name: Get supervisord logs
      shell: supervisorctl maintail -100000 | tac | awk '!flag; /received SIGUSR2/{flag = 1};' | tac
      register: maintail_result
      changed_when: False

    - name: Print supervisord logs
      debug: var=maintail_result.stdout_lines

    - name: Disable maintenance mode
      file:
        state: absent
        path: /usr/share/pmm-server/maintenance/maintenance.html
