---
    - name: Packages                   | Install OS tools
      yum: name=lvm2 state=installed

    - block:
      - name: Data partition             | list
        shell: ls /dev/sda /dev/sdb /dev/sdc /dev/xvdb | grep -v ^$(pvdisplay -c | grep ':VolGroup00:' | cut -d ':' -f 1 | tr -d '[:space:]' | sed 's/[0-9]$//')$ | grep -v ^$(findmnt -f -n -o SOURCE / | sed 's/[0-9]$//')$ | grep -v ^$(findmnt -f -n -o SOURCE /mnt/resource | sed 's/[0-9]$//')$
        register: available_drives
        failed_when: available_drives.stdout_lines|length != 1
        changed_when: False

      - name: Data partition             | Create Volume Group
        when: enable_lvm == "true"
        lvg:
          vg: DataVG
          pvs: "{{ available_drives.stdout_lines[0] }}"

      - name: Data partition             | Create Thin Pool
        when: enable_lvm == "true"
        register: thin_pool
        failed_when: "thin_pool is failed and 'Sorry, no shrinking of DataLV to 0 permitted' not in thin_pool.msg"
        lvol:
          lv: DataLV
          vg: DataVG
          size: 100%FREE
          opts: --thinpool ThinPool -V 1G

      - name: Data partition             | Format LVM
        when: enable_lvm == "true"
        filesystem:
          fstype: xfs
          dev: /dev/DataVG/DataLV
          opts: -L DATA

      - name: Data partition             | Format Device
        when: enable_lvm != "true"
        filesystem:
          fstype: xfs
          dev: "{{ available_drives.stdout_lines[0] }}"
          opts: -L DATA

      - name: Data partition             | Mount
        mount:
          name: "{{ data_partition }}"
          src: LABEL=DATA
          fstype: xfs
          opts: defaults,nofail
          state: mounted
      when: single_disk == "false"

    - name: System Log                 | stat /boot/grub/grub.conf
      stat: path=/boot/grub/grub.conf
      register: grub1_conf

    - name: System Log                 | change /boot/grub/grub.conf
      when: grub1_conf.stat.exists
      replace:
        dest: /boot/grub/grub.conf
        regexp: 'console=hvc0'
        replace: 'console=ttyS0,115200n8 earlyprintk=ttyS0,115200 rootdelay=300 xen_emul_unplug=unnecessary'

    - name: System Log                 | stat /boot/grub2/grub.cfg
      stat: path=/boot/grub2/grub.cfg
      register: grub2_conf

    - name: System Log                 | change /etc/default/grub
      when: grub2_conf.stat.exists
      replace:
        dest: /etc/default/grub
        regexp: 'rhgb'
        replace: 'console=ttyS0,115200n8 earlyprintk=ttyS0,115200 rootdelay=300 xen_emul_unplug=unnecessary'
      register: grub2_var

    - name: System Log                 | run grub2-mkconfig
      when: grub2_var.changed and grub2_conf.stat.exists
      command: grub2-mkconfig -o /boot/grub2/grub.cfg

    - name: Create dirs                | Create dirs
      file: path={{ item }} state=directory
      with_items:
        - /var/lib/cloud/scripts/per-once
        - /var/lib/cloud/scripts/per-boot

    - name: Data partition             | Auto resize LVM
      when: enable_lvm == "true" and single_disk == "false"
      template:
        src: resize-xfs-lvm
        dest: /var/lib/cloud/scripts/per-boot/resize-xfs
        mode: 0755

    - name: Data partition             | Auto resize device
      when: enable_lvm != "true"
      template:
        src: resize-xfs-no-lvm
        dest: /var/lib/cloud/scripts/per-boot/resize-xfs
        mode: 0755

    - name: Cron tasks                 | Add resize task to cron
      cron:
        name: "resize data partition"
        minute: "*/5"
        user: root
        job: "/var/lib/cloud/scripts/per-boot/resize-xfs"
        cron_file: resizeXfs

