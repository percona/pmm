---
# Main tasks for AI Chat Backend service

# Install uv for MCP servers
- name: Check if uv is installed
  command: uv --version
  register: uv_version
  ignore_errors: yes

- name: Install uv Python package manager
  shell: curl -LsSf https://astral.sh/uv/install.sh | sh
  become: true
  become_method: su
  become_user: pmm
  when: uv_version.rc != 0

- name: Add uv to PATH for all users
  lineinfile:
    path: /home/pmm/.profile
    line: 'export PATH="/home/pmm/.cargo/bin:$PATH"'
    create: yes
    state: present
    owner: pmm
    group: pmm
    mode: '0644'
  when: uv_version.rc != 0

# Install VictoriaMetrics MCP server
- name: Get latest VictoriaMetrics MCP server release
  uri:
    url: https://api.github.com/repos/VictoriaMetrics-Community/mcp-victoriametrics/releases/latest
    method: GET
    return_content: yes
  register: vm_mcp_release

- name: Extract VictoriaMetrics MCP server version
  set_fact:
    vm_mcp_version: "{{ vm_mcp_release.json.tag_name }}"

- name: Create temporary directory for VictoriaMetrics MCP server
  tempfile:
    state: directory
    suffix: vm-mcp
  register: vm_mcp_temp_dir

- name: Download VictoriaMetrics MCP server
  get_url:
    url: "https://github.com/VictoriaMetrics-Community/mcp-victoriametrics/releases/download/{{ vm_mcp_version }}/mcp-victoriametrics_Linux_x86_64.tar.gz"
    dest: "{{ vm_mcp_temp_dir.path }}/mcp-victoriametrics.tar.gz"
    mode: '0644'

- name: Extract VictoriaMetrics MCP server
  unarchive:
    src: "{{ vm_mcp_temp_dir.path }}/mcp-victoriametrics.tar.gz"
    dest: "{{ vm_mcp_temp_dir.path }}"
    remote_src: yes

- name: Install VictoriaMetrics MCP server binary
  copy:
    src: "{{ vm_mcp_temp_dir.path }}/mcp-victoriametrics"
    dest: /usr/local/bin/mcp-victoriametrics
    owner: root
    group: root
    mode: '0755'
    remote_src: yes

- name: Clean up VictoriaMetrics MCP server temporary files
  file:
    path: "{{ vm_mcp_temp_dir.path }}"
    state: absent

- name: Create aichat-backend directories
  file:
    path: "{{ item }}"
    state: directory
    owner: pmm
    group: pmm
    mode: '0755'
  loop:
    - /etc/aichat-backend
    - /srv/logs

- name: Install aichat-backend RPM package
  yum:
    name: aichat-backend
    state: present

- name: Deploy MCP servers configuration
  copy:
    src: mcp-servers.json
    dest: /etc/aichat-backend/mcp-servers.json
    owner: pmm
    group: pmm
    mode: '0644'

- name: Create aichat-backend log file
  file:
    path: /srv/logs/aichat-backend.log
    state: touch
    owner: pmm
    group: pmm
    mode: '0644'

- name: Deploy supervisord configuration for aichat-backend
  copy:
    src: ai-chat.ini
    dest: /etc/supervisord.d/ai-chat.ini
    owner: root
    group: root
    mode: '0644'