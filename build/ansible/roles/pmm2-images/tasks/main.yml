---
    - name: Packages                   | Add PMM2 Server YUM repository
      yum_repository:
        name: pmm2-server
        description: PMM Server YUM repository - x86_64
        baseurl: https://repo.percona.com/pmm2-components/yum/{{ pmm2_server_repo }}/7/RPMS/x86_64/
        gpgcheck: yes
        enabled: yes
        gpgkey: file:///etc/pki/rpm-gpg/PERCONA-PACKAGING-KEY

    # local yum repo for building of pmm server docker image in autobuild jobs
    - name: PMM                        | Add local YUM repository
      when: ansible_virtualization_type == "docker"
      yum_repository:
        name: local
        description: Local YUM repository - x86_64
        baseurl: file:///tmp/RPMS
        gpgcheck: no
        enabled: no

    # we use it for pmm-client (TODO we'll need switch to pmm-client client repo)
    - name: Packages                   | Install percona-release rpm
      yum:
        name: https://repo.percona.com/yum/percona-release-latest.noarch.rpm
        state: installed

    - name: Packages                   | Update OS
      yum:
        name: '*'
        state: latest
        exclude: 'ansible'
        disablerepo: percona-release-x86_64

    - name: Packages                   | Install OS tools
      yum:
        name:
          - python2-pip
          - rsync

    - name: Create users for non-docker images          | Create users
      user:
        name: "pmm"
      when: ansible_virtualization_type != "docker"

    - name: Create users and groups in docker container
      block:
        - name: Ensure groups exist with correct gid
          group:
            name: "{{ item.name }}"
            gid: "{{ item.gid }}"
          loop:
            - { name: pmm, gid: 1000 }
            - { name: nginx, gid: 998 }
            - { name: grafana, gid: 996 }
            - { name: clickhouse, gid: 995 }
            - { name: pmm-agent, gid: 994 }

        - name: Create users              | Create users
          user:
            name: "{{ item.name }}"
            uid: "{{ item.uid }}"
            home: "{{ item.home }}"
            comment: "{{ item.comment }}"
            shell: "{{ item.shell }}"
            group: "{{ item.group }}"
          loop:
            - { name: pmm, uid: 1000, comment: "PMM Server", shell: "/bin/false", home: "/home/pmm", group: pmm }
            - { name: nginx, uid: 999, comment: "nginx user", shell: "/sbin/nologin", home: "/var/cache/nginx", group: nginx }
            - { name: grafana, uid: 998, comment: "Grafana Dashboard", shell: "/sbin/nologin", home: "/etc/grafana", group: grafana }
            - { name: clickhouse, uid: 997, comment: "Clickhouse server", shell: "/sbin/nologin", home: "/var/lib/clickhouse", group: clickhouse }
            - { name: pmm-agent, uid: 996, comment: "pmm-agent", shell: "/bin/false", home: "/usr/local/percona/", group: pmm-agent }
      when: ansible_virtualization_type == "docker"

    - name: Create directories        | Create dirs
      file: path={{ item }} state=directory owner=pmm group=pmm
      with_items:
        - /srv/prometheus/data
        - /srv/prometheus/rules
        - /srv/alertmanager/data

    - name: Create directories        | Create dirs
      file:
        path: /srv/logs
        state: directory
        owner: pmm
        group: pmm
        mode: '0775'

    - name: Create dirs                | Create dirs
      when: ansible_virtualization_type == "docker"
      file: path={{ item }} state=directory
      with_items:
        - /var/lib/cloud/scripts/per-once
        - /var/lib/cloud/scripts/per-boot

    - name: Install supervisord
      include_role:
        name: supervisord-init

    - name: Install RPMs               | Install RPMs for PMM2 server
      yum:
        name:
          - percona-grafana
          - percona-victoriametrics
          - percona-qan-api2
          - percona-dashboards
          - percona-alertmanager
          - pmm-server
          - pmm-managed
          - pmm-update
          - dbaas-controller
          - dbaas-tools
          - pmm-dump
        state: installed
        # line below is sed'ed by build-server-docker script
        enablerepo: "pmm2-server"

    - name: PMM                        | Enable repo for pmm2-client
      command: percona-release enable {{ pmm_client_repos }}

    - name: Install RPMs               | Install pmm2-client rpm
      yum:
        name:
          - pmm2-client
        state: installed
        enablerepo: "{{ pmm_client_repo_name }}"

    - name: Disable pmm-agent service | Disable pmm-agent
      when: ansible_virtualization_type != "docker"
      service: name=pmm-agent state=stopped enabled=no

    - name: Create tmp dirs           | Create tmp dirs
      when: ansible_virtualization_type != "docker"
      command: /usr/bin/systemd-tmpfiles --create --remove --boot --exclude-prefix=/dev

    - name: Copy grafana.ini file for the first run
      copy:
        src: grafana.ini
        dest: /etc/supervisord.d/grafana.ini
        mode: '0644'
