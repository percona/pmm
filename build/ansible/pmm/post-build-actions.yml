---
# This playbook runs post build tasks for all pmm distributions (AMI/OVF/Docker/Digitalocean).

- hosts: all
  become: yes
  gather_facts: yes
  vars:
    pmm_client_repos: "original testing"
    pmm_client_repos_final: "original release"
    pmm_server_distribution: "docker"

  tasks:
    # pmm-managed checks that if /srv/pmm-distribution exists, it contains "docker", "ovf", "ami" or "digitalocean" - all lowercase.
    # TODO: refactor the build pipelines to call post-build.yml with the distribution name provided in the variable (above).
    # https://jira.percona.com/browse/PMM-4991
    - name: Create a distribution file for Docker
      copy:
        content: "{{ pmm_server_distribution}}"
        dest: /srv/pmm-distribution
        owner: pmm
        group: pmm

    - name: Disable testing repo for pmm-client
      command: percona-release disable {{ pmm_client_repos }}

    - name: Enable release repo for pmm-client
      command: percona-release enable {{ pmm_client_repos_final }}

    - name: Set up pmm-agent
      command: >
        pmm-agent setup
        --config-file=/usr/local/percona/pmm/config/pmm-agent.yaml
        --skip-registration
        --id=pmm-server
        --server-address=127.0.0.1:8443
        --server-insecure-tls

    - name: Reread supervisord configuration
      command: supervisorctl reread
      become: true
      become_user: pmm
      become_method: su      
      register: reread_result
      changed_when: "'No config updates to processes' not in reread_result.stdout"

    - name: See which service configs changed
      debug: var=reread_result.stdout_lines

    - name: Stop pmm-managed before deleting the database
      supervisorctl:
        name: pmm-managed
        state: stopped
      become: true
      become_user: pmm
      become_method: su

    - name: Remove pmm-managed database
      postgresql_db:
        login_user: postgres
        name: pmm-managed
        force: true
        state: absent

    - name: Remove pmm-managed role from postgres
      postgresql_user:
        name: pmm-managed
        state: absent

    - name: Stop supervisord service for docker
      command: supervisorctl shutdown
      become: true
      become_user: pmm
      become_method: su

    - name: Cleanup dnf cache
      command: dnf clean all

    # "yum clean all" function will only remove cache from configured yum repositories
    # Details: https://bugzilla.redhat.com/show_bug.cgi?id=1357083
    - name: Cleanup dnf cache
      file:
        state: absent
        path: /var/cache/dnf

    - name: Cleanup build logs and data
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /srv/logs
        - /tmp/RPMS
        - /var/log/dnf.log
        - /var/log/secure
        - /var/log/wtmp
        - /var/log/clickhouse-server
        - /var/log/nginx
        - /var/lib/pgsql

    - name: Remove users created by installers
      user:
        name: "{{ item }}"
        state: absent
      loop:
        - postgres
        - clickhouse
        - nginx

    - name: Clean Clickhouse dir
      shell: find /srv/clickhouse -mindepth 1 -maxdepth 1 -print0 | xargs -0 rm -rf --

    # This step is required because of a change between VictoriaMetrics 1.77.1 and 1.82.1.
    # VictoriaMetrics tries to atomically rename directories in this folder on startup.
    # With RedHat-based docker images the rename fails with an error "Invalid cross-device link".
    # This is due to the way OverlayFS and kernel works. More info https://github.com/moby/moby/issues/25409
    # This step ensures the directory is empty on startup and the contents are recreated.
    # This is not an issue if the folder is in a volume or mounted from the host OS.
    - name: Recreate /srv/victoriametrics folder
      file:
        state: "{{ item }}"
        path: /srv/victoriametrics
        owner: pmm
        group: pmm
        mode: 0775
      loop:
        - absent
        - directory

    - name: Create '/srv/logs' directory
      file:
        path: /srv/logs
        state: directory
        owner: pmm
        group: pmm
        mode: 0775

    # nginx needs to be able to write to /var/lib/nginx, but it's owned by root.
    - name: Change ownership of nginx dirs
      file:
        path: /var/lib/nginx
        state: directory
        group: pmm
        owner: pmm
        recurse: yes
