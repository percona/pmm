---
- name: "Provision a DO Agent"
  hosts: default
  become: true
  vars:
    docker_compose_version: "2.26.1"
    kubectl_version: "1.29.2"
    doctl_version: "1.105.0"
    node_version: "18.x"

  tasks:
    - name: Detect vm architecture
      set_fact:
        # Alternative architecture name just because we never can have only one name in computers
        ansible_architecture_alt: "{% if ansible_architecture == 'x86_64' %}amd64{% elif ansible_architecture == 'aarch64' %}arm64{% else %}none{% endif %}"

    - name: Add hashicorp repository
      get_url:
        url: https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
        dest: /etc/yum.repos.d/hashicorp.repo

    - name: Enable epel repo
      yum:
        name: epel-release
        state: present

    - name: Upgrade OS packages
      yum:
        name: "*"
        state: latest

    - name: Add a repository for NodeJS
      shell: "curl -fsSL https://rpm.nodesource.com/setup_{{ node_version }} | bash -"

    - name: Install docker
      block:
        - name: Add docker repository
          get_url:
            url: https://download.docker.com/linux/centos/docker-ce.repo
            dest: /etc/yum.repos.d/docker-ce.repo

        - name: Install docker packages
          package:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
            state: present

    - name: Install packages
      package:
        name:
          - git
          - jq
          - gettext
          - unzip
          - python3
          - bats
          - svn # we use it in pmm-framework.sh
          - php # we use PHP in pmm-qa repo
          - php-mysqlnd
          - php-pdo
          - wget
          - kernel-devel
          - kernel-headers
          - gcc
          - make
          - perl
          - p7zip
          - nodejs
          - packer
          # - xmlstarlet
        state: present


    - name: Install Java17
      package:
        name: java-17-openjdk-headless
        state: present

    - name: Install docker-compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v{{ docker_compose_version }}/docker-compose-linux-{{ ansible_architecture }}"
        dest: /usr/local/bin/docker-compose
        mode: "u+x,g+x,o+x"

    - name: Install kubectl
      get_url:
        url: https://storage.googleapis.com/kubernetes-release/release/v{{ kubectl_version }}/bin/linux/{{ ansible_architecture_alt }}/kubectl
        dest: /usr/local/bin/kubectl
        mode: "u+x,g+x,o+x"

    - name: Install lacework
      get_url:
        url: "https://github.com/lacework/lacework-vulnerability-scanner/releases/latest/download/lw-scanner-linux-{{ ansible_architecture_alt }}"
        dest: /usr/local/bin/lw-scanner
        mode: "u+x,g+x,o+x"

    - name: Install other software
      package:
        name:
          - chromium
        state: present
      when: ansible_architecture == "x86_64"
      # NOTE: no chromium package for arm64

    - name: Install doctl client for digital ocean
      get_url:
        url: https://github.com/digitalocean/doctl/releases/download/v{{ doctl_version }}/doctl-{{ doctl_version }}-linux-{{ ansible_architecture_alt }}.tar.gz
        dest: /tmp/doctl.tar.gz

    - name: Unarchive a file with doctl
      unarchive:
        src: /tmp/doctl.tar.gz
        dest: /usr/local/bin
        remote_src: yes
        mode: "u+x,g+x,o+x"
        group: "root"
        owner: "root"

    - name: Instal yq
      get_url:
        url: https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        dest: /usr/bin/yq
        mode: "555"
        group: "root"
        owner: "root"

    - name: Install pip3
      package:
        name: python3-pip
        state: present

    - name: Install Python modules
      pip:
        name: "{{ item }}"
      loop: # Lookup versions at: https://pypi.org/search/
        - pyaml==24.7.0
        - GitPython==3.1.43
        - PyGithub==2.3.0
        - python-digitalocean==1.17.0
        - docker==7.1.0
        - linode-cli==5.50.0

    - name: Install virtual box (only for Digital Ocean)
      block:
        - name: Add base repository for VirtualBox
          yum_repository:
            name: virtualbox
            description: VirtualBox
            baseurl: "http://download.virtualbox.org/virtualbox/rpm/el/$releasever/$basearch"
            gpgcheck: true
            gpgkey: https://www.virtualbox.org/download/oracle_vbox_2016.asc
            enabled: true
            state: present

        ##- name: Add base repository for Hashicorp
        ##  yum_repository:
        ##    name: hashicorp
        ##    description: HashiCorp Repository
        ##    baseurl: "https://rpm.releases.hashicorp.com/RHEL/$releasever/$basearch/stable"
        ##    gpgcheck: true
        ##    gpgkey: https://rpm.releases.hashicorp.com/gpg
        ##    enabled: true
        ##    state: present

        - name: Install packages for virtualization
          yum:
            state: present
            name: "{{ item }}"
          loop:
            - VirtualBox-7.0
            - vagrant

        - name: Reboot to the latest kernel
          reboot:
            reboot_timeout: 1200
        - name: Recompile kernel
          command: /sbin/vboxconfig

    - name: Install Packer Plugins
      block:
        - name: Create Packer plugins directory
          file:
            path: ~/.packer.d/plugins/github.com
            state: directory
            mode: '0755'
            recurse: yes

        - name: Install packer virtualbox plugin
          command: >
            /usr/bin/packer plugins install github.com/hashicorp/virtualbox
          register: packer_plugin_install
          changed_when: "'Installed plugin successfully' in packer_plugin_install.stdout"

        - name: Install packer ansible plugin
          command: >
            /usr/bin/packer plugins install github.com/hashicorp/ansible
          register: packer_ansible_plugin_install
          changed_when: "'Installing' in packer_ansible_plugin_install.stdout"

        - name: Verify packer virtualbox plugin installation
          stat:
            path: ~/.packer.d/plugins/github.com/hashicorp/virtualbox
          register: packer_virtualbox_plugin

        - name: Verify packer ansible plugin installation
          stat:
            path: ~/.packer.d/plugins/github.com/hashicorp/ansible
          register: packer_ansible_plugin

        - name: Output virtualbox plugin installation status
          debug:
            msg: "Packer VirtualBox plugin is installed"
          when: packer_virtualbox_plugin.stat.exists

        - name: Output ansible plugin installation status
          debug:
            msg: "Packer Ansible plugin is installed"
          when: packer_ansible_plugin.stat.exists

    - name: Copy docker daemon config
      copy:
        src: daemon.json
        dest: /etc/docker/daemon.json

    - name: Enable Docker service
      systemd:
        name: docker.service
        state: started
        enabled: yes

    - name: Download and unarchive AWS installer
      unarchive:
        src: https://awscli.amazonaws.com/awscli-exe-linux-{{ ansible_architecture }}.zip
        dest: /tmp
        remote_src: yes

    - name: Run awscli installer
      shell: /tmp/aws/install

    - name: Turn off swap
      sysctl:
        name: vm.swappiness
        value: 0
        state: present

    - name: Increase dirty ratio
      sysctl:
        name: vm.dirty_ratio
        value: 80
        state: present

    - name: Decrease dirty_background_ratio
      sysctl:
        name: vm.dirty_background_ratio
        value: 5

    - name: Increase dirty_expire_centisecs
      sysctl:
        name: vm.dirty_expire_centisecs
        value: 12000 #120 sec

    - name: Increase net.core.somaxconn
      sysctl:
        name: net.core.somaxconn
        value: 1024

    - name: Increase net.core.netdev_max_backlog
      sysctl:
        name: net.core.netdev_max_backlog
        value: 5000

    - name: Increase net.core.rmem_max
      sysctl:
        name: net.core.rmem_max
        value: 16777216

    - name: Increase net.core.wmem_max
      sysctl:
        name: net.core.wmem_max
        value: 16777216

    - name: Increase net.ipv4.tcp_wmem
      sysctl:
        name: net.ipv4.tcp_wmem
        value: 4096 12582912 16777216

    - name: Increase net.ipv4.tcp_rmem
      sysctl:
        name: net.ipv4.tcp_rmem
        value: 4096 12582912 16777216

    - name: Increase net.ipv4.tcp_max_syn_backlog
      sysctl:
        name: net.ipv4.tcp_max_syn_backlog
        value: 8192

    - name: Disable net.ipv4.tcp_slow_start_after_idle
      sysctl:
        name: net.ipv4.tcp_slow_start_after_idle
        value: 0

    - name: Enable net.ipv4.tcp_tw_reuse
      sysctl:
        name: net.ipv4.tcp_tw_reuse
        value: 1

    - name: Change net.ipv4.ip_local_port_range
      sysctl:
        name: net.ipv4.ip_local_port_range
        value: 10240 65535

    - name: Change TCP Congestion Control Algorithm (net.ipv4.tcp_congestion_control)
      sysctl:
        name: net.ipv4.tcp_congestion_control
        value: bbr

    - name: Change net.ipv4.tcp_syn_retries
      sysctl:
        name: net.ipv4.tcp_syn_retries
        value: 2

    - name: Change BBR algoritm
      sysctl:
        name: net.core.default_qdisc
        value: fq

    - name: Increase fs.xfs.xfssyncd_centisecs
      sysctl:
        name: fs.xfs.xfssyncd_centisecs
        value: 9000

    - name: Increase fs.inotify.max_user_watches
      sysctl:
        name: fs.inotify.max_user_watches
        value: 1048576

    - name: Add repo.ci.percona.com to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        line: "10.30.6.9 repo.ci.percona.com"
        state: present
