---
# Backup Postgres Databases
# This playbook can be run on its own as follows:
# ansible-playbook -i localhost /usr/share/pmm-update/ansible/playbook/tasks/roles/postgres/tasks/backup.yml
# or using `include_role` from another playbook with `tasks_from: backup.yml`

- name: Check if supervisor socket exists
  stat:
    path: /run/supervisor/supervisor.sock
  register: supervisor_socket

- name: Set fact is_supervisor_running
  set_fact:
    is_supervisor_running: supervisor_socket.stat.exists

- name: Set fact is_ha
  set_fact:
    is_ha: lookup('env','GF_DATABASE_URL') == '' and lookup('env','GF_DATABASE_HOST') == ''

- name: Backup the database
  block:
  - name: Stop pmm-managed, pmm-agent and postgres before backing up
    supervisorctl:
      name: "{{ item }}"
      state: stopped
    loop:
      - pmm-managed
      - pmm-agent
      - postgresql
    become: true

  - name: Run Postgres database without supervisor
    command: /usr/pgsql-14/bin/pg_ctl start -D /srv/postgres14 -o "-c logging_collector=off"
    become: true
    become_user: pmm
    become_method: su

  - name: Create the backup directory if it does not exist
    file:
      path: /srv/backup
      state: directory
      owner: pmm
      group: pmm
      mode: 0775

  - name: Dump pmm-managed database
    postgresql_db:
      name: pmm-managed
      state: dump
      target: /srv/backup/pmm-managed.sql

  - name: Dump grafana database
    postgresql_db:
      name: grafana
      state: dump
      target: /srv/backup/grafana.sql
    when: not is_ha

  - name: Stop Postgres database without supervisor
    command: /usr/pgsql-14/bin/pg_ctl stop -D /srv/postgres14
    become: true
    become_user: pmm
    become_method: su

  # TODO: Is this task necessary?
  - name: Start pmm-managed, pmm-agent and postgres after backing up
    supervisorctl:
      name: "{{ item }}"
      state: started
    loop:
      - postgresql
      - pmm-managed
      - pmm-agent
    become: true    

  when: is_supervisor_running
