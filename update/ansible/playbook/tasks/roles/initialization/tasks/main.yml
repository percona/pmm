---
# This role contains tasks executed during initialization of PMM Server
- name: Determine type of upgrade
  set_fact:
    ui_upgrade: False
  when: ui_upgrade is undefined

- name: Get current version
  slurp:
    src: /srv/grafana/PERCONA_DASHBOARDS_VERSION
  register: current_version_file
  ignore_errors: True

- name: Get image version
  slurp:
    src: /usr/share/percona-dashboards/VERSION
  register: image_version_file

- name: Set current version if VERSION doesn't exist
  set_fact:
    pmm_current_version: "0.0"
  when: current_version_file['failed'] == true

- name: Setting current PMM version
  set_fact:
    pmm_current_version: "{{ current_version_file['content'] | b64decode | trim }}"
  when: current_version_file['failed'] != true

- name: Setting current PMM image version
  set_fact:
    pmm_image_version: "{{ image_version_file['content'] | b64decode | trim }}"

- name: Set need_upgrade fact
  set_fact:
    need_upgrade: not pmm_current_version is version(pmm_image_version, '>=')

- name: Print current PMM and image versions
  debug:
    msg: "Current version: {{ pmm_current_version }} Image Version: {{ pmm_image_version }}"

# We use current_version_file['failed'] because we don't want to run this on creating container
# and we use pmm_current_version is version(pmm_image_version, '>=') to run it only if upgrade is required
- name: Determine type of upgrade
  set_fact:
    docker_upgrade: "{{ not ui_upgrade and current_version_file['failed'] != true and not pmm_current_version is version(pmm_image_version, '>=') }}"

- name: Print Docker upgrade fact
  debug:
    msg: "Docker upgrade: {{ docker_upgrade }}"

- name: Enable maintenance mode only for docker upgrade
  copy:
    src: maintenance.html
    dest: /usr/share/pmm-server/maintenance/
    owner: pmm
    group: pmm
    mode: 0644
  when: docker_upgrade

- name: Upgrade dashboards
  include_role:
    name: dashboards_upgrade
  when: need_upgrade

- name: Clickhouse migration
  include_role:
    name: clickhouse
  when: need_upgrade

- name: Copy file with image version
  copy:
    src: /usr/share/percona-dashboards/VERSION
    dest: /srv/grafana/PERCONA_DASHBOARDS_VERSION
    owner: pmm
    group: pmm
    mode: 0644
    remote_src: yes
  when: need_upgrade

- name: Create backup directory
  file:
    path: /srv/backup
    state: directory

- name: Wait for PMM to be ready
  ansible.builtin.uri:
    url: "http://127.0.0.1:7772/v1/readyz"
    status_code: 200
    method: GET
  retries: 120
  delay: 1
  when: docker_upgrade

- name: Disable maintenance mode
  file:
    state: absent
    path: /usr/share/pmm-server/maintenance/maintenance.html
