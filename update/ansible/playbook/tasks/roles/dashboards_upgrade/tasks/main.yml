---
- name: Check that old plugin dir exists
  stat:
    path: /var/lib/grafana/plugins/
  register: old_plugin_dir_exist

- name: Copy plugins from old plugin directory
  block:
  - name: Find custom plugin in old plugin dir
    find:
      paths: /var/lib/grafana/plugins
      recurse: no
      file_type: directory
      excludes:
        - '*-???????'
        - pmm-app
    register: custom_plugins

  - name: Synchronization plugins (old version before 2.22.0)
    synchronize:
      src: "{{ item['path'] }}"
      dest: "/srv/grafana/plugins/"
    loop: "{{ custom_plugins['files'] }}"

  - name: Find custom plugin in old plugin dir
    find:
      paths: /var/lib/grafana/plugins
      recurse: no
      file_type: directory
      excludes:
        - '*-???????'
        - pmm-app
  when: old_plugin_dir_exist.stat.exists

- name: Get plugin list
  register: plugin_list
  find:
    paths: /usr/share/percona-dashboards/panels/
    depth: 2
    file_type: directory

- name: Delete existing dist folder
  file:
    path: "/srv/grafana/plugins/{{ item['path'].split('/')[-1] }}"
    state: absent
  loop: "{{ plugin_list['files'] }}"

- name: Synchronization plugin
  synchronize:
    src: /usr/share/percona-dashboards/panels/
    dest: /srv/grafana/plugins/

- name: Check that the SQLite grafana database exists
  stat:
    path: /srv/grafana/grafana.db
  register: sqlite_grafana

- name: Remove old dashboards from SQLite
  block:
  - name: Restart grafana before delete data
    supervisorctl:
      name: grafana
      state: stopped
    ignore_errors: True # TODO we have race condition here. We generate grafana supervisor config in pmm-managed and it doesn't exist on this stage

  - name: Remove old DBaaS dashboard (Before provisioning times)
    command: sqlite3 /srv/grafana/grafana.db -cmd ".timeout 60000" "DELETE FROM dashboard WHERE title = 'DBaaS' AND slug = 'dbaas';"
    changed_when: True

  - name: Remove old PMM Inventory (Before provisioning times)
    command: sqlite3 /srv/grafana/grafana.db -cmd ".timeout 60000" "DELETE FROM dashboard WHERE title = 'PMM Inventory' AND slug = 'pmm-inventory';"
    changed_when: True

  - name: Remove old PMM Add Instance dashboard (Before provisioning times)
    command: sqlite3 /srv/grafana/grafana.db -cmd ".timeout 60000" "DELETE FROM dashboard WHERE title = 'PMM Add Instance' AND slug = 'pmm-add-instance';"
    changed_when: True

  - name: Remove old PMM Database Checks dashboard (Before provisioning times)
    command: sqlite3 /srv/grafana/grafana.db -cmd ".timeout 60000" "DELETE FROM dashboard WHERE title = 'PMM Database Checks' AND slug = 'pmm-database-checks';"
    changed_when: True

  - name: Remove old PMM Settings dashboard (Before provisioning times)
    command: sqlite3 /srv/grafana/grafana.db -cmd ".timeout 60000" "DELETE FROM dashboard WHERE title = 'PMM Settings' AND slug = 'pmm-settings';"
    changed_when: True
  when: sqlite_grafana.stat.exists

- name: Restart grafana with new plugins
  supervisorctl:
    name: grafana
    state: restarted
  ignore_errors: True # TODO we have race condition here. We generate grafana supervisor config in pmm-managed and it doesn't exist on this stage

- name: Copy file with image version
  copy:
    src: /usr/share/percona-dashboards/VERSION
    dest: /srv/grafana/PERCONA_DASHBOARDS_VERSION
    remote_src: yes
