// Code generated by mockery v1.0.0. DO NOT EDIT.

package client

import (
	prometheus "github.com/prometheus/client_golang/prometheus"
	mock "github.com/stretchr/testify/mock"

	agentpb "github.com/percona/pmm/api/agentpb"
)

// mockSupervisor is an autogenerated mock type for the supervisor type
type mockSupervisor struct {
	mock.Mock
}

// Changes provides a mock function with given fields:
func (_m *mockSupervisor) Changes() <-chan *agentpb.StateChangedRequest {
	ret := _m.Called()

	var r0 <-chan *agentpb.StateChangedRequest
	if rf, ok := ret.Get(0).(func() <-chan *agentpb.StateChangedRequest); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan *agentpb.StateChangedRequest)
		}
	}

	return r0
}

// Collect provides a mock function with given fields: _a0
func (_m *mockSupervisor) Collect(_a0 chan<- prometheus.Metric) {
	_m.Called(_a0)
}

// Describe provides a mock function with given fields: _a0
func (_m *mockSupervisor) Describe(_a0 chan<- *prometheus.Desc) {
	_m.Called(_a0)
}

// QANRequests provides a mock function with given fields:
func (_m *mockSupervisor) QANRequests() <-chan *agentpb.QANCollectRequest {
	ret := _m.Called()

	var r0 <-chan *agentpb.QANCollectRequest
	if rf, ok := ret.Get(0).(func() <-chan *agentpb.QANCollectRequest); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan *agentpb.QANCollectRequest)
		}
	}

	return r0
}

// SetState provides a mock function with given fields: _a0
func (_m *mockSupervisor) SetState(_a0 *agentpb.SetStateRequest) {
	_m.Called(_a0)
}
