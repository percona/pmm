// Code generated by mockery. DO NOT EDIT.

package client

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	agentpbv1 "github.com/percona/pmm/api/agentpb"
)

// mockConnectionChecker is an autogenerated mock type for the connectionChecker type
type mockConnectionChecker struct {
	mock.Mock
}

// Check provides a mock function with given fields: ctx, req, id
func (_m *mockConnectionChecker) Check(ctx context.Context, req *agentpbv1.CheckConnectionRequest, id uint32) *agentpbv1.CheckConnectionResponse {
	ret := _m.Called(ctx, req, id)

	var r0 *agentpbv1.CheckConnectionResponse
	if rf, ok := ret.Get(0).(func(context.Context, *agentpbv1.CheckConnectionRequest, uint32) *agentpbv1.CheckConnectionResponse); ok {
		r0 = rf(ctx, req, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*agentpbv1.CheckConnectionResponse)
		}
	}

	return r0
}

// newMockConnectionChecker creates a new instance of mockConnectionChecker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockConnectionChecker(t interface {
	mock.TestingT
	Cleanup(func())
},
) *mockConnectionChecker {
	mock := &mockConnectionChecker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
