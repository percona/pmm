---
checks:
  - version: 2
    name: mysql_security_user_without_password
    summary: User(s) without password
    description: There is/are user(s) without password .
    interval: standard
    advisor: security_authentication
    #author: The Grinch
    family: MYSQL
    queries:
      - type: MYSQL_SELECT
        query: " @@version version,@@hostname service, count(user) found,group_concat( concat(user,'@',host) separator'; ') user  from mysql.user  where authentication_string = '' and account_locked = 'N' and plugin not in ('auth_socket','unix_socket','auth_pam','auth_pam_compat','pam','AWSAuthenticationPlugin' ) group by version, service;"
    script: |
      def check_user_without_password(doc,read_url):
          for row in doc:
            version = row["version"]
            service = row["service"]
            user = row["user"]
            found = row["found"]

            if found > 0 :
               return {
                 "summary": "User defined without password",
                 "description": "Any user must have a password or use an external authentication method. User list = {} ;".format(user),
                 "severity": "error",
                 "read_more_url": read_url.format("security-user-without-password"),
                 "labels": {
                    "mysql_version": "{}".format(version),
                     "service": "{}".format(service),
                    }
               }

      def check_context(docs, context):
          # we first define some global variables
          read_url = "https://docs.percona.com/percona-platform/advisors/checks/{}.html"
          results = []

          result1 = check_user_without_password(docs[0],read_url)
          if result1:
            results.append(result1)

          return results
