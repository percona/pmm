---
checks:
  - version: 2
    name: mysql_password_expiry
    summary: Check MySQL user password expiry
    description: Checks for MySQL user password expired or expiring within 30 days
    interval: standard
    #author: Kedar Vaijanapurkar
    #tiers: [anonymous]
    family: MYSQL
    advisor: security_configuration
    queries:
      - type: MYSQL_SELECT
        query: "@@global.version as version, @@global.hostname as service, @@global.default_password_lifetime as default_password_lifetime"
      - type: MYSQL_SELECT
        query: " user,host,password_expired,password_last_changed,password_lifetime,password_expire_days,CASE WHEN (password_expired='Y' OR password_expire_days <= 10) THEN 'ERROR' WHEN (password_expire_days > 10 AND password_expire_days<=30) THEN 'WARNING' ELSE 'OK' END AS pwdresult FROM (  SELECT    user,    host,    password_expired,    password_last_changed,    password_lifetime,    @@default_password_lifetime,    IFNULL(password_lifetime,       CASE         WHEN @@default_password_lifetime=0 THEN 99999         WHEN @@default_password_lifetime>0 THEN datediff(password_last_changed, NOW())         ELSE 99999       END    ) password_expire_days   FROM mysql.user) X"
    script: |
      def check_context(docs, context):
          read_url = "https://docs.percona.com/percona-platform/advisors/checks/{}.html"
          results = []
          for row in docs[0]:
              version = row["version"]
              service = row["service"]
              default_password_lifetime = int(row["default_password_lifetime"])
              if default_password_lifetime == 0 :
                 results.append({
                     "summary": "The global automatic password expiration policy is disabled.",
                     "description": "The configuration variable default_password_lifetime defines global automatic password expiration policy. To enable this globally set default_password_lifetime to a positive Integer indicating password lifetime in days.",
                     "read_more_url": read_url.format("mysql_password_expiry"),
                     "severity": "notice",
                     "labels": {
                        "mysql_version": "{}".format(version),
                        "service": "{}".format(service),
                     }
                 })
          err_user_list = ""
          warn_user_list = ""
          err_cnt = 0
          warn_cnt = 0
          for row in docs[1]:
             user = row["user"]
             host = row["host"]
             password_expired = row["password_expired"]
             password_last_changed = row["password_last_changed"]
             password_lifetime = row["password_lifetime"]
             pwdresult = row["pwdresult"]
             if password_expired == 'Y':
                 results.append({
                     "summary": "The password for MySQL user is expired. It is recommended to change the password using ALTER USER command.",
                     "description": "The password for MySQL user ({}@{}) has been expired. The user cannot connect to the database without changing the password.".format(user, host),
                     "read_more_url": read_url.format("mysql_password_expiry"),
                     "severity": "error",
                     "labels": {
                        "mysql_version": "{}".format(version),
                        "service": "{}".format(service),
                     }
                 })
             else:
               if pwdresult == "ERROR" :
                   err_user_list = "{}@{}, {}".format(user, host, err_user_list)
                   err_cnt += 1
               if pwdresult == "WARNING" :
                   warn_user_list = "{}@{}, {}".format(user, host, warn_user_list)
                   warn_cnt += 1
               if pwdresult == "OK" :
                   continue

          if err_cnt > 0 :
              results.append({
                "summary": "MySQL users are marked for password expiry. It is recommended to change the password using ALTER USER command.",
                "description": "Following MySQL users needs urgent attention as their password is already expired or will be expired less than 10 days. Users list: {}".format(err_user_list.removesuffix(', ')),
                "read_more_url": read_url.format("mysql_password_expiry"),
                "severity": "error",
                "labels": {
                   "mysql_version": "{}".format(version),
                   "service": "{}".format(service),
                }
              })
          if warn_cnt > 0:
             results.append({
                 "summary": "MySQL users are marked for password expiry within a month. The password can be changed using the ALTER USER command.",
                 "description": "Following MySQL users will have their password expired in next 10 to 30 days. Users list: {}".format(warn_user_list.removesuffix(', ')),
                 "read_more_url": read_url.format("mysql_password_expiry"),
                 "severity": "warning",
                 "labels": {
                    "mysql_version": "{}".format(version),
                    "service": "{}".format(service),
                 }
             })
          return results
