---
checks:
  - version: 2
    name: mysql_security_anonymous_user
    summary: Anonymous user (you must remove any anonymous user)
    description: Anonymous user should never be present, that is a security safe best practices.
    interval: standard
    advisor: security_authentication
    #author: The Grinch
    family: MYSQL
    queries:
      - type: MYSQL_SELECT
        query: " @@version version,@@hostname service, count(user) found,group_concat( concat(user,'@',host) separator'; ') user from mysql.user where user like '' group by version, service;"
    script: |
      def check_anonym_user(doc,read_url):
          for row in doc:
            version = row["version"]
            service = row["service"]
            user = row["user"]
            found = row["found"]

            if found > 0 :
               return {
                 "summary": "Anonymous user",
                 "description": "Anonymous user is present in the server, this is a security breach. User list = {} ;".format(user),
                 "severity": "error",
                 "read_more_url": read_url.format("security-anonymous-user"),
                 "labels": {
                    "mysql_version": "{}".format(version),
                     "service": "{}".format(service),
                    }
               }

      def check_context(docs, context):
          # we first define some global variables
          read_url = "https://docs.percona.com/percona-platform/advisors/checks/{}.html"
          results = []

          result1 = check_anonym_user(docs[0],read_url)
          if result1:
            results.append(result1)

          return results
