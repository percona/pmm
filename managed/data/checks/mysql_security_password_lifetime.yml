---
checks:
  - version: 2
    name: mysql_security_password_lifetime
    summary: InnoDB password lifetime
    description: This check warns about password lifetime.
    interval: standard
    advisor: security_configuration
    #author: The Grinch
    family: MYSQL
    queries:
      - type: MYSQL_SELECT
        query: " @@version version,@@hostname service, @@global.default_password_lifetime   AS default_password_lifetime;"
    script: |
      def check_slave_parallel_workers(doc,read_url):
          for row in doc:
            version = row["version"]
            service = row["service"]
            default_password_lifetime = row["default_password_lifetime"]

            if default_password_lifetime == 0 :
               return {
                 "summary": "Passwords don't expire",
                 "description": "Please consider imposing an expiry time for passwords by setting default_password_lifetime to a positive integer, indicating how many days can go by before the user having to renew their password; This will help prevent brute force attacks and risks of data leaks. Current settings = {} ;".format(default_password_lifetime),
                 "severity": "warning",
                 "read_more_url": read_url.format("default-password-lifetime"),
                 "labels": {
                    "mysql_version": "{}".format(version),
                     "service": "{}".format(service),
                    }
               }

      def check_context(docs, context):
          # we first define some global variables
          read_url = "https://docs.percona.com/percona-platform/advisors/checks/{}.html"
          results = []

          result1 = check_slave_parallel_workers(docs[0],read_url)
          if result1:
            results.append(result1)

          return results
