// Code generated by mockery. DO NOT EDIT.

package server

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	models "github.com/percona/pmm/managed/models"
)

// mockEmailer is an autogenerated mock type for the emailer type
type mockEmailer struct {
	mock.Mock
}

// Send provides a mock function with given fields: ctx, settings, emailTo
func (_m *mockEmailer) Send(ctx context.Context, settings *models.EmailAlertingSettings, emailTo string) error {
	ret := _m.Called(ctx, settings, emailTo)

	if len(ret) == 0 {
		panic("no return value specified for Send")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.EmailAlertingSettings, string) error); ok {
		r0 = rf(ctx, settings, emailTo)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// newMockEmailer creates a new instance of mockEmailer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newMockEmailer(t interface {
	mock.TestingT
	Cleanup(func())
},
) *mockEmailer {
	mock := &mockEmailer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
