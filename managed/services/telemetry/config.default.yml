telemetry:
  - id: PostgresDBVersion
    source: VM
    query: pg_static{service_name!="pmm-server-postgresql", service_type="postgresql"}
    summary: "Monitored PostgreSQL services version"
    data:
      - metric_name: "postgresql_version"
        label: "short_version"

  - id: GrafanaStatTotalUsers
    source: VM
    query: grafana_stat_total_users
    summary: "Total Grafana users"
    data:
      - metric_name: "pmm_server_grafana_stat_total_users"
        value: 1

  # PMM - Usage
  - id: GrafanaStatMonthlyActiveUsers
    source: VM
    query: grafana_stat_active_users
    summary: "Monthly active users"
    data:
      - metric_name: "pmm_server_grafana_stat_active_users"
        value: 1

  - id: PMMDataRetentionPeriod
    source: PMMDB_SELECT
    query: data_retention FROM settings s, jsonb_extract_path(s.settings, 'data_retention') AS data_retention
    summary: "Data retention period"
    data:
      - metric_name: "pmm_server_data_retention_period"
        column: "data_retention"

  # PMM - Usage
  - id: PMMUsageNodesCount
    source: PMMDB_SELECT
    query: count(*) AS nodes_count FROM nodes where node_name != 'pmm-server'
    summary: "Monitored nodes count"
    data:
      - metric_name: "pmm_server_usage_nodes_count"
        column: "nodes_count"

  - id: PMMUsageServicesCount
    source: PMMDB_SELECT
    query: count(*) AS services_count FROM services where node_id != 'pmm-server'
    summary: "Monitored services count"
    data:
      - metric_name: "pmm_server_usage_services_count"
        column: "services_count"

  - id: PMMUsageEnvironmentsCount
    source: PMMDB_SELECT
    query: count(distinct environment) as environments_count from services where environment != ''
    summary: "Monitored environments count"
    data:
      - metric_name: "pmm_server_usage_environments_count"
        column: "environments_count"

  - id: PMMUsagePerconaRolesCount
    source: PMMDB_SELECT
    query: count(*) as roles_count from roles
    summary: "Percona roles count"
    data:
      - metric_name: "pmm_server_percona_roles_count"
        column: "roles_count"

  - id: PMMNodeCPUUsage
    source: VM
    query: clamp_max(sum by () ((avg by (mode) (  (clamp_max(rate(node_cpu_seconds_total{node_name=~"pmm-server",mode!="idle",mode!="iowait"}[5m]),1)) or  (clamp_max(irate(node_cpu_seconds_total{node_name=~"pmm-server",mode!="idle",mode!="iowait"}[5m]),1)) )) *100 or  sum by () (avg_over_time(node_cpu_average{node_name=~"pmm-server",mode!="total",mode!="idle"}[5m]) or   avg_over_time(node_cpu_average{node_name=~"pmm-server",mode!="total",mode!="idle"}[5m])) unless   (avg_over_time(node_cpu_average{node_name=~"pmm-server",mode="total",job="rds-basic"}[5m]) or  avg_over_time(node_cpu_average{node_name=~"pmm-server",mode="total",job="rds-basic"}[5m]))   ),100)
    summary: "PMM node CPU Usage"
    data:
      - metric_name: "pmm_server_node_cpu_usage"
        value: 1

  - id: PMMNodeCPUArchitecture
    source: VM
    query: node_uname_info
    summary: "PMM node CPU Architecture"
    data:
      - metric_name: "pmm_server_node_cpu_architecture"
        label: "machine"

  - id: PMMNodeCPUCoreCount
    source: VM
    query: sum by (value) (count by(cpu) (node_cpu_seconds_total{mode="idle",node_id="pmm-server"}))
    summary: "PMM node CPU core count"
    data:
      - metric_name: "pmm_server_node_cpu_core_count"
        value: 1

  - id: PMMNodeDiskCapacity
    source: VM
    query: sum(sum(avg(node_filesystem_size_bytes{node_name=~"pmm-server",fstype=~"(ext.|xfs|vfat|)"}) without (mountpoint)) without (device,fstype))
    summary: "PMM node disk capacity"
    data:
      - metric_name: "pmm_server_node_disk_capacity"
        value: 1

  - id: PMMNodeOSName
    source: VM
    query: node_uname_info{node_id=~"pmm-server"}
    summary: "PMM node OS name"
    data:
      - metric_name: "pmm_server_node_os_name"
        label: "sysname"

  - id: PMMNodeOSVersion
    source: VM
    query: node_uname_info{node_id=~"pmm-server"}
    summary: "PMM node OS version"
    data:
      - metric_name: "pmm_server_node_os_version"
        label: "release"

  - id: PostgresDBCount
    source: VM
    query: count by (service_id) (pg_stat_database_tup_fetched{service_name!="pmm-server-postgresql", datname!~"template.*|postgres", datid!="0"})
    summary: "Number of databases monitored per PostgreSQL server"
    data:
      - metric_name: "postgresql_db_count"
        value: 1

  - id: PMMServerFeatureToggles
    source: ENV_VARS
    summary: "Use of feature toggles in PMM Server"
    # transform:
    #   type: JSON
    #   metric: pmm_server_feature_toggles
    data:
      - metric_name: "pmm_server_disable_telemetry"
        column: "DISABLE_TELEMETRY"
      - metric_name: "pmm_server_enable_alerting"
        column: "ENABLE_ALERTING"
      - metric_name: "pmm_server_enable_backup_management"
        column: "ENABLE_BACKUP_MANAGEMENT"
      - metric_name: "pmm_server_enable_debug"
        column: "ENABLE_DEBUG"
      - metric_name: "pmm_server_enable_rbac"
        column: "ENABLE_RBAC"

  # - id: PMMServerFeatureTogglesNoValues
  #   source: ENV_VARS
  #   query: >
  #     DISABLE_TELEMETRY,
  #     ENABLE_ALERTING,
  #     ENABLE_BACKUP_MANAGEMENT,
  #     ENABLE_DEBUG,
  #     ENABLE_RBAC
  #   summary: "Use of feature toggles in PMM Server"
  #   transform:
  #     type: JSON_NO_VALUES
  #     metric: pmm_server_feature_toggles_no_values
