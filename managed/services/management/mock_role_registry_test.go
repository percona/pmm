// Code generated by mockery v1.0.0. DO NOT EDIT.

package management

import (
	mock "github.com/stretchr/testify/mock"
	reform "gopkg.in/reform.v1"

	roles "github.com/percona/pmm/managed/services/management/roles"
)

// mockRoleRegistry is an autogenerated mock type for the roleRegistry type
type mockRoleRegistry struct {
	mock.Mock
}

// AssignRoles provides a mock function with given fields: tx, entityType, entityID, roleIDs
func (_m *mockRoleRegistry) AssignRoles(tx *reform.TX, entityType roles.EntityType, entityID int, roleIDs []int) error {
	ret := _m.Called(tx, entityType, entityID, roleIDs)

	var r0 error
	if rf, ok := ret.Get(0).(func(*reform.TX, roles.EntityType, int, []int) error); ok {
		r0 = rf(tx, entityType, entityID, roleIDs)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// BeforeDeleteRole provides a mock function with given fields: tx, roleID, newRoleID
func (_m *mockRoleRegistry) BeforeDeleteRole(tx *reform.TX, roleID int, newRoleID int) error {
	ret := _m.Called(tx, roleID, newRoleID)

	var r0 error
	if rf, ok := ret.Get(0).(func(*reform.TX, int, int) error); ok {
		r0 = rf(tx, roleID, newRoleID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
