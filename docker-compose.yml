---
services:
  pmm-server:
    profiles:
      - pmm
    image: ${PMM_CONTAINER:-perconalab/pmm-server:3-dev-container}
    platform: linux/amd64
    # build:
    #   context: .
    #   args:
    #     PMM_SERVER_IMAGE: ${PMM_SERVER_IMAGE:-perconalab/pmm-server:3-dev-latest}
    #   dockerfile: ./.devcontainer/Dockerfile
    container_name: pmm-server
    hostname: pmm-server
    networks:
      - ${NETWORK:-default}
    environment:
      - AWS_ACCESS_KEY=${AWS_ACCESS_KEY:-}
      - AWS_SECRET_KEY=${AWS_SECRET_KEY:-}
      - REVIEWDOG_GITHUB_API_TOKEN=${REVIEWDOG_GITHUB_API_TOKEN:-}
      - PMM_RELEASE_PATH=/root/go/bin
      - PMM_ENABLE_ACCESS_CONTROL=${PMM_ENABLE_ACCESS_CONTROL:-0}
      - PMM_WATCHTOWER_HOST=${PMM_WATCHTOWER_HOST:-http://watchtower:8080}
      - PMM_WATCHTOWER_TOKEN=${PMM_WATCHTOWER_TOKEN:-INSECURE_TOKEN}
      - PMM_ENABLE_NOMAD=${PMM_ENABLE_NOMAD:-0}
      - PMM_ENABLE_TELEMETRY=${PMM_ENABLE_TELEMETRY:-0}
      - PMM_PUBLIC_ADDRESS=${PMM_PUBLIC_ADDRESS:-localhost}
      - PMM_RELEASE_VERSION=3.0.0
      - GO_VERSION=1.24.x
      # - PMM_DISTRIBUTION_METHOD=${PMM_DISTRIBUTION_METHOD:-docker}
      # - PMM_DEV_UPDATE_DOCKER_IMAGE=${PMM_DEV_UPDATE_DOCKER_IMAGE:-}
      # - PMM_DEV_PERCONA_PLATFORM_ADDRESS=https://check.localhost
      # - PMM_DEV_PERCONA_PLATFORM_INSECURE=1
      # - PMM_DEV_PERCONA_PLATFORM_PUBLIC_KEY=<public key>
      # - PMM_DEV_TELEMETRY_INTERVAL=10s
      # - PMM_DEV_TELEMETRY_DISABLE_START_DELAY=1
      # - PMM_DEV_TELEMETRY_RETRY_BACKOFF=10s
      # - PMM_CLICKHOUSE_ADDR=127.0.0.1:9000
      # - PMM_CLICKHOUSE_DATABASE=pmm
      # - PMM_CLICKHOUSE_USER=default
      # - PMM_CLICKHOUSE_PASSWORD=<password>
      # - PMM_DEBUG=1
      # - PMM_DEV_ADVISOR_CHECKS_FILE=/srv/checks/local-checks.yml
      # - PMM_POSTGRES_ADDR=pg
      # - PMM_POSTGRES_DBNAME=pmm-managed
      # - PMM_POSTGRES_USERNAME=pmm-managed
      # - PMM_POSTGRES_DBPASSWORD=<password>
      # - PMM_POSTGRES_SSL_MODE=verify-full
      # - PMM_POSTGRES_SSL_CA_PATH=/tmp/certs/root.crt
      # - PMM_POSTGRES_SSL_KEY_PATH=/tmp/certs/pmm-managed.key
      # - PMM_POSTGRES_SSL_CERT_PATH=/tmp/certs/pmm-managed.crt
      # - PMM_DISABLE_BUILTIN_POSTGRES=1
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=https://pmm-server:8443/graph/
      # - GF_DATABASE_SSL_MODE=verify-full
      # - GF_DATABASE_CA_CERT_PATH=/tmp/certs/root.crt
      # - GF_DATABASE_CLIENT_KEY_PATH=/tmp/certs/grafana.key
      # - GF_DATABASE_CLIENT_CERT_PATH=/tmp/certs/grafana.crt

    extra_hosts:
      - host.docker.internal:host-gateway
      # - portal.localhost:${PORTAL_HOST:-host-gateway}
      # - check.localhost:${PORTAL_CHECK_HOST:-host-gateway}
      # - pmm.localhost:${PORTAL_PMM_HOST:-host-gateway}
      # - check-dev.percona.com:${PORTAL_PMM_HOST:-host-gateway}

    # for delve
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined

    # see https://github.com/golang/go/wiki/LinuxKernelSignalVectorBug#what-to-do
    ulimits:
      memlock: 67108864

    ports:
      - ${PMM_PORT_HTTP:-80}:8080
      - ${PMM_PORT_HTTPS:-443}:8443
      # For headless delve
      - ${PMM_PORT_DELVE:-2345}:2345
      # PG
      - ${PMM_PORT_PG:-15432}:5432
      # VM
      - ${PMM_PORT_VM:-9090}:9090
      # CH
      - ${PMM_PORT_CH_TCP:-11000}:9000
      - ${PMM_PORT_CH_HTTP:-11123}:8123
    volumes:
      - ./:/root/go/src/github.com/percona/pmm
      - ./Makefile.devcontainer:/root/go/src/github.com/percona/pmm/Makefile:ro # substitute Makefile in devcontainer
      - ./managed/testdata/updater/:/home/pmm/.config/systemd/user/
      # caching
      - go-modules:/root/go/pkg/mod
      - root-cache:/root/.cache
      - srv:/srv
      # grafana
    #  - "../grafana:/workspace"
    #  - "../grafana/public:/usr/share/grafana/public"
    #  - "../grafana/conf/grafana.local-dev.ini:/usr/share/grafana/conf/defaults.ini"
    # command: >
    #   bash -c "
    #     rm -rf /tmp/certs
    #     mkdir /tmp/certs
    #     cp -R /root/go/src/github.com/percona/pmm/managed/testdata/pg/certs/* /tmp/certs
    #     chown grafana:grafana /tmp/certs/*
    #     chmod 600 /tmp/certs/*
    #     /opt/entrypoint.sh
    #   "

  renderer:
    image: grafana/grafana-image-renderer:latest
    environment:
      - RENDERING_VERBOSE_LOGGING=true
      - RENDERING_DUMPIO=true
      - IGNORE_HTTPS_ERRORS=true
      - LOG_LEVEL=debug
    networks:
      - ${NETWORK:-default}
    ports:
      - 8081:8081

  watchtower:
    profiles:
      - pmm
    image: ${WATCHTOWER_IMAGE:-perconalab/watchtower}
    container_name: watchtower
    environment:
      - WATCHTOWER_HTTP_LISTEN_PORT=8080
      - WATCHTOWER_HTTP_API_UPDATE=1
      - WATCHTOWER_HTTP_API_TOKEN=${PMM_WATCHTOWER_TOKEN:-INSECURE_TOKEN}
      - WATCHTOWER_NO_RESTART=${WATCHTOWER_NO_RESTART:-0}
    hostname: watchtower
    networks:
      - ${NETWORK:-default}
    volumes:
      - ${DOCKER_PATH:-/var/run/docker.sock}:/var/run/docker.sock

volumes:
  go-modules:
  root-cache:
  srv:
